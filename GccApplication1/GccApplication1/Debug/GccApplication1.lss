
GccApplication1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000072ec  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000872ec  000872ec  000172ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000b90  20070000  000872f4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000002bc  20070b90  00087e84  00020b90  2**2
                  ALLOC
  4 .stack        00002004  20070e4c  00088140  00020b90  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020b90  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020bb9  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001a5ef  00000000  00000000  00020c12  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000038ea  00000000  00000000  0003b201  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000b00  00000000  00000000  0003eaeb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0001b3fe  00000000  00000000  0003f5eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000eac8  00000000  00000000  0005a9e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0007478b  00000000  00000000  000694b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000608f  00000000  00000000  000ddc3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000b20  00000000  00000000  000e3ccb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002594  00000000  00000000  000e47ec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	50 2e 07 20 0d 25 08 00 09 25 08 00 09 25 08 00     P.. .%...%...%..
   80010:	09 25 08 00 09 25 08 00 09 25 08 00 00 00 00 00     .%...%...%......
	...
   8002c:	09 25 08 00 09 25 08 00 00 00 00 00 09 25 08 00     .%...%.......%..
   8003c:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   8004c:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   8005c:	09 25 08 00 09 25 08 00 09 25 08 00 00 00 00 00     .%...%...%......
   8006c:	3d 24 08 00 51 24 08 00 65 24 08 00 79 24 08 00     =$..Q$..e$..y$..
	...
   80084:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   80094:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   800a4:	00 00 00 00 09 25 08 00 f9 25 08 00 09 25 08 00     .....%...%...%..
   800b4:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   800c4:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..
   800d4:	69 26 08 00 09 25 08 00 09 25 08 00 01 15 08 00     i&...%...%......
   800e4:	09 25 08 00 09 25 08 00 09 25 08 00 09 25 08 00     .%...%...%...%..

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070b90 	.word	0x20070b90
   80110:	00000000 	.word	0x00000000
   80114:	000872f4 	.word	0x000872f4

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000872f4 	.word	0x000872f4
   80154:	20070b94 	.word	0x20070b94
   80158:	000872f4 	.word	0x000872f4
   8015c:	00000000 	.word	0x00000000

00080160 <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
   80160:	490e      	ldr	r1, [pc, #56]	; (8019c <udi_cdc_comm_enable+0x3c>)
   80162:	2300      	movs	r3, #0
   80164:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
   80166:	4a0e      	ldr	r2, [pc, #56]	; (801a0 <udi_cdc_comm_enable+0x40>)
   80168:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
   8016a:	4a0e      	ldr	r2, [pc, #56]	; (801a4 <udi_cdc_comm_enable+0x44>)
   8016c:	20a1      	movs	r0, #161	; 0xa1
   8016e:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
   80170:	2020      	movs	r0, #32
   80172:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
   80174:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
   80176:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
   80178:	2002      	movs	r0, #2
   8017a:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
   8017c:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
   8017e:	4a0a      	ldr	r2, [pc, #40]	; (801a8 <udi_cdc_comm_enable+0x48>)
   80180:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80184:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
   80186:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
   80188:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
   8018a:	2308      	movs	r3, #8
   8018c:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
   8018e:	780b      	ldrb	r3, [r1, #0]
   80190:	3301      	adds	r3, #1
   80192:	b2db      	uxtb	r3, r3
   80194:	700b      	strb	r3, [r1, #0]
	return true;
}
   80196:	2001      	movs	r0, #1
   80198:	4770      	bx	lr
   8019a:	bf00      	nop
   8019c:	20070bb7 	.word	0x20070bb7
   801a0:	20070c4c 	.word	0x20070c4c
   801a4:	20070ce4 	.word	0x20070ce4
   801a8:	20070bb0 	.word	0x20070bb0

000801ac <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
   801ac:	4a02      	ldr	r2, [pc, #8]	; (801b8 <udi_cdc_comm_disable+0xc>)
   801ae:	7813      	ldrb	r3, [r2, #0]
   801b0:	3b01      	subs	r3, #1
   801b2:	b2db      	uxtb	r3, r3
   801b4:	7013      	strb	r3, [r2, #0]
   801b6:	4770      	bx	lr
   801b8:	20070bb7 	.word	0x20070bb7

000801bc <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
   801bc:	4a04      	ldr	r2, [pc, #16]	; (801d0 <udi_cdc_data_disable+0x14>)
   801be:	7813      	ldrb	r3, [r2, #0]
   801c0:	3b01      	subs	r3, #1
   801c2:	b2db      	uxtb	r3, r3
   801c4:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
   801c6:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
   801c8:	2200      	movs	r2, #0
   801ca:	4b02      	ldr	r3, [pc, #8]	; (801d4 <udi_cdc_data_disable+0x18>)
   801cc:	701a      	strb	r2, [r3, #0]
   801ce:	4770      	bx	lr
   801d0:	20070bb8 	.word	0x20070bb8
   801d4:	20070bae 	.word	0x20070bae

000801d8 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
   801d8:	2000      	movs	r0, #0
   801da:	4770      	bx	lr

000801dc <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
   801dc:	2000      	movs	r0, #0
   801de:	4770      	bx	lr

000801e0 <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
   801e0:	4b1d      	ldr	r3, [pc, #116]	; (80258 <udi_cdc_comm_setup+0x78>)
   801e2:	781b      	ldrb	r3, [r3, #0]
   801e4:	f013 0f80 	tst.w	r3, #128	; 0x80
   801e8:	d105      	bne.n	801f6 <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801ee:	2b20      	cmp	r3, #32
   801f0:	d018      	beq.n	80224 <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
   801f2:	2000      	movs	r0, #0
   801f4:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801f6:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801fa:	2b20      	cmp	r3, #32
   801fc:	d001      	beq.n	80202 <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
   801fe:	2000      	movs	r0, #0
   80200:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80202:	4b15      	ldr	r3, [pc, #84]	; (80258 <udi_cdc_comm_setup+0x78>)
   80204:	785b      	ldrb	r3, [r3, #1]
   80206:	2b21      	cmp	r3, #33	; 0x21
   80208:	d124      	bne.n	80254 <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
   8020a:	4b13      	ldr	r3, [pc, #76]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   8020c:	88db      	ldrh	r3, [r3, #6]
   8020e:	2b07      	cmp	r3, #7
   80210:	d001      	beq.n	80216 <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
   80212:	2000      	movs	r0, #0
   80214:	4770      	bx	lr
				udd_g_ctrlreq.payload =
   80216:	4b10      	ldr	r3, [pc, #64]	; (80258 <udi_cdc_comm_setup+0x78>)
   80218:	4a10      	ldr	r2, [pc, #64]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8021a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8021c:	2207      	movs	r2, #7
   8021e:	819a      	strh	r2, [r3, #12]
				return true;
   80220:	2001      	movs	r0, #1
   80222:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80224:	4b0c      	ldr	r3, [pc, #48]	; (80258 <udi_cdc_comm_setup+0x78>)
   80226:	7858      	ldrb	r0, [r3, #1]
   80228:	2820      	cmp	r0, #32
   8022a:	d004      	beq.n	80236 <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
   8022c:	2822      	cmp	r0, #34	; 0x22
   8022e:	bf14      	ite	ne
   80230:	2000      	movne	r0, #0
   80232:	2001      	moveq	r0, #1
   80234:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
   80236:	4b08      	ldr	r3, [pc, #32]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   80238:	88db      	ldrh	r3, [r3, #6]
   8023a:	2b07      	cmp	r3, #7
   8023c:	d001      	beq.n	80242 <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
   8023e:	2000      	movs	r0, #0
}
   80240:	4770      	bx	lr
				udd_g_ctrlreq.callback =
   80242:	4b05      	ldr	r3, [pc, #20]	; (80258 <udi_cdc_comm_setup+0x78>)
   80244:	4a06      	ldr	r2, [pc, #24]	; (80260 <udi_cdc_comm_setup+0x80>)
   80246:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
   80248:	4a04      	ldr	r2, [pc, #16]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8024a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8024c:	2207      	movs	r2, #7
   8024e:	819a      	strh	r2, [r3, #12]
				return true;
   80250:	2001      	movs	r0, #1
   80252:	4770      	bx	lr
	return false;  // request Not supported
   80254:	2000      	movs	r0, #0
   80256:	4770      	bx	lr
   80258:	20070e0c 	.word	0x20070e0c
   8025c:	20070bb0 	.word	0x20070bb0
   80260:	00080265 	.word	0x00080265

00080264 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
   80264:	4770      	bx	lr
	...

00080268 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
   80268:	4b44      	ldr	r3, [pc, #272]	; (8037c <udi_cdc_tx_send+0x114>)
   8026a:	781b      	ldrb	r3, [r3, #0]
   8026c:	b103      	cbz	r3, 80270 <udi_cdc_tx_send+0x8>
   8026e:	4770      	bx	lr
{
   80270:	b570      	push	{r4, r5, r6, lr}
   80272:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
   80274:	4b42      	ldr	r3, [pc, #264]	; (80380 <udi_cdc_tx_send+0x118>)
   80276:	4798      	blx	r3
   80278:	2800      	cmp	r0, #0
   8027a:	d041      	beq.n	80300 <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
   8027c:	4b41      	ldr	r3, [pc, #260]	; (80384 <udi_cdc_tx_send+0x11c>)
   8027e:	881c      	ldrh	r4, [r3, #0]
   80280:	4b41      	ldr	r3, [pc, #260]	; (80388 <udi_cdc_tx_send+0x120>)
   80282:	4798      	blx	r3
   80284:	4284      	cmp	r4, r0
   80286:	d076      	beq.n	80376 <udi_cdc_tx_send+0x10e>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80288:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8028c:	fab3 f383 	clz	r3, r3
   80290:	095b      	lsrs	r3, r3, #5
   80292:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80294:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
   80296:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8029a:	2200      	movs	r2, #0
   8029c:	4b3b      	ldr	r3, [pc, #236]	; (8038c <udi_cdc_tx_send+0x124>)
   8029e:	701a      	strb	r2, [r3, #0]
	return flags;
   802a0:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
   802a2:	4b3b      	ldr	r3, [pc, #236]	; (80390 <udi_cdc_tx_send+0x128>)
   802a4:	781c      	ldrb	r4, [r3, #0]
   802a6:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
   802a8:	4b3a      	ldr	r3, [pc, #232]	; (80394 <udi_cdc_tx_send+0x12c>)
   802aa:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802ae:	2b00      	cmp	r3, #0
   802b0:	d02d      	beq.n	8030e <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
   802b2:	2200      	movs	r2, #0
   802b4:	4b38      	ldr	r3, [pc, #224]	; (80398 <udi_cdc_tx_send+0x130>)
   802b6:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
   802b8:	4b38      	ldr	r3, [pc, #224]	; (8039c <udi_cdc_tx_send+0x134>)
   802ba:	781b      	ldrb	r3, [r3, #0]
   802bc:	2b00      	cmp	r3, #0
   802be:	d142      	bne.n	80346 <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   802c0:	fab4 f384 	clz	r3, r4
   802c4:	095b      	lsrs	r3, r3, #5
   802c6:	4a32      	ldr	r2, [pc, #200]	; (80390 <udi_cdc_tx_send+0x128>)
   802c8:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
   802ca:	2201      	movs	r2, #1
   802cc:	4b2b      	ldr	r3, [pc, #172]	; (8037c <udi_cdc_tx_send+0x114>)
   802ce:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   802d0:	b125      	cbz	r5, 802dc <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
   802d2:	4b2e      	ldr	r3, [pc, #184]	; (8038c <udi_cdc_tx_send+0x124>)
   802d4:	701a      	strb	r2, [r3, #0]
   802d6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   802da:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
   802dc:	4626      	mov	r6, r4
   802de:	4b2d      	ldr	r3, [pc, #180]	; (80394 <udi_cdc_tx_send+0x12c>)
   802e0:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802e4:	2b40      	cmp	r3, #64	; 0x40
   802e6:	bf14      	ite	ne
   802e8:	2501      	movne	r5, #1
   802ea:	2500      	moveq	r5, #0
	if (b_short_packet) {
   802ec:	d034      	beq.n	80358 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
   802ee:	4b24      	ldr	r3, [pc, #144]	; (80380 <udi_cdc_tx_send+0x118>)
   802f0:	4798      	blx	r3
   802f2:	2800      	cmp	r0, #0
   802f4:	d02b      	beq.n	8034e <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
   802f6:	4b24      	ldr	r3, [pc, #144]	; (80388 <udi_cdc_tx_send+0x120>)
   802f8:	4798      	blx	r3
   802fa:	4b22      	ldr	r3, [pc, #136]	; (80384 <udi_cdc_tx_send+0x11c>)
   802fc:	8018      	strh	r0, [r3, #0]
   802fe:	e02e      	b.n	8035e <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
   80300:	4b20      	ldr	r3, [pc, #128]	; (80384 <udi_cdc_tx_send+0x11c>)
   80302:	881c      	ldrh	r4, [r3, #0]
   80304:	4b26      	ldr	r3, [pc, #152]	; (803a0 <udi_cdc_tx_send+0x138>)
   80306:	4798      	blx	r3
   80308:	4284      	cmp	r4, r0
   8030a:	d1bd      	bne.n	80288 <udi_cdc_tx_send+0x20>
   8030c:	e033      	b.n	80376 <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
   8030e:	4a22      	ldr	r2, [pc, #136]	; (80398 <udi_cdc_tx_send+0x130>)
   80310:	8813      	ldrh	r3, [r2, #0]
   80312:	3301      	adds	r3, #1
   80314:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
   80316:	4b1a      	ldr	r3, [pc, #104]	; (80380 <udi_cdc_tx_send+0x118>)
   80318:	4798      	blx	r3
   8031a:	b918      	cbnz	r0, 80324 <udi_cdc_tx_send+0xbc>
   8031c:	4b1e      	ldr	r3, [pc, #120]	; (80398 <udi_cdc_tx_send+0x130>)
   8031e:	881b      	ldrh	r3, [r3, #0]
   80320:	2b63      	cmp	r3, #99	; 0x63
   80322:	d908      	bls.n	80336 <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
   80324:	4b16      	ldr	r3, [pc, #88]	; (80380 <udi_cdc_tx_send+0x118>)
   80326:	4798      	blx	r3
   80328:	2800      	cmp	r0, #0
   8032a:	d0c2      	beq.n	802b2 <udi_cdc_tx_send+0x4a>
   8032c:	4b1a      	ldr	r3, [pc, #104]	; (80398 <udi_cdc_tx_send+0x130>)
   8032e:	881b      	ldrh	r3, [r3, #0]
   80330:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
   80334:	d2bd      	bcs.n	802b2 <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
   80336:	b1f5      	cbz	r5, 80376 <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
   80338:	2201      	movs	r2, #1
   8033a:	4b14      	ldr	r3, [pc, #80]	; (8038c <udi_cdc_tx_send+0x124>)
   8033c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   8033e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80342:	b662      	cpsie	i
   80344:	e017      	b.n	80376 <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
   80346:	fab4 f484 	clz	r4, r4
   8034a:	0964      	lsrs	r4, r4, #5
   8034c:	e7bd      	b.n	802ca <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
   8034e:	4b14      	ldr	r3, [pc, #80]	; (803a0 <udi_cdc_tx_send+0x138>)
   80350:	4798      	blx	r3
   80352:	4b0c      	ldr	r3, [pc, #48]	; (80384 <udi_cdc_tx_send+0x11c>)
   80354:	8018      	strh	r0, [r3, #0]
   80356:	e002      	b.n	8035e <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
   80358:	2200      	movs	r2, #0
   8035a:	4b0a      	ldr	r3, [pc, #40]	; (80384 <udi_cdc_tx_send+0x11c>)
   8035c:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
   8035e:	4b0d      	ldr	r3, [pc, #52]	; (80394 <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
   80360:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
   80364:	4a0f      	ldr	r2, [pc, #60]	; (803a4 <udi_cdc_tx_send+0x13c>)
   80366:	9200      	str	r2, [sp, #0]
   80368:	4a0f      	ldr	r2, [pc, #60]	; (803a8 <udi_cdc_tx_send+0x140>)
   8036a:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   8036e:	4629      	mov	r1, r5
   80370:	2081      	movs	r0, #129	; 0x81
   80372:	4c0e      	ldr	r4, [pc, #56]	; (803ac <udi_cdc_tx_send+0x144>)
   80374:	47a0      	blx	r4
			udi_cdc_data_sent);
}
   80376:	b004      	add	sp, #16
   80378:	bd70      	pop	{r4, r5, r6, pc}
   8037a:	bf00      	nop
   8037c:	20070ce0 	.word	0x20070ce0
   80380:	00081b19 	.word	0x00081b19
   80384:	20070cdc 	.word	0x20070cdc
   80388:	00081b65 	.word	0x00081b65
   8038c:	200701d8 	.word	0x200701d8
   80390:	20070cd8 	.word	0x20070cd8
   80394:	20070cd4 	.word	0x20070cd4
   80398:	20070bac 	.word	0x20070bac
   8039c:	20070c50 	.word	0x20070c50
   803a0:	00081b55 	.word	0x00081b55
   803a4:	000803b1 	.word	0x000803b1
   803a8:	20070c54 	.word	0x20070c54
   803ac:	00081dcd 	.word	0x00081dcd

000803b0 <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
   803b0:	b100      	cbz	r0, 803b4 <udi_cdc_data_sent+0x4>
   803b2:	4770      	bx	lr
{
   803b4:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
   803b6:	4b07      	ldr	r3, [pc, #28]	; (803d4 <udi_cdc_data_sent+0x24>)
   803b8:	781b      	ldrb	r3, [r3, #0]
   803ba:	fab3 f383 	clz	r3, r3
   803be:	095b      	lsrs	r3, r3, #5
   803c0:	4a05      	ldr	r2, [pc, #20]	; (803d8 <udi_cdc_data_sent+0x28>)
   803c2:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
   803c6:	4b05      	ldr	r3, [pc, #20]	; (803dc <udi_cdc_data_sent+0x2c>)
   803c8:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   803ca:	4b05      	ldr	r3, [pc, #20]	; (803e0 <udi_cdc_data_sent+0x30>)
   803cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
   803ce:	4b05      	ldr	r3, [pc, #20]	; (803e4 <udi_cdc_data_sent+0x34>)
   803d0:	4798      	blx	r3
   803d2:	bd08      	pop	{r3, pc}
   803d4:	20070cd8 	.word	0x20070cd8
   803d8:	20070cd4 	.word	0x20070cd4
   803dc:	20070c50 	.word	0x20070c50
   803e0:	20070ce0 	.word	0x20070ce0
   803e4:	00080269 	.word	0x00080269

000803e8 <udi_cdc_data_sof_notify>:
{
   803e8:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
   803ea:	2000      	movs	r0, #0
   803ec:	4b01      	ldr	r3, [pc, #4]	; (803f4 <udi_cdc_data_sof_notify+0xc>)
   803ee:	4798      	blx	r3
   803f0:	bd08      	pop	{r3, pc}
   803f2:	bf00      	nop
   803f4:	00080269 	.word	0x00080269

000803f8 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
   803f8:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   803fa:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   803fe:	fab3 f383 	clz	r3, r3
   80402:	095b      	lsrs	r3, r3, #5
   80404:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80406:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80408:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8040c:	2200      	movs	r2, #0
   8040e:	4b0b      	ldr	r3, [pc, #44]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80410:	701a      	strb	r2, [r3, #0]
	return flags;
   80412:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
   80414:	4b0a      	ldr	r3, [pc, #40]	; (80440 <udi_cdc_multi_get_nb_received_data+0x48>)
   80416:	8818      	ldrh	r0, [r3, #0]
   80418:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
   8041a:	4a0a      	ldr	r2, [pc, #40]	; (80444 <udi_cdc_multi_get_nb_received_data+0x4c>)
   8041c:	7812      	ldrb	r2, [r2, #0]
   8041e:	b2d2      	uxtb	r2, r2
   80420:	4809      	ldr	r0, [pc, #36]	; (80448 <udi_cdc_multi_get_nb_received_data+0x50>)
   80422:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
   80426:	b280      	uxth	r0, r0
   80428:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
   8042a:	b129      	cbz	r1, 80438 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
   8042c:	2201      	movs	r2, #1
   8042e:	4b03      	ldr	r3, [pc, #12]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80430:	701a      	strb	r2, [r3, #0]
   80432:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80436:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
   80438:	b002      	add	sp, #8
   8043a:	4770      	bx	lr
   8043c:	200701d8 	.word	0x200701d8
   80440:	20070c44 	.word	0x20070c44
   80444:	20070c40 	.word	0x20070c40
   80448:	20070c3c 	.word	0x20070c3c

0008044c <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
   8044c:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
   8044e:	4b03      	ldr	r3, [pc, #12]	; (8045c <udi_cdc_multi_is_rx_ready+0x10>)
   80450:	4798      	blx	r3
}
   80452:	3000      	adds	r0, #0
   80454:	bf18      	it	ne
   80456:	2001      	movne	r0, #1
   80458:	bd08      	pop	{r3, pc}
   8045a:	bf00      	nop
   8045c:	000803f9 	.word	0x000803f9

00080460 <udi_cdc_rx_start>:
{
   80460:	b510      	push	{r4, lr}
   80462:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80464:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80468:	fab3 f383 	clz	r3, r3
   8046c:	095b      	lsrs	r3, r3, #5
   8046e:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80470:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80472:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80476:	2200      	movs	r2, #0
   80478:	4b1e      	ldr	r3, [pc, #120]	; (804f4 <udi_cdc_rx_start+0x94>)
   8047a:	701a      	strb	r2, [r3, #0]
	return flags;
   8047c:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
   8047e:	4a1e      	ldr	r2, [pc, #120]	; (804f8 <udi_cdc_rx_start+0x98>)
   80480:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
   80482:	4a1e      	ldr	r2, [pc, #120]	; (804fc <udi_cdc_rx_start+0x9c>)
   80484:	7812      	ldrb	r2, [r2, #0]
   80486:	b94a      	cbnz	r2, 8049c <udi_cdc_rx_start+0x3c>
   80488:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
   8048a:	4a1d      	ldr	r2, [pc, #116]	; (80500 <udi_cdc_rx_start+0xa0>)
   8048c:	8811      	ldrh	r1, [r2, #0]
   8048e:	b289      	uxth	r1, r1
   80490:	4a1c      	ldr	r2, [pc, #112]	; (80504 <udi_cdc_rx_start+0xa4>)
   80492:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
   80496:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
   80498:	4291      	cmp	r1, r2
   8049a:	d209      	bcs.n	804b0 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
   8049c:	b33b      	cbz	r3, 804ee <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
   8049e:	2201      	movs	r2, #1
   804a0:	4b14      	ldr	r3, [pc, #80]	; (804f4 <udi_cdc_rx_start+0x94>)
   804a2:	701a      	strb	r2, [r3, #0]
   804a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804a8:	b662      	cpsie	i
		return false;
   804aa:	2000      	movs	r0, #0
}
   804ac:	b004      	add	sp, #16
   804ae:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
   804b0:	2100      	movs	r1, #0
   804b2:	4a13      	ldr	r2, [pc, #76]	; (80500 <udi_cdc_rx_start+0xa0>)
   804b4:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   804b6:	fab4 f284 	clz	r2, r4
   804ba:	0952      	lsrs	r2, r2, #5
   804bc:	490e      	ldr	r1, [pc, #56]	; (804f8 <udi_cdc_rx_start+0x98>)
   804be:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
   804c0:	2101      	movs	r1, #1
   804c2:	4a0e      	ldr	r2, [pc, #56]	; (804fc <udi_cdc_rx_start+0x9c>)
   804c4:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   804c6:	b123      	cbz	r3, 804d2 <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
   804c8:	4b0a      	ldr	r3, [pc, #40]	; (804f4 <udi_cdc_rx_start+0x94>)
   804ca:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   804cc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804d0:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
   804d2:	2000      	movs	r0, #0
   804d4:	4b0c      	ldr	r3, [pc, #48]	; (80508 <udi_cdc_rx_start+0xa8>)
   804d6:	4798      	blx	r3
	return udd_ep_run(ep,
   804d8:	4b0c      	ldr	r3, [pc, #48]	; (8050c <udi_cdc_rx_start+0xac>)
   804da:	9300      	str	r3, [sp, #0]
   804dc:	2340      	movs	r3, #64	; 0x40
   804de:	4a0c      	ldr	r2, [pc, #48]	; (80510 <udi_cdc_rx_start+0xb0>)
   804e0:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   804e4:	2101      	movs	r1, #1
   804e6:	2002      	movs	r0, #2
   804e8:	4c0a      	ldr	r4, [pc, #40]	; (80514 <udi_cdc_rx_start+0xb4>)
   804ea:	47a0      	blx	r4
   804ec:	e7de      	b.n	804ac <udi_cdc_rx_start+0x4c>
		return false;
   804ee:	2000      	movs	r0, #0
   804f0:	e7dc      	b.n	804ac <udi_cdc_rx_start+0x4c>
   804f2:	bf00      	nop
   804f4:	200701d8 	.word	0x200701d8
   804f8:	20070c40 	.word	0x20070c40
   804fc:	20070c48 	.word	0x20070c48
   80500:	20070c44 	.word	0x20070c44
   80504:	20070c3c 	.word	0x20070c3c
   80508:	0008044d 	.word	0x0008044d
   8050c:	000805ad 	.word	0x000805ad
   80510:	20070bbc 	.word	0x20070bbc
   80514:	00081dcd 	.word	0x00081dcd

00080518 <udi_cdc_data_enable>:
{
   80518:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
   8051a:	2400      	movs	r4, #0
   8051c:	4b16      	ldr	r3, [pc, #88]	; (80578 <udi_cdc_data_enable+0x60>)
   8051e:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   80520:	4b16      	ldr	r3, [pc, #88]	; (8057c <udi_cdc_data_enable+0x64>)
   80522:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
   80524:	4b16      	ldr	r3, [pc, #88]	; (80580 <udi_cdc_data_enable+0x68>)
   80526:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
   80528:	4b16      	ldr	r3, [pc, #88]	; (80584 <udi_cdc_data_enable+0x6c>)
   8052a:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
   8052c:	4b16      	ldr	r3, [pc, #88]	; (80588 <udi_cdc_data_enable+0x70>)
   8052e:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
   80530:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
   80532:	4b16      	ldr	r3, [pc, #88]	; (8058c <udi_cdc_data_enable+0x74>)
   80534:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
   80536:	4620      	mov	r0, r4
   80538:	4b15      	ldr	r3, [pc, #84]	; (80590 <udi_cdc_data_enable+0x78>)
   8053a:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
   8053c:	4b15      	ldr	r3, [pc, #84]	; (80594 <udi_cdc_data_enable+0x7c>)
   8053e:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
   80540:	4b15      	ldr	r3, [pc, #84]	; (80598 <udi_cdc_data_enable+0x80>)
   80542:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
   80544:	4b15      	ldr	r3, [pc, #84]	; (8059c <udi_cdc_data_enable+0x84>)
   80546:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
   80548:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
   8054a:	4b15      	ldr	r3, [pc, #84]	; (805a0 <udi_cdc_data_enable+0x88>)
   8054c:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
   8054e:	4620      	mov	r0, r4
   80550:	4b14      	ldr	r3, [pc, #80]	; (805a4 <udi_cdc_data_enable+0x8c>)
   80552:	4798      	blx	r3
   80554:	4601      	mov	r1, r0
   80556:	b140      	cbz	r0, 8056a <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
   80558:	4a07      	ldr	r2, [pc, #28]	; (80578 <udi_cdc_data_enable+0x60>)
   8055a:	7813      	ldrb	r3, [r2, #0]
   8055c:	3301      	adds	r3, #1
   8055e:	b2db      	uxtb	r3, r3
   80560:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
   80562:	7813      	ldrb	r3, [r2, #0]
   80564:	b2db      	uxtb	r3, r3
   80566:	2b01      	cmp	r3, #1
   80568:	d001      	beq.n	8056e <udi_cdc_data_enable+0x56>
}
   8056a:	4608      	mov	r0, r1
   8056c:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
   8056e:	2201      	movs	r2, #1
   80570:	4b0d      	ldr	r3, [pc, #52]	; (805a8 <udi_cdc_data_enable+0x90>)
   80572:	701a      	strb	r2, [r3, #0]
   80574:	e7f9      	b.n	8056a <udi_cdc_data_enable+0x52>
   80576:	bf00      	nop
   80578:	20070bb8 	.word	0x20070bb8
   8057c:	20070ce0 	.word	0x20070ce0
   80580:	20070c50 	.word	0x20070c50
   80584:	20070cd8 	.word	0x20070cd8
   80588:	20070cd4 	.word	0x20070cd4
   8058c:	20070cdc 	.word	0x20070cdc
   80590:	00080269 	.word	0x00080269
   80594:	20070c48 	.word	0x20070c48
   80598:	20070c40 	.word	0x20070c40
   8059c:	20070c3c 	.word	0x20070c3c
   805a0:	20070c44 	.word	0x20070c44
   805a4:	00080461 	.word	0x00080461
   805a8:	20070bae 	.word	0x20070bae

000805ac <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
   805ac:	b9e8      	cbnz	r0, 805ea <udi_cdc_data_received+0x3e>
{
   805ae:	b510      	push	{r4, lr}
   805b0:	b082      	sub	sp, #8
   805b2:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
   805b4:	4b0d      	ldr	r3, [pc, #52]	; (805ec <udi_cdc_data_received+0x40>)
   805b6:	781c      	ldrb	r4, [r3, #0]
   805b8:	fab4 f484 	clz	r4, r4
   805bc:	0964      	lsrs	r4, r4, #5
	if (!n) {
   805be:	b151      	cbz	r1, 805d6 <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
   805c0:	b289      	uxth	r1, r1
   805c2:	4b0b      	ldr	r3, [pc, #44]	; (805f0 <udi_cdc_data_received+0x44>)
   805c4:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
   805c8:	2000      	movs	r0, #0
   805ca:	4b0a      	ldr	r3, [pc, #40]	; (805f4 <udi_cdc_data_received+0x48>)
   805cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
   805ce:	4b0a      	ldr	r3, [pc, #40]	; (805f8 <udi_cdc_data_received+0x4c>)
   805d0:	4798      	blx	r3
}
   805d2:	b002      	add	sp, #8
   805d4:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
   805d6:	4b09      	ldr	r3, [pc, #36]	; (805fc <udi_cdc_data_received+0x50>)
   805d8:	9300      	str	r3, [sp, #0]
   805da:	2340      	movs	r3, #64	; 0x40
   805dc:	4a08      	ldr	r2, [pc, #32]	; (80600 <udi_cdc_data_received+0x54>)
   805de:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   805e2:	2101      	movs	r1, #1
   805e4:	4c07      	ldr	r4, [pc, #28]	; (80604 <udi_cdc_data_received+0x58>)
   805e6:	47a0      	blx	r4
		return;
   805e8:	e7f3      	b.n	805d2 <udi_cdc_data_received+0x26>
   805ea:	4770      	bx	lr
   805ec:	20070c40 	.word	0x20070c40
   805f0:	20070c3c 	.word	0x20070c3c
   805f4:	20070c48 	.word	0x20070c48
   805f8:	00080461 	.word	0x00080461
   805fc:	000805ad 	.word	0x000805ad
   80600:	20070bbc 	.word	0x20070bbc
   80604:	00081dcd 	.word	0x00081dcd

00080608 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
   80608:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8060a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8060e:	fab3 f383 	clz	r3, r3
   80612:	095b      	lsrs	r3, r3, #5
   80614:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80616:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80618:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8061c:	2200      	movs	r2, #0
   8061e:	4b14      	ldr	r3, [pc, #80]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   80620:	701a      	strb	r2, [r3, #0]
	return flags;
   80622:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   80624:	4b13      	ldr	r3, [pc, #76]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80626:	781b      	ldrb	r3, [r3, #0]
   80628:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
   8062a:	4913      	ldr	r1, [pc, #76]	; (80678 <udi_cdc_multi_get_free_tx_buffer+0x70>)
   8062c:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
   80630:	2840      	cmp	r0, #64	; 0x40
   80632:	d00a      	beq.n	8064a <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
   80634:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
   80638:	b12a      	cbz	r2, 80646 <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
   8063a:	2201      	movs	r2, #1
   8063c:	4b0c      	ldr	r3, [pc, #48]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   8063e:	701a      	strb	r2, [r3, #0]
   80640:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80644:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
   80646:	b002      	add	sp, #8
   80648:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
   8064a:	490c      	ldr	r1, [pc, #48]	; (8067c <udi_cdc_multi_get_free_tx_buffer+0x74>)
   8064c:	7809      	ldrb	r1, [r1, #0]
   8064e:	2900      	cmp	r1, #0
   80650:	d1f0      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
   80652:	490b      	ldr	r1, [pc, #44]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   80654:	7809      	ldrb	r1, [r1, #0]
   80656:	2900      	cmp	r1, #0
   80658:	d1ec      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
   8065a:	2001      	movs	r0, #1
   8065c:	4908      	ldr	r1, [pc, #32]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   8065e:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
   80660:	fab3 f383 	clz	r3, r3
   80664:	095b      	lsrs	r3, r3, #5
   80666:	4903      	ldr	r1, [pc, #12]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80668:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
   8066a:	2000      	movs	r0, #0
   8066c:	e7e2      	b.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
   8066e:	bf00      	nop
   80670:	200701d8 	.word	0x200701d8
   80674:	20070cd8 	.word	0x20070cd8
   80678:	20070cd4 	.word	0x20070cd4
   8067c:	20070ce0 	.word	0x20070ce0
   80680:	20070c50 	.word	0x20070c50

00080684 <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
   80684:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
   80686:	4b03      	ldr	r3, [pc, #12]	; (80694 <udi_cdc_multi_is_tx_ready+0x10>)
   80688:	4798      	blx	r3
}
   8068a:	3000      	adds	r0, #0
   8068c:	bf18      	it	ne
   8068e:	2001      	movne	r0, #1
   80690:	bd08      	pop	{r3, pc}
   80692:	bf00      	nop
   80694:	00080609 	.word	0x00080609

00080698 <udi_cdc_multi_putc>:
{
	return udi_cdc_multi_is_tx_ready(0);
}

int udi_cdc_multi_putc(uint8_t port, int value)
{
   80698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8069c:	b082      	sub	sp, #8
   8069e:	460c      	mov	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
   806a0:	4b1d      	ldr	r3, [pc, #116]	; (80718 <udi_cdc_multi_putc+0x80>)
   806a2:	799d      	ldrb	r5, [r3, #6]
   806a4:	2d09      	cmp	r5, #9
   806a6:	bf14      	ite	ne
   806a8:	2500      	movne	r5, #0
   806aa:	2501      	moveq	r5, #1

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
   806ac:	4e1b      	ldr	r6, [pc, #108]	; (8071c <udi_cdc_multi_putc+0x84>)
	cpu_irq_disable();
   806ae:	4f1c      	ldr	r7, [pc, #112]	; (80720 <udi_cdc_multi_putc+0x88>)
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   806b0:	f8df 807c 	ldr.w	r8, [pc, #124]	; 80730 <udi_cdc_multi_putc+0x98>
   806b4:	e022      	b.n	806fc <udi_cdc_multi_putc+0x64>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   806b6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   806ba:	fab3 f383 	clz	r3, r3
   806be:	095b      	lsrs	r3, r3, #5
   806c0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   806c2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   806c4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   806c8:	2300      	movs	r3, #0
   806ca:	703b      	strb	r3, [r7, #0]
	return flags;
   806cc:	9801      	ldr	r0, [sp, #4]
   806ce:	f898 3000 	ldrb.w	r3, [r8]
   806d2:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
   806d4:	4a13      	ldr	r2, [pc, #76]	; (80724 <udi_cdc_multi_putc+0x8c>)
   806d6:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
   806da:	f101 0e01 	add.w	lr, r1, #1
   806de:	f822 e013 	strh.w	lr, [r2, r3, lsl #1]
   806e2:	4a11      	ldr	r2, [pc, #68]	; (80728 <udi_cdc_multi_putc+0x90>)
   806e4:	eb02 1383 	add.w	r3, r2, r3, lsl #6
   806e8:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
   806ea:	b120      	cbz	r0, 806f6 <udi_cdc_multi_putc+0x5e>
		cpu_irq_enable();
   806ec:	2301      	movs	r3, #1
   806ee:	703b      	strb	r3, [r7, #0]
   806f0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   806f4:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
   806f6:	b165      	cbz	r5, 80712 <udi_cdc_multi_putc+0x7a>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
   806f8:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
   806fa:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
   806fc:	2000      	movs	r0, #0
   806fe:	47b0      	blx	r6
   80700:	2800      	cmp	r0, #0
   80702:	d1d8      	bne.n	806b6 <udi_cdc_multi_putc+0x1e>
		if (!udi_cdc_data_running) {
   80704:	4b09      	ldr	r3, [pc, #36]	; (8072c <udi_cdc_multi_putc+0x94>)
   80706:	781b      	ldrb	r3, [r3, #0]
   80708:	2b00      	cmp	r3, #0
   8070a:	d1f7      	bne.n	806fc <udi_cdc_multi_putc+0x64>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
   8070c:	b002      	add	sp, #8
   8070e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	return true;
   80712:	2001      	movs	r0, #1
   80714:	e7fa      	b.n	8070c <udi_cdc_multi_putc+0x74>
   80716:	bf00      	nop
   80718:	20070bb0 	.word	0x20070bb0
   8071c:	00080685 	.word	0x00080685
   80720:	200701d8 	.word	0x200701d8
   80724:	20070cd4 	.word	0x20070cd4
   80728:	20070c54 	.word	0x20070c54
   8072c:	20070bae 	.word	0x20070bae
   80730:	20070cd8 	.word	0x20070cd8

00080734 <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
   80734:	b508      	push	{r3, lr}
	return udi_cdc_multi_putc(0, value);
   80736:	4601      	mov	r1, r0
   80738:	2000      	movs	r0, #0
   8073a:	4b01      	ldr	r3, [pc, #4]	; (80740 <udi_cdc_putc+0xc>)
   8073c:	4798      	blx	r3
}
   8073e:	bd08      	pop	{r3, pc}
   80740:	00080699 	.word	0x00080699

00080744 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
   80744:	4b10      	ldr	r3, [pc, #64]	; (80788 <udc_next_desc_in_iface+0x44>)
   80746:	681b      	ldr	r3, [r3, #0]
   80748:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   8074a:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   8074c:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
   8074e:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80750:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
   80752:	4290      	cmp	r0, r2
   80754:	d211      	bcs.n	8077a <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80756:	7843      	ldrb	r3, [r0, #1]
   80758:	2b04      	cmp	r3, #4
   8075a:	d010      	beq.n	8077e <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
   8075c:	428b      	cmp	r3, r1
   8075e:	d009      	beq.n	80774 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
   80760:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80762:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
   80764:	4290      	cmp	r0, r2
   80766:	d206      	bcs.n	80776 <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80768:	7843      	ldrb	r3, [r0, #1]
   8076a:	2b04      	cmp	r3, #4
   8076c:	d009      	beq.n	80782 <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
   8076e:	428b      	cmp	r3, r1
   80770:	d1f6      	bne.n	80760 <udc_next_desc_in_iface+0x1c>
   80772:	e007      	b.n	80784 <udc_next_desc_in_iface+0x40>
   80774:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
   80776:	2000      	movs	r0, #0
   80778:	4770      	bx	lr
   8077a:	2000      	movs	r0, #0
   8077c:	4770      	bx	lr
   8077e:	2000      	movs	r0, #0
   80780:	4770      	bx	lr
   80782:	2000      	movs	r0, #0
}
   80784:	4770      	bx	lr
   80786:	bf00      	nop
   80788:	20070cfc 	.word	0x20070cfc

0008078c <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
   8078c:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   8078e:	4b03      	ldr	r3, [pc, #12]	; (8079c <udc_valid_address+0x10>)
   80790:	7898      	ldrb	r0, [r3, #2]
   80792:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   80796:	4b02      	ldr	r3, [pc, #8]	; (807a0 <udc_valid_address+0x14>)
   80798:	4798      	blx	r3
   8079a:	bd08      	pop	{r3, pc}
   8079c:	20070e0c 	.word	0x20070e0c
   807a0:	00081b1d 	.word	0x00081b1d

000807a4 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
   807a4:	4b19      	ldr	r3, [pc, #100]	; (8080c <udc_update_iface_desc+0x68>)
   807a6:	781b      	ldrb	r3, [r3, #0]
   807a8:	b34b      	cbz	r3, 807fe <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   807aa:	4b19      	ldr	r3, [pc, #100]	; (80810 <udc_update_iface_desc+0x6c>)
   807ac:	681b      	ldr	r3, [r3, #0]
   807ae:	681b      	ldr	r3, [r3, #0]
   807b0:	791a      	ldrb	r2, [r3, #4]
   807b2:	4282      	cmp	r2, r0
   807b4:	d925      	bls.n	80802 <udc_update_iface_desc+0x5e>
{
   807b6:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   807b8:	4a16      	ldr	r2, [pc, #88]	; (80814 <udc_update_iface_desc+0x70>)
   807ba:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   807bc:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   807be:	441c      	add	r4, r3
	while (ptr_end_desc >
   807c0:	42a3      	cmp	r3, r4
   807c2:	d220      	bcs.n	80806 <udc_update_iface_desc+0x62>
   807c4:	2500      	movs	r5, #0
   807c6:	2601      	movs	r6, #1
   807c8:	e007      	b.n	807da <udc_update_iface_desc+0x36>
   807ca:	4a12      	ldr	r2, [pc, #72]	; (80814 <udc_update_iface_desc+0x70>)
   807cc:	6013      	str	r3, [r2, #0]
   807ce:	e00f      	b.n	807f0 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
   807d0:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   807d2:	4413      	add	r3, r2
   807d4:	4635      	mov	r5, r6
	while (ptr_end_desc >
   807d6:	42a3      	cmp	r3, r4
   807d8:	d20c      	bcs.n	807f4 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   807da:	785a      	ldrb	r2, [r3, #1]
   807dc:	2a04      	cmp	r2, #4
   807de:	d1f7      	bne.n	807d0 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   807e0:	789a      	ldrb	r2, [r3, #2]
   807e2:	4282      	cmp	r2, r0
   807e4:	d1f4      	bne.n	807d0 <udc_update_iface_desc+0x2c>
   807e6:	78da      	ldrb	r2, [r3, #3]
   807e8:	428a      	cmp	r2, r1
   807ea:	d1f1      	bne.n	807d0 <udc_update_iface_desc+0x2c>
   807ec:	2d00      	cmp	r5, #0
   807ee:	d1ec      	bne.n	807ca <udc_update_iface_desc+0x26>
				return true; // Interface found
   807f0:	2001      	movs	r0, #1
   807f2:	e002      	b.n	807fa <udc_update_iface_desc+0x56>
   807f4:	4a07      	ldr	r2, [pc, #28]	; (80814 <udc_update_iface_desc+0x70>)
   807f6:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
   807f8:	2000      	movs	r0, #0
}
   807fa:	bc70      	pop	{r4, r5, r6}
   807fc:	4770      	bx	lr
		return false;
   807fe:	2000      	movs	r0, #0
   80800:	4770      	bx	lr
		return false;
   80802:	2000      	movs	r0, #0
   80804:	4770      	bx	lr
	return false; // Interface not found
   80806:	2000      	movs	r0, #0
   80808:	e7f7      	b.n	807fa <udc_update_iface_desc+0x56>
   8080a:	bf00      	nop
   8080c:	20070cf8 	.word	0x20070cf8
   80810:	20070cfc 	.word	0x20070cfc
   80814:	20070d00 	.word	0x20070d00

00080818 <udc_iface_disable>:
{
   80818:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8081c:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
   8081e:	2100      	movs	r1, #0
   80820:	4b13      	ldr	r3, [pc, #76]	; (80870 <udc_iface_disable+0x58>)
   80822:	4798      	blx	r3
   80824:	4680      	mov	r8, r0
   80826:	b910      	cbnz	r0, 8082e <udc_iface_disable+0x16>
}
   80828:	4640      	mov	r0, r8
   8082a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   8082e:	4b11      	ldr	r3, [pc, #68]	; (80874 <udc_iface_disable+0x5c>)
   80830:	681b      	ldr	r3, [r3, #0]
   80832:	685b      	ldr	r3, [r3, #4]
   80834:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80838:	f8d9 300c 	ldr.w	r3, [r9, #12]
   8083c:	4798      	blx	r3
   8083e:	4601      	mov	r1, r0
   80840:	4620      	mov	r0, r4
   80842:	4b0b      	ldr	r3, [pc, #44]	; (80870 <udc_iface_disable+0x58>)
   80844:	4798      	blx	r3
   80846:	4680      	mov	r8, r0
   80848:	2800      	cmp	r0, #0
   8084a:	d0ed      	beq.n	80828 <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   8084c:	4b0a      	ldr	r3, [pc, #40]	; (80878 <udc_iface_disable+0x60>)
   8084e:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80850:	2605      	movs	r6, #5
   80852:	4d0a      	ldr	r5, [pc, #40]	; (8087c <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
   80854:	4f0a      	ldr	r7, [pc, #40]	; (80880 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80856:	4631      	mov	r1, r6
   80858:	4620      	mov	r0, r4
   8085a:	47a8      	blx	r5
			if (NULL == ep_desc) {
   8085c:	4604      	mov	r4, r0
   8085e:	b110      	cbz	r0, 80866 <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
   80860:	7880      	ldrb	r0, [r0, #2]
   80862:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80864:	e7f7      	b.n	80856 <udc_iface_disable+0x3e>
	udi_api->disable();
   80866:	f8d9 3004 	ldr.w	r3, [r9, #4]
   8086a:	4798      	blx	r3
	return true;
   8086c:	e7dc      	b.n	80828 <udc_iface_disable+0x10>
   8086e:	bf00      	nop
   80870:	000807a5 	.word	0x000807a5
   80874:	20070cfc 	.word	0x20070cfc
   80878:	20070d00 	.word	0x20070d00
   8087c:	00080745 	.word	0x00080745
   80880:	00081b81 	.word	0x00081b81

00080884 <udc_iface_enable>:
{
   80884:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80888:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   8088a:	4b10      	ldr	r3, [pc, #64]	; (808cc <udc_iface_enable+0x48>)
   8088c:	4798      	blx	r3
   8088e:	4603      	mov	r3, r0
   80890:	b1c8      	cbz	r0, 808c6 <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80892:	4b0f      	ldr	r3, [pc, #60]	; (808d0 <udc_iface_enable+0x4c>)
   80894:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80896:	2605      	movs	r6, #5
   80898:	4d0e      	ldr	r5, [pc, #56]	; (808d4 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   8089a:	4f0f      	ldr	r7, [pc, #60]	; (808d8 <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   8089c:	4631      	mov	r1, r6
   8089e:	4620      	mov	r0, r4
   808a0:	47a8      	blx	r5
		if (NULL == ep_desc)
   808a2:	4604      	mov	r4, r0
   808a4:	b138      	cbz	r0, 808b6 <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   808a6:	8882      	ldrh	r2, [r0, #4]
   808a8:	78c1      	ldrb	r1, [r0, #3]
   808aa:	7880      	ldrb	r0, [r0, #2]
   808ac:	47b8      	blx	r7
   808ae:	4603      	mov	r3, r0
   808b0:	2800      	cmp	r0, #0
   808b2:	d1f3      	bne.n	8089c <udc_iface_enable+0x18>
   808b4:	e007      	b.n	808c6 <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   808b6:	4b09      	ldr	r3, [pc, #36]	; (808dc <udc_iface_enable+0x58>)
   808b8:	681b      	ldr	r3, [r3, #0]
   808ba:	685b      	ldr	r3, [r3, #4]
   808bc:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
   808c0:	681b      	ldr	r3, [r3, #0]
   808c2:	4798      	blx	r3
   808c4:	4603      	mov	r3, r0
}
   808c6:	4618      	mov	r0, r3
   808c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   808cc:	000807a5 	.word	0x000807a5
   808d0:	20070d00 	.word	0x20070d00
   808d4:	00080745 	.word	0x00080745
   808d8:	00081ec9 	.word	0x00081ec9
   808dc:	20070cfc 	.word	0x20070cfc

000808e0 <udc_start>:
{
   808e0:	b508      	push	{r3, lr}
	udd_enable();
   808e2:	4b01      	ldr	r3, [pc, #4]	; (808e8 <udc_start+0x8>)
   808e4:	4798      	blx	r3
   808e6:	bd08      	pop	{r3, pc}
   808e8:	000812a9 	.word	0x000812a9

000808ec <udc_reset>:
{
   808ec:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
   808ee:	4b0d      	ldr	r3, [pc, #52]	; (80924 <udc_reset+0x38>)
   808f0:	781b      	ldrb	r3, [r3, #0]
   808f2:	b183      	cbz	r3, 80916 <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   808f4:	4b0c      	ldr	r3, [pc, #48]	; (80928 <udc_reset+0x3c>)
   808f6:	681b      	ldr	r3, [r3, #0]
   808f8:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   808fa:	791b      	ldrb	r3, [r3, #4]
   808fc:	b15b      	cbz	r3, 80916 <udc_reset+0x2a>
   808fe:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
   80900:	4e0a      	ldr	r6, [pc, #40]	; (8092c <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80902:	4d09      	ldr	r5, [pc, #36]	; (80928 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
   80904:	4620      	mov	r0, r4
   80906:	47b0      	blx	r6
				iface_num++) {
   80908:	3401      	adds	r4, #1
   8090a:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8090c:	682b      	ldr	r3, [r5, #0]
   8090e:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80910:	791b      	ldrb	r3, [r3, #4]
   80912:	42a3      	cmp	r3, r4
   80914:	d8f6      	bhi.n	80904 <udc_reset+0x18>
	udc_num_configuration = 0;
   80916:	2200      	movs	r2, #0
   80918:	4b02      	ldr	r3, [pc, #8]	; (80924 <udc_reset+0x38>)
   8091a:	701a      	strb	r2, [r3, #0]
	udc_device_status =
   8091c:	2201      	movs	r2, #1
   8091e:	4b04      	ldr	r3, [pc, #16]	; (80930 <udc_reset+0x44>)
   80920:	801a      	strh	r2, [r3, #0]
   80922:	bd70      	pop	{r4, r5, r6, pc}
   80924:	20070cf8 	.word	0x20070cf8
   80928:	20070cfc 	.word	0x20070cfc
   8092c:	00080819 	.word	0x00080819
   80930:	20070cee 	.word	0x20070cee

00080934 <udc_sof_notify>:
{
   80934:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80936:	4b0d      	ldr	r3, [pc, #52]	; (8096c <udc_sof_notify+0x38>)
   80938:	781b      	ldrb	r3, [r3, #0]
   8093a:	b1b3      	cbz	r3, 8096a <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8093c:	4b0c      	ldr	r3, [pc, #48]	; (80970 <udc_sof_notify+0x3c>)
   8093e:	681b      	ldr	r3, [r3, #0]
   80940:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80942:	7912      	ldrb	r2, [r2, #4]
   80944:	b18a      	cbz	r2, 8096a <udc_sof_notify+0x36>
   80946:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80948:	4d09      	ldr	r5, [pc, #36]	; (80970 <udc_sof_notify+0x3c>)
   8094a:	e006      	b.n	8095a <udc_sof_notify+0x26>
				iface_num++) {
   8094c:	3401      	adds	r4, #1
   8094e:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80950:	682b      	ldr	r3, [r5, #0]
   80952:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80954:	7912      	ldrb	r2, [r2, #4]
   80956:	42a2      	cmp	r2, r4
   80958:	d907      	bls.n	8096a <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   8095a:	685b      	ldr	r3, [r3, #4]
   8095c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80960:	691b      	ldr	r3, [r3, #16]
   80962:	2b00      	cmp	r3, #0
   80964:	d0f2      	beq.n	8094c <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80966:	4798      	blx	r3
   80968:	e7f0      	b.n	8094c <udc_sof_notify+0x18>
   8096a:	bd38      	pop	{r3, r4, r5, pc}
   8096c:	20070cf8 	.word	0x20070cf8
   80970:	20070cfc 	.word	0x20070cfc

00080974 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
   80974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80976:	4b96      	ldr	r3, [pc, #600]	; (80bd0 <udc_process_setup+0x25c>)
   80978:	2200      	movs	r2, #0
   8097a:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
   8097c:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   8097e:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
   80980:	781b      	ldrb	r3, [r3, #0]
   80982:	f013 0f80 	tst.w	r3, #128	; 0x80
   80986:	d114      	bne.n	809b2 <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80988:	f013 0f60 	tst.w	r3, #96	; 0x60
   8098c:	f000 80b8 	beq.w	80b00 <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
   80990:	4b8f      	ldr	r3, [pc, #572]	; (80bd0 <udc_process_setup+0x25c>)
   80992:	781b      	ldrb	r3, [r3, #0]
   80994:	f003 031f 	and.w	r3, r3, #31
   80998:	2b01      	cmp	r3, #1
   8099a:	f000 818b 	beq.w	80cb4 <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   8099e:	4b8c      	ldr	r3, [pc, #560]	; (80bd0 <udc_process_setup+0x25c>)
   809a0:	781b      	ldrb	r3, [r3, #0]
   809a2:	f003 031f 	and.w	r3, r3, #31
   809a6:	2b02      	cmp	r3, #2
   809a8:	f000 81ac 	beq.w	80d04 <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   809ac:	2300      	movs	r3, #0
#endif
}
   809ae:	4618      	mov	r0, r3
   809b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   809b2:	4a87      	ldr	r2, [pc, #540]	; (80bd0 <udc_process_setup+0x25c>)
   809b4:	88d2      	ldrh	r2, [r2, #6]
   809b6:	2a00      	cmp	r2, #0
   809b8:	f000 81cd 	beq.w	80d56 <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   809bc:	f013 0f60 	tst.w	r3, #96	; 0x60
   809c0:	d1e6      	bne.n	80990 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   809c2:	f013 031f 	ands.w	r3, r3, #31
   809c6:	d106      	bne.n	809d6 <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
   809c8:	4981      	ldr	r1, [pc, #516]	; (80bd0 <udc_process_setup+0x25c>)
   809ca:	7849      	ldrb	r1, [r1, #1]
   809cc:	2906      	cmp	r1, #6
   809ce:	d013      	beq.n	809f8 <udc_process_setup+0x84>
   809d0:	2908      	cmp	r1, #8
   809d2:	d058      	beq.n	80a86 <udc_process_setup+0x112>
   809d4:	b149      	cbz	r1, 809ea <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   809d6:	2b01      	cmp	r3, #1
   809d8:	d05c      	beq.n	80a94 <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   809da:	2b02      	cmp	r3, #2
   809dc:	d1d8      	bne.n	80990 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   809de:	4b7c      	ldr	r3, [pc, #496]	; (80bd0 <udc_process_setup+0x25c>)
   809e0:	785b      	ldrb	r3, [r3, #1]
   809e2:	2b00      	cmp	r3, #0
   809e4:	d07e      	beq.n	80ae4 <udc_process_setup+0x170>
	return false;
   809e6:	2300      	movs	r3, #0
   809e8:	e160      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   809ea:	2a02      	cmp	r2, #2
   809ec:	d1d0      	bne.n	80990 <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   809ee:	2102      	movs	r1, #2
   809f0:	4878      	ldr	r0, [pc, #480]	; (80bd4 <udc_process_setup+0x260>)
   809f2:	4b79      	ldr	r3, [pc, #484]	; (80bd8 <udc_process_setup+0x264>)
   809f4:	4798      	blx	r3
   809f6:	e09f      	b.n	80b38 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   809f8:	4b75      	ldr	r3, [pc, #468]	; (80bd0 <udc_process_setup+0x25c>)
   809fa:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   809fc:	0a13      	lsrs	r3, r2, #8
   809fe:	3b01      	subs	r3, #1
   80a00:	2b0e      	cmp	r3, #14
   80a02:	f200 8150 	bhi.w	80ca6 <udc_process_setup+0x332>
   80a06:	e8df f013 	tbh	[pc, r3, lsl #1]
   80a0a:	000f      	.short	0x000f
   80a0c:	0036001c 	.word	0x0036001c
   80a10:	014e014e 	.word	0x014e014e
   80a14:	014e014e 	.word	0x014e014e
   80a18:	014e014e 	.word	0x014e014e
   80a1c:	014e014e 	.word	0x014e014e
   80a20:	014e014e 	.word	0x014e014e
   80a24:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
   80a28:	4b6c      	ldr	r3, [pc, #432]	; (80bdc <udc_process_setup+0x268>)
   80a2a:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   80a2c:	7801      	ldrb	r1, [r0, #0]
   80a2e:	4b6a      	ldr	r3, [pc, #424]	; (80bd8 <udc_process_setup+0x264>)
   80a30:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   80a32:	4b67      	ldr	r3, [pc, #412]	; (80bd0 <udc_process_setup+0x25c>)
   80a34:	88da      	ldrh	r2, [r3, #6]
   80a36:	899b      	ldrh	r3, [r3, #12]
   80a38:	4293      	cmp	r3, r2
   80a3a:	d97d      	bls.n	80b38 <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   80a3c:	4b64      	ldr	r3, [pc, #400]	; (80bd0 <udc_process_setup+0x25c>)
   80a3e:	819a      	strh	r2, [r3, #12]
   80a40:	e07a      	b.n	80b38 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   80a42:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
   80a44:	4b65      	ldr	r3, [pc, #404]	; (80bdc <udc_process_setup+0x268>)
   80a46:	681b      	ldr	r3, [r3, #0]
   80a48:	7c5b      	ldrb	r3, [r3, #17]
   80a4a:	4293      	cmp	r3, r2
   80a4c:	d9a0      	bls.n	80990 <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   80a4e:	4b63      	ldr	r3, [pc, #396]	; (80bdc <udc_process_setup+0x268>)
   80a50:	685b      	ldr	r3, [r3, #4]
   80a52:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
   80a56:	8841      	ldrh	r1, [r0, #2]
   80a58:	4b5f      	ldr	r3, [pc, #380]	; (80bd8 <udc_process_setup+0x264>)
   80a5a:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   80a5c:	4b5c      	ldr	r3, [pc, #368]	; (80bd0 <udc_process_setup+0x25c>)
   80a5e:	689b      	ldr	r3, [r3, #8]
   80a60:	2202      	movs	r2, #2
   80a62:	705a      	strb	r2, [r3, #1]
   80a64:	e7e5      	b.n	80a32 <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
   80a66:	4b5d      	ldr	r3, [pc, #372]	; (80bdc <udc_process_setup+0x268>)
   80a68:	6898      	ldr	r0, [r3, #8]
   80a6a:	2800      	cmp	r0, #0
   80a6c:	d090      	beq.n	80990 <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
   80a6e:	8841      	ldrh	r1, [r0, #2]
   80a70:	4b59      	ldr	r3, [pc, #356]	; (80bd8 <udc_process_setup+0x264>)
   80a72:	4798      	blx	r3
   80a74:	e7dd      	b.n	80a32 <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   80a76:	f012 0fff 	tst.w	r2, #255	; 0xff
   80a7a:	d189      	bne.n	80990 <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   80a7c:	2104      	movs	r1, #4
   80a7e:	4858      	ldr	r0, [pc, #352]	; (80be0 <udc_process_setup+0x26c>)
   80a80:	4b55      	ldr	r3, [pc, #340]	; (80bd8 <udc_process_setup+0x264>)
   80a82:	4798      	blx	r3
   80a84:	e7d5      	b.n	80a32 <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80a86:	2a01      	cmp	r2, #1
   80a88:	d182      	bne.n	80990 <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
   80a8a:	2101      	movs	r1, #1
   80a8c:	4855      	ldr	r0, [pc, #340]	; (80be4 <udc_process_setup+0x270>)
   80a8e:	4b52      	ldr	r3, [pc, #328]	; (80bd8 <udc_process_setup+0x264>)
   80a90:	4798      	blx	r3
   80a92:	e051      	b.n	80b38 <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
   80a94:	494e      	ldr	r1, [pc, #312]	; (80bd0 <udc_process_setup+0x25c>)
   80a96:	7849      	ldrb	r1, [r1, #1]
   80a98:	290a      	cmp	r1, #10
   80a9a:	d19e      	bne.n	809da <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80a9c:	2a01      	cmp	r2, #1
   80a9e:	f47f af77 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80aa2:	4b50      	ldr	r3, [pc, #320]	; (80be4 <udc_process_setup+0x270>)
   80aa4:	781b      	ldrb	r3, [r3, #0]
   80aa6:	2b00      	cmp	r3, #0
   80aa8:	f43f af72 	beq.w	80990 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80aac:	4b48      	ldr	r3, [pc, #288]	; (80bd0 <udc_process_setup+0x25c>)
   80aae:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80ab0:	4b4d      	ldr	r3, [pc, #308]	; (80be8 <udc_process_setup+0x274>)
   80ab2:	681d      	ldr	r5, [r3, #0]
   80ab4:	682b      	ldr	r3, [r5, #0]
   80ab6:	791b      	ldrb	r3, [r3, #4]
   80ab8:	42a3      	cmp	r3, r4
   80aba:	f67f af69 	bls.w	80990 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80abe:	2100      	movs	r1, #0
   80ac0:	4620      	mov	r0, r4
   80ac2:	4b4a      	ldr	r3, [pc, #296]	; (80bec <udc_process_setup+0x278>)
   80ac4:	4798      	blx	r3
   80ac6:	2800      	cmp	r0, #0
   80ac8:	f43f af62 	beq.w	80990 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80acc:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
   80ace:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80ad2:	68db      	ldr	r3, [r3, #12]
   80ad4:	4798      	blx	r3
   80ad6:	4b46      	ldr	r3, [pc, #280]	; (80bf0 <udc_process_setup+0x27c>)
   80ad8:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   80ada:	2101      	movs	r1, #1
   80adc:	4618      	mov	r0, r3
   80ade:	4b3e      	ldr	r3, [pc, #248]	; (80bd8 <udc_process_setup+0x264>)
   80ae0:	4798      	blx	r3
   80ae2:	e029      	b.n	80b38 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   80ae4:	2a02      	cmp	r2, #2
   80ae6:	f47f af53 	bne.w	80990 <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   80aea:	4b39      	ldr	r3, [pc, #228]	; (80bd0 <udc_process_setup+0x25c>)
   80aec:	7918      	ldrb	r0, [r3, #4]
   80aee:	4b41      	ldr	r3, [pc, #260]	; (80bf4 <udc_process_setup+0x280>)
   80af0:	4798      	blx	r3
   80af2:	4b41      	ldr	r3, [pc, #260]	; (80bf8 <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   80af4:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   80af6:	2102      	movs	r1, #2
   80af8:	4618      	mov	r0, r3
   80afa:	4b37      	ldr	r3, [pc, #220]	; (80bd8 <udc_process_setup+0x264>)
   80afc:	4798      	blx	r3
   80afe:	e01b      	b.n	80b38 <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80b00:	f013 031f 	ands.w	r3, r3, #31
   80b04:	f040 8082 	bne.w	80c0c <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
   80b08:	4a31      	ldr	r2, [pc, #196]	; (80bd0 <udc_process_setup+0x25c>)
   80b0a:	7852      	ldrb	r2, [r2, #1]
   80b0c:	3a01      	subs	r2, #1
   80b0e:	2a08      	cmp	r2, #8
   80b10:	d87c      	bhi.n	80c0c <udc_process_setup+0x298>
   80b12:	e8df f012 	tbh	[pc, r2, lsl #1]
   80b16:	0013      	.short	0x0013
   80b18:	00ca007b 	.word	0x00ca007b
   80b1c:	0009007b 	.word	0x0009007b
   80b20:	007b007b 	.word	0x007b007b
   80b24:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
   80b28:	4b29      	ldr	r3, [pc, #164]	; (80bd0 <udc_process_setup+0x25c>)
   80b2a:	88db      	ldrh	r3, [r3, #6]
   80b2c:	2b00      	cmp	r3, #0
   80b2e:	f47f af2f 	bne.w	80990 <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
   80b32:	4a32      	ldr	r2, [pc, #200]	; (80bfc <udc_process_setup+0x288>)
   80b34:	4b26      	ldr	r3, [pc, #152]	; (80bd0 <udc_process_setup+0x25c>)
   80b36:	611a      	str	r2, [r3, #16]
			return true;
   80b38:	2301      	movs	r3, #1
   80b3a:	e738      	b.n	809ae <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
   80b3c:	4b24      	ldr	r3, [pc, #144]	; (80bd0 <udc_process_setup+0x25c>)
   80b3e:	88db      	ldrh	r3, [r3, #6]
   80b40:	2b00      	cmp	r3, #0
   80b42:	f47f af25 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   80b46:	4b22      	ldr	r3, [pc, #136]	; (80bd0 <udc_process_setup+0x25c>)
   80b48:	885b      	ldrh	r3, [r3, #2]
   80b4a:	2b01      	cmp	r3, #1
   80b4c:	f47f af20 	bne.w	80990 <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   80b50:	4a20      	ldr	r2, [pc, #128]	; (80bd4 <udc_process_setup+0x260>)
   80b52:	8813      	ldrh	r3, [r2, #0]
   80b54:	f023 0302 	bic.w	r3, r3, #2
   80b58:	8013      	strh	r3, [r2, #0]
   80b5a:	e7ed      	b.n	80b38 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
   80b5c:	4b1c      	ldr	r3, [pc, #112]	; (80bd0 <udc_process_setup+0x25c>)
   80b5e:	88db      	ldrh	r3, [r3, #6]
   80b60:	2b00      	cmp	r3, #0
   80b62:	f47f af15 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
   80b66:	4b26      	ldr	r3, [pc, #152]	; (80c00 <udc_process_setup+0x28c>)
   80b68:	4798      	blx	r3
   80b6a:	2800      	cmp	r0, #0
   80b6c:	f43f af10 	beq.w	80990 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b70:	4b17      	ldr	r3, [pc, #92]	; (80bd0 <udc_process_setup+0x25c>)
   80b72:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
   80b74:	4b19      	ldr	r3, [pc, #100]	; (80bdc <udc_process_setup+0x268>)
   80b76:	681b      	ldr	r3, [r3, #0]
   80b78:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b7a:	429a      	cmp	r2, r3
   80b7c:	f73f af08 	bgt.w	80990 <udc_process_setup+0x1c>
	udc_reset();
   80b80:	4b20      	ldr	r3, [pc, #128]	; (80c04 <udc_process_setup+0x290>)
   80b82:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   80b84:	4b12      	ldr	r3, [pc, #72]	; (80bd0 <udc_process_setup+0x25c>)
   80b86:	789b      	ldrb	r3, [r3, #2]
   80b88:	4a16      	ldr	r2, [pc, #88]	; (80be4 <udc_process_setup+0x270>)
   80b8a:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
   80b8c:	2b00      	cmp	r3, #0
   80b8e:	d0d3      	beq.n	80b38 <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   80b90:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
   80b94:	3b01      	subs	r3, #1
   80b96:	4a11      	ldr	r2, [pc, #68]	; (80bdc <udc_process_setup+0x268>)
   80b98:	6852      	ldr	r2, [r2, #4]
   80b9a:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
   80b9e:	4912      	ldr	r1, [pc, #72]	; (80be8 <udc_process_setup+0x274>)
   80ba0:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80ba2:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
   80ba6:	791b      	ldrb	r3, [r3, #4]
   80ba8:	2b00      	cmp	r3, #0
   80baa:	d0c5      	beq.n	80b38 <udc_process_setup+0x1c4>
   80bac:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
   80bae:	4626      	mov	r6, r4
   80bb0:	4d15      	ldr	r5, [pc, #84]	; (80c08 <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bb2:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
   80bb4:	4631      	mov	r1, r6
   80bb6:	4620      	mov	r0, r4
   80bb8:	47a8      	blx	r5
   80bba:	2800      	cmp	r0, #0
   80bbc:	f43f aee8 	beq.w	80990 <udc_process_setup+0x1c>
			iface_num++) {
   80bc0:	3401      	adds	r4, #1
   80bc2:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bc4:	683b      	ldr	r3, [r7, #0]
   80bc6:	681b      	ldr	r3, [r3, #0]
   80bc8:	791b      	ldrb	r3, [r3, #4]
   80bca:	42a3      	cmp	r3, r4
   80bcc:	d8f2      	bhi.n	80bb4 <udc_process_setup+0x240>
   80bce:	e7b3      	b.n	80b38 <udc_process_setup+0x1c4>
   80bd0:	20070e0c 	.word	0x20070e0c
   80bd4:	20070cee 	.word	0x20070cee
   80bd8:	00081b75 	.word	0x00081b75
   80bdc:	20070164 	.word	0x20070164
   80be0:	20070160 	.word	0x20070160
   80be4:	20070cf8 	.word	0x20070cf8
   80be8:	20070cfc 	.word	0x20070cfc
   80bec:	000807a5 	.word	0x000807a5
   80bf0:	20070cf4 	.word	0x20070cf4
   80bf4:	00081bdd 	.word	0x00081bdd
   80bf8:	20070cf0 	.word	0x20070cf0
   80bfc:	0008078d 	.word	0x0008078d
   80c00:	00081b45 	.word	0x00081b45
   80c04:	000808ed 	.word	0x000808ed
   80c08:	00080885 	.word	0x00080885
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80c0c:	2b01      	cmp	r3, #1
   80c0e:	d00a      	beq.n	80c26 <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80c10:	2b02      	cmp	r3, #2
   80c12:	f47f aebd 	bne.w	80990 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c16:	4b52      	ldr	r3, [pc, #328]	; (80d60 <udc_process_setup+0x3ec>)
   80c18:	785b      	ldrb	r3, [r3, #1]
   80c1a:	2b01      	cmp	r3, #1
   80c1c:	d020      	beq.n	80c60 <udc_process_setup+0x2ec>
   80c1e:	2b03      	cmp	r3, #3
   80c20:	d02e      	beq.n	80c80 <udc_process_setup+0x30c>
	return false;
   80c22:	2300      	movs	r3, #0
   80c24:	e042      	b.n	80cac <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c26:	4a4e      	ldr	r2, [pc, #312]	; (80d60 <udc_process_setup+0x3ec>)
   80c28:	7852      	ldrb	r2, [r2, #1]
   80c2a:	2a0b      	cmp	r2, #11
   80c2c:	d1f0      	bne.n	80c10 <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
   80c2e:	4b4c      	ldr	r3, [pc, #304]	; (80d60 <udc_process_setup+0x3ec>)
   80c30:	88db      	ldrh	r3, [r3, #6]
   80c32:	2b00      	cmp	r3, #0
   80c34:	f47f aeac 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80c38:	4b4a      	ldr	r3, [pc, #296]	; (80d64 <udc_process_setup+0x3f0>)
   80c3a:	781b      	ldrb	r3, [r3, #0]
   80c3c:	2b00      	cmp	r3, #0
   80c3e:	f43f aea7 	beq.w	80990 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80c42:	4b47      	ldr	r3, [pc, #284]	; (80d60 <udc_process_setup+0x3ec>)
   80c44:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   80c46:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
   80c48:	4620      	mov	r0, r4
   80c4a:	4b47      	ldr	r3, [pc, #284]	; (80d68 <udc_process_setup+0x3f4>)
   80c4c:	4798      	blx	r3
   80c4e:	2800      	cmp	r0, #0
   80c50:	f43f ae9e 	beq.w	80990 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
   80c54:	b2e9      	uxtb	r1, r5
   80c56:	4620      	mov	r0, r4
   80c58:	4b44      	ldr	r3, [pc, #272]	; (80d6c <udc_process_setup+0x3f8>)
   80c5a:	4798      	blx	r3
   80c5c:	4603      	mov	r3, r0
   80c5e:	e025      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c60:	4b3f      	ldr	r3, [pc, #252]	; (80d60 <udc_process_setup+0x3ec>)
   80c62:	88db      	ldrh	r3, [r3, #6]
   80c64:	2b00      	cmp	r3, #0
   80c66:	f47f ae93 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80c6a:	4b3d      	ldr	r3, [pc, #244]	; (80d60 <udc_process_setup+0x3ec>)
   80c6c:	885b      	ldrh	r3, [r3, #2]
   80c6e:	2b00      	cmp	r3, #0
   80c70:	f47f ae8e 	bne.w	80990 <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c74:	4b3a      	ldr	r3, [pc, #232]	; (80d60 <udc_process_setup+0x3ec>)
   80c76:	7918      	ldrb	r0, [r3, #4]
   80c78:	4b3d      	ldr	r3, [pc, #244]	; (80d70 <udc_process_setup+0x3fc>)
   80c7a:	4798      	blx	r3
   80c7c:	4603      	mov	r3, r0
   80c7e:	e015      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c80:	4b37      	ldr	r3, [pc, #220]	; (80d60 <udc_process_setup+0x3ec>)
   80c82:	88db      	ldrh	r3, [r3, #6]
   80c84:	2b00      	cmp	r3, #0
   80c86:	f47f ae83 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80c8a:	4b35      	ldr	r3, [pc, #212]	; (80d60 <udc_process_setup+0x3ec>)
   80c8c:	885b      	ldrh	r3, [r3, #2]
   80c8e:	2b00      	cmp	r3, #0
   80c90:	f47f ae7e 	bne.w	80990 <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c94:	4c32      	ldr	r4, [pc, #200]	; (80d60 <udc_process_setup+0x3ec>)
   80c96:	7920      	ldrb	r0, [r4, #4]
   80c98:	4b36      	ldr	r3, [pc, #216]	; (80d74 <udc_process_setup+0x400>)
   80c9a:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c9c:	7920      	ldrb	r0, [r4, #4]
   80c9e:	4b36      	ldr	r3, [pc, #216]	; (80d78 <udc_process_setup+0x404>)
   80ca0:	4798      	blx	r3
   80ca2:	4603      	mov	r3, r0
   80ca4:	e002      	b.n	80cac <udc_process_setup+0x338>
		return false;
   80ca6:	2300      	movs	r3, #0
   80ca8:	e000      	b.n	80cac <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
   80caa:	2300      	movs	r3, #0
		if (udc_reqstd()) {
   80cac:	2b00      	cmp	r3, #0
   80cae:	f47f ae7e 	bne.w	809ae <udc_process_setup+0x3a>
   80cb2:	e66d      	b.n	80990 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
   80cb4:	4b2b      	ldr	r3, [pc, #172]	; (80d64 <udc_process_setup+0x3f0>)
   80cb6:	781b      	ldrb	r3, [r3, #0]
   80cb8:	2b00      	cmp	r3, #0
   80cba:	d04e      	beq.n	80d5a <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80cbc:	4b28      	ldr	r3, [pc, #160]	; (80d60 <udc_process_setup+0x3ec>)
   80cbe:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80cc0:	4b2e      	ldr	r3, [pc, #184]	; (80d7c <udc_process_setup+0x408>)
   80cc2:	681d      	ldr	r5, [r3, #0]
   80cc4:	682b      	ldr	r3, [r5, #0]
   80cc6:	791b      	ldrb	r3, [r3, #4]
   80cc8:	42a3      	cmp	r3, r4
   80cca:	d801      	bhi.n	80cd0 <udc_process_setup+0x35c>
	return false;
   80ccc:	2300      	movs	r3, #0
   80cce:	e66e      	b.n	809ae <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80cd0:	2100      	movs	r1, #0
   80cd2:	4620      	mov	r0, r4
   80cd4:	4b2a      	ldr	r3, [pc, #168]	; (80d80 <udc_process_setup+0x40c>)
   80cd6:	4798      	blx	r3
   80cd8:	2800      	cmp	r0, #0
   80cda:	f43f ae60 	beq.w	8099e <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80cde:	686b      	ldr	r3, [r5, #4]
   80ce0:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80ce4:	68eb      	ldr	r3, [r5, #12]
   80ce6:	4798      	blx	r3
   80ce8:	4601      	mov	r1, r0
   80cea:	4620      	mov	r0, r4
   80cec:	4b24      	ldr	r3, [pc, #144]	; (80d80 <udc_process_setup+0x40c>)
   80cee:	4798      	blx	r3
   80cf0:	2800      	cmp	r0, #0
   80cf2:	f43f ae54 	beq.w	8099e <udc_process_setup+0x2a>
	return udi_api->setup();
   80cf6:	68ab      	ldr	r3, [r5, #8]
   80cf8:	4798      	blx	r3
		if (udc_req_iface()) {
   80cfa:	4603      	mov	r3, r0
   80cfc:	2800      	cmp	r0, #0
   80cfe:	f47f ae56 	bne.w	809ae <udc_process_setup+0x3a>
   80d02:	e64c      	b.n	8099e <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
   80d04:	4b17      	ldr	r3, [pc, #92]	; (80d64 <udc_process_setup+0x3f0>)
   80d06:	781b      	ldrb	r3, [r3, #0]
   80d08:	b30b      	cbz	r3, 80d4e <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d0a:	4b1c      	ldr	r3, [pc, #112]	; (80d7c <udc_process_setup+0x408>)
   80d0c:	681a      	ldr	r2, [r3, #0]
   80d0e:	6813      	ldr	r3, [r2, #0]
   80d10:	791b      	ldrb	r3, [r3, #4]
   80d12:	b1f3      	cbz	r3, 80d52 <udc_process_setup+0x3de>
   80d14:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d16:	4e1a      	ldr	r6, [pc, #104]	; (80d80 <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d18:	4f18      	ldr	r7, [pc, #96]	; (80d7c <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80d1a:	6853      	ldr	r3, [r2, #4]
   80d1c:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d20:	68eb      	ldr	r3, [r5, #12]
   80d22:	4798      	blx	r3
   80d24:	4601      	mov	r1, r0
   80d26:	4620      	mov	r0, r4
   80d28:	47b0      	blx	r6
   80d2a:	4603      	mov	r3, r0
   80d2c:	2800      	cmp	r0, #0
   80d2e:	f43f ae3e 	beq.w	809ae <udc_process_setup+0x3a>
		if (udi_api->setup()) {
   80d32:	68ab      	ldr	r3, [r5, #8]
   80d34:	4798      	blx	r3
   80d36:	4603      	mov	r3, r0
   80d38:	2800      	cmp	r0, #0
   80d3a:	f47f ae38 	bne.w	809ae <udc_process_setup+0x3a>
			iface_num++) {
   80d3e:	3401      	adds	r4, #1
   80d40:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d42:	683a      	ldr	r2, [r7, #0]
   80d44:	6811      	ldr	r1, [r2, #0]
   80d46:	7909      	ldrb	r1, [r1, #4]
   80d48:	42a1      	cmp	r1, r4
   80d4a:	d8e6      	bhi.n	80d1a <udc_process_setup+0x3a6>
   80d4c:	e62f      	b.n	809ae <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
   80d4e:	2300      	movs	r3, #0
   80d50:	e62d      	b.n	809ae <udc_process_setup+0x3a>
	return false;
   80d52:	2300      	movs	r3, #0
   80d54:	e62b      	b.n	809ae <udc_process_setup+0x3a>
			return false; // Error from USB host
   80d56:	2300      	movs	r3, #0
   80d58:	e629      	b.n	809ae <udc_process_setup+0x3a>
	return false;
   80d5a:	2300      	movs	r3, #0
   80d5c:	e627      	b.n	809ae <udc_process_setup+0x3a>
   80d5e:	bf00      	nop
   80d60:	20070e0c 	.word	0x20070e0c
   80d64:	20070cf8 	.word	0x20070cf8
   80d68:	00080819 	.word	0x00080819
   80d6c:	00080885 	.word	0x00080885
   80d70:	00081cf1 	.word	0x00081cf1
   80d74:	000820c1 	.word	0x000820c1
   80d78:	00081bf1 	.word	0x00081bf1
   80d7c:	20070cfc 	.word	0x20070cfc
   80d80:	000807a5 	.word	0x000807a5

00080d84 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
   80d84:	290f      	cmp	r1, #15
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   80d86:	bf9a      	itte	ls
   80d88:	3050      	addls	r0, #80	; 0x50
   80d8a:	f850 0021 	ldrls.w	r0, [r0, r1, lsl #2]
	uint32_t ul_data = 0;
   80d8e:	2000      	movhi	r0, #0
	}

	return ul_data;
}
   80d90:	4770      	bx	lr

00080d92 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
   80d92:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
   80d94:	4770      	bx	lr

00080d96 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80d96:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80d98:	0189      	lsls	r1, r1, #6
   80d9a:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80d9c:	2402      	movs	r4, #2
   80d9e:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80da0:	f04f 31ff 	mov.w	r1, #4294967295
   80da4:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80da6:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80da8:	605a      	str	r2, [r3, #4]
}
   80daa:	bc10      	pop	{r4}
   80dac:	4770      	bx	lr

00080dae <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80dae:	0189      	lsls	r1, r1, #6
   80db0:	2305      	movs	r3, #5
   80db2:	5043      	str	r3, [r0, r1]
   80db4:	4770      	bx	lr

00080db6 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80db6:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80dba:	61ca      	str	r2, [r1, #28]
   80dbc:	4770      	bx	lr

00080dbe <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80dbe:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80dc2:	624a      	str	r2, [r1, #36]	; 0x24
   80dc4:	4770      	bx	lr

00080dc6 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80dc6:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80dca:	6a08      	ldr	r0, [r1, #32]
}
   80dcc:	4770      	bx	lr
	...

00080dd0 <udd_ctrl_init>:
	udd_enable_endpoint_interrupt(0);
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
   80dd0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80dd2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80dd6:	fab3 f383 	clz	r3, r3
   80dda:	095b      	lsrs	r3, r3, #5
   80ddc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80dde:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80de0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80de4:	2200      	movs	r2, #0
   80de6:	4b0c      	ldr	r3, [pc, #48]	; (80e18 <udd_ctrl_init+0x48>)
   80de8:	701a      	strb	r2, [r3, #0]
	return flags;
   80dea:	9b01      	ldr	r3, [sp, #4]
	// In case of abort of IN Data Phase:
	// No need to abort IN transfer (rise TXINI),
	// because it is automatically done by hardware when a Setup packet is received.
	// But the interrupt must be disabled to don't generate interrupt TXINI
	// after SETUP reception.
	udd_disable_in_send_interrupt(0);
   80dec:	2101      	movs	r1, #1
   80dee:	4a0b      	ldr	r2, [pc, #44]	; (80e1c <udd_ctrl_init+0x4c>)
   80df0:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80df2:	b123      	cbz	r3, 80dfe <udd_ctrl_init+0x2e>
		cpu_irq_enable();
   80df4:	4b08      	ldr	r3, [pc, #32]	; (80e18 <udd_ctrl_init+0x48>)
   80df6:	7019      	strb	r1, [r3, #0]
   80df8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80dfc:	b662      	cpsie	i
	cpu_irq_restore(flags);

	// In case of OUT ZLP event is no processed before Setup event occurs
	udd_ack_out_received(0);
   80dfe:	2202      	movs	r2, #2
   80e00:	4b07      	ldr	r3, [pc, #28]	; (80e20 <udd_ctrl_init+0x50>)
   80e02:	601a      	str	r2, [r3, #0]

	udd_g_ctrlreq.callback = NULL;
   80e04:	4a07      	ldr	r2, [pc, #28]	; (80e24 <udd_ctrl_init+0x54>)
   80e06:	2300      	movs	r3, #0
   80e08:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   80e0a:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
   80e0c:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   80e0e:	4a06      	ldr	r2, [pc, #24]	; (80e28 <udd_ctrl_init+0x58>)
   80e10:	7013      	strb	r3, [r2, #0]
}
   80e12:	b002      	add	sp, #8
   80e14:	4770      	bx	lr
   80e16:	bf00      	nop
   80e18:	200701d8 	.word	0x200701d8
   80e1c:	400ac220 	.word	0x400ac220
   80e20:	400ac160 	.word	0x400ac160
   80e24:	20070e0c 	.word	0x20070e0c
   80e28:	20070d0c 	.word	0x20070d0c

00080e2c <udd_ctrl_stall_data>:


static void udd_ctrl_stall_data(void)
{
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   80e2c:	2205      	movs	r2, #5
   80e2e:	4b03      	ldr	r3, [pc, #12]	; (80e3c <udd_ctrl_stall_data+0x10>)
   80e30:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
   80e32:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80e36:	4b02      	ldr	r3, [pc, #8]	; (80e40 <udd_ctrl_stall_data+0x14>)
   80e38:	601a      	str	r2, [r3, #0]
   80e3a:	4770      	bx	lr
   80e3c:	20070d0c 	.word	0x20070d0c
   80e40:	400ac1f0 	.word	0x400ac1f0

00080e44 <udd_ctrl_send_zlp_in>:
}


static void udd_ctrl_send_zlp_in(void)
{
   80e44:	b082      	sub	sp, #8
	irqflags_t flags;

	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   80e46:	2203      	movs	r2, #3
   80e48:	4b0f      	ldr	r3, [pc, #60]	; (80e88 <udd_ctrl_send_zlp_in+0x44>)
   80e4a:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80e4c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80e50:	fab3 f383 	clz	r3, r3
   80e54:	095b      	lsrs	r3, r3, #5
   80e56:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80e58:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80e5a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80e5e:	2200      	movs	r2, #0
   80e60:	4b0a      	ldr	r3, [pc, #40]	; (80e8c <udd_ctrl_send_zlp_in+0x48>)
   80e62:	701a      	strb	r2, [r3, #0]
	return flags;
   80e64:	9801      	ldr	r0, [sp, #4]

	// Validate and send empty IN packet on control endpoint
	flags = cpu_irq_save();
	// Send ZLP on IN endpoint
	udd_ack_in_send(0);
   80e66:	490a      	ldr	r1, [pc, #40]	; (80e90 <udd_ctrl_send_zlp_in+0x4c>)
   80e68:	2201      	movs	r2, #1
   80e6a:	600a      	str	r2, [r1, #0]
	udd_enable_in_send_interrupt(0);
   80e6c:	4b09      	ldr	r3, [pc, #36]	; (80e94 <udd_ctrl_send_zlp_in+0x50>)
   80e6e:	601a      	str	r2, [r3, #0]
	// To detect a protocol error, enable nak interrupt on data OUT phase
	udd_ack_nak_out(0);
   80e70:	2208      	movs	r2, #8
   80e72:	600a      	str	r2, [r1, #0]
	udd_enable_nak_out_interrupt(0);
   80e74:	601a      	str	r2, [r3, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80e76:	b128      	cbz	r0, 80e84 <udd_ctrl_send_zlp_in+0x40>
		cpu_irq_enable();
   80e78:	2201      	movs	r2, #1
   80e7a:	4b04      	ldr	r3, [pc, #16]	; (80e8c <udd_ctrl_send_zlp_in+0x48>)
   80e7c:	701a      	strb	r2, [r3, #0]
   80e7e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80e82:	b662      	cpsie	i
	cpu_irq_restore(flags);
}
   80e84:	b002      	add	sp, #8
   80e86:	4770      	bx	lr
   80e88:	20070d0c 	.word	0x20070d0c
   80e8c:	200701d8 	.word	0x200701d8
   80e90:	400ac160 	.word	0x400ac160
   80e94:	400ac1f0 	.word	0x400ac1f0

00080e98 <udd_ctrl_endofrequest>:
	cpu_irq_restore(flags);
}


static void udd_ctrl_endofrequest(void)
{
   80e98:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
   80e9a:	4b02      	ldr	r3, [pc, #8]	; (80ea4 <udd_ctrl_endofrequest+0xc>)
   80e9c:	691b      	ldr	r3, [r3, #16]
   80e9e:	b103      	cbz	r3, 80ea2 <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
   80ea0:	4798      	blx	r3
   80ea2:	bd08      	pop	{r3, pc}
   80ea4:	20070e0c 	.word	0x20070e0c

00080ea8 <udd_ctrl_in_sent>:
{
   80ea8:	b530      	push	{r4, r5, lr}
   80eaa:	b085      	sub	sp, #20
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80eac:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80eb0:	fab3 f383 	clz	r3, r3
   80eb4:	095b      	lsrs	r3, r3, #5
   80eb6:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80eb8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80eba:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80ebe:	2200      	movs	r2, #0
   80ec0:	4b4c      	ldr	r3, [pc, #304]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80ec2:	701a      	strb	r2, [r3, #0]
	return flags;
   80ec4:	9b01      	ldr	r3, [sp, #4]
	udd_disable_in_send_interrupt(0);
   80ec6:	2101      	movs	r1, #1
   80ec8:	4a4b      	ldr	r2, [pc, #300]	; (80ff8 <udd_ctrl_in_sent+0x150>)
   80eca:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80ecc:	b123      	cbz	r3, 80ed8 <udd_ctrl_in_sent+0x30>
		cpu_irq_enable();
   80ece:	4b49      	ldr	r3, [pc, #292]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80ed0:	7019      	strb	r1, [r3, #0]
   80ed2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80ed6:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   80ed8:	4b48      	ldr	r3, [pc, #288]	; (80ffc <udd_ctrl_in_sent+0x154>)
   80eda:	781b      	ldrb	r3, [r3, #0]
   80edc:	2b03      	cmp	r3, #3
   80ede:	d057      	beq.n	80f90 <udd_ctrl_in_sent+0xe8>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   80ee0:	4b47      	ldr	r3, [pc, #284]	; (81000 <udd_ctrl_in_sent+0x158>)
   80ee2:	881b      	ldrh	r3, [r3, #0]
   80ee4:	4a47      	ldr	r2, [pc, #284]	; (81004 <udd_ctrl_in_sent+0x15c>)
   80ee6:	8994      	ldrh	r4, [r2, #12]
   80ee8:	1ae4      	subs	r4, r4, r3
   80eea:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   80eec:	b9c4      	cbnz	r4, 80f20 <udd_ctrl_in_sent+0x78>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   80eee:	4a46      	ldr	r2, [pc, #280]	; (81008 <udd_ctrl_in_sent+0x160>)
   80ef0:	8811      	ldrh	r1, [r2, #0]
   80ef2:	440b      	add	r3, r1
   80ef4:	b29b      	uxth	r3, r3
   80ef6:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   80ef8:	4a42      	ldr	r2, [pc, #264]	; (81004 <udd_ctrl_in_sent+0x15c>)
   80efa:	88d2      	ldrh	r2, [r2, #6]
   80efc:	429a      	cmp	r2, r3
   80efe:	d04c      	beq.n	80f9a <udd_ctrl_in_sent+0xf2>
					|| b_shortpacket) {
   80f00:	4b42      	ldr	r3, [pc, #264]	; (8100c <udd_ctrl_in_sent+0x164>)
   80f02:	781b      	ldrb	r3, [r3, #0]
   80f04:	2b00      	cmp	r3, #0
   80f06:	d148      	bne.n	80f9a <udd_ctrl_in_sent+0xf2>
		if ((!udd_g_ctrlreq.over_under_run)
   80f08:	4b3e      	ldr	r3, [pc, #248]	; (81004 <udd_ctrl_in_sent+0x15c>)
   80f0a:	695b      	ldr	r3, [r3, #20]
   80f0c:	2b00      	cmp	r3, #0
   80f0e:	d061      	beq.n	80fd4 <udd_ctrl_in_sent+0x12c>
				|| (!udd_g_ctrlreq.over_under_run())) {
   80f10:	4798      	blx	r3
   80f12:	2800      	cmp	r0, #0
   80f14:	d05e      	beq.n	80fd4 <udd_ctrl_in_sent+0x12c>
			udd_ctrl_payload_buf_cnt = 0;
   80f16:	2200      	movs	r2, #0
   80f18:	4b39      	ldr	r3, [pc, #228]	; (81000 <udd_ctrl_in_sent+0x158>)
   80f1a:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   80f1c:	4b39      	ldr	r3, [pc, #228]	; (81004 <udd_ctrl_in_sent+0x15c>)
   80f1e:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   80f20:	2c3f      	cmp	r4, #63	; 0x3f
   80f22:	d957      	bls.n	80fd4 <udd_ctrl_in_sent+0x12c>
		b_shortpacket = false;
   80f24:	2200      	movs	r2, #0
   80f26:	4b39      	ldr	r3, [pc, #228]	; (8100c <udd_ctrl_in_sent+0x164>)
   80f28:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   80f2a:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80f2c:	4b35      	ldr	r3, [pc, #212]	; (81004 <udd_ctrl_in_sent+0x15c>)
   80f2e:	689a      	ldr	r2, [r3, #8]
   80f30:	4b33      	ldr	r3, [pc, #204]	; (81000 <udd_ctrl_in_sent+0x158>)
   80f32:	881d      	ldrh	r5, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80f34:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80f38:	fab3 f383 	clz	r3, r3
   80f3c:	095b      	lsrs	r3, r3, #5
   80f3e:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   80f40:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80f42:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f46:	2100      	movs	r1, #0
   80f48:	4b2a      	ldr	r3, [pc, #168]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80f4a:	7019      	strb	r1, [r3, #0]
	return flags;
   80f4c:	9802      	ldr	r0, [sp, #8]
	if (Is_udd_out_received(0)) {
   80f4e:	4b30      	ldr	r3, [pc, #192]	; (81010 <udd_ctrl_in_sent+0x168>)
   80f50:	681b      	ldr	r3, [r3, #0]
   80f52:	f013 0f02 	tst.w	r3, #2
   80f56:	d141      	bne.n	80fdc <udd_ctrl_in_sent+0x134>
	for (i = 0; i < nb_remain; i++) {
   80f58:	b144      	cbz	r4, 80f6c <udd_ctrl_in_sent+0xc4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80f5a:	442a      	add	r2, r5
   80f5c:	4b2d      	ldr	r3, [pc, #180]	; (81014 <udd_ctrl_in_sent+0x16c>)
		*ptr_dest++ = *ptr_src++;
   80f5e:	f812 1b01 	ldrb.w	r1, [r2], #1
   80f62:	f803 1b01 	strb.w	r1, [r3], #1
	for (i = 0; i < nb_remain; i++) {
   80f66:	b2d9      	uxtb	r1, r3
   80f68:	42a1      	cmp	r1, r4
   80f6a:	d3f8      	bcc.n	80f5e <udd_ctrl_in_sent+0xb6>
	udd_ctrl_payload_buf_cnt += nb_remain;
   80f6c:	4b24      	ldr	r3, [pc, #144]	; (81000 <udd_ctrl_in_sent+0x158>)
   80f6e:	881a      	ldrh	r2, [r3, #0]
   80f70:	4414      	add	r4, r2
   80f72:	801c      	strh	r4, [r3, #0]
	udd_ack_in_send(0);
   80f74:	2301      	movs	r3, #1
   80f76:	4a28      	ldr	r2, [pc, #160]	; (81018 <udd_ctrl_in_sent+0x170>)
   80f78:	6013      	str	r3, [r2, #0]
	udd_enable_in_send_interrupt(0);
   80f7a:	3290      	adds	r2, #144	; 0x90
   80f7c:	6013      	str	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80f7e:	2800      	cmp	r0, #0
   80f80:	d036      	beq.n	80ff0 <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80f82:	461a      	mov	r2, r3
   80f84:	4b1b      	ldr	r3, [pc, #108]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80f86:	701a      	strb	r2, [r3, #0]
   80f88:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80f8c:	b662      	cpsie	i
   80f8e:	e02f      	b.n	80ff0 <udd_ctrl_in_sent+0x148>
		udd_ctrl_endofrequest();
   80f90:	4b22      	ldr	r3, [pc, #136]	; (8101c <udd_ctrl_in_sent+0x174>)
   80f92:	4798      	blx	r3
		udd_ctrl_init();
   80f94:	4b22      	ldr	r3, [pc, #136]	; (81020 <udd_ctrl_in_sent+0x178>)
   80f96:	4798      	blx	r3
		return;
   80f98:	e02a      	b.n	80ff0 <udd_ctrl_in_sent+0x148>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80f9a:	2204      	movs	r2, #4
   80f9c:	4b17      	ldr	r3, [pc, #92]	; (80ffc <udd_ctrl_in_sent+0x154>)
   80f9e:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80fa0:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80fa4:	fab3 f383 	clz	r3, r3
   80fa8:	095b      	lsrs	r3, r3, #5
   80faa:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80fac:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80fae:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80fb2:	2200      	movs	r2, #0
   80fb4:	4b0f      	ldr	r3, [pc, #60]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80fb6:	701a      	strb	r2, [r3, #0]
	return flags;
   80fb8:	9a03      	ldr	r2, [sp, #12]
	udd_ack_nak_in(0);
   80fba:	2310      	movs	r3, #16
   80fbc:	4916      	ldr	r1, [pc, #88]	; (81018 <udd_ctrl_in_sent+0x170>)
   80fbe:	600b      	str	r3, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   80fc0:	3190      	adds	r1, #144	; 0x90
   80fc2:	600b      	str	r3, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80fc4:	b1a2      	cbz	r2, 80ff0 <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80fc6:	2201      	movs	r2, #1
   80fc8:	4b0a      	ldr	r3, [pc, #40]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80fca:	701a      	strb	r2, [r3, #0]
   80fcc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fd0:	b662      	cpsie	i
   80fd2:	e00d      	b.n	80ff0 <udd_ctrl_in_sent+0x148>
		b_shortpacket = true;
   80fd4:	2201      	movs	r2, #1
   80fd6:	4b0d      	ldr	r3, [pc, #52]	; (8100c <udd_ctrl_in_sent+0x164>)
   80fd8:	701a      	strb	r2, [r3, #0]
   80fda:	e7a7      	b.n	80f2c <udd_ctrl_in_sent+0x84>
	if (cpu_irq_is_enabled_flags(flags))
   80fdc:	b128      	cbz	r0, 80fea <udd_ctrl_in_sent+0x142>
		cpu_irq_enable();
   80fde:	2201      	movs	r2, #1
   80fe0:	4b04      	ldr	r3, [pc, #16]	; (80ff4 <udd_ctrl_in_sent+0x14c>)
   80fe2:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   80fe4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fe8:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80fea:	2204      	movs	r2, #4
   80fec:	4b03      	ldr	r3, [pc, #12]	; (80ffc <udd_ctrl_in_sent+0x154>)
   80fee:	701a      	strb	r2, [r3, #0]
}
   80ff0:	b005      	add	sp, #20
   80ff2:	bd30      	pop	{r4, r5, pc}
   80ff4:	200701d8 	.word	0x200701d8
   80ff8:	400ac220 	.word	0x400ac220
   80ffc:	20070d0c 	.word	0x20070d0c
   81000:	20070d08 	.word	0x20070d08
   81004:	20070e0c 	.word	0x20070e0c
   81008:	20070d0a 	.word	0x20070d0a
   8100c:	20070d04 	.word	0x20070d04
   81010:	400ac130 	.word	0x400ac130
   81014:	20180000 	.word	0x20180000
   81018:	400ac160 	.word	0x400ac160
   8101c:	00080e99 	.word	0x00080e99
   81020:	00080dd1 	.word	0x00080dd1

00081024 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, bool b_abort, uint8_t ep_num)
{
	if (ptr_job->busy == false) {
   81024:	7d03      	ldrb	r3, [r0, #20]
   81026:	f013 0f01 	tst.w	r3, #1
   8102a:	d013      	beq.n	81054 <udd_ep_finish_job+0x30>
{
   8102c:	b510      	push	{r4, lr}
   8102e:	460c      	mov	r4, r1
		return; // No on-going job
	}
	dbg_print("(JobE%x:%d) ", (ptr_job-udd_ep_job)+1, b_abort);
	ptr_job->busy = false;
   81030:	7d03      	ldrb	r3, [r0, #20]
   81032:	f36f 0300 	bfc	r3, #0, #1
   81036:	7503      	strb	r3, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   81038:	6803      	ldr	r3, [r0, #0]
   8103a:	b153      	cbz	r3, 81052 <udd_ep_finish_job+0x2e>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_in(ep_num)) {
   8103c:	4906      	ldr	r1, [pc, #24]	; (81058 <udd_ep_finish_job+0x34>)
   8103e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
   81042:	f411 7f80 	tst.w	r1, #256	; 0x100
		ep_num |= USB_EP_DIR_IN;
   81046:	bf18      	it	ne
   81048:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8104c:	6881      	ldr	r1, [r0, #8]
   8104e:	4620      	mov	r0, r4
   81050:	4798      	blx	r3
   81052:	bd10      	pop	{r4, pc}
   81054:	4770      	bx	lr
   81056:	bf00      	nop
   81058:	400ac100 	.word	0x400ac100

0008105c <udd_ep_trans_done>:
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   8105c:	1e43      	subs	r3, r0, #1

	if (!ptr_job->busy) {
   8105e:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81062:	4a5f      	ldr	r2, [pc, #380]	; (811e0 <udd_ep_trans_done+0x184>)
   81064:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81068:	7d12      	ldrb	r2, [r2, #20]
   8106a:	f012 0f01 	tst.w	r2, #1
   8106e:	f000 80b5 	beq.w	811dc <udd_ep_trans_done+0x180>
{
   81072:	b5f0      	push	{r4, r5, r6, r7, lr}
   81074:	b083      	sub	sp, #12
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   81076:	460a      	mov	r2, r1
   81078:	4959      	ldr	r1, [pc, #356]	; (811e0 <udd_ep_trans_done+0x184>)
   8107a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8107e:	68d1      	ldr	r1, [r2, #12]
   81080:	6892      	ldr	r2, [r2, #8]
   81082:	4291      	cmp	r1, r2
   81084:	d077      	beq.n	81176 <udd_ep_trans_done+0x11a>
		// Need to send or receiv other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   81086:	1a52      	subs	r2, r2, r1

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   81088:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to tranfer the maximum
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(next_trans);
   8108c:	bf92      	itee	ls
   8108e:	0417      	lslls	r7, r2, #16
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   81090:	f44f 3280 	movhi.w	r2, #65536	; 0x10000
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
   81094:	2700      	movhi	r7, #0
		}
		if (Is_udd_endpoint_in(ep)) {
   81096:	4c53      	ldr	r4, [pc, #332]	; (811e4 <udd_ep_trans_done+0x188>)
   81098:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   8109c:	f415 7f80 	tst.w	r5, #256	; 0x100
   810a0:	d014      	beq.n	810cc <udd_ep_trans_done+0x70>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   810a2:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   810a6:	f3c5 1502 	ubfx	r5, r5, #4, #3
   810aa:	2408      	movs	r4, #8
   810ac:	40ac      	lsls	r4, r5
   810ae:	3c01      	subs	r4, #1
   810b0:	4214      	tst	r4, r2
   810b2:	d013      	beq.n	810dc <udd_ep_trans_done+0x80>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_B_EN;
   810b4:	f047 0708 	orr.w	r7, r7, #8
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   810b8:	eb03 0443 	add.w	r4, r3, r3, lsl #1
   810bc:	4d48      	ldr	r5, [pc, #288]	; (811e0 <udd_ep_trans_done+0x184>)
   810be:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
   810c2:	7d25      	ldrb	r5, [r4, #20]
   810c4:	f36f 0541 	bfc	r5, #1, #1
   810c8:	7525      	strb	r5, [r4, #20]
   810ca:	e007      	b.n	810dc <udd_ep_trans_done+0x80>
			}
		} else {
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   810cc:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   810d0:	f3c5 25c1 	ubfx	r5, r5, #11, #2
   810d4:	2d01      	cmp	r5, #1
   810d6:	d037      	beq.n	81148 <udd_ep_trans_done+0xec>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {

				// Enable short packet reception
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_TR_IT
   810d8:	f047 0714 	orr.w	r7, r7, #20
						| UOTGHS_DEVDMACONTROL_END_TR_EN;
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   810dc:	4c42      	ldr	r4, [pc, #264]	; (811e8 <udd_ep_trans_done+0x18c>)
   810de:	eb04 1400 	add.w	r4, r4, r0, lsl #4
   810e2:	eb03 0543 	add.w	r5, r3, r3, lsl #1
   810e6:	4e3e      	ldr	r6, [pc, #248]	; (811e0 <udd_ep_trans_done+0x184>)
   810e8:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   810ec:	686d      	ldr	r5, [r5, #4]
   810ee:	4429      	add	r1, r5
   810f0:	6061      	str	r1, [r4, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   810f2:	f3ef 8110 	mrs	r1, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   810f6:	fab1 f181 	clz	r1, r1
   810fa:	0949      	lsrs	r1, r1, #5
   810fc:	9101      	str	r1, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   810fe:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81100:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81104:	2500      	movs	r5, #0
   81106:	4939      	ldr	r1, [pc, #228]	; (811ec <udd_ep_trans_done+0x190>)
   81108:	700d      	strb	r5, [r1, #0]
	return flags;
   8110a:	9d01      	ldr	r5, [sp, #4]


		// Disable IRQs to have a short sequence
		// between read of EOT_STA and DMA enable
		flags = cpu_irq_save();
		if (!(udd_endpoint_dma_get_status(ep)
   8110c:	68e1      	ldr	r1, [r4, #12]
   8110e:	f011 0f10 	tst.w	r1, #16
   81112:	d122      	bne.n	8115a <udd_ep_trans_done+0xfe>
		udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_BUFFIT |
   81114:	f047 0721 	orr.w	r7, r7, #33	; 0x21
				& UOTGHS_DEVDMASTATUS_END_TR_ST)) {
			dbg_print("dmaS%x ", ep);
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   81118:	60a7      	str	r7, [r4, #8]
			ptr_job->buf_cnt += next_trans;
   8111a:	eb03 0043 	add.w	r0, r3, r3, lsl #1
   8111e:	eb06 01c0 	add.w	r1, r6, r0, lsl #3
   81122:	68c8      	ldr	r0, [r1, #12]
   81124:	4410      	add	r0, r2
   81126:	60c8      	str	r0, [r1, #12]
			ptr_job->buf_load = next_trans;
   81128:	610a      	str	r2, [r1, #16]
			udd_enable_endpoint_dma_interrupt(ep);
   8112a:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   8112e:	fa00 f303 	lsl.w	r3, r0, r3
   81132:	4a2f      	ldr	r2, [pc, #188]	; (811f0 <udd_ep_trans_done+0x194>)
   81134:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81136:	2d00      	cmp	r5, #0
   81138:	d04e      	beq.n	811d8 <udd_ep_trans_done+0x17c>
		cpu_irq_enable();
   8113a:	2201      	movs	r2, #1
   8113c:	4b2b      	ldr	r3, [pc, #172]	; (811ec <udd_ep_trans_done+0x190>)
   8113e:	701a      	strb	r2, [r3, #0]
   81140:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81144:	b662      	cpsie	i
   81146:	e047      	b.n	811d8 <udd_ep_trans_done+0x17c>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   81148:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   8114c:	f3c5 1502 	ubfx	r5, r5, #4, #3
   81150:	2408      	movs	r4, #8
   81152:	40ac      	lsls	r4, r5
   81154:	42a2      	cmp	r2, r4
   81156:	d8c1      	bhi.n	810dc <udd_ep_trans_done+0x80>
   81158:	e7be      	b.n	810d8 <udd_ep_trans_done+0x7c>
	if (cpu_irq_is_enabled_flags(flags))
   8115a:	b12d      	cbz	r5, 81168 <udd_ep_trans_done+0x10c>
		cpu_irq_enable();
   8115c:	2101      	movs	r1, #1
   8115e:	4a23      	ldr	r2, [pc, #140]	; (811ec <udd_ep_trans_done+0x190>)
   81160:	7011      	strb	r1, [r2, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81162:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81166:	b662      	cpsie	i
		cpu_irq_restore(flags);

		// Here a ZLP has been recieved
		// and the DMA transfer must be not started.
		// It is the end of transfer
		ptr_job->buf_size = ptr_job->buf_cnt;
   81168:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   8116c:	491c      	ldr	r1, [pc, #112]	; (811e0 <udd_ep_trans_done+0x184>)
   8116e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81172:	68d1      	ldr	r1, [r2, #12]
   81174:	6091      	str	r1, [r2, #8]
	}
	if (Is_udd_endpoint_in(ep)) {
   81176:	4a1b      	ldr	r2, [pc, #108]	; (811e4 <udd_ep_trans_done+0x188>)
   81178:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
   8117c:	f412 7f80 	tst.w	r2, #256	; 0x100
   81180:	d021      	beq.n	811c6 <udd_ep_trans_done+0x16a>
		if (ptr_job->b_shortpacket) {
   81182:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81186:	4916      	ldr	r1, [pc, #88]	; (811e0 <udd_ep_trans_done+0x184>)
   81188:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8118c:	7d12      	ldrb	r2, [r2, #20]
   8118e:	f012 0f02 	tst.w	r2, #2
   81192:	d018      	beq.n	811c6 <udd_ep_trans_done+0x16a>
			dbg_print("zlpS%x ", ep);
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_ack_in_send(ep);
   81194:	2201      	movs	r2, #1
   81196:	4b17      	ldr	r3, [pc, #92]	; (811f4 <udd_ep_trans_done+0x198>)
   81198:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			if (Is_udd_write_enabled(ep)) {
   8119c:	3b30      	subs	r3, #48	; 0x30
   8119e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   811a2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
				// Force interrupt in case of ep already free
				udd_raise_in_send(ep);
   811a6:	bf1c      	itt	ne
   811a8:	4b13      	ldrne	r3, [pc, #76]	; (811f8 <udd_ep_trans_done+0x19c>)
   811aa:	f843 2020 	strne.w	r2, [r3, r0, lsl #2]
			}
			udd_enable_in_send_interrupt(ep);
   811ae:	2201      	movs	r2, #1
   811b0:	4b12      	ldr	r3, [pc, #72]	; (811fc <udd_ep_trans_done+0x1a0>)
   811b2:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			udd_enable_endpoint_interrupt(ep);
   811b6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   811ba:	fa02 f000 	lsl.w	r0, r2, r0
   811be:	f5a3 73f8 	sub.w	r3, r3, #496	; 0x1f0
   811c2:	6198      	str	r0, [r3, #24]
			return;
   811c4:	e008      	b.n	811d8 <udd_ep_trans_done+0x17c>
   811c6:	4602      	mov	r2, r0
	ptr_job = &udd_ep_job[ep - 1];
   811c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
		}
	}
	dbg_print("dmaE ");
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
   811cc:	2100      	movs	r1, #0
   811ce:	4804      	ldr	r0, [pc, #16]	; (811e0 <udd_ep_trans_done+0x184>)
   811d0:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
   811d4:	4b0a      	ldr	r3, [pc, #40]	; (81200 <udd_ep_trans_done+0x1a4>)
   811d6:	4798      	blx	r3
}
   811d8:	b003      	add	sp, #12
   811da:	bdf0      	pop	{r4, r5, r6, r7, pc}
   811dc:	4770      	bx	lr
   811de:	bf00      	nop
   811e0:	20070d10 	.word	0x20070d10
   811e4:	400ac100 	.word	0x400ac100
   811e8:	400ac300 	.word	0x400ac300
   811ec:	200701d8 	.word	0x200701d8
   811f0:	400ac000 	.word	0x400ac000
   811f4:	400ac160 	.word	0x400ac160
   811f8:	400ac190 	.word	0x400ac190
   811fc:	400ac1f0 	.word	0x400ac1f0
   81200:	00081025 	.word	0x00081025

00081204 <udd_sleep_mode>:
{
   81204:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
   81206:	4601      	mov	r1, r0
   81208:	bb28      	cbnz	r0, 81256 <udd_sleep_mode+0x52>
   8120a:	4b24      	ldr	r3, [pc, #144]	; (8129c <udd_sleep_mode+0x98>)
   8120c:	781b      	ldrb	r3, [r3, #0]
   8120e:	b91b      	cbnz	r3, 81218 <udd_sleep_mode+0x14>
	udd_b_idle = b_idle;
   81210:	4b22      	ldr	r3, [pc, #136]	; (8129c <udd_sleep_mode+0x98>)
   81212:	7019      	strb	r1, [r3, #0]
}
   81214:	b002      	add	sp, #8
   81216:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
   81218:	4b21      	ldr	r3, [pc, #132]	; (812a0 <udd_sleep_mode+0x9c>)
   8121a:	789b      	ldrb	r3, [r3, #2]
   8121c:	b903      	cbnz	r3, 81220 <udd_sleep_mode+0x1c>
   8121e:	e7fe      	b.n	8121e <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81220:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81224:	fab3 f383 	clz	r3, r3
   81228:	095b      	lsrs	r3, r3, #5
   8122a:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   8122c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8122e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81232:	2200      	movs	r2, #0
   81234:	4b1b      	ldr	r3, [pc, #108]	; (812a4 <udd_sleep_mode+0xa0>)
   81236:	701a      	strb	r2, [r3, #0]
	return flags;
   81238:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
   8123a:	4a19      	ldr	r2, [pc, #100]	; (812a0 <udd_sleep_mode+0x9c>)
   8123c:	7893      	ldrb	r3, [r2, #2]
   8123e:	3b01      	subs	r3, #1
   81240:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81242:	2800      	cmp	r0, #0
   81244:	d0e4      	beq.n	81210 <udd_sleep_mode+0xc>
		cpu_irq_enable();
   81246:	2201      	movs	r2, #1
   81248:	4b16      	ldr	r3, [pc, #88]	; (812a4 <udd_sleep_mode+0xa0>)
   8124a:	701a      	strb	r2, [r3, #0]
   8124c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81250:	b662      	cpsie	i
   81252:	e7dd      	b.n	81210 <udd_sleep_mode+0xc>
   81254:	e7fe      	b.n	81254 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
   81256:	4b11      	ldr	r3, [pc, #68]	; (8129c <udd_sleep_mode+0x98>)
   81258:	781b      	ldrb	r3, [r3, #0]
   8125a:	2b00      	cmp	r3, #0
   8125c:	d1d8      	bne.n	81210 <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
   8125e:	4b10      	ldr	r3, [pc, #64]	; (812a0 <udd_sleep_mode+0x9c>)
   81260:	789b      	ldrb	r3, [r3, #2]
   81262:	2bff      	cmp	r3, #255	; 0xff
   81264:	d0f6      	beq.n	81254 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81266:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8126a:	fab3 f383 	clz	r3, r3
   8126e:	095b      	lsrs	r3, r3, #5
   81270:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81272:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81274:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81278:	2200      	movs	r2, #0
   8127a:	4b0a      	ldr	r3, [pc, #40]	; (812a4 <udd_sleep_mode+0xa0>)
   8127c:	701a      	strb	r2, [r3, #0]
	return flags;
   8127e:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
   81280:	4a07      	ldr	r2, [pc, #28]	; (812a0 <udd_sleep_mode+0x9c>)
   81282:	7893      	ldrb	r3, [r2, #2]
   81284:	3301      	adds	r3, #1
   81286:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81288:	2800      	cmp	r0, #0
   8128a:	d0c1      	beq.n	81210 <udd_sleep_mode+0xc>
		cpu_irq_enable();
   8128c:	2201      	movs	r2, #1
   8128e:	4b05      	ldr	r3, [pc, #20]	; (812a4 <udd_sleep_mode+0xa0>)
   81290:	701a      	strb	r2, [r3, #0]
   81292:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81296:	b662      	cpsie	i
   81298:	e7ba      	b.n	81210 <udd_sleep_mode+0xc>
   8129a:	bf00      	nop
   8129c:	20070d05 	.word	0x20070d05
   812a0:	20070e04 	.word	0x20070e04
   812a4:	200701d8 	.word	0x200701d8

000812a8 <udd_enable>:
{
   812a8:	b510      	push	{r4, lr}
   812aa:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   812ac:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   812b0:	fab3 f383 	clz	r3, r3
   812b4:	095b      	lsrs	r3, r3, #5
   812b6:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   812b8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   812ba:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   812be:	2200      	movs	r2, #0
   812c0:	4b54      	ldr	r3, [pc, #336]	; (81414 <udd_enable+0x16c>)
   812c2:	701a      	strb	r2, [r3, #0]
	return flags;
   812c4:	9c00      	ldr	r4, [sp, #0]
	pmc_enable_periph_clk(ID_UOTGHS);
   812c6:	2028      	movs	r0, #40	; 0x28
   812c8:	4b53      	ldr	r3, [pc, #332]	; (81418 <udd_enable+0x170>)
   812ca:	4798      	blx	r3
	sysclk_enable_usb();
   812cc:	4b53      	ldr	r3, [pc, #332]	; (8141c <udd_enable+0x174>)
   812ce:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   812d0:	4b53      	ldr	r3, [pc, #332]	; (81420 <udd_enable+0x178>)
   812d2:	2250      	movs	r2, #80	; 0x50
   812d4:	f883 2328 	strb.w	r2, [r3, #808]	; 0x328
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   812d8:	f44f 7280 	mov.w	r2, #256	; 0x100
   812dc:	605a      	str	r2, [r3, #4]
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   812de:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   812e2:	4b50      	ldr	r3, [pc, #320]	; (81424 <udd_enable+0x17c>)
   812e4:	4798      	blx	r3
	otg_disable_id_pin();
   812e6:	4b50      	ldr	r3, [pc, #320]	; (81428 <udd_enable+0x180>)
   812e8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812ec:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   812f0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_force_device_mode();
   812f4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812f8:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   812fc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
   81300:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81304:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   81308:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable_pad();
   8130c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81310:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   81314:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable();
   81318:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   8131c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   81320:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_low_speed_disable();
   81324:	681a      	ldr	r2, [r3, #0]
   81326:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
   8132a:	601a      	str	r2, [r3, #0]
	udd_high_speed_disable();
   8132c:	681a      	ldr	r2, [r3, #0]
   8132e:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
   81332:	601a      	str	r2, [r3, #0]
	otg_unfreeze_clock();
   81334:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81338:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   8133c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   81340:	461a      	mov	r2, r3
   81342:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81346:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   8134a:	d0fa      	beq.n	81342 <udd_enable+0x9a>
		udd_ep_job[i].busy = false;
   8134c:	4b37      	ldr	r3, [pc, #220]	; (8142c <udd_enable+0x184>)
   8134e:	7d1a      	ldrb	r2, [r3, #20]
		udd_ep_job[i].stall_requested = false;
   81350:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81354:	f36f 0282 	bfc	r2, #2, #1
   81358:	751a      	strb	r2, [r3, #20]
		udd_ep_job[i].busy = false;
   8135a:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].stall_requested = false;
   8135e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81362:	f36f 0282 	bfc	r2, #2, #1
   81366:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].busy = false;
   8136a:	f893 2044 	ldrb.w	r2, [r3, #68]	; 0x44
		udd_ep_job[i].stall_requested = false;
   8136e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81372:	f36f 0282 	bfc	r2, #2, #1
   81376:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
	otg_ack_vbus_transition();
   8137a:	4b2b      	ldr	r3, [pc, #172]	; (81428 <udd_enable+0x180>)
   8137c:	2202      	movs	r2, #2
   8137e:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
	if (Is_otg_vbus_high()) {
   81382:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81386:	f413 6f00 	tst.w	r3, #2048	; 0x800
		otg_raise_vbus_transition();
   8138a:	bf1c      	itt	ne
   8138c:	4b26      	ldrne	r3, [pc, #152]	; (81428 <udd_enable+0x180>)
   8138e:	f8c3 280c 	strne.w	r2, [r3, #2060]	; 0x80c
	otg_enable_vbus_interrupt();
   81392:	4b25      	ldr	r3, [pc, #148]	; (81428 <udd_enable+0x180>)
   81394:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81398:	f042 0202 	orr.w	r2, r2, #2
   8139c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_freeze_clock();
   813a0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   813a4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   813a8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (!udd_b_sleep_initialized) {
   813ac:	4b20      	ldr	r3, [pc, #128]	; (81430 <udd_enable+0x188>)
   813ae:	781b      	ldrb	r3, [r3, #0]
   813b0:	bb1b      	cbnz	r3, 813fa <udd_enable+0x152>
		udd_b_sleep_initialized = true;
   813b2:	2201      	movs	r2, #1
   813b4:	4b1e      	ldr	r3, [pc, #120]	; (81430 <udd_enable+0x188>)
   813b6:	701a      	strb	r2, [r3, #0]
		udd_b_idle = false;
   813b8:	2200      	movs	r2, #0
   813ba:	4b1e      	ldr	r3, [pc, #120]	; (81434 <udd_enable+0x18c>)
   813bc:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
   813be:	4b1e      	ldr	r3, [pc, #120]	; (81438 <udd_enable+0x190>)
   813c0:	78db      	ldrb	r3, [r3, #3]
   813c2:	2bff      	cmp	r3, #255	; 0xff
   813c4:	d018      	beq.n	813f8 <udd_enable+0x150>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   813c6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   813ca:	fab3 f383 	clz	r3, r3
   813ce:	095b      	lsrs	r3, r3, #5
   813d0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   813d2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   813d4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   813d8:	2200      	movs	r2, #0
   813da:	4b0e      	ldr	r3, [pc, #56]	; (81414 <udd_enable+0x16c>)
   813dc:	701a      	strb	r2, [r3, #0]
	return flags;
   813de:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
   813e0:	4a15      	ldr	r2, [pc, #84]	; (81438 <udd_enable+0x190>)
   813e2:	78d3      	ldrb	r3, [r2, #3]
   813e4:	3301      	adds	r3, #1
   813e6:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   813e8:	b151      	cbz	r1, 81400 <udd_enable+0x158>
		cpu_irq_enable();
   813ea:	2201      	movs	r2, #1
   813ec:	4b09      	ldr	r3, [pc, #36]	; (81414 <udd_enable+0x16c>)
   813ee:	701a      	strb	r2, [r3, #0]
   813f0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813f4:	b662      	cpsie	i
   813f6:	e003      	b.n	81400 <udd_enable+0x158>
   813f8:	e7fe      	b.n	813f8 <udd_enable+0x150>
		udd_sleep_mode(false); // Enter idle mode
   813fa:	2000      	movs	r0, #0
   813fc:	4b0f      	ldr	r3, [pc, #60]	; (8143c <udd_enable+0x194>)
   813fe:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   81400:	b12c      	cbz	r4, 8140e <udd_enable+0x166>
		cpu_irq_enable();
   81402:	2201      	movs	r2, #1
   81404:	4b03      	ldr	r3, [pc, #12]	; (81414 <udd_enable+0x16c>)
   81406:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81408:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8140c:	b662      	cpsie	i
}
   8140e:	b002      	add	sp, #8
   81410:	bd10      	pop	{r4, pc}
   81412:	bf00      	nop
   81414:	200701d8 	.word	0x200701d8
   81418:	000824a5 	.word	0x000824a5
   8141c:	00082141 	.word	0x00082141
   81420:	e000e100 	.word	0xe000e100
   81424:	000824e5 	.word	0x000824e5
   81428:	400ac000 	.word	0x400ac000
   8142c:	20070d10 	.word	0x20070d10
   81430:	20070d06 	.word	0x20070d06
   81434:	20070d05 	.word	0x20070d05
   81438:	20070e04 	.word	0x20070e04
   8143c:	00081205 	.word	0x00081205

00081440 <udd_attach>:
{
   81440:	b530      	push	{r4, r5, lr}
   81442:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81444:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81448:	fab3 f383 	clz	r3, r3
   8144c:	095b      	lsrs	r3, r3, #5
   8144e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81450:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81452:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81456:	2200      	movs	r2, #0
   81458:	4b19      	ldr	r3, [pc, #100]	; (814c0 <udd_attach+0x80>)
   8145a:	701a      	strb	r2, [r3, #0]
	return flags;
   8145c:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
   8145e:	2001      	movs	r0, #1
   81460:	4b18      	ldr	r3, [pc, #96]	; (814c4 <udd_attach+0x84>)
   81462:	4798      	blx	r3
	otg_unfreeze_clock();
   81464:	4a18      	ldr	r2, [pc, #96]	; (814c8 <udd_attach+0x88>)
   81466:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   8146a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   8146e:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   81472:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81476:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   8147a:	d0fa      	beq.n	81472 <udd_attach+0x32>
	udd_attach_device();
   8147c:	4b12      	ldr	r3, [pc, #72]	; (814c8 <udd_attach+0x88>)
   8147e:	681a      	ldr	r2, [r3, #0]
   81480:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   81484:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   81486:	2508      	movs	r5, #8
   81488:	619d      	str	r5, [r3, #24]
	udd_enable_suspend_interrupt();
   8148a:	2101      	movs	r1, #1
   8148c:	6199      	str	r1, [r3, #24]
	udd_enable_wake_up_interrupt();
   8148e:	2210      	movs	r2, #16
   81490:	619a      	str	r2, [r3, #24]
	udd_enable_sof_interrupt();
   81492:	2004      	movs	r0, #4
   81494:	6198      	str	r0, [r3, #24]
	udd_ack_reset();
   81496:	609d      	str	r5, [r3, #8]
	udd_ack_sof();
   81498:	6098      	str	r0, [r3, #8]
	udd_ack_msof();
   8149a:	2002      	movs	r0, #2
   8149c:	6098      	str	r0, [r3, #8]
	udd_raise_suspend();
   8149e:	60d9      	str	r1, [r3, #12]
	udd_ack_wake_up();
   814a0:	609a      	str	r2, [r3, #8]
	otg_freeze_clock();
   814a2:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814a6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   814aa:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (cpu_irq_is_enabled_flags(flags))
   814ae:	b124      	cbz	r4, 814ba <udd_attach+0x7a>
		cpu_irq_enable();
   814b0:	4b03      	ldr	r3, [pc, #12]	; (814c0 <udd_attach+0x80>)
   814b2:	7019      	strb	r1, [r3, #0]
   814b4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   814b8:	b662      	cpsie	i
}
   814ba:	b003      	add	sp, #12
   814bc:	bd30      	pop	{r4, r5, pc}
   814be:	bf00      	nop
   814c0:	200701d8 	.word	0x200701d8
   814c4:	00081205 	.word	0x00081205
   814c8:	400ac000 	.word	0x400ac000

000814cc <udd_detach>:
{
   814cc:	b508      	push	{r3, lr}
	otg_unfreeze_clock();
   814ce:	4b0a      	ldr	r3, [pc, #40]	; (814f8 <udd_detach+0x2c>)
   814d0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814d4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   814d8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_detach_device();
   814dc:	681a      	ldr	r2, [r3, #0]
   814de:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   814e2:	601a      	str	r2, [r3, #0]
	otg_freeze_clock();
   814e4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814e8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   814ec:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_sleep_mode(false);
   814f0:	2000      	movs	r0, #0
   814f2:	4b02      	ldr	r3, [pc, #8]	; (814fc <udd_detach+0x30>)
   814f4:	4798      	blx	r3
   814f6:	bd08      	pop	{r3, pc}
   814f8:	400ac000 	.word	0x400ac000
   814fc:	00081205 	.word	0x00081205

00081500 <UOTGHS_Handler>:
{
   81500:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   81504:	b085      	sub	sp, #20
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   81506:	4b9a      	ldr	r3, [pc, #616]	; (81770 <UOTGHS_Handler+0x270>)
   81508:	4798      	blx	r3
   8150a:	b920      	cbnz	r0, 81516 <UOTGHS_Handler+0x16>
   8150c:	4b99      	ldr	r3, [pc, #612]	; (81774 <UOTGHS_Handler+0x274>)
   8150e:	685b      	ldr	r3, [r3, #4]
   81510:	f013 0f01 	tst.w	r3, #1
   81514:	d00f      	beq.n	81536 <UOTGHS_Handler+0x36>
	if (Is_udd_sof()) {
   81516:	4b97      	ldr	r3, [pc, #604]	; (81774 <UOTGHS_Handler+0x274>)
   81518:	685b      	ldr	r3, [r3, #4]
   8151a:	f013 0f04 	tst.w	r3, #4
   8151e:	d014      	beq.n	8154a <UOTGHS_Handler+0x4a>
		udd_ack_sof();
   81520:	4b94      	ldr	r3, [pc, #592]	; (81774 <UOTGHS_Handler+0x274>)
   81522:	2204      	movs	r2, #4
   81524:	609a      	str	r2, [r3, #8]
		if (Is_udd_full_speed_mode()) {
   81526:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   8152a:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   8152e:	d009      	beq.n	81544 <UOTGHS_Handler+0x44>
}
   81530:	b005      	add	sp, #20
   81532:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __ASM volatile ("cpsid i" : : : "memory");
   81536:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81538:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   8153c:	2200      	movs	r2, #0
   8153e:	4b8e      	ldr	r3, [pc, #568]	; (81778 <UOTGHS_Handler+0x278>)
   81540:	701a      	strb	r2, [r3, #0]
		return;
   81542:	e7f5      	b.n	81530 <UOTGHS_Handler+0x30>
			udc_sof_notify();
   81544:	4b8d      	ldr	r3, [pc, #564]	; (8177c <UOTGHS_Handler+0x27c>)
   81546:	4798      	blx	r3
   81548:	e7f2      	b.n	81530 <UOTGHS_Handler+0x30>
	if (Is_udd_msof()) {
   8154a:	4b8a      	ldr	r3, [pc, #552]	; (81774 <UOTGHS_Handler+0x274>)
   8154c:	685b      	ldr	r3, [r3, #4]
   8154e:	f013 0f02 	tst.w	r3, #2
   81552:	d133      	bne.n	815bc <UOTGHS_Handler+0xbc>
	if (!Is_udd_endpoint_interrupt(0)) {
   81554:	4b87      	ldr	r3, [pc, #540]	; (81774 <UOTGHS_Handler+0x274>)
   81556:	685b      	ldr	r3, [r3, #4]
   81558:	f413 5f80 	tst.w	r3, #4096	; 0x1000
   8155c:	d026      	beq.n	815ac <UOTGHS_Handler+0xac>
	udd_disable_nak_in_interrupt(0);
   8155e:	4b88      	ldr	r3, [pc, #544]	; (81780 <UOTGHS_Handler+0x280>)
   81560:	2210      	movs	r2, #16
   81562:	601a      	str	r2, [r3, #0]
	udd_disable_nak_out_interrupt(0);
   81564:	2208      	movs	r2, #8
   81566:	601a      	str	r2, [r3, #0]
	if (Is_udd_setup_received(0)) {
   81568:	3bf0      	subs	r3, #240	; 0xf0
   8156a:	681b      	ldr	r3, [r3, #0]
   8156c:	f013 0f04 	tst.w	r3, #4
   81570:	d12a      	bne.n	815c8 <UOTGHS_Handler+0xc8>
	if (Is_udd_in_send(0) && Is_udd_in_send_interrupt_enabled(0)) {
   81572:	4b84      	ldr	r3, [pc, #528]	; (81784 <UOTGHS_Handler+0x284>)
   81574:	681b      	ldr	r3, [r3, #0]
   81576:	f013 0f01 	tst.w	r3, #1
   8157a:	d005      	beq.n	81588 <UOTGHS_Handler+0x88>
   8157c:	4b82      	ldr	r3, [pc, #520]	; (81788 <UOTGHS_Handler+0x288>)
   8157e:	681b      	ldr	r3, [r3, #0]
   81580:	f013 0f01 	tst.w	r3, #1
   81584:	f040 8085 	bne.w	81692 <UOTGHS_Handler+0x192>
	if (Is_udd_out_received(0)) {
   81588:	4b7e      	ldr	r3, [pc, #504]	; (81784 <UOTGHS_Handler+0x284>)
   8158a:	681b      	ldr	r3, [r3, #0]
   8158c:	f013 0f02 	tst.w	r3, #2
   81590:	f040 8082 	bne.w	81698 <UOTGHS_Handler+0x198>
	if (Is_udd_nak_out(0)) {
   81594:	4b7b      	ldr	r3, [pc, #492]	; (81784 <UOTGHS_Handler+0x284>)
   81596:	681b      	ldr	r3, [r3, #0]
   81598:	f013 0f08 	tst.w	r3, #8
   8159c:	f040 8130 	bne.w	81800 <UOTGHS_Handler+0x300>
	if (Is_udd_nak_in(0)) {
   815a0:	4b78      	ldr	r3, [pc, #480]	; (81784 <UOTGHS_Handler+0x284>)
   815a2:	681b      	ldr	r3, [r3, #0]
   815a4:	f013 0f10 	tst.w	r3, #16
   815a8:	f040 813d 	bne.w	81826 <UOTGHS_Handler+0x326>
	for (i = 0; i < nb_data; i++) {
   815ac:	4e77      	ldr	r6, [pc, #476]	; (8178c <UOTGHS_Handler+0x28c>)
   815ae:	2301      	movs	r3, #1
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

#ifdef UDD_EP_DMA_SUPPORTED
		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   815b0:	4a70      	ldr	r2, [pc, #448]	; (81774 <UOTGHS_Handler+0x274>)
   815b2:	f04f 7e00 	mov.w	lr, #33554432	; 0x2000000
				return true;
			}
		}
#endif // UDD_EP_FIFO_SUPPORTED
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   815b6:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
   815ba:	e17f      	b.n	818bc <UOTGHS_Handler+0x3bc>
		udd_ack_msof();
   815bc:	2202      	movs	r2, #2
   815be:	4b6d      	ldr	r3, [pc, #436]	; (81774 <UOTGHS_Handler+0x274>)
   815c0:	609a      	str	r2, [r3, #8]
		udc_sof_notify();
   815c2:	4b6e      	ldr	r3, [pc, #440]	; (8177c <UOTGHS_Handler+0x27c>)
   815c4:	4798      	blx	r3
		goto udd_interrupt_sof_end;
   815c6:	e7b3      	b.n	81530 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   815c8:	4b71      	ldr	r3, [pc, #452]	; (81790 <UOTGHS_Handler+0x290>)
   815ca:	781b      	ldrb	r3, [r3, #0]
   815cc:	2b00      	cmp	r3, #0
   815ce:	d141      	bne.n	81654 <UOTGHS_Handler+0x154>
	if (8 != udd_byte_count(0)) {
   815d0:	4b6c      	ldr	r3, [pc, #432]	; (81784 <UOTGHS_Handler+0x284>)
   815d2:	681b      	ldr	r3, [r3, #0]
   815d4:	f3c3 530a 	ubfx	r3, r3, #20, #11
   815d8:	2b08      	cmp	r3, #8
   815da:	d140      	bne.n	8165e <UOTGHS_Handler+0x15e>
   815dc:	4a6d      	ldr	r2, [pc, #436]	; (81794 <UOTGHS_Handler+0x294>)
   815de:	4b6e      	ldr	r3, [pc, #440]	; (81798 <UOTGHS_Handler+0x298>)
	for (i = 0; i < 8; i++) {
   815e0:	486e      	ldr	r0, [pc, #440]	; (8179c <UOTGHS_Handler+0x29c>)
		((uint8_t*) &udd_g_ctrlreq.req)[i] = *ptr++;
   815e2:	f813 1b01 	ldrb.w	r1, [r3], #1
   815e6:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < 8; i++) {
   815ea:	4283      	cmp	r3, r0
   815ec:	d1f9      	bne.n	815e2 <UOTGHS_Handler+0xe2>
	if (udc_process_setup() == false) {
   815ee:	4b6c      	ldr	r3, [pc, #432]	; (817a0 <UOTGHS_Handler+0x2a0>)
   815f0:	4798      	blx	r3
   815f2:	2800      	cmp	r0, #0
   815f4:	d039      	beq.n	8166a <UOTGHS_Handler+0x16a>
	udd_ack_setup_received(0);
   815f6:	2204      	movs	r2, #4
   815f8:	4b6a      	ldr	r3, [pc, #424]	; (817a4 <UOTGHS_Handler+0x2a4>)
   815fa:	601a      	str	r2, [r3, #0]
	if (Udd_setup_is_in()) {
   815fc:	4b6a      	ldr	r3, [pc, #424]	; (817a8 <UOTGHS_Handler+0x2a8>)
   815fe:	f993 3000 	ldrsb.w	r3, [r3]
   81602:	2b00      	cmp	r3, #0
   81604:	db37      	blt.n	81676 <UOTGHS_Handler+0x176>
		if (0 == udd_g_ctrlreq.req.wLength) {
   81606:	4b68      	ldr	r3, [pc, #416]	; (817a8 <UOTGHS_Handler+0x2a8>)
   81608:	88db      	ldrh	r3, [r3, #6]
   8160a:	2b00      	cmp	r3, #0
   8160c:	d03e      	beq.n	8168c <UOTGHS_Handler+0x18c>
		udd_ctrl_prev_payload_buf_cnt = 0;
   8160e:	2200      	movs	r2, #0
   81610:	4b66      	ldr	r3, [pc, #408]	; (817ac <UOTGHS_Handler+0x2ac>)
   81612:	801a      	strh	r2, [r3, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81614:	4b66      	ldr	r3, [pc, #408]	; (817b0 <UOTGHS_Handler+0x2b0>)
   81616:	801a      	strh	r2, [r3, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81618:	2101      	movs	r1, #1
   8161a:	4b5d      	ldr	r3, [pc, #372]	; (81790 <UOTGHS_Handler+0x290>)
   8161c:	7019      	strb	r1, [r3, #0]
		udd_ack_nak_in(0);
   8161e:	2110      	movs	r1, #16
   81620:	4b60      	ldr	r3, [pc, #384]	; (817a4 <UOTGHS_Handler+0x2a4>)
   81622:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81624:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81628:	fab3 f383 	clz	r3, r3
   8162c:	095b      	lsrs	r3, r3, #5
   8162e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81630:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81632:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81636:	4b50      	ldr	r3, [pc, #320]	; (81778 <UOTGHS_Handler+0x278>)
   81638:	701a      	strb	r2, [r3, #0]
	return flags;
   8163a:	9b01      	ldr	r3, [sp, #4]
		udd_enable_nak_in_interrupt(0);
   8163c:	4a5d      	ldr	r2, [pc, #372]	; (817b4 <UOTGHS_Handler+0x2b4>)
   8163e:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   81640:	2b00      	cmp	r3, #0
   81642:	f43f af75 	beq.w	81530 <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81646:	2201      	movs	r2, #1
   81648:	4b4b      	ldr	r3, [pc, #300]	; (81778 <UOTGHS_Handler+0x278>)
   8164a:	701a      	strb	r2, [r3, #0]
   8164c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81650:	b662      	cpsie	i
   81652:	e76d      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ctrl_endofrequest();
   81654:	4b58      	ldr	r3, [pc, #352]	; (817b8 <UOTGHS_Handler+0x2b8>)
   81656:	4798      	blx	r3
		udd_ctrl_init();
   81658:	4b58      	ldr	r3, [pc, #352]	; (817bc <UOTGHS_Handler+0x2bc>)
   8165a:	4798      	blx	r3
   8165c:	e7b8      	b.n	815d0 <UOTGHS_Handler+0xd0>
		udd_ctrl_stall_data();
   8165e:	4b58      	ldr	r3, [pc, #352]	; (817c0 <UOTGHS_Handler+0x2c0>)
   81660:	4798      	blx	r3
		udd_ack_setup_received(0);
   81662:	2204      	movs	r2, #4
   81664:	4b4f      	ldr	r3, [pc, #316]	; (817a4 <UOTGHS_Handler+0x2a4>)
   81666:	601a      	str	r2, [r3, #0]
   81668:	e762      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ctrl_stall_data();
   8166a:	4b55      	ldr	r3, [pc, #340]	; (817c0 <UOTGHS_Handler+0x2c0>)
   8166c:	4798      	blx	r3
		udd_ack_setup_received(0);
   8166e:	2204      	movs	r2, #4
   81670:	4b4c      	ldr	r3, [pc, #304]	; (817a4 <UOTGHS_Handler+0x2a4>)
   81672:	601a      	str	r2, [r3, #0]
   81674:	e75c      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81676:	2300      	movs	r3, #0
   81678:	4a4c      	ldr	r2, [pc, #304]	; (817ac <UOTGHS_Handler+0x2ac>)
   8167a:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_buf_cnt = 0;
   8167c:	4a4c      	ldr	r2, [pc, #304]	; (817b0 <UOTGHS_Handler+0x2b0>)
   8167e:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   81680:	2202      	movs	r2, #2
   81682:	4b43      	ldr	r3, [pc, #268]	; (81790 <UOTGHS_Handler+0x290>)
   81684:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   81686:	4b4f      	ldr	r3, [pc, #316]	; (817c4 <UOTGHS_Handler+0x2c4>)
   81688:	4798      	blx	r3
   8168a:	e751      	b.n	81530 <UOTGHS_Handler+0x30>
			udd_ctrl_send_zlp_in();
   8168c:	4b4e      	ldr	r3, [pc, #312]	; (817c8 <UOTGHS_Handler+0x2c8>)
   8168e:	4798      	blx	r3
   81690:	e74e      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ctrl_in_sent();
   81692:	4b4c      	ldr	r3, [pc, #304]	; (817c4 <UOTGHS_Handler+0x2c4>)
   81694:	4798      	blx	r3
   81696:	e74b      	b.n	81530 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81698:	4b3d      	ldr	r3, [pc, #244]	; (81790 <UOTGHS_Handler+0x290>)
   8169a:	781b      	ldrb	r3, [r3, #0]
   8169c:	2b01      	cmp	r3, #1
   8169e:	d00b      	beq.n	816b8 <UOTGHS_Handler+0x1b8>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   816a0:	2b02      	cmp	r3, #2
   816a2:	d004      	beq.n	816ae <UOTGHS_Handler+0x1ae>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   816a4:	2b04      	cmp	r3, #4
   816a6:	d002      	beq.n	816ae <UOTGHS_Handler+0x1ae>
			udd_ctrl_stall_data();
   816a8:	4b45      	ldr	r3, [pc, #276]	; (817c0 <UOTGHS_Handler+0x2c0>)
   816aa:	4798      	blx	r3
   816ac:	e001      	b.n	816b2 <UOTGHS_Handler+0x1b2>
			udd_ctrl_endofrequest();
   816ae:	4b42      	ldr	r3, [pc, #264]	; (817b8 <UOTGHS_Handler+0x2b8>)
   816b0:	4798      	blx	r3
		udd_ctrl_init();
   816b2:	4b42      	ldr	r3, [pc, #264]	; (817bc <UOTGHS_Handler+0x2bc>)
   816b4:	4798      	blx	r3
   816b6:	e73b      	b.n	81530 <UOTGHS_Handler+0x30>
	nb_data = udd_byte_count(0);
   816b8:	4b32      	ldr	r3, [pc, #200]	; (81784 <UOTGHS_Handler+0x284>)
   816ba:	6818      	ldr	r0, [r3, #0]
   816bc:	f3c0 500a 	ubfx	r0, r0, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   816c0:	4b39      	ldr	r3, [pc, #228]	; (817a8 <UOTGHS_Handler+0x2a8>)
   816c2:	899b      	ldrh	r3, [r3, #12]
   816c4:	4a3a      	ldr	r2, [pc, #232]	; (817b0 <UOTGHS_Handler+0x2b0>)
   816c6:	8814      	ldrh	r4, [r2, #0]
   816c8:	1822      	adds	r2, r4, r0
   816ca:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   816cc:	bfbc      	itt	lt
   816ce:	1b1b      	sublt	r3, r3, r4
   816d0:	b298      	uxthlt	r0, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   816d2:	4b35      	ldr	r3, [pc, #212]	; (817a8 <UOTGHS_Handler+0x2a8>)
   816d4:	689a      	ldr	r2, [r3, #8]
	for (i = 0; i < nb_data; i++) {
   816d6:	b178      	cbz	r0, 816f8 <UOTGHS_Handler+0x1f8>
   816d8:	1e63      	subs	r3, r4, #1
   816da:	441a      	add	r2, r3
   816dc:	4b2e      	ldr	r3, [pc, #184]	; (81798 <UOTGHS_Handler+0x298>)
		*ptr_dest++ = *ptr_src++;
   816de:	f813 1b01 	ldrb.w	r1, [r3], #1
   816e2:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < nb_data; i++) {
   816e6:	b2d9      	uxtb	r1, r3
   816e8:	4281      	cmp	r1, r0
   816ea:	d3f8      	bcc.n	816de <UOTGHS_Handler+0x1de>
	udd_ctrl_payload_buf_cnt += nb_data;
   816ec:	4404      	add	r4, r0
   816ee:	b2a4      	uxth	r4, r4
   816f0:	4b2f      	ldr	r3, [pc, #188]	; (817b0 <UOTGHS_Handler+0x2b0>)
   816f2:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   816f4:	2840      	cmp	r0, #64	; 0x40
   816f6:	d00c      	beq.n	81712 <UOTGHS_Handler+0x212>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   816f8:	4b2b      	ldr	r3, [pc, #172]	; (817a8 <UOTGHS_Handler+0x2a8>)
   816fa:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   816fc:	695b      	ldr	r3, [r3, #20]
   816fe:	b113      	cbz	r3, 81706 <UOTGHS_Handler+0x206>
			if (!udd_g_ctrlreq.over_under_run()) {
   81700:	4798      	blx	r3
   81702:	2800      	cmp	r0, #0
   81704:	d02e      	beq.n	81764 <UOTGHS_Handler+0x264>
		udd_ack_out_received(0);
   81706:	2202      	movs	r2, #2
   81708:	4b26      	ldr	r3, [pc, #152]	; (817a4 <UOTGHS_Handler+0x2a4>)
   8170a:	601a      	str	r2, [r3, #0]
		udd_ctrl_send_zlp_in();
   8170c:	4b2e      	ldr	r3, [pc, #184]	; (817c8 <UOTGHS_Handler+0x2c8>)
   8170e:	4798      	blx	r3
   81710:	e70e      	b.n	81530 <UOTGHS_Handler+0x30>
			|| (udd_g_ctrlreq.req.wLength <=
   81712:	4b25      	ldr	r3, [pc, #148]	; (817a8 <UOTGHS_Handler+0x2a8>)
   81714:	88da      	ldrh	r2, [r3, #6]
					(udd_ctrl_prev_payload_buf_cnt +
   81716:	4b25      	ldr	r3, [pc, #148]	; (817ac <UOTGHS_Handler+0x2ac>)
   81718:	881b      	ldrh	r3, [r3, #0]
   8171a:	4423      	add	r3, r4
			|| (udd_g_ctrlreq.req.wLength <=
   8171c:	429a      	cmp	r2, r3
   8171e:	ddeb      	ble.n	816f8 <UOTGHS_Handler+0x1f8>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   81720:	4b21      	ldr	r3, [pc, #132]	; (817a8 <UOTGHS_Handler+0x2a8>)
   81722:	899b      	ldrh	r3, [r3, #12]
   81724:	42a3      	cmp	r3, r4
   81726:	d051      	beq.n	817cc <UOTGHS_Handler+0x2cc>
	udd_ack_out_received(0);
   81728:	4b1e      	ldr	r3, [pc, #120]	; (817a4 <UOTGHS_Handler+0x2a4>)
   8172a:	2202      	movs	r2, #2
   8172c:	601a      	str	r2, [r3, #0]
	udd_ack_nak_in(0);
   8172e:	2210      	movs	r2, #16
   81730:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81732:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81736:	fab3 f383 	clz	r3, r3
   8173a:	095b      	lsrs	r3, r3, #5
   8173c:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   8173e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81740:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81744:	2100      	movs	r1, #0
   81746:	4b0c      	ldr	r3, [pc, #48]	; (81778 <UOTGHS_Handler+0x278>)
   81748:	7019      	strb	r1, [r3, #0]
	return flags;
   8174a:	9b02      	ldr	r3, [sp, #8]
	udd_enable_nak_in_interrupt(0);
   8174c:	4919      	ldr	r1, [pc, #100]	; (817b4 <UOTGHS_Handler+0x2b4>)
   8174e:	600a      	str	r2, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   81750:	2b00      	cmp	r3, #0
   81752:	f43f aeed 	beq.w	81530 <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81756:	2201      	movs	r2, #1
   81758:	4b07      	ldr	r3, [pc, #28]	; (81778 <UOTGHS_Handler+0x278>)
   8175a:	701a      	strb	r2, [r3, #0]
   8175c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81760:	b662      	cpsie	i
   81762:	e6e5      	b.n	81530 <UOTGHS_Handler+0x30>
				udd_ctrl_stall_data();
   81764:	4b16      	ldr	r3, [pc, #88]	; (817c0 <UOTGHS_Handler+0x2c0>)
   81766:	4798      	blx	r3
				udd_ack_out_received(0);
   81768:	2202      	movs	r2, #2
   8176a:	4b0e      	ldr	r3, [pc, #56]	; (817a4 <UOTGHS_Handler+0x2a4>)
   8176c:	601a      	str	r2, [r3, #0]
   8176e:	e6df      	b.n	81530 <UOTGHS_Handler+0x30>
   81770:	000824f9 	.word	0x000824f9
   81774:	400ac000 	.word	0x400ac000
   81778:	200701d8 	.word	0x200701d8
   8177c:	00080935 	.word	0x00080935
   81780:	400ac220 	.word	0x400ac220
   81784:	400ac130 	.word	0x400ac130
   81788:	400ac1c0 	.word	0x400ac1c0
   8178c:	400ac134 	.word	0x400ac134
   81790:	20070d0c 	.word	0x20070d0c
   81794:	20070e0b 	.word	0x20070e0b
   81798:	20180000 	.word	0x20180000
   8179c:	20180008 	.word	0x20180008
   817a0:	00080975 	.word	0x00080975
   817a4:	400ac160 	.word	0x400ac160
   817a8:	20070e0c 	.word	0x20070e0c
   817ac:	20070d0a 	.word	0x20070d0a
   817b0:	20070d08 	.word	0x20070d08
   817b4:	400ac1f0 	.word	0x400ac1f0
   817b8:	00080e99 	.word	0x00080e99
   817bc:	00080dd1 	.word	0x00080dd1
   817c0:	00080e2d 	.word	0x00080e2d
   817c4:	00080ea9 	.word	0x00080ea9
   817c8:	00080e45 	.word	0x00080e45
		if (!udd_g_ctrlreq.over_under_run) {
   817cc:	4ba1      	ldr	r3, [pc, #644]	; (81a54 <UOTGHS_Handler+0x554>)
   817ce:	695b      	ldr	r3, [r3, #20]
   817d0:	b153      	cbz	r3, 817e8 <UOTGHS_Handler+0x2e8>
		if (!udd_g_ctrlreq.over_under_run()) {
   817d2:	4798      	blx	r3
   817d4:	b170      	cbz	r0, 817f4 <UOTGHS_Handler+0x2f4>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   817d6:	49a0      	ldr	r1, [pc, #640]	; (81a58 <UOTGHS_Handler+0x558>)
   817d8:	4aa0      	ldr	r2, [pc, #640]	; (81a5c <UOTGHS_Handler+0x55c>)
   817da:	880b      	ldrh	r3, [r1, #0]
   817dc:	8810      	ldrh	r0, [r2, #0]
   817de:	4403      	add	r3, r0
   817e0:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_buf_cnt = 0;
   817e2:	2300      	movs	r3, #0
   817e4:	8013      	strh	r3, [r2, #0]
   817e6:	e79f      	b.n	81728 <UOTGHS_Handler+0x228>
			udd_ctrl_stall_data();
   817e8:	4b9d      	ldr	r3, [pc, #628]	; (81a60 <UOTGHS_Handler+0x560>)
   817ea:	4798      	blx	r3
			udd_ack_out_received(0);
   817ec:	2202      	movs	r2, #2
   817ee:	4b9d      	ldr	r3, [pc, #628]	; (81a64 <UOTGHS_Handler+0x564>)
   817f0:	601a      	str	r2, [r3, #0]
   817f2:	e69d      	b.n	81530 <UOTGHS_Handler+0x30>
			udd_ctrl_stall_data();
   817f4:	4b9a      	ldr	r3, [pc, #616]	; (81a60 <UOTGHS_Handler+0x560>)
   817f6:	4798      	blx	r3
			udd_ack_out_received(0);
   817f8:	2202      	movs	r2, #2
   817fa:	4b9a      	ldr	r3, [pc, #616]	; (81a64 <UOTGHS_Handler+0x564>)
   817fc:	601a      	str	r2, [r3, #0]
   817fe:	e697      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ack_nak_out(0);
   81800:	2208      	movs	r2, #8
   81802:	4b98      	ldr	r3, [pc, #608]	; (81a64 <UOTGHS_Handler+0x564>)
   81804:	601a      	str	r2, [r3, #0]
	if (Is_udd_in_send(0))
   81806:	3b30      	subs	r3, #48	; 0x30
   81808:	681b      	ldr	r3, [r3, #0]
   8180a:	f013 0f01 	tst.w	r3, #1
   8180e:	f47f ae8f 	bne.w	81530 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   81812:	4b95      	ldr	r3, [pc, #596]	; (81a68 <UOTGHS_Handler+0x568>)
   81814:	781b      	ldrb	r3, [r3, #0]
   81816:	2b03      	cmp	r3, #3
   81818:	f47f ae8a 	bne.w	81530 <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   8181c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   81820:	4b92      	ldr	r3, [pc, #584]	; (81a6c <UOTGHS_Handler+0x56c>)
   81822:	601a      	str	r2, [r3, #0]
   81824:	e684      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ack_nak_in(0);
   81826:	2210      	movs	r2, #16
   81828:	4b8e      	ldr	r3, [pc, #568]	; (81a64 <UOTGHS_Handler+0x564>)
   8182a:	601a      	str	r2, [r3, #0]
	if (Is_udd_out_received(0))
   8182c:	3b30      	subs	r3, #48	; 0x30
   8182e:	681b      	ldr	r3, [r3, #0]
   81830:	f013 0f02 	tst.w	r3, #2
   81834:	f47f ae7c 	bne.w	81530 <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   81838:	4b8b      	ldr	r3, [pc, #556]	; (81a68 <UOTGHS_Handler+0x568>)
   8183a:	781b      	ldrb	r3, [r3, #0]
   8183c:	2b01      	cmp	r3, #1
   8183e:	d007      	beq.n	81850 <UOTGHS_Handler+0x350>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   81840:	2b04      	cmp	r3, #4
   81842:	f47f ae75 	bne.w	81530 <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   81846:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   8184a:	4b88      	ldr	r3, [pc, #544]	; (81a6c <UOTGHS_Handler+0x56c>)
   8184c:	601a      	str	r2, [r3, #0]
   8184e:	e66f      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ctrl_send_zlp_in();
   81850:	4b87      	ldr	r3, [pc, #540]	; (81a70 <UOTGHS_Handler+0x570>)
   81852:	4798      	blx	r3
   81854:	e66c      	b.n	81530 <UOTGHS_Handler+0x30>
			if (udd_endpoint_dma_get_status(ep)
   81856:	4b87      	ldr	r3, [pc, #540]	; (81a74 <UOTGHS_Handler+0x574>)
   81858:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   8185c:	68da      	ldr	r2, [r3, #12]
   8185e:	f012 0f01 	tst.w	r2, #1
   81862:	f47f ae65 	bne.w	81530 <UOTGHS_Handler+0x30>
			udd_disable_endpoint_dma_interrupt(ep);
   81866:	4a84      	ldr	r2, [pc, #528]	; (81a78 <UOTGHS_Handler+0x578>)
   81868:	6151      	str	r1, [r2, #20]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   8186a:	68dd      	ldr	r5, [r3, #12]
			if (nb_remaining) {
   8186c:	0c2d      	lsrs	r5, r5, #16
   8186e:	d008      	beq.n	81882 <UOTGHS_Handler+0x382>
				ptr_job->buf_cnt -= nb_remaining;
   81870:	4b82      	ldr	r3, [pc, #520]	; (81a7c <UOTGHS_Handler+0x57c>)
   81872:	0079      	lsls	r1, r7, #1
   81874:	19cc      	adds	r4, r1, r7
   81876:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   8187a:	68e2      	ldr	r2, [r4, #12]
   8187c:	1b52      	subs	r2, r2, r5
   8187e:	60e2      	str	r2, [r4, #12]
				ptr_job->buf_size = ptr_job->buf_cnt;
   81880:	60a2      	str	r2, [r4, #8]
			udd_ep_trans_done(ep);
   81882:	4b7f      	ldr	r3, [pc, #508]	; (81a80 <UOTGHS_Handler+0x580>)
   81884:	4798      	blx	r3
   81886:	e653      	b.n	81530 <UOTGHS_Handler+0x30>
			dbg_print("bg%x: ", ep);
			if (Is_udd_in_send_interrupt_enabled(ep)
					&& Is_udd_in_send(ep)) {
				dbg_print("I ");
				udd_disable_in_send_interrupt(ep);
   81888:	4b7e      	ldr	r3, [pc, #504]	; (81a84 <UOTGHS_Handler+0x584>)
   8188a:	2201      	movs	r2, #1
   8188c:	f849 2003 	str.w	r2, [r9, r3]
				// One bank is free then send a ZLP
				udd_ack_in_send(ep);
   81890:	4974      	ldr	r1, [pc, #464]	; (81a64 <UOTGHS_Handler+0x564>)
   81892:	f849 2001 	str.w	r2, [r9, r1]
				udd_ack_fifocon(ep);
   81896:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8189a:	f849 2003 	str.w	r2, [r9, r3]
		ptr_job = &udd_ep_job[ep - 1];
   8189e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
				udd_ep_finish_job(ptr_job, false, ep);
   818a2:	4602      	mov	r2, r0
   818a4:	2100      	movs	r1, #0
   818a6:	4875      	ldr	r0, [pc, #468]	; (81a7c <UOTGHS_Handler+0x57c>)
   818a8:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
   818ac:	4b76      	ldr	r3, [pc, #472]	; (81a88 <UOTGHS_Handler+0x588>)
   818ae:	4798      	blx	r3
   818b0:	e63e      	b.n	81530 <UOTGHS_Handler+0x30>
   818b2:	3301      	adds	r3, #1
   818b4:	3604      	adds	r6, #4
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   818b6:	2b04      	cmp	r3, #4
   818b8:	f000 80f6 	beq.w	81aa8 <UOTGHS_Handler+0x5a8>
   818bc:	b2d8      	uxtb	r0, r3
		ptr_job = &udd_ep_job[ep - 1];
   818be:	461d      	mov	r5, r3
   818c0:	1e5f      	subs	r7, r3, #1
   818c2:	46b8      	mov	r8, r7
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   818c4:	6914      	ldr	r4, [r2, #16]
   818c6:	fa0e f107 	lsl.w	r1, lr, r7
   818ca:	420c      	tst	r4, r1
   818cc:	d002      	beq.n	818d4 <UOTGHS_Handler+0x3d4>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   818ce:	6854      	ldr	r4, [r2, #4]
   818d0:	4221      	tst	r1, r4
   818d2:	d1c0      	bne.n	81856 <UOTGHS_Handler+0x356>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   818d4:	6911      	ldr	r1, [r2, #16]
   818d6:	fa0c f505 	lsl.w	r5, ip, r5
   818da:	4229      	tst	r1, r5
   818dc:	d0e9      	beq.n	818b2 <UOTGHS_Handler+0x3b2>
   818de:	ea4f 0983 	mov.w	r9, r3, lsl #2
   818e2:	f106 0490 	add.w	r4, r6, #144	; 0x90
			if (Is_udd_in_send_interrupt_enabled(ep)
   818e6:	f8d6 1090 	ldr.w	r1, [r6, #144]	; 0x90
   818ea:	f011 0f01 	tst.w	r1, #1
   818ee:	d003      	beq.n	818f8 <UOTGHS_Handler+0x3f8>
					&& Is_udd_in_send(ep)) {
   818f0:	6831      	ldr	r1, [r6, #0]
   818f2:	f011 0f01 	tst.w	r1, #1
   818f6:	d1c7      	bne.n	81888 <UOTGHS_Handler+0x388>
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   818f8:	6821      	ldr	r1, [r4, #0]
   818fa:	f411 5f80 	tst.w	r1, #4096	; 0x1000
   818fe:	d0d8      	beq.n	818b2 <UOTGHS_Handler+0x3b2>
					&& (0 == udd_nb_busy_bank(ep))) {
   81900:	6831      	ldr	r1, [r6, #0]
   81902:	f411 5f40 	tst.w	r1, #12288	; 0x3000
   81906:	d1d4      	bne.n	818b2 <UOTGHS_Handler+0x3b2>
				dbg_print("EoT ");
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   81908:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   8190c:	4b5d      	ldr	r3, [pc, #372]	; (81a84 <UOTGHS_Handler+0x584>)
   8190e:	f849 2003 	str.w	r2, [r9, r3]
				udd_disable_endpoint_interrupt(ep);
   81912:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
   81916:	615d      	str	r5, [r3, #20]

				Assert(ptr_job->stall_requested);
				// A stall has been requested during backgound transfer
				ptr_job->stall_requested = false;
   81918:	eb08 0848 	add.w	r8, r8, r8, lsl #1
   8191c:	4b57      	ldr	r3, [pc, #348]	; (81a7c <UOTGHS_Handler+0x57c>)
   8191e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
   81922:	f898 2014 	ldrb.w	r2, [r8, #20]
   81926:	f36f 0282 	bfc	r2, #2, #1
   8192a:	f888 2014 	strb.w	r2, [r8, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   8192e:	4a57      	ldr	r2, [pc, #348]	; (81a8c <UOTGHS_Handler+0x58c>)
   81930:	f859 3002 	ldr.w	r3, [r9, r2]
   81934:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   81938:	f849 3002 	str.w	r3, [r9, r2]
				udd_enable_stall_handshake(ep);
   8193c:	4b4b      	ldr	r3, [pc, #300]	; (81a6c <UOTGHS_Handler+0x56c>)
   8193e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   81942:	f849 2003 	str.w	r2, [r9, r3]
				udd_reset_data_toggle(ep);
   81946:	f44f 2280 	mov.w	r2, #262144	; 0x40000
   8194a:	f849 2003 	str.w	r2, [r9, r3]
   8194e:	e5ef      	b.n	81530 <UOTGHS_Handler+0x30>
		udd_ack_reset();
   81950:	4c49      	ldr	r4, [pc, #292]	; (81a78 <UOTGHS_Handler+0x578>)
   81952:	2308      	movs	r3, #8
   81954:	60a3      	str	r3, [r4, #8]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   81956:	4e49      	ldr	r6, [pc, #292]	; (81a7c <UOTGHS_Handler+0x57c>)
   81958:	2201      	movs	r2, #1
   8195a:	4611      	mov	r1, r2
   8195c:	4630      	mov	r0, r6
   8195e:	4d4a      	ldr	r5, [pc, #296]	; (81a88 <UOTGHS_Handler+0x588>)
   81960:	47a8      	blx	r5
   81962:	2202      	movs	r2, #2
   81964:	2101      	movs	r1, #1
   81966:	f106 0018 	add.w	r0, r6, #24
   8196a:	47a8      	blx	r5
   8196c:	2203      	movs	r2, #3
   8196e:	2101      	movs	r1, #1
   81970:	f106 0030 	add.w	r0, r6, #48	; 0x30
   81974:	47a8      	blx	r5
		udc_reset();
   81976:	4b46      	ldr	r3, [pc, #280]	; (81a90 <UOTGHS_Handler+0x590>)
   81978:	4798      	blx	r3
	udd_configure_address(0);
   8197a:	6823      	ldr	r3, [r4, #0]
   8197c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   81980:	6023      	str	r3, [r4, #0]
	udd_enable_address();
   81982:	6823      	ldr	r3, [r4, #0]
   81984:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81988:	6023      	str	r3, [r4, #0]
	udd_configure_endpoint(0,
   8198a:	4a40      	ldr	r2, [pc, #256]	; (81a8c <UOTGHS_Handler+0x58c>)
   8198c:	6813      	ldr	r3, [r2, #0]
   8198e:	f423 53cb 	bic.w	r3, r3, #6496	; 0x1960
   81992:	f023 031c 	bic.w	r3, r3, #28
   81996:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   8199a:	6013      	str	r3, [r2, #0]
	udd_allocate_memory(0);
   8199c:	6813      	ldr	r3, [r2, #0]
   8199e:	f043 0302 	orr.w	r3, r3, #2
   819a2:	6013      	str	r3, [r2, #0]
	udd_enable_endpoint(0);
   819a4:	69e3      	ldr	r3, [r4, #28]
   819a6:	f043 0301 	orr.w	r3, r3, #1
   819aa:	61e3      	str	r3, [r4, #28]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   819ac:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   819b0:	fab3 f383 	clz	r3, r3
   819b4:	095b      	lsrs	r3, r3, #5
   819b6:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   819b8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   819ba:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   819be:	2200      	movs	r2, #0
   819c0:	4b34      	ldr	r3, [pc, #208]	; (81a94 <UOTGHS_Handler+0x594>)
   819c2:	701a      	strb	r2, [r3, #0]
	return flags;
   819c4:	9a03      	ldr	r2, [sp, #12]
	udd_enable_setup_received_interrupt(0);
   819c6:	4b29      	ldr	r3, [pc, #164]	; (81a6c <UOTGHS_Handler+0x56c>)
   819c8:	2104      	movs	r1, #4
   819ca:	6019      	str	r1, [r3, #0]
	udd_enable_out_received_interrupt(0);
   819cc:	2102      	movs	r1, #2
   819ce:	6019      	str	r1, [r3, #0]
	udd_enable_endpoint_interrupt(0);
   819d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   819d4:	61a3      	str	r3, [r4, #24]
	if (cpu_irq_is_enabled_flags(flags))
   819d6:	b12a      	cbz	r2, 819e4 <UOTGHS_Handler+0x4e4>
		cpu_irq_enable();
   819d8:	2201      	movs	r2, #1
   819da:	4b2e      	ldr	r3, [pc, #184]	; (81a94 <UOTGHS_Handler+0x594>)
   819dc:	701a      	strb	r2, [r3, #0]
   819de:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   819e2:	b662      	cpsie	i
		udd_ctrl_init();
   819e4:	4b2c      	ldr	r3, [pc, #176]	; (81a98 <UOTGHS_Handler+0x598>)
   819e6:	4798      	blx	r3
		goto udd_interrupt_end;
   819e8:	e5a2      	b.n	81530 <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   819ea:	4b23      	ldr	r3, [pc, #140]	; (81a78 <UOTGHS_Handler+0x578>)
   819ec:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819f0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   819f4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_disable_suspend_interrupt();
   819f8:	2201      	movs	r2, #1
   819fa:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
   819fc:	2210      	movs	r2, #16
   819fe:	619a      	str	r2, [r3, #24]
		otg_freeze_clock(); // Mandatory to exit of sleep mode after a wakeup event
   81a00:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a04:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81a08:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_sleep_mode(false);  // Enter in SUSPEND mode
   81a0c:	2000      	movs	r0, #0
   81a0e:	4b23      	ldr	r3, [pc, #140]	; (81a9c <UOTGHS_Handler+0x59c>)
   81a10:	4798      	blx	r3
		goto udd_interrupt_end;
   81a12:	e58d      	b.n	81530 <UOTGHS_Handler+0x30>
	if (Is_otg_vbus_transition()) {
   81a14:	4b18      	ldr	r3, [pc, #96]	; (81a78 <UOTGHS_Handler+0x578>)
   81a16:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81a1a:	f013 0f02 	tst.w	r3, #2
   81a1e:	f43f ad87 	beq.w	81530 <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   81a22:	4b15      	ldr	r3, [pc, #84]	; (81a78 <UOTGHS_Handler+0x578>)
   81a24:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a28:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   81a2c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		otg_ack_vbus_transition();
   81a30:	2202      	movs	r2, #2
   81a32:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
		otg_freeze_clock();
   81a36:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a3a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81a3e:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		if (Is_otg_vbus_high()) {
   81a42:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81a46:	f413 6f00 	tst.w	r3, #2048	; 0x800
			udd_attach();
   81a4a:	bf14      	ite	ne
   81a4c:	4b14      	ldrne	r3, [pc, #80]	; (81aa0 <UOTGHS_Handler+0x5a0>)
			udd_detach();
   81a4e:	4b15      	ldreq	r3, [pc, #84]	; (81aa4 <UOTGHS_Handler+0x5a4>)
   81a50:	4798      	blx	r3
   81a52:	e56d      	b.n	81530 <UOTGHS_Handler+0x30>
   81a54:	20070e0c 	.word	0x20070e0c
   81a58:	20070d0a 	.word	0x20070d0a
   81a5c:	20070d08 	.word	0x20070d08
   81a60:	00080e2d 	.word	0x00080e2d
   81a64:	400ac160 	.word	0x400ac160
   81a68:	20070d0c 	.word	0x20070d0c
   81a6c:	400ac1f0 	.word	0x400ac1f0
   81a70:	00080e45 	.word	0x00080e45
   81a74:	400ac300 	.word	0x400ac300
   81a78:	400ac000 	.word	0x400ac000
   81a7c:	20070d10 	.word	0x20070d10
   81a80:	0008105d 	.word	0x0008105d
   81a84:	400ac220 	.word	0x400ac220
   81a88:	00081025 	.word	0x00081025
   81a8c:	400ac100 	.word	0x400ac100
   81a90:	000808ed 	.word	0x000808ed
   81a94:	200701d8 	.word	0x200701d8
   81a98:	00080dd1 	.word	0x00080dd1
   81a9c:	00081205 	.word	0x00081205
   81aa0:	00081441 	.word	0x00081441
   81aa4:	000814cd 	.word	0x000814cd
	if (Is_udd_reset()) {
   81aa8:	4b19      	ldr	r3, [pc, #100]	; (81b10 <UOTGHS_Handler+0x610>)
   81aaa:	685b      	ldr	r3, [r3, #4]
   81aac:	f013 0f08 	tst.w	r3, #8
   81ab0:	f47f af4e 	bne.w	81950 <UOTGHS_Handler+0x450>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81ab4:	4b16      	ldr	r3, [pc, #88]	; (81b10 <UOTGHS_Handler+0x610>)
   81ab6:	691b      	ldr	r3, [r3, #16]
   81ab8:	f013 0f01 	tst.w	r3, #1
   81abc:	d004      	beq.n	81ac8 <UOTGHS_Handler+0x5c8>
   81abe:	4b14      	ldr	r3, [pc, #80]	; (81b10 <UOTGHS_Handler+0x610>)
   81ac0:	685b      	ldr	r3, [r3, #4]
   81ac2:	f013 0f01 	tst.w	r3, #1
   81ac6:	d190      	bne.n	819ea <UOTGHS_Handler+0x4ea>
	if (Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) {
   81ac8:	4b11      	ldr	r3, [pc, #68]	; (81b10 <UOTGHS_Handler+0x610>)
   81aca:	691b      	ldr	r3, [r3, #16]
   81acc:	f013 0f10 	tst.w	r3, #16
   81ad0:	d0a0      	beq.n	81a14 <UOTGHS_Handler+0x514>
   81ad2:	4b0f      	ldr	r3, [pc, #60]	; (81b10 <UOTGHS_Handler+0x610>)
   81ad4:	685b      	ldr	r3, [r3, #4]
   81ad6:	f013 0f10 	tst.w	r3, #16
   81ada:	d09b      	beq.n	81a14 <UOTGHS_Handler+0x514>
		otg_unfreeze_clock();
   81adc:	4a0c      	ldr	r2, [pc, #48]	; (81b10 <UOTGHS_Handler+0x610>)
   81ade:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   81ae2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   81ae6:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
		while (!Is_otg_clock_usable()) {
   81aea:	4613      	mov	r3, r2
   81aec:	f8d3 2804 	ldr.w	r2, [r3, #2052]	; 0x804
   81af0:	f412 4f80 	tst.w	r2, #16384	; 0x4000
   81af4:	d103      	bne.n	81afe <UOTGHS_Handler+0x5fe>
			if (Is_udd_suspend()) {
   81af6:	685a      	ldr	r2, [r3, #4]
   81af8:	f012 0f01 	tst.w	r2, #1
   81afc:	d0f6      	beq.n	81aec <UOTGHS_Handler+0x5ec>
		udd_disable_wake_up_interrupt();
   81afe:	4b04      	ldr	r3, [pc, #16]	; (81b10 <UOTGHS_Handler+0x610>)
   81b00:	2210      	movs	r2, #16
   81b02:	615a      	str	r2, [r3, #20]
		udd_enable_suspend_interrupt();
   81b04:	2001      	movs	r0, #1
   81b06:	6198      	str	r0, [r3, #24]
		udd_sleep_mode(true); // Enter in IDLE mode
   81b08:	4b02      	ldr	r3, [pc, #8]	; (81b14 <UOTGHS_Handler+0x614>)
   81b0a:	4798      	blx	r3
		goto udd_interrupt_end;
   81b0c:	e510      	b.n	81530 <UOTGHS_Handler+0x30>
   81b0e:	bf00      	nop
   81b10:	400ac000 	.word	0x400ac000
   81b14:	00081205 	.word	0x00081205

00081b18 <udd_is_high_speed>:
}
   81b18:	2000      	movs	r0, #0
   81b1a:	4770      	bx	lr

00081b1c <udd_set_address>:
	udd_disable_address();
   81b1c:	4b08      	ldr	r3, [pc, #32]	; (81b40 <udd_set_address+0x24>)
   81b1e:	681a      	ldr	r2, [r3, #0]
   81b20:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   81b24:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   81b26:	681a      	ldr	r2, [r3, #0]
   81b28:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81b2c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b30:	4302      	orrs	r2, r0
   81b32:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   81b34:	681a      	ldr	r2, [r3, #0]
   81b36:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   81b3a:	601a      	str	r2, [r3, #0]
   81b3c:	4770      	bx	lr
   81b3e:	bf00      	nop
   81b40:	400ac000 	.word	0x400ac000

00081b44 <udd_getaddress>:
	return udd_get_configured_address();
   81b44:	4b02      	ldr	r3, [pc, #8]	; (81b50 <udd_getaddress+0xc>)
   81b46:	6818      	ldr	r0, [r3, #0]
}
   81b48:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b4c:	4770      	bx	lr
   81b4e:	bf00      	nop
   81b50:	400ac000 	.word	0x400ac000

00081b54 <udd_get_frame_number>:
	return udd_frame_number();
   81b54:	4b02      	ldr	r3, [pc, #8]	; (81b60 <udd_get_frame_number+0xc>)
   81b56:	6a18      	ldr	r0, [r3, #32]
}
   81b58:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   81b5c:	4770      	bx	lr
   81b5e:	bf00      	nop
   81b60:	400ac000 	.word	0x400ac000

00081b64 <udd_get_micro_frame_number>:
	return udd_micro_frame_number();
   81b64:	4b02      	ldr	r3, [pc, #8]	; (81b70 <udd_get_micro_frame_number+0xc>)
   81b66:	6a18      	ldr	r0, [r3, #32]
}
   81b68:	f3c0 000d 	ubfx	r0, r0, #0, #14
   81b6c:	4770      	bx	lr
   81b6e:	bf00      	nop
   81b70:	400ac000 	.word	0x400ac000

00081b74 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   81b74:	4b01      	ldr	r3, [pc, #4]	; (81b7c <udd_set_setup_payload+0x8>)
   81b76:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   81b78:	8199      	strh	r1, [r3, #12]
   81b7a:	4770      	bx	lr
   81b7c:	20070e0c 	.word	0x20070e0c

00081b80 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81b80:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81b84:	2a03      	cmp	r2, #3
   81b86:	d900      	bls.n	81b8a <udd_ep_free+0xa>
   81b88:	4770      	bx	lr
{
   81b8a:	b570      	push	{r4, r5, r6, lr}
	udd_disable_endpoint(ep_index);
   81b8c:	4810      	ldr	r0, [pc, #64]	; (81bd0 <udd_ep_free+0x50>)
   81b8e:	69c3      	ldr	r3, [r0, #28]
   81b90:	2101      	movs	r1, #1
   81b92:	fa01 f402 	lsl.w	r4, r1, r2
   81b96:	ea23 0304 	bic.w	r3, r3, r4
   81b9a:	61c3      	str	r3, [r0, #28]
	udd_unallocate_memory(ep_index);
   81b9c:	f500 7080 	add.w	r0, r0, #256	; 0x100
   81ba0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
   81ba4:	f023 0302 	bic.w	r3, r3, #2
   81ba8:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   81bac:	1e56      	subs	r6, r2, #1
   81bae:	4c09      	ldr	r4, [pc, #36]	; (81bd4 <udd_ep_free+0x54>)
   81bb0:	fa06 f501 	lsl.w	r5, r6, r1
   81bb4:	19a8      	adds	r0, r5, r6
   81bb6:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81bba:	4b07      	ldr	r3, [pc, #28]	; (81bd8 <udd_ep_free+0x58>)
   81bbc:	4798      	blx	r3
	udd_ep_job[ep_index - 1].stall_requested = false;
   81bbe:	4435      	add	r5, r6
   81bc0:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   81bc4:	7d23      	ldrb	r3, [r4, #20]
   81bc6:	f36f 0382 	bfc	r3, #2, #1
   81bca:	7523      	strb	r3, [r4, #20]
   81bcc:	bd70      	pop	{r4, r5, r6, pc}
   81bce:	bf00      	nop
   81bd0:	400ac000 	.word	0x400ac000
   81bd4:	20070d10 	.word	0x20070d10
   81bd8:	00081025 	.word	0x00081025

00081bdc <udd_ep_is_halted>:
	return Is_udd_endpoint_stall_requested(ep_index);
   81bdc:	f000 000f 	and.w	r0, r0, #15
   81be0:	4b02      	ldr	r3, [pc, #8]	; (81bec <udd_ep_is_halted+0x10>)
   81be2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
}
   81be6:	f3c0 40c0 	ubfx	r0, r0, #19, #1
   81bea:	4770      	bx	lr
   81bec:	400ac1c0 	.word	0x400ac1c0

00081bf0 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81bf0:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81bf4:	2b03      	cmp	r3, #3
   81bf6:	d85d      	bhi.n	81cb4 <udd_ep_set_halt+0xc4>
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   81bf8:	4a35      	ldr	r2, [pc, #212]	; (81cd0 <udd_ep_set_halt+0xe0>)
   81bfa:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81bfe:	f412 2f00 	tst.w	r2, #524288	; 0x80000
   81c02:	d159      	bne.n	81cb8 <udd_ep_set_halt+0xc8>
{
   81c04:	b410      	push	{r4}
   81c06:	b083      	sub	sp, #12
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81c08:	1e59      	subs	r1, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   81c0a:	eb01 0441 	add.w	r4, r1, r1, lsl #1
   81c0e:	4a31      	ldr	r2, [pc, #196]	; (81cd4 <udd_ep_set_halt+0xe4>)
   81c10:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
   81c14:	7d12      	ldrb	r2, [r2, #20]
   81c16:	f012 0f04 	tst.w	r2, #4
   81c1a:	d14f      	bne.n	81cbc <udd_ep_set_halt+0xcc>
	if (ptr_job->busy == true) {
   81c1c:	f012 0f01 	tst.w	r2, #1
   81c20:	d150      	bne.n	81cc4 <udd_ep_set_halt+0xd4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81c22:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81c26:	fab2 f282 	clz	r2, r2
   81c2a:	0952      	lsrs	r2, r2, #5
   81c2c:	9201      	str	r2, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81c2e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81c30:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81c34:	2400      	movs	r4, #0
   81c36:	4a28      	ldr	r2, [pc, #160]	; (81cd8 <udd_ep_set_halt+0xe8>)
   81c38:	7014      	strb	r4, [r2, #0]
	return flags;
   81c3a:	9c01      	ldr	r4, [sp, #4]
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c3c:	f010 0f80 	tst.w	r0, #128	; 0x80
   81c40:	d118      	bne.n	81c74 <udd_ep_set_halt+0x84>
	udd_disable_endpoint_bank_autoswitch(ep_index);
   81c42:	4926      	ldr	r1, [pc, #152]	; (81cdc <udd_ep_set_halt+0xec>)
   81c44:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
   81c48:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   81c4c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	udd_ack_stall(ep_index);
   81c50:	2140      	movs	r1, #64	; 0x40
   81c52:	4a23      	ldr	r2, [pc, #140]	; (81ce0 <udd_ep_set_halt+0xf0>)
   81c54:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	udd_enable_stall_handshake(ep_index);
   81c58:	f44f 2100 	mov.w	r1, #524288	; 0x80000
   81c5c:	3290      	adds	r2, #144	; 0x90
   81c5e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	if (cpu_irq_is_enabled_flags(flags))
   81c62:	2c00      	cmp	r4, #0
   81c64:	d032      	beq.n	81ccc <udd_ep_set_halt+0xdc>
		cpu_irq_enable();
   81c66:	2001      	movs	r0, #1
   81c68:	4b1b      	ldr	r3, [pc, #108]	; (81cd8 <udd_ep_set_halt+0xe8>)
   81c6a:	7018      	strb	r0, [r3, #0]
   81c6c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81c70:	b662      	cpsie	i
   81c72:	e024      	b.n	81cbe <udd_ep_set_halt+0xce>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c74:	4a1b      	ldr	r2, [pc, #108]	; (81ce4 <udd_ep_set_halt+0xf4>)
   81c76:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81c7a:	f412 5f40 	tst.w	r2, #12288	; 0x3000
   81c7e:	d0e0      	beq.n	81c42 <udd_ep_set_halt+0x52>
		ptr_job->stall_requested = true;
   81c80:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81c84:	4a13      	ldr	r2, [pc, #76]	; (81cd4 <udd_ep_set_halt+0xe4>)
   81c86:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
   81c8a:	7d0a      	ldrb	r2, [r1, #20]
   81c8c:	f042 0204 	orr.w	r2, r2, #4
   81c90:	750a      	strb	r2, [r1, #20]
		udd_enable_bank_interrupt(ep_index);
   81c92:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   81c96:	4914      	ldr	r1, [pc, #80]	; (81ce8 <udd_ep_set_halt+0xf8>)
   81c98:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		udd_enable_endpoint_interrupt(ep_index);
   81c9c:	fa02 f303 	lsl.w	r3, r2, r3
   81ca0:	4a12      	ldr	r2, [pc, #72]	; (81cec <udd_ep_set_halt+0xfc>)
   81ca2:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81ca4:	b184      	cbz	r4, 81cc8 <udd_ep_set_halt+0xd8>
		cpu_irq_enable();
   81ca6:	2001      	movs	r0, #1
   81ca8:	4b0b      	ldr	r3, [pc, #44]	; (81cd8 <udd_ep_set_halt+0xe8>)
   81caa:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81cac:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81cb0:	b662      	cpsie	i
   81cb2:	e004      	b.n	81cbe <udd_ep_set_halt+0xce>
		return false;
   81cb4:	2000      	movs	r0, #0
   81cb6:	4770      	bx	lr
		return true; // Already STALL
   81cb8:	2001      	movs	r0, #1
   81cba:	4770      	bx	lr
   81cbc:	2001      	movs	r0, #1
}
   81cbe:	b003      	add	sp, #12
   81cc0:	bc10      	pop	{r4}
   81cc2:	4770      	bx	lr
		return false; // Job on going, stall impossible
   81cc4:	2000      	movs	r0, #0
   81cc6:	e7fa      	b.n	81cbe <udd_ep_set_halt+0xce>
		return true;
   81cc8:	2001      	movs	r0, #1
   81cca:	e7f8      	b.n	81cbe <udd_ep_set_halt+0xce>
	return true;
   81ccc:	2001      	movs	r0, #1
   81cce:	e7f6      	b.n	81cbe <udd_ep_set_halt+0xce>
   81cd0:	400ac1c0 	.word	0x400ac1c0
   81cd4:	20070d10 	.word	0x20070d10
   81cd8:	200701d8 	.word	0x200701d8
   81cdc:	400ac100 	.word	0x400ac100
   81ce0:	400ac160 	.word	0x400ac160
   81ce4:	400ac130 	.word	0x400ac130
   81ce8:	400ac1f0 	.word	0x400ac1f0
   81cec:	400ac000 	.word	0x400ac000

00081cf0 <udd_ep_clear_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81cf0:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index)
   81cf4:	2803      	cmp	r0, #3
   81cf6:	d851      	bhi.n	81d9c <udd_ep_clear_halt+0xac>
{
   81cf8:	b510      	push	{r4, lr}
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81cfa:	1e43      	subs	r3, r0, #1
	if (ptr_job->stall_requested) {
   81cfc:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81d00:	4a2c      	ldr	r2, [pc, #176]	; (81db4 <udd_ep_clear_halt+0xc4>)
   81d02:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81d06:	7d12      	ldrb	r2, [r2, #20]
   81d08:	f012 0f04 	tst.w	r2, #4
   81d0c:	d048      	beq.n	81da0 <udd_ep_clear_halt+0xb0>
		ptr_job->stall_requested = false;
   81d0e:	460a      	mov	r2, r1
   81d10:	4928      	ldr	r1, [pc, #160]	; (81db4 <udd_ep_clear_halt+0xc4>)
   81d12:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81d16:	7d11      	ldrb	r1, [r2, #20]
   81d18:	f36f 0182 	bfc	r1, #2, #1
   81d1c:	7511      	strb	r1, [r2, #20]
		udd_disable_bank_interrupt(ep_index);
   81d1e:	0082      	lsls	r2, r0, #2
   81d20:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81d24:	4c24      	ldr	r4, [pc, #144]	; (81db8 <udd_ep_clear_halt+0xc8>)
   81d26:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
		udd_disable_endpoint_interrupt(ep_index);
   81d2a:	4081      	lsls	r1, r0
   81d2c:	f5a4 7408 	sub.w	r4, r4, #544	; 0x220
   81d30:	6161      	str	r1, [r4, #20]
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81d32:	4922      	ldr	r1, [pc, #136]	; (81dbc <udd_ep_clear_halt+0xcc>)
   81d34:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81d38:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81d3c:	d014      	beq.n	81d68 <udd_ep_clear_halt+0x78>
		if (Is_udd_stall(ep_index)) {
   81d3e:	4920      	ldr	r1, [pc, #128]	; (81dc0 <udd_ep_clear_halt+0xd0>)
   81d40:	5851      	ldr	r1, [r2, r1]
   81d42:	f011 0f40 	tst.w	r1, #64	; 0x40
   81d46:	d006      	beq.n	81d56 <udd_ep_clear_halt+0x66>
			udd_ack_stall(ep_index);
   81d48:	2040      	movs	r0, #64	; 0x40
   81d4a:	491e      	ldr	r1, [pc, #120]	; (81dc4 <udd_ep_clear_halt+0xd4>)
   81d4c:	5050      	str	r0, [r2, r1]
			udd_reset_data_toggle(ep_index);
   81d4e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   81d52:	3190      	adds	r1, #144	; 0x90
   81d54:	5050      	str	r0, [r2, r1]
		udd_disable_stall_handshake(ep_index);
   81d56:	f44f 2000 	mov.w	r0, #524288	; 0x80000
   81d5a:	4917      	ldr	r1, [pc, #92]	; (81db8 <udd_ep_clear_halt+0xc8>)
   81d5c:	5050      	str	r0, [r2, r1]
		udd_enable_endpoint_bank_autoswitch(ep_index);
   81d5e:	481a      	ldr	r0, [pc, #104]	; (81dc8 <udd_ep_clear_halt+0xd8>)
   81d60:	5811      	ldr	r1, [r2, r0]
   81d62:	f441 7100 	orr.w	r1, r1, #512	; 0x200
   81d66:	5011      	str	r1, [r2, r0]
		if (ptr_job->busy == true) {
   81d68:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81d6c:	4911      	ldr	r1, [pc, #68]	; (81db4 <udd_ep_clear_halt+0xc4>)
   81d6e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81d72:	7d12      	ldrb	r2, [r2, #20]
   81d74:	f012 0f01 	tst.w	r2, #1
   81d78:	d101      	bne.n	81d7e <udd_ep_clear_halt+0x8e>
	return true;
   81d7a:	2001      	movs	r0, #1
   81d7c:	bd10      	pop	{r4, pc}
			ptr_job->busy = false;
   81d7e:	4608      	mov	r0, r1
   81d80:	0059      	lsls	r1, r3, #1
   81d82:	18ca      	adds	r2, r1, r3
   81d84:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
   81d88:	7d14      	ldrb	r4, [r2, #20]
   81d8a:	f36f 0400 	bfc	r4, #0, #1
   81d8e:	7514      	strb	r4, [r2, #20]
			ptr_job->call_nohalt();
   81d90:	440b      	add	r3, r1
   81d92:	f850 3033 	ldr.w	r3, [r0, r3, lsl #3]
   81d96:	4798      	blx	r3
	return true;
   81d98:	2001      	movs	r0, #1
   81d9a:	bd10      	pop	{r4, pc}
		return false;
   81d9c:	2000      	movs	r0, #0
   81d9e:	4770      	bx	lr
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81da0:	0082      	lsls	r2, r0, #2
   81da2:	4906      	ldr	r1, [pc, #24]	; (81dbc <udd_ep_clear_halt+0xcc>)
   81da4:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81da8:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81dac:	d1c7      	bne.n	81d3e <udd_ep_clear_halt+0x4e>
	return true;
   81dae:	2001      	movs	r0, #1
}
   81db0:	bd10      	pop	{r4, pc}
   81db2:	bf00      	nop
   81db4:	20070d10 	.word	0x20070d10
   81db8:	400ac220 	.word	0x400ac220
   81dbc:	400ac1c0 	.word	0x400ac1c0
   81dc0:	400ac130 	.word	0x400ac130
   81dc4:	400ac160 	.word	0x400ac160
   81dc8:	400ac100 	.word	0x400ac100

00081dcc <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   81dcc:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   81dd0:	2803      	cmp	r0, #3
   81dd2:	d864      	bhi.n	81e9e <udd_ep_run+0xd2>
{
   81dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
   81dd6:	b083      	sub	sp, #12
	if ((!Is_udd_endpoint_enabled(ep))
   81dd8:	4c36      	ldr	r4, [pc, #216]	; (81eb4 <udd_ep_run+0xe8>)
   81dda:	69e5      	ldr	r5, [r4, #28]
   81ddc:	2401      	movs	r4, #1
   81dde:	4084      	lsls	r4, r0
   81de0:	422c      	tst	r4, r5
   81de2:	d05e      	beq.n	81ea2 <udd_ep_run+0xd6>
			|| Is_udd_endpoint_stall_requested(ep)
   81de4:	4c34      	ldr	r4, [pc, #208]	; (81eb8 <udd_ep_run+0xec>)
   81de6:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
   81dea:	f414 2f00 	tst.w	r4, #524288	; 0x80000
   81dee:	d15b      	bne.n	81ea8 <udd_ep_run+0xdc>
	ptr_job = &udd_ep_job[ep - 1];
   81df0:	1e44      	subs	r4, r0, #1
			|| ptr_job->stall_requested) {
   81df2:	eb04 0644 	add.w	r6, r4, r4, lsl #1
   81df6:	4d31      	ldr	r5, [pc, #196]	; (81ebc <udd_ep_run+0xf0>)
   81df8:	eb05 05c6 	add.w	r5, r5, r6, lsl #3
   81dfc:	7d2d      	ldrb	r5, [r5, #20]
   81dfe:	f015 0f04 	tst.w	r5, #4
   81e02:	d153      	bne.n	81eac <udd_ep_run+0xe0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81e04:	f3ef 8510 	mrs	r5, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81e08:	fab5 f585 	clz	r5, r5
   81e0c:	096d      	lsrs	r5, r5, #5
   81e0e:	9501      	str	r5, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81e10:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81e12:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81e16:	2600      	movs	r6, #0
   81e18:	4d29      	ldr	r5, [pc, #164]	; (81ec0 <udd_ep_run+0xf4>)
   81e1a:	702e      	strb	r6, [r5, #0]
	return flags;
   81e1c:	9f01      	ldr	r7, [sp, #4]
	if (ptr_job->busy == true) {
   81e1e:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e22:	4e26      	ldr	r6, [pc, #152]	; (81ebc <udd_ep_run+0xf0>)
   81e24:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81e28:	7d2d      	ldrb	r5, [r5, #20]
   81e2a:	f015 0f01 	tst.w	r5, #1
   81e2e:	d009      	beq.n	81e44 <udd_ep_run+0x78>
	if (cpu_irq_is_enabled_flags(flags))
   81e30:	2f00      	cmp	r7, #0
   81e32:	d03d      	beq.n	81eb0 <udd_ep_run+0xe4>
		cpu_irq_enable();
   81e34:	2201      	movs	r2, #1
   81e36:	4b22      	ldr	r3, [pc, #136]	; (81ec0 <udd_ep_run+0xf4>)
   81e38:	701a      	strb	r2, [r3, #0]
   81e3a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e3e:	b662      	cpsie	i
		return false; // Job already on going
   81e40:	2000      	movs	r0, #0
   81e42:	e02f      	b.n	81ea4 <udd_ep_run+0xd8>
	ptr_job->busy = true;
   81e44:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e48:	4e1c      	ldr	r6, [pc, #112]	; (81ebc <udd_ep_run+0xf0>)
   81e4a:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81e4e:	7d2e      	ldrb	r6, [r5, #20]
   81e50:	f046 0601 	orr.w	r6, r6, #1
   81e54:	752e      	strb	r6, [r5, #20]
	if (cpu_irq_is_enabled_flags(flags))
   81e56:	b12f      	cbz	r7, 81e64 <udd_ep_run+0x98>
		cpu_irq_enable();
   81e58:	2601      	movs	r6, #1
   81e5a:	4d19      	ldr	r5, [pc, #100]	; (81ec0 <udd_ep_run+0xf4>)
   81e5c:	702e      	strb	r6, [r5, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81e5e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e62:	b662      	cpsie	i
	ptr_job->buf = buf;
   81e64:	4f15      	ldr	r7, [pc, #84]	; (81ebc <udd_ep_run+0xf0>)
   81e66:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e6a:	00ed      	lsls	r5, r5, #3
   81e6c:	197e      	adds	r6, r7, r5
   81e6e:	6072      	str	r2, [r6, #4]
	ptr_job->buf_size = buf_size;
   81e70:	60b3      	str	r3, [r6, #8]
	ptr_job->buf_cnt = 0;
   81e72:	2200      	movs	r2, #0
   81e74:	60f2      	str	r2, [r6, #12]
	ptr_job->buf_load = 0;
   81e76:	6132      	str	r2, [r6, #16]
	ptr_job->call_trans = callback;
   81e78:	9a08      	ldr	r2, [sp, #32]
   81e7a:	517a      	str	r2, [r7, r5]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81e7c:	b911      	cbnz	r1, 81e84 <udd_ep_run+0xb8>
   81e7e:	fab3 f183 	clz	r1, r3
   81e82:	0949      	lsrs	r1, r1, #5
   81e84:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   81e88:	4b0c      	ldr	r3, [pc, #48]	; (81ebc <udd_ep_run+0xf0>)
   81e8a:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   81e8e:	7d23      	ldrb	r3, [r4, #20]
   81e90:	f361 0341 	bfi	r3, r1, #1, #1
   81e94:	7523      	strb	r3, [r4, #20]
	udd_ep_trans_done(ep);
   81e96:	4b0b      	ldr	r3, [pc, #44]	; (81ec4 <udd_ep_run+0xf8>)
   81e98:	4798      	blx	r3
	return true;
   81e9a:	2001      	movs	r0, #1
   81e9c:	e002      	b.n	81ea4 <udd_ep_run+0xd8>
		return false;
   81e9e:	2000      	movs	r0, #0
   81ea0:	4770      	bx	lr
		return false; // Endpoint is halted
   81ea2:	2000      	movs	r0, #0
}
   81ea4:	b003      	add	sp, #12
   81ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
   81ea8:	2000      	movs	r0, #0
   81eaa:	e7fb      	b.n	81ea4 <udd_ep_run+0xd8>
   81eac:	2000      	movs	r0, #0
   81eae:	e7f9      	b.n	81ea4 <udd_ep_run+0xd8>
		return false; // Job already on going
   81eb0:	2000      	movs	r0, #0
   81eb2:	e7f7      	b.n	81ea4 <udd_ep_run+0xd8>
   81eb4:	400ac000 	.word	0x400ac000
   81eb8:	400ac1c0 	.word	0x400ac1c0
   81ebc:	20070d10 	.word	0x20070d10
   81ec0:	200701d8 	.word	0x200701d8
   81ec4:	0008105d 	.word	0x0008105d

00081ec8 <udd_ep_alloc>:
{
   81ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81ecc:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
   81ece:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   81ed2:	2c03      	cmp	r4, #3
   81ed4:	f200 80df 	bhi.w	82096 <udd_ep_alloc+0x1ce>
	if (Is_udd_endpoint_enabled(ep)) {
   81ed8:	4b74      	ldr	r3, [pc, #464]	; (820ac <udd_ep_alloc+0x1e4>)
   81eda:	69dd      	ldr	r5, [r3, #28]
   81edc:	2301      	movs	r3, #1
   81ede:	40a3      	lsls	r3, r4
   81ee0:	402b      	ands	r3, r5
   81ee2:	f040 80dd 	bne.w	820a0 <udd_ep_alloc+0x1d8>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   81ee6:	f011 0503 	ands.w	r5, r1, #3
   81eea:	f000 80db 	beq.w	820a4 <udd_ep_alloc+0x1dc>
   81eee:	2d02      	cmp	r5, #2
   81ef0:	d920      	bls.n	81f34 <udd_ep_alloc+0x6c>
   81ef2:	2d03      	cmp	r5, #3
   81ef4:	f040 80d6 	bne.w	820a4 <udd_ep_alloc+0x1dc>
		bank = UOTGHS_DEVEPTCFG_EPBK_1_BANK >>
   81ef8:	f04f 0e00 	mov.w	lr, #0
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81efc:	4e6c      	ldr	r6, [pc, #432]	; (820b0 <udd_ep_alloc+0x1e8>)
   81efe:	eb06 0584 	add.w	r5, r6, r4, lsl #2
   81f02:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
   81f06:	f427 57cb 	bic.w	r7, r7, #6496	; 0x1960
   81f0a:	f027 071c 	bic.w	r7, r7, #28
   81f0e:	02c9      	lsls	r1, r1, #11
   81f10:	f401 51c0 	and.w	r1, r1, #6144	; 0x1800
   81f14:	b240      	sxtb	r0, r0
   81f16:	2800      	cmp	r0, #0
   81f18:	bfb8      	it	lt
   81f1a:	f44f 7380 	movlt.w	r3, #256	; 0x100
   81f1e:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
   81f22:	b280      	uxth	r0, r0
   81f24:	f5b0 4f7c 	cmp.w	r0, #64512	; 0xfc00
   81f28:	d307      	bcc.n	81f3a <udd_ep_alloc+0x72>
   81f2a:	2a08      	cmp	r2, #8
   81f2c:	d924      	bls.n	81f78 <udd_ep_alloc+0xb0>
   81f2e:	0052      	lsls	r2, r2, #1
   81f30:	3a01      	subs	r2, #1
   81f32:	e004      	b.n	81f3e <udd_ep_alloc+0x76>
		bank = UOTGHS_DEVEPTCFG_EPBK_2_BANK >>
   81f34:	f04f 0e01 	mov.w	lr, #1
   81f38:	e7e0      	b.n	81efc <udd_ep_alloc+0x34>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f3a:	f240 72ff 	movw	r2, #2047	; 0x7ff
   81f3e:	fab2 f282 	clz	r2, r2
   81f42:	ea41 018e 	orr.w	r1, r1, lr, lsl #2
   81f46:	4319      	orrs	r1, r3
   81f48:	f1c2 031c 	rsb	r3, r2, #28
   81f4c:	ea41 1303 	orr.w	r3, r1, r3, lsl #4
   81f50:	f423 63d0 	bic.w	r3, r3, #1664	; 0x680
   81f54:	f023 0303 	bic.w	r3, r3, #3
   81f58:	04db      	lsls	r3, r3, #19
   81f5a:	0cdb      	lsrs	r3, r3, #19
   81f5c:	433b      	orrs	r3, r7
   81f5e:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
	ep_allocated = 1 << ep;
   81f62:	2701      	movs	r7, #1
   81f64:	40a7      	lsls	r7, r4
   81f66:	b2bf      	uxth	r7, r7
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f68:	2c02      	cmp	r4, #2
   81f6a:	d81c      	bhi.n	81fa6 <udd_ep_alloc+0xde>
   81f6c:	4a51      	ldr	r2, [pc, #324]	; (820b4 <udd_ep_alloc+0x1ec>)
   81f6e:	2303      	movs	r3, #3
		if (Is_udd_endpoint_enabled(i)) {
   81f70:	484e      	ldr	r0, [pc, #312]	; (820ac <udd_ep_alloc+0x1e4>)
   81f72:	f04f 0e01 	mov.w	lr, #1
   81f76:	e006      	b.n	81f86 <udd_ep_alloc+0xbe>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f78:	220f      	movs	r2, #15
   81f7a:	e7e0      	b.n	81f3e <udd_ep_alloc+0x76>
   81f7c:	3b01      	subs	r3, #1
   81f7e:	3a04      	subs	r2, #4
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f80:	b2d9      	uxtb	r1, r3
   81f82:	428c      	cmp	r4, r1
   81f84:	d20f      	bcs.n	81fa6 <udd_ep_alloc+0xde>
		if (Is_udd_endpoint_enabled(i)) {
   81f86:	69c6      	ldr	r6, [r0, #28]
   81f88:	fa0e f103 	lsl.w	r1, lr, r3
   81f8c:	420e      	tst	r6, r1
   81f8e:	d0f5      	beq.n	81f7c <udd_ep_alloc+0xb4>
			ep_allocated |= 1 << i;
   81f90:	430f      	orrs	r7, r1
   81f92:	b2bf      	uxth	r7, r7
			udd_disable_endpoint(i);
   81f94:	69c6      	ldr	r6, [r0, #28]
   81f96:	ea26 0101 	bic.w	r1, r6, r1
   81f9a:	61c1      	str	r1, [r0, #28]
			udd_unallocate_memory(i);
   81f9c:	6811      	ldr	r1, [r2, #0]
   81f9e:	f021 0102 	bic.w	r1, r1, #2
   81fa2:	6011      	str	r1, [r2, #0]
   81fa4:	e7ea      	b.n	81f7c <udd_ep_alloc+0xb4>
   81fa6:	eb04 0344 	add.w	r3, r4, r4, lsl #1
   81faa:	4e43      	ldr	r6, [pc, #268]	; (820b8 <udd_ep_alloc+0x1f0>)
   81fac:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
			bool b_restart = ptr_job->busy;
   81fb0:	f8df 9104 	ldr.w	r9, [pc, #260]	; 820b8 <udd_ep_alloc+0x1f0>
			udd_enable_endpoint(i);
   81fb4:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 820ac <udd_ep_alloc+0x1e4>
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   81fb8:	f8df a100 	ldr.w	sl, [pc, #256]	; 820bc <udd_ep_alloc+0x1f4>
   81fbc:	e01d      	b.n	81ffa <udd_ep_alloc+0x132>
				if (NULL == ptr_job->call_trans) {
   81fbe:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81fc2:	4a3d      	ldr	r2, [pc, #244]	; (820b8 <udd_ep_alloc+0x1f0>)
   81fc4:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
   81fc8:	2c00      	cmp	r4, #0
   81fca:	d06d      	beq.n	820a8 <udd_ep_alloc+0x1e0>
				if (Is_udd_endpoint_in(i)) {
   81fcc:	682b      	ldr	r3, [r5, #0]
   81fce:	f413 7f80 	tst.w	r3, #256	; 0x100
					i |= USB_EP_DIR_IN;
   81fd2:	bf18      	it	ne
   81fd4:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
				ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   81fd8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81fdc:	4b36      	ldr	r3, [pc, #216]	; (820b8 <udd_ep_alloc+0x1f0>)
   81fde:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   81fe2:	4602      	mov	r2, r0
   81fe4:	68c9      	ldr	r1, [r1, #12]
   81fe6:	2001      	movs	r0, #1
   81fe8:	47a0      	blx	r4
				return false;
   81fea:	2300      	movs	r3, #0
   81fec:	e054      	b.n	82098 <udd_ep_alloc+0x1d0>
   81fee:	3401      	adds	r4, #1
   81ff0:	3504      	adds	r5, #4
   81ff2:	3618      	adds	r6, #24
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   81ff4:	b2e3      	uxtb	r3, r4
   81ff6:	2b03      	cmp	r3, #3
   81ff8:	d84b      	bhi.n	82092 <udd_ep_alloc+0x1ca>
   81ffa:	b2e0      	uxtb	r0, r4
		if (ep_allocated & (1 << i)) {
   81ffc:	fa47 f304 	asr.w	r3, r7, r4
   82000:	f013 0f01 	tst.w	r3, #1
   82004:	d0f3      	beq.n	81fee <udd_ep_alloc+0x126>
   82006:	1e61      	subs	r1, r4, #1
			bool b_restart = ptr_job->busy;
   82008:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   8200c:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   82010:	f893 e014 	ldrb.w	lr, [r3, #20]
   82014:	f00e 0201 	and.w	r2, lr, #1
			ptr_job->busy = false;
   82018:	f36f 0e00 	bfc	lr, #0, #1
   8201c:	f883 e014 	strb.w	lr, [r3, #20]
			udd_allocate_memory(i);
   82020:	682b      	ldr	r3, [r5, #0]
   82022:	f043 0302 	orr.w	r3, r3, #2
   82026:	602b      	str	r3, [r5, #0]
			udd_enable_endpoint(i);
   82028:	f8d8 e01c 	ldr.w	lr, [r8, #28]
   8202c:	2301      	movs	r3, #1
   8202e:	40a3      	lsls	r3, r4
   82030:	ea43 030e 	orr.w	r3, r3, lr
   82034:	f8c8 301c 	str.w	r3, [r8, #28]
			if (!Is_udd_endpoint_configured(i)) {
   82038:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   8203a:	f413 2f80 	tst.w	r3, #262144	; 0x40000
   8203e:	d0be      	beq.n	81fbe <udd_ep_alloc+0xf6>
			udd_enable_endpoint_bank_autoswitch(i);
   82040:	682b      	ldr	r3, [r5, #0]
   82042:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   82046:	602b      	str	r3, [r5, #0]
			if (b_restart) {
   82048:	2a00      	cmp	r2, #0
   8204a:	d0d0      	beq.n	81fee <udd_ep_alloc+0x126>
				ptr_job->buf_cnt -= ptr_job->buf_load;
   8204c:	f856 3c0c 	ldr.w	r3, [r6, #-12]
   82050:	f856 2c08 	ldr.w	r2, [r6, #-8]
   82054:	1a9a      	subs	r2, r3, r2
   82056:	f846 2c0c 	str.w	r2, [r6, #-12]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   8205a:	682b      	ldr	r3, [r5, #0]
   8205c:	f413 7f80 	tst.w	r3, #256	; 0x100
   82060:	bf18      	it	ne
   82062:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
   82066:	f856 bc10 	ldr.w	fp, [r6, #-16]
   8206a:	f856 cc14 	ldr.w	ip, [r6, #-20]
						ptr_job->b_shortpacket,
   8206e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   82072:	eb09 01c1 	add.w	r1, r9, r1, lsl #3
   82076:	7d09      	ldrb	r1, [r1, #20]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   82078:	f856 3c18 	ldr.w	r3, [r6, #-24]
   8207c:	9300      	str	r3, [sp, #0]
   8207e:	ebab 0302 	sub.w	r3, fp, r2
   82082:	4462      	add	r2, ip
   82084:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82088:	47d0      	blx	sl
				if (!b_restart) {
   8208a:	4603      	mov	r3, r0
   8208c:	2800      	cmp	r0, #0
   8208e:	d1ae      	bne.n	81fee <udd_ep_alloc+0x126>
   82090:	e002      	b.n	82098 <udd_ep_alloc+0x1d0>
	return true;
   82092:	2301      	movs	r3, #1
   82094:	e000      	b.n	82098 <udd_ep_alloc+0x1d0>
		return false;
   82096:	2300      	movs	r3, #0
}
   82098:	4618      	mov	r0, r3
   8209a:	b003      	add	sp, #12
   8209c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return false;
   820a0:	2300      	movs	r3, #0
   820a2:	e7f9      	b.n	82098 <udd_ep_alloc+0x1d0>
		return false;
   820a4:	2300      	movs	r3, #0
   820a6:	e7f7      	b.n	82098 <udd_ep_alloc+0x1d0>
					return false;
   820a8:	2300      	movs	r3, #0
   820aa:	e7f5      	b.n	82098 <udd_ep_alloc+0x1d0>
   820ac:	400ac000 	.word	0x400ac000
   820b0:	400ac100 	.word	0x400ac100
   820b4:	400ac10c 	.word	0x400ac10c
   820b8:	20070d10 	.word	0x20070d10
   820bc:	00081dcd 	.word	0x00081dcd

000820c0 <udd_ep_abort>:
{
   820c0:	b570      	push	{r4, r5, r6, lr}
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   820c2:	f000 020f 	and.w	r2, r0, #15
		udd_disable_endpoint_dma_interrupt(ep_index);
   820c6:	1e54      	subs	r4, r2, #1
   820c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   820cc:	40a3      	lsls	r3, r4
   820ce:	4916      	ldr	r1, [pc, #88]	; (82128 <udd_ep_abort+0x68>)
   820d0:	614b      	str	r3, [r1, #20]
		udd_endpoint_dma_set_control(ep_index, 0);
   820d2:	4b16      	ldr	r3, [pc, #88]	; (8212c <udd_ep_abort+0x6c>)
   820d4:	eb03 1302 	add.w	r3, r3, r2, lsl #4
   820d8:	2500      	movs	r5, #0
   820da:	609d      	str	r5, [r3, #8]
	udd_disable_endpoint_interrupt(ep_index);
   820dc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   820e0:	4093      	lsls	r3, r2
   820e2:	614b      	str	r3, [r1, #20]
	if (ep & USB_EP_DIR_IN) {
   820e4:	f010 0f80 	tst.w	r0, #128	; 0x80
   820e8:	d108      	bne.n	820fc <udd_ep_abort+0x3c>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   820ea:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   820ee:	2101      	movs	r1, #1
   820f0:	480f      	ldr	r0, [pc, #60]	; (82130 <udd_ep_abort+0x70>)
   820f2:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
   820f6:	4b0f      	ldr	r3, [pc, #60]	; (82134 <udd_ep_abort+0x74>)
   820f8:	4798      	blx	r3
   820fa:	bd70      	pop	{r4, r5, r6, pc}
		while(udd_nb_busy_bank(ep_index)) {
   820fc:	0093      	lsls	r3, r2, #2
   820fe:	480e      	ldr	r0, [pc, #56]	; (82138 <udd_ep_abort+0x78>)
   82100:	4418      	add	r0, r3
			udd_kill_last_in_bank(ep_index);
   82102:	4d0e      	ldr	r5, [pc, #56]	; (8213c <udd_ep_abort+0x7c>)
   82104:	441d      	add	r5, r3
   82106:	f44f 5600 	mov.w	r6, #8192	; 0x2000
			while(Is_udd_kill_last(ep_index));
   8210a:	f501 71e0 	add.w	r1, r1, #448	; 0x1c0
   8210e:	4419      	add	r1, r3
   82110:	e004      	b.n	8211c <udd_ep_abort+0x5c>
			udd_kill_last_in_bank(ep_index);
   82112:	602e      	str	r6, [r5, #0]
			while(Is_udd_kill_last(ep_index));
   82114:	680b      	ldr	r3, [r1, #0]
   82116:	f413 5f00 	tst.w	r3, #8192	; 0x2000
   8211a:	d1fb      	bne.n	82114 <udd_ep_abort+0x54>
		while(udd_nb_busy_bank(ep_index)) {
   8211c:	6803      	ldr	r3, [r0, #0]
   8211e:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   82122:	d1f6      	bne.n	82112 <udd_ep_abort+0x52>
   82124:	e7e1      	b.n	820ea <udd_ep_abort+0x2a>
   82126:	bf00      	nop
   82128:	400ac000 	.word	0x400ac000
   8212c:	400ac300 	.word	0x400ac300
   82130:	20070d10 	.word	0x20070d10
   82134:	00081025 	.word	0x00081025
   82138:	400ac130 	.word	0x400ac130
   8213c:	400ac1f0 	.word	0x400ac1f0

00082140 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   82140:	b508      	push	{r3, lr}
	}
#endif

	if (CONFIG_USBCLK_SOURCE == USBCLK_SRC_UPLL) {

		pmc_enable_upll_clock();
   82142:	4b04      	ldr	r3, [pc, #16]	; (82154 <sysclk_enable_usb+0x14>)
   82144:	4798      	blx	r3
		pmc_switch_udpck_to_upllck(CONFIG_USBCLK_DIV - 1);
   82146:	2000      	movs	r0, #0
   82148:	4b03      	ldr	r3, [pc, #12]	; (82158 <sysclk_enable_usb+0x18>)
   8214a:	4798      	blx	r3
		pmc_enable_udpck();
   8214c:	4b03      	ldr	r3, [pc, #12]	; (8215c <sysclk_enable_usb+0x1c>)
   8214e:	4798      	blx	r3
   82150:	bd08      	pop	{r3, pc}
   82152:	bf00      	nop
   82154:	0008248d 	.word	0x0008248d
   82158:	000824c5 	.word	0x000824c5
   8215c:	000824d9 	.word	0x000824d9

00082160 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   82160:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   82162:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   82166:	4b16      	ldr	r3, [pc, #88]	; (821c0 <board_init+0x60>)
   82168:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8216a:	200b      	movs	r0, #11
   8216c:	4c15      	ldr	r4, [pc, #84]	; (821c4 <board_init+0x64>)
   8216e:	47a0      	blx	r4
   82170:	200c      	movs	r0, #12
   82172:	47a0      	blx	r4
   82174:	200d      	movs	r0, #13
   82176:	47a0      	blx	r4
   82178:	200e      	movs	r0, #14
   8217a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8217c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82180:	203b      	movs	r0, #59	; 0x3b
   82182:	4c11      	ldr	r4, [pc, #68]	; (821c8 <board_init+0x68>)
   82184:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   82186:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8218a:	2055      	movs	r0, #85	; 0x55
   8218c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8218e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82192:	2056      	movs	r0, #86	; 0x56
   82194:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   82196:	490d      	ldr	r1, [pc, #52]	; (821cc <board_init+0x6c>)
   82198:	2068      	movs	r0, #104	; 0x68
   8219a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8219c:	490c      	ldr	r1, [pc, #48]	; (821d0 <board_init+0x70>)
   8219e:	205c      	movs	r0, #92	; 0x5c
   821a0:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   821a2:	4a0c      	ldr	r2, [pc, #48]	; (821d4 <board_init+0x74>)
   821a4:	f44f 7140 	mov.w	r1, #768	; 0x300
   821a8:	480b      	ldr	r0, [pc, #44]	; (821d8 <board_init+0x78>)
   821aa:	4b0c      	ldr	r3, [pc, #48]	; (821dc <board_init+0x7c>)
   821ac:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   821ae:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   821b2:	202b      	movs	r0, #43	; 0x2b
   821b4:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   821b6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   821ba:	202a      	movs	r0, #42	; 0x2a
   821bc:	47a0      	blx	r4
   821be:	bd10      	pop	{r4, pc}
   821c0:	400e1a50 	.word	0x400e1a50
   821c4:	000824a5 	.word	0x000824a5
   821c8:	00082281 	.word	0x00082281
   821cc:	28000079 	.word	0x28000079
   821d0:	28000001 	.word	0x28000001
   821d4:	08000001 	.word	0x08000001
   821d8:	400e0e00 	.word	0x400e0e00
   821dc:	00082351 	.word	0x00082351

000821e0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   821e0:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   821e2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   821e6:	d016      	beq.n	82216 <pio_set_peripheral+0x36>
   821e8:	d80b      	bhi.n	82202 <pio_set_peripheral+0x22>
   821ea:	b149      	cbz	r1, 82200 <pio_set_peripheral+0x20>
   821ec:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   821f0:	d105      	bne.n	821fe <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   821f2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   821f4:	6f01      	ldr	r1, [r0, #112]	; 0x70
   821f6:	400b      	ands	r3, r1
   821f8:	ea23 0302 	bic.w	r3, r3, r2
   821fc:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   821fe:	6042      	str	r2, [r0, #4]
   82200:	4770      	bx	lr
	switch (ul_type) {
   82202:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   82206:	d0fb      	beq.n	82200 <pio_set_peripheral+0x20>
   82208:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   8220c:	d0f8      	beq.n	82200 <pio_set_peripheral+0x20>
   8220e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   82212:	d1f4      	bne.n	821fe <pio_set_peripheral+0x1e>
   82214:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   82216:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82218:	4313      	orrs	r3, r2
   8221a:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   8221c:	e7ef      	b.n	821fe <pio_set_peripheral+0x1e>

0008221e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8221e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   82220:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   82224:	bf14      	ite	ne
   82226:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82228:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8222a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8222e:	bf14      	ite	ne
   82230:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   82232:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   82234:	f012 0f02 	tst.w	r2, #2
   82238:	d107      	bne.n	8224a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8223a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8223e:	bf18      	it	ne
   82240:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   82244:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   82246:	6001      	str	r1, [r0, #0]
   82248:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8224a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8224e:	e7f9      	b.n	82244 <pio_set_input+0x26>

00082250 <pio_set_output>:
{
   82250:	b410      	push	{r4}
   82252:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   82254:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   82256:	b944      	cbnz	r4, 8226a <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   82258:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8225a:	b143      	cbz	r3, 8226e <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   8225c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8225e:	b942      	cbnz	r2, 82272 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   82260:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   82262:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   82264:	6001      	str	r1, [r0, #0]
}
   82266:	bc10      	pop	{r4}
   82268:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   8226a:	6641      	str	r1, [r0, #100]	; 0x64
   8226c:	e7f5      	b.n	8225a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   8226e:	6541      	str	r1, [r0, #84]	; 0x54
   82270:	e7f5      	b.n	8225e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   82272:	6301      	str	r1, [r0, #48]	; 0x30
   82274:	e7f5      	b.n	82262 <pio_set_output+0x12>

00082276 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   82276:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   82278:	4770      	bx	lr

0008227a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8227a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8227c:	4770      	bx	lr
	...

00082280 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   82280:	b570      	push	{r4, r5, r6, lr}
   82282:	b082      	sub	sp, #8
   82284:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82286:	0943      	lsrs	r3, r0, #5
   82288:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8228c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   82290:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   82292:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   82296:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8229a:	d031      	beq.n	82300 <pio_configure_pin+0x80>
   8229c:	d816      	bhi.n	822cc <pio_configure_pin+0x4c>
   8229e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   822a2:	d01b      	beq.n	822dc <pio_configure_pin+0x5c>
   822a4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   822a8:	d116      	bne.n	822d8 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   822aa:	f000 001f 	and.w	r0, r0, #31
   822ae:	2601      	movs	r6, #1
   822b0:	4086      	lsls	r6, r0
   822b2:	4632      	mov	r2, r6
   822b4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   822b8:	4620      	mov	r0, r4
   822ba:	4b22      	ldr	r3, [pc, #136]	; (82344 <pio_configure_pin+0xc4>)
   822bc:	4798      	blx	r3
	if (ul_pull_up_enable) {
   822be:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   822c2:	bf14      	ite	ne
   822c4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   822c6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   822c8:	2001      	movs	r0, #1
   822ca:	e017      	b.n	822fc <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   822cc:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   822d0:	d021      	beq.n	82316 <pio_configure_pin+0x96>
   822d2:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   822d6:	d01e      	beq.n	82316 <pio_configure_pin+0x96>
		return 0;
   822d8:	2000      	movs	r0, #0
   822da:	e00f      	b.n	822fc <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   822dc:	f000 001f 	and.w	r0, r0, #31
   822e0:	2601      	movs	r6, #1
   822e2:	4086      	lsls	r6, r0
   822e4:	4632      	mov	r2, r6
   822e6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   822ea:	4620      	mov	r0, r4
   822ec:	4b15      	ldr	r3, [pc, #84]	; (82344 <pio_configure_pin+0xc4>)
   822ee:	4798      	blx	r3
	if (ul_pull_up_enable) {
   822f0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   822f4:	bf14      	ite	ne
   822f6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   822f8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   822fa:	2001      	movs	r0, #1
}
   822fc:	b002      	add	sp, #8
   822fe:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   82300:	f000 011f 	and.w	r1, r0, #31
   82304:	2601      	movs	r6, #1
   82306:	462a      	mov	r2, r5
   82308:	fa06 f101 	lsl.w	r1, r6, r1
   8230c:	4620      	mov	r0, r4
   8230e:	4b0e      	ldr	r3, [pc, #56]	; (82348 <pio_configure_pin+0xc8>)
   82310:	4798      	blx	r3
	return 1;
   82312:	4630      	mov	r0, r6
		break;
   82314:	e7f2      	b.n	822fc <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   82316:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8231a:	f000 011f 	and.w	r1, r0, #31
   8231e:	2601      	movs	r6, #1
   82320:	ea05 0306 	and.w	r3, r5, r6
   82324:	9300      	str	r3, [sp, #0]
   82326:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8232a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8232e:	bf14      	ite	ne
   82330:	2200      	movne	r2, #0
   82332:	2201      	moveq	r2, #1
   82334:	fa06 f101 	lsl.w	r1, r6, r1
   82338:	4620      	mov	r0, r4
   8233a:	4c04      	ldr	r4, [pc, #16]	; (8234c <pio_configure_pin+0xcc>)
   8233c:	47a0      	blx	r4
	return 1;
   8233e:	4630      	mov	r0, r6
		break;
   82340:	e7dc      	b.n	822fc <pio_configure_pin+0x7c>
   82342:	bf00      	nop
   82344:	000821e1 	.word	0x000821e1
   82348:	0008221f 	.word	0x0008221f
   8234c:	00082251 	.word	0x00082251

00082350 <pio_configure_pin_group>:
{
   82350:	b570      	push	{r4, r5, r6, lr}
   82352:	b082      	sub	sp, #8
   82354:	4605      	mov	r5, r0
   82356:	460e      	mov	r6, r1
   82358:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8235a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8235e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   82362:	d027      	beq.n	823b4 <pio_configure_pin_group+0x64>
   82364:	d811      	bhi.n	8238a <pio_configure_pin_group+0x3a>
   82366:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8236a:	d016      	beq.n	8239a <pio_configure_pin_group+0x4a>
   8236c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82370:	d111      	bne.n	82396 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   82372:	460a      	mov	r2, r1
   82374:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82378:	4b19      	ldr	r3, [pc, #100]	; (823e0 <pio_configure_pin_group+0x90>)
   8237a:	4798      	blx	r3
	if (ul_pull_up_enable) {
   8237c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   82380:	bf14      	ite	ne
   82382:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82384:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   82386:	2001      	movs	r0, #1
   82388:	e012      	b.n	823b0 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   8238a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8238e:	d015      	beq.n	823bc <pio_configure_pin_group+0x6c>
   82390:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   82394:	d012      	beq.n	823bc <pio_configure_pin_group+0x6c>
		return 0;
   82396:	2000      	movs	r0, #0
   82398:	e00a      	b.n	823b0 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   8239a:	460a      	mov	r2, r1
   8239c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   823a0:	4b0f      	ldr	r3, [pc, #60]	; (823e0 <pio_configure_pin_group+0x90>)
   823a2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   823a4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   823a8:	bf14      	ite	ne
   823aa:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   823ac:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   823ae:	2001      	movs	r0, #1
}
   823b0:	b002      	add	sp, #8
   823b2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   823b4:	4b0b      	ldr	r3, [pc, #44]	; (823e4 <pio_configure_pin_group+0x94>)
   823b6:	4798      	blx	r3
	return 1;
   823b8:	2001      	movs	r0, #1
		break;
   823ba:	e7f9      	b.n	823b0 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   823bc:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   823c0:	f004 0301 	and.w	r3, r4, #1
   823c4:	9300      	str	r3, [sp, #0]
   823c6:	f3c4 0380 	ubfx	r3, r4, #2, #1
   823ca:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   823ce:	bf14      	ite	ne
   823d0:	2200      	movne	r2, #0
   823d2:	2201      	moveq	r2, #1
   823d4:	4631      	mov	r1, r6
   823d6:	4628      	mov	r0, r5
   823d8:	4c03      	ldr	r4, [pc, #12]	; (823e8 <pio_configure_pin_group+0x98>)
   823da:	47a0      	blx	r4
	return 1;
   823dc:	2001      	movs	r0, #1
		break;
   823de:	e7e7      	b.n	823b0 <pio_configure_pin_group+0x60>
   823e0:	000821e1 	.word	0x000821e1
   823e4:	0008221f 	.word	0x0008221f
   823e8:	00082251 	.word	0x00082251

000823ec <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   823ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823f0:	4604      	mov	r4, r0
   823f2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   823f4:	4b0e      	ldr	r3, [pc, #56]	; (82430 <pio_handler_process+0x44>)
   823f6:	4798      	blx	r3
   823f8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   823fa:	4620      	mov	r0, r4
   823fc:	4b0d      	ldr	r3, [pc, #52]	; (82434 <pio_handler_process+0x48>)
   823fe:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   82400:	4005      	ands	r5, r0
   82402:	d013      	beq.n	8242c <pio_handler_process+0x40>
   82404:	4c0c      	ldr	r4, [pc, #48]	; (82438 <pio_handler_process+0x4c>)
   82406:	f104 0660 	add.w	r6, r4, #96	; 0x60
   8240a:	e003      	b.n	82414 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   8240c:	42b4      	cmp	r4, r6
   8240e:	d00d      	beq.n	8242c <pio_handler_process+0x40>
   82410:	3410      	adds	r4, #16
		while (status != 0) {
   82412:	b15d      	cbz	r5, 8242c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   82414:	6820      	ldr	r0, [r4, #0]
   82416:	4540      	cmp	r0, r8
   82418:	d1f8      	bne.n	8240c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8241a:	6861      	ldr	r1, [r4, #4]
   8241c:	4229      	tst	r1, r5
   8241e:	d0f5      	beq.n	8240c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   82420:	68e3      	ldr	r3, [r4, #12]
   82422:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   82424:	6863      	ldr	r3, [r4, #4]
   82426:	ea25 0503 	bic.w	r5, r5, r3
   8242a:	e7ef      	b.n	8240c <pio_handler_process+0x20>
   8242c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82430:	00082277 	.word	0x00082277
   82434:	0008227b 	.word	0x0008227b
   82438:	20070d58 	.word	0x20070d58

0008243c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   8243c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8243e:	210b      	movs	r1, #11
   82440:	4801      	ldr	r0, [pc, #4]	; (82448 <PIOA_Handler+0xc>)
   82442:	4b02      	ldr	r3, [pc, #8]	; (8244c <PIOA_Handler+0x10>)
   82444:	4798      	blx	r3
   82446:	bd08      	pop	{r3, pc}
   82448:	400e0e00 	.word	0x400e0e00
   8244c:	000823ed 	.word	0x000823ed

00082450 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   82450:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   82452:	210c      	movs	r1, #12
   82454:	4801      	ldr	r0, [pc, #4]	; (8245c <PIOB_Handler+0xc>)
   82456:	4b02      	ldr	r3, [pc, #8]	; (82460 <PIOB_Handler+0x10>)
   82458:	4798      	blx	r3
   8245a:	bd08      	pop	{r3, pc}
   8245c:	400e1000 	.word	0x400e1000
   82460:	000823ed 	.word	0x000823ed

00082464 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   82464:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   82466:	210d      	movs	r1, #13
   82468:	4801      	ldr	r0, [pc, #4]	; (82470 <PIOC_Handler+0xc>)
   8246a:	4b02      	ldr	r3, [pc, #8]	; (82474 <PIOC_Handler+0x10>)
   8246c:	4798      	blx	r3
   8246e:	bd08      	pop	{r3, pc}
   82470:	400e1200 	.word	0x400e1200
   82474:	000823ed 	.word	0x000823ed

00082478 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   82478:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   8247a:	210e      	movs	r1, #14
   8247c:	4801      	ldr	r0, [pc, #4]	; (82484 <PIOD_Handler+0xc>)
   8247e:	4b02      	ldr	r3, [pc, #8]	; (82488 <PIOD_Handler+0x10>)
   82480:	4798      	blx	r3
   82482:	bd08      	pop	{r3, pc}
   82484:	400e1400 	.word	0x400e1400
   82488:	000823ed 	.word	0x000823ed

0008248c <pmc_enable_upll_clock>:
/**
 * \brief Enable UPLL clock.
 */
void pmc_enable_upll_clock(void)
{
	PMC->CKGR_UCKR = CKGR_UCKR_UPLLCOUNT(3) | CKGR_UCKR_UPLLEN;
   8248c:	f44f 1244 	mov.w	r2, #3211264	; 0x310000
   82490:	4b03      	ldr	r3, [pc, #12]	; (824a0 <pmc_enable_upll_clock+0x14>)
   82492:	61da      	str	r2, [r3, #28]

	/* Wait UTMI PLL Lock Status */
	while (!(PMC->PMC_SR & PMC_SR_LOCKU));
   82494:	461a      	mov	r2, r3
   82496:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82498:	f013 0f40 	tst.w	r3, #64	; 0x40
   8249c:	d0fb      	beq.n	82496 <pmc_enable_upll_clock+0xa>
}
   8249e:	4770      	bx	lr
   824a0:	400e0600 	.word	0x400e0600

000824a4 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
   824a4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   824a8:	4b05      	ldr	r3, [pc, #20]	; (824c0 <pmc_enable_periph_clk+0x1c>)
   824aa:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
   824ae:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   824b2:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
   824b6:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
   824ba:	2000      	movs	r0, #0
   824bc:	4770      	bx	lr
   824be:	bf00      	nop
   824c0:	400e0600 	.word	0x400e0600

000824c4 <pmc_switch_udpck_to_upllck>:
 *
 * \param ul_usbdiv Clock divisor.
 */
void pmc_switch_udpck_to_upllck(uint32_t ul_usbdiv)
{
	PMC->PMC_USB = PMC_USB_USBS | PMC_USB_USBDIV(ul_usbdiv);
   824c4:	0200      	lsls	r0, r0, #8
   824c6:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
   824ca:	f040 0001 	orr.w	r0, r0, #1
   824ce:	4b01      	ldr	r3, [pc, #4]	; (824d4 <pmc_switch_udpck_to_upllck+0x10>)
   824d0:	6398      	str	r0, [r3, #56]	; 0x38
   824d2:	4770      	bx	lr
   824d4:	400e0600 	.word	0x400e0600

000824d8 <pmc_enable_udpck>:
#if (SAM3S || SAM4S || SAM4E || SAMG55)
	PMC->PMC_SCER = PMC_SCER_UDP;
#elif (SAMV71 || SAMV70 || SAME70 || SAMS70)
	PMC->PMC_SCER = PMC_SCER_USBCLK;
#else
	PMC->PMC_SCER = PMC_SCER_UOTGCLK;
   824d8:	2220      	movs	r2, #32
   824da:	4b01      	ldr	r3, [pc, #4]	; (824e0 <pmc_enable_udpck+0x8>)
   824dc:	601a      	str	r2, [r3, #0]
   824de:	4770      	bx	lr
   824e0:	400e0600 	.word	0x400e0600

000824e4 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   824e4:	4b03      	ldr	r3, [pc, #12]	; (824f4 <pmc_set_fast_startup_input+0x10>)
   824e6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   824e8:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   824ec:	4310      	orrs	r0, r2
   824ee:	6718      	str	r0, [r3, #112]	; 0x70
   824f0:	4770      	bx	lr
   824f2:	bf00      	nop
   824f4:	400e0600 	.word	0x400e0600

000824f8 <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   824f8:	4b02      	ldr	r3, [pc, #8]	; (82504 <pmc_is_wakeup_clocks_restored+0xc>)
   824fa:	7818      	ldrb	r0, [r3, #0]
}
   824fc:	f080 0001 	eor.w	r0, r0, #1
   82500:	4770      	bx	lr
   82502:	bf00      	nop
   82504:	20070dc8 	.word	0x20070dc8

00082508 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   82508:	e7fe      	b.n	82508 <Dummy_Handler>
	...

0008250c <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   8250c:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8250e:	4b1c      	ldr	r3, [pc, #112]	; (82580 <Reset_Handler+0x74>)
   82510:	4a1c      	ldr	r2, [pc, #112]	; (82584 <Reset_Handler+0x78>)
   82512:	429a      	cmp	r2, r3
   82514:	d010      	beq.n	82538 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   82516:	4b1c      	ldr	r3, [pc, #112]	; (82588 <Reset_Handler+0x7c>)
   82518:	4a19      	ldr	r2, [pc, #100]	; (82580 <Reset_Handler+0x74>)
   8251a:	429a      	cmp	r2, r3
   8251c:	d20c      	bcs.n	82538 <Reset_Handler+0x2c>
   8251e:	3b01      	subs	r3, #1
   82520:	1a9b      	subs	r3, r3, r2
   82522:	f023 0303 	bic.w	r3, r3, #3
   82526:	3304      	adds	r3, #4
   82528:	4413      	add	r3, r2
   8252a:	4916      	ldr	r1, [pc, #88]	; (82584 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   8252c:	f851 0b04 	ldr.w	r0, [r1], #4
   82530:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   82534:	429a      	cmp	r2, r3
   82536:	d1f9      	bne.n	8252c <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   82538:	4b14      	ldr	r3, [pc, #80]	; (8258c <Reset_Handler+0x80>)
   8253a:	4a15      	ldr	r2, [pc, #84]	; (82590 <Reset_Handler+0x84>)
   8253c:	429a      	cmp	r2, r3
   8253e:	d20a      	bcs.n	82556 <Reset_Handler+0x4a>
   82540:	3b01      	subs	r3, #1
   82542:	1a9b      	subs	r3, r3, r2
   82544:	f023 0303 	bic.w	r3, r3, #3
   82548:	3304      	adds	r3, #4
   8254a:	4413      	add	r3, r2
		*pDest++ = 0;
   8254c:	2100      	movs	r1, #0
   8254e:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   82552:	4293      	cmp	r3, r2
   82554:	d1fb      	bne.n	8254e <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82556:	4b0f      	ldr	r3, [pc, #60]	; (82594 <Reset_Handler+0x88>)
   82558:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   8255c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   82560:	490d      	ldr	r1, [pc, #52]	; (82598 <Reset_Handler+0x8c>)
   82562:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   82564:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   82568:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   8256c:	d203      	bcs.n	82576 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8256e:	688b      	ldr	r3, [r1, #8]
   82570:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   82574:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   82576:	4b09      	ldr	r3, [pc, #36]	; (8259c <Reset_Handler+0x90>)
   82578:	4798      	blx	r3

	/* Branch to main function */
	main();
   8257a:	4b09      	ldr	r3, [pc, #36]	; (825a0 <Reset_Handler+0x94>)
   8257c:	4798      	blx	r3
   8257e:	e7fe      	b.n	8257e <Reset_Handler+0x72>
   82580:	20070000 	.word	0x20070000
   82584:	000872f4 	.word	0x000872f4
   82588:	20070b90 	.word	0x20070b90
   8258c:	20070e4c 	.word	0x20070e4c
   82590:	20070b90 	.word	0x20070b90
   82594:	00080000 	.word	0x00080000
   82598:	e000ed00 	.word	0xe000ed00
   8259c:	00082725 	.word	0x00082725
   825a0:	000826b5 	.word	0x000826b5

000825a4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   825a4:	4b0a      	ldr	r3, [pc, #40]	; (825d0 <_sbrk+0x2c>)
   825a6:	681b      	ldr	r3, [r3, #0]
   825a8:	b153      	cbz	r3, 825c0 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   825aa:	4b09      	ldr	r3, [pc, #36]	; (825d0 <_sbrk+0x2c>)
   825ac:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   825ae:	181a      	adds	r2, r3, r0
   825b0:	4908      	ldr	r1, [pc, #32]	; (825d4 <_sbrk+0x30>)
   825b2:	4291      	cmp	r1, r2
   825b4:	db08      	blt.n	825c8 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   825b6:	4610      	mov	r0, r2
   825b8:	4a05      	ldr	r2, [pc, #20]	; (825d0 <_sbrk+0x2c>)
   825ba:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   825bc:	4618      	mov	r0, r3
   825be:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   825c0:	4a05      	ldr	r2, [pc, #20]	; (825d8 <_sbrk+0x34>)
   825c2:	4b03      	ldr	r3, [pc, #12]	; (825d0 <_sbrk+0x2c>)
   825c4:	601a      	str	r2, [r3, #0]
   825c6:	e7f0      	b.n	825aa <_sbrk+0x6>
		return (caddr_t) -1;	
   825c8:	f04f 30ff 	mov.w	r0, #4294967295
}
   825cc:	4770      	bx	lr
   825ce:	bf00      	nop
   825d0:	20070dcc 	.word	0x20070dcc
   825d4:	20087ffc 	.word	0x20087ffc
   825d8:	20072e50 	.word	0x20072e50

000825dc <debug_print>:
	int len = snprintf(buffer, sizeof(buffer), format, ##__VA_ARGS__); \
	debug_print(buffer, len); \
} while (0)

// Function to send the buffer via USB CDC
void debug_print(const char *message, int length) {
   825dc:	b570      	push	{r4, r5, r6, lr}
	for (int i = 0; i < length; i++) {
   825de:	1e0d      	subs	r5, r1, #0
   825e0:	dd07      	ble.n	825f2 <debug_print+0x16>
   825e2:	4604      	mov	r4, r0
   825e4:	4405      	add	r5, r0
		udi_cdc_putc(message[i]);
   825e6:	4e03      	ldr	r6, [pc, #12]	; (825f4 <debug_print+0x18>)
   825e8:	f814 0b01 	ldrb.w	r0, [r4], #1
   825ec:	47b0      	blx	r6
	for (int i = 0; i < length; i++) {
   825ee:	42ac      	cmp	r4, r5
   825f0:	d1fa      	bne.n	825e8 <debug_print+0xc>
   825f2:	bd70      	pop	{r4, r5, r6, pc}
   825f4:	00080735 	.word	0x00080735

000825f8 <TC0_Handler>:
	}
}

// Timer Counter interrupt handler
void TC0_Handler(void) {
   825f8:	b508      	push	{r3, lr}
    // Clear the interrupt status to acknowledge
    uint32_t status = tc_get_status(TC0, 0);
   825fa:	2100      	movs	r1, #0
   825fc:	4801      	ldr	r0, [pc, #4]	; (82604 <TC0_Handler+0xc>)
   825fe:	4b02      	ldr	r3, [pc, #8]	; (82608 <TC0_Handler+0x10>)
   82600:	4798      	blx	r3
   82602:	bd08      	pop	{r3, pc}
   82604:	40080000 	.word	0x40080000
   82608:	00080dc7 	.word	0x00080dc7

0008260c <configure_timer>:
		//DEBUG_INFO("TC0 handler\n");
    }
}

// Configure the Timer Counter to generate periodic interrupts
void configure_timer(void) {
   8260c:	b510      	push	{r4, lr}
    // Enable Timer Counter peripheral clock
    pmc_enable_periph_clk(ID_TC0);
   8260e:	201b      	movs	r0, #27
   82610:	4b0d      	ldr	r3, [pc, #52]	; (82648 <configure_timer+0x3c>)
   82612:	4798      	blx	r3

    // Configure the Timer Counter (TC0 Channel 0)
    tc_init(TC0, 0, TC_CMR_TCCLKS_TIMER_CLOCK2 | // Timer clock = MCK/8
   82614:	4c0d      	ldr	r4, [pc, #52]	; (8264c <configure_timer+0x40>)
   82616:	f24c 0201 	movw	r2, #49153	; 0xc001
   8261a:	2100      	movs	r1, #0
   8261c:	4620      	mov	r0, r4
   8261e:	4b0c      	ldr	r3, [pc, #48]	; (82650 <configure_timer+0x44>)
   82620:	4798      	blx	r3
                      TC_CMR_WAVSEL_UP_RC);      // Count up to RC and reset

    // Set the frequency of the timer (example: 1 Hz for LED blinking)
    uint32_t timer_clock = sysclk_get_peripheral_hz() / 8; // MCK/8
    uint32_t rc_value = timer_clock / 2; // RC value for 0.5 Hz (1 second period)
    tc_write_rc(TC0, 0, rc_value);
   82622:	4a0c      	ldr	r2, [pc, #48]	; (82654 <configure_timer+0x48>)
   82624:	2100      	movs	r1, #0
   82626:	4620      	mov	r0, r4
   82628:	4b0b      	ldr	r3, [pc, #44]	; (82658 <configure_timer+0x4c>)
   8262a:	4798      	blx	r3

    // Enable the RC Compare interrupt
    tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   8262c:	2210      	movs	r2, #16
   8262e:	2100      	movs	r1, #0
   82630:	4620      	mov	r0, r4
   82632:	4b0a      	ldr	r3, [pc, #40]	; (8265c <configure_timer+0x50>)
   82634:	4798      	blx	r3
   82636:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8263a:	4b09      	ldr	r3, [pc, #36]	; (82660 <configure_timer+0x54>)
   8263c:	601a      	str	r2, [r3, #0]

    // Enable the Timer Counter interrupt in the NVIC
    NVIC_EnableIRQ(TC0_IRQn);

    // Start the timer
    tc_start(TC0, 0);
   8263e:	2100      	movs	r1, #0
   82640:	4620      	mov	r0, r4
   82642:	4b08      	ldr	r3, [pc, #32]	; (82664 <configure_timer+0x58>)
   82644:	4798      	blx	r3
   82646:	bd10      	pop	{r4, pc}
   82648:	000824a5 	.word	0x000824a5
   8264c:	40080000 	.word	0x40080000
   82650:	00080d97 	.word	0x00080d97
   82654:	00501bd0 	.word	0x00501bd0
   82658:	00080db7 	.word	0x00080db7
   8265c:	00080dbf 	.word	0x00080dbf
   82660:	e000e100 	.word	0xe000e100
   82664:	00080daf 	.word	0x00080daf

00082668 <ADC_Handler>:

//uint32_t text = "h";

//const char *text = "hello world\n"; // Include the newline for formatting
	// ADC interrupt handler
	void ADC_Handler(void) {
   82668:	b510      	push	{r4, lr}
   8266a:	b0a0      	sub	sp, #128	; 0x80
		uint32_t status = adc_get_status(ADC);
   8266c:	480b      	ldr	r0, [pc, #44]	; (8269c <ADC_Handler+0x34>)
   8266e:	4b0c      	ldr	r3, [pc, #48]	; (826a0 <ADC_Handler+0x38>)
   82670:	4798      	blx	r3

		if (status & ADC_ISR_EOC0) { // Check if End of Conversion for channel 0
   82672:	f010 0f01 	tst.w	r0, #1
   82676:	d101      	bne.n	8267c <ADC_Handler+0x14>
			uint16_t value = adc_get_channel_value(ADC, ADC_CHANNEL_0); // Read ADC result
			DEBUG_INFO("ADC Value: %d\n", value); // Print via USB CDC
		}
	}
   82678:	b020      	add	sp, #128	; 0x80
   8267a:	bd10      	pop	{r4, pc}
			uint16_t value = adc_get_channel_value(ADC, ADC_CHANNEL_0); // Read ADC result
   8267c:	2100      	movs	r1, #0
   8267e:	4807      	ldr	r0, [pc, #28]	; (8269c <ADC_Handler+0x34>)
   82680:	4b08      	ldr	r3, [pc, #32]	; (826a4 <ADC_Handler+0x3c>)
   82682:	4798      	blx	r3
			DEBUG_INFO("ADC Value: %d\n", value); // Print via USB CDC
   82684:	b283      	uxth	r3, r0
   82686:	4a08      	ldr	r2, [pc, #32]	; (826a8 <ADC_Handler+0x40>)
   82688:	2180      	movs	r1, #128	; 0x80
   8268a:	4668      	mov	r0, sp
   8268c:	4c07      	ldr	r4, [pc, #28]	; (826ac <ADC_Handler+0x44>)
   8268e:	47a0      	blx	r4
   82690:	4601      	mov	r1, r0
   82692:	4668      	mov	r0, sp
   82694:	4b06      	ldr	r3, [pc, #24]	; (826b0 <ADC_Handler+0x48>)
   82696:	4798      	blx	r3
	}
   82698:	e7ee      	b.n	82678 <ADC_Handler+0x10>
   8269a:	bf00      	nop
   8269c:	400c0000 	.word	0x400c0000
   826a0:	00080d93 	.word	0x00080d93
   826a4:	00080d85 	.word	0x00080d85
   826a8:	0008700c 	.word	0x0008700c
   826ac:	000828fd 	.word	0x000828fd
   826b0:	000825dd 	.word	0x000825dd

000826b4 <main>:

	  adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
  }

int main (void)
{
   826b4:	b5f0      	push	{r4, r5, r6, r7, lr}
   826b6:	b0a1      	sub	sp, #132	; 0x84
	/* Insert system clock initialization code here (sysclk_init()). */
	SystemInit();
   826b8:	4b11      	ldr	r3, [pc, #68]	; (82700 <main+0x4c>)
   826ba:	4798      	blx	r3
	board_init();
   826bc:	4b11      	ldr	r3, [pc, #68]	; (82704 <main+0x50>)
   826be:	4798      	blx	r3
	udc_start();
   826c0:	4b11      	ldr	r3, [pc, #68]	; (82708 <main+0x54>)
   826c2:	4798      	blx	r3
//cpu_irq_enable();
//NVIC_EnableIRQ(ADC_IRQn); 
//adc_setup();
//adc_start(ADC);
//pio_configure_pin(ID_PIOD, PIO_OUTPUT_1);
DEBUG_INFO("example, started!\n");
   826c4:	466c      	mov	r4, sp
   826c6:	4d11      	ldr	r5, [pc, #68]	; (8270c <main+0x58>)
   826c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   826ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   826cc:	682b      	ldr	r3, [r5, #0]
   826ce:	f824 3b02 	strh.w	r3, [r4], #2
   826d2:	0c1b      	lsrs	r3, r3, #16
   826d4:	7023      	strb	r3, [r4, #0]
   826d6:	2112      	movs	r1, #18
   826d8:	4668      	mov	r0, sp
   826da:	4b0d      	ldr	r3, [pc, #52]	; (82710 <main+0x5c>)
   826dc:	4798      	blx	r3
//NVIC_EnableIRQ(ADC_IRQn); 
//adc_set_trigger(ADC, ADC_TRIG_TIO_CH0);

//adc_start();
//configure_led();
configure_timer();
   826de:	4b0d      	ldr	r3, [pc, #52]	; (82714 <main+0x60>)
   826e0:	4798      	blx	r3
{
	
	
		//uint16_t value = 1234;
		//DEBUG_INFO("Value: %d\n", value); // Output: "Value: 1234"
		DEBUG_INFO("Hello World!\n");
   826e2:	4d0d      	ldr	r5, [pc, #52]	; (82718 <main+0x64>)
   826e4:	4f0a      	ldr	r7, [pc, #40]	; (82710 <main+0x5c>)
	
	//udi_cdc_write_buf(text, strlen(text));
	//udi_cdc_putc(48);
	//udi_cdc_putc(10);
	//DEBUG_INFO("Value: %d\n", value);
	delay_ms(500);
   826e6:	4e0d      	ldr	r6, [pc, #52]	; (8271c <main+0x68>)
		DEBUG_INFO("Hello World!\n");
   826e8:	466c      	mov	r4, sp
   826ea:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
   826ee:	c407      	stmia	r4!, {r0, r1, r2}
   826f0:	8023      	strh	r3, [r4, #0]
   826f2:	210d      	movs	r1, #13
   826f4:	4668      	mov	r0, sp
   826f6:	47b8      	blx	r7
	delay_ms(500);
   826f8:	4630      	mov	r0, r6
   826fa:	4b09      	ldr	r3, [pc, #36]	; (82720 <main+0x6c>)
   826fc:	4798      	blx	r3
   826fe:	e7f3      	b.n	826e8 <main+0x34>
   82700:	2007000d 	.word	0x2007000d
   82704:	00082161 	.word	0x00082161
   82708:	000808e1 	.word	0x000808e1
   8270c:	0008701c 	.word	0x0008701c
   82710:	000825dd 	.word	0x000825dd
   82714:	0008260d 	.word	0x0008260d
   82718:	00087030 	.word	0x00087030
   8271c:	002dc6c0 	.word	0x002dc6c0
   82720:	20070001 	.word	0x20070001

00082724 <__libc_init_array>:
   82724:	b570      	push	{r4, r5, r6, lr}
   82726:	4e0f      	ldr	r6, [pc, #60]	; (82764 <__libc_init_array+0x40>)
   82728:	4d0f      	ldr	r5, [pc, #60]	; (82768 <__libc_init_array+0x44>)
   8272a:	1b76      	subs	r6, r6, r5
   8272c:	10b6      	asrs	r6, r6, #2
   8272e:	bf18      	it	ne
   82730:	2400      	movne	r4, #0
   82732:	d005      	beq.n	82740 <__libc_init_array+0x1c>
   82734:	3401      	adds	r4, #1
   82736:	f855 3b04 	ldr.w	r3, [r5], #4
   8273a:	4798      	blx	r3
   8273c:	42a6      	cmp	r6, r4
   8273e:	d1f9      	bne.n	82734 <__libc_init_array+0x10>
   82740:	4e0a      	ldr	r6, [pc, #40]	; (8276c <__libc_init_array+0x48>)
   82742:	4d0b      	ldr	r5, [pc, #44]	; (82770 <__libc_init_array+0x4c>)
   82744:	f004 fdc0 	bl	872c8 <_init>
   82748:	1b76      	subs	r6, r6, r5
   8274a:	10b6      	asrs	r6, r6, #2
   8274c:	bf18      	it	ne
   8274e:	2400      	movne	r4, #0
   82750:	d006      	beq.n	82760 <__libc_init_array+0x3c>
   82752:	3401      	adds	r4, #1
   82754:	f855 3b04 	ldr.w	r3, [r5], #4
   82758:	4798      	blx	r3
   8275a:	42a6      	cmp	r6, r4
   8275c:	d1f9      	bne.n	82752 <__libc_init_array+0x2e>
   8275e:	bd70      	pop	{r4, r5, r6, pc}
   82760:	bd70      	pop	{r4, r5, r6, pc}
   82762:	bf00      	nop
   82764:	000872d4 	.word	0x000872d4
   82768:	000872d4 	.word	0x000872d4
   8276c:	000872dc 	.word	0x000872dc
   82770:	000872d4 	.word	0x000872d4

00082774 <memcpy>:
   82774:	4684      	mov	ip, r0
   82776:	ea41 0300 	orr.w	r3, r1, r0
   8277a:	f013 0303 	ands.w	r3, r3, #3
   8277e:	d149      	bne.n	82814 <memcpy+0xa0>
   82780:	3a40      	subs	r2, #64	; 0x40
   82782:	d323      	bcc.n	827cc <memcpy+0x58>
   82784:	680b      	ldr	r3, [r1, #0]
   82786:	6003      	str	r3, [r0, #0]
   82788:	684b      	ldr	r3, [r1, #4]
   8278a:	6043      	str	r3, [r0, #4]
   8278c:	688b      	ldr	r3, [r1, #8]
   8278e:	6083      	str	r3, [r0, #8]
   82790:	68cb      	ldr	r3, [r1, #12]
   82792:	60c3      	str	r3, [r0, #12]
   82794:	690b      	ldr	r3, [r1, #16]
   82796:	6103      	str	r3, [r0, #16]
   82798:	694b      	ldr	r3, [r1, #20]
   8279a:	6143      	str	r3, [r0, #20]
   8279c:	698b      	ldr	r3, [r1, #24]
   8279e:	6183      	str	r3, [r0, #24]
   827a0:	69cb      	ldr	r3, [r1, #28]
   827a2:	61c3      	str	r3, [r0, #28]
   827a4:	6a0b      	ldr	r3, [r1, #32]
   827a6:	6203      	str	r3, [r0, #32]
   827a8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   827aa:	6243      	str	r3, [r0, #36]	; 0x24
   827ac:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   827ae:	6283      	str	r3, [r0, #40]	; 0x28
   827b0:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   827b2:	62c3      	str	r3, [r0, #44]	; 0x2c
   827b4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   827b6:	6303      	str	r3, [r0, #48]	; 0x30
   827b8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   827ba:	6343      	str	r3, [r0, #52]	; 0x34
   827bc:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   827be:	6383      	str	r3, [r0, #56]	; 0x38
   827c0:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   827c2:	63c3      	str	r3, [r0, #60]	; 0x3c
   827c4:	3040      	adds	r0, #64	; 0x40
   827c6:	3140      	adds	r1, #64	; 0x40
   827c8:	3a40      	subs	r2, #64	; 0x40
   827ca:	d2db      	bcs.n	82784 <memcpy+0x10>
   827cc:	3230      	adds	r2, #48	; 0x30
   827ce:	d30b      	bcc.n	827e8 <memcpy+0x74>
   827d0:	680b      	ldr	r3, [r1, #0]
   827d2:	6003      	str	r3, [r0, #0]
   827d4:	684b      	ldr	r3, [r1, #4]
   827d6:	6043      	str	r3, [r0, #4]
   827d8:	688b      	ldr	r3, [r1, #8]
   827da:	6083      	str	r3, [r0, #8]
   827dc:	68cb      	ldr	r3, [r1, #12]
   827de:	60c3      	str	r3, [r0, #12]
   827e0:	3010      	adds	r0, #16
   827e2:	3110      	adds	r1, #16
   827e4:	3a10      	subs	r2, #16
   827e6:	d2f3      	bcs.n	827d0 <memcpy+0x5c>
   827e8:	320c      	adds	r2, #12
   827ea:	d305      	bcc.n	827f8 <memcpy+0x84>
   827ec:	f851 3b04 	ldr.w	r3, [r1], #4
   827f0:	f840 3b04 	str.w	r3, [r0], #4
   827f4:	3a04      	subs	r2, #4
   827f6:	d2f9      	bcs.n	827ec <memcpy+0x78>
   827f8:	3204      	adds	r2, #4
   827fa:	d008      	beq.n	8280e <memcpy+0x9a>
   827fc:	07d2      	lsls	r2, r2, #31
   827fe:	bf1c      	itt	ne
   82800:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82804:	f800 3b01 	strbne.w	r3, [r0], #1
   82808:	d301      	bcc.n	8280e <memcpy+0x9a>
   8280a:	880b      	ldrh	r3, [r1, #0]
   8280c:	8003      	strh	r3, [r0, #0]
   8280e:	4660      	mov	r0, ip
   82810:	4770      	bx	lr
   82812:	bf00      	nop
   82814:	2a08      	cmp	r2, #8
   82816:	d313      	bcc.n	82840 <memcpy+0xcc>
   82818:	078b      	lsls	r3, r1, #30
   8281a:	d0b1      	beq.n	82780 <memcpy+0xc>
   8281c:	f010 0303 	ands.w	r3, r0, #3
   82820:	d0ae      	beq.n	82780 <memcpy+0xc>
   82822:	f1c3 0304 	rsb	r3, r3, #4
   82826:	1ad2      	subs	r2, r2, r3
   82828:	07db      	lsls	r3, r3, #31
   8282a:	bf1c      	itt	ne
   8282c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82830:	f800 3b01 	strbne.w	r3, [r0], #1
   82834:	d3a4      	bcc.n	82780 <memcpy+0xc>
   82836:	f831 3b02 	ldrh.w	r3, [r1], #2
   8283a:	f820 3b02 	strh.w	r3, [r0], #2
   8283e:	e79f      	b.n	82780 <memcpy+0xc>
   82840:	3a04      	subs	r2, #4
   82842:	d3d9      	bcc.n	827f8 <memcpy+0x84>
   82844:	3a01      	subs	r2, #1
   82846:	f811 3b01 	ldrb.w	r3, [r1], #1
   8284a:	f800 3b01 	strb.w	r3, [r0], #1
   8284e:	d2f9      	bcs.n	82844 <memcpy+0xd0>
   82850:	780b      	ldrb	r3, [r1, #0]
   82852:	7003      	strb	r3, [r0, #0]
   82854:	784b      	ldrb	r3, [r1, #1]
   82856:	7043      	strb	r3, [r0, #1]
   82858:	788b      	ldrb	r3, [r1, #2]
   8285a:	7083      	strb	r3, [r0, #2]
   8285c:	4660      	mov	r0, ip
   8285e:	4770      	bx	lr

00082860 <memset>:
   82860:	b470      	push	{r4, r5, r6}
   82862:	0786      	lsls	r6, r0, #30
   82864:	d046      	beq.n	828f4 <memset+0x94>
   82866:	1e54      	subs	r4, r2, #1
   82868:	2a00      	cmp	r2, #0
   8286a:	d041      	beq.n	828f0 <memset+0x90>
   8286c:	b2ca      	uxtb	r2, r1
   8286e:	4603      	mov	r3, r0
   82870:	e002      	b.n	82878 <memset+0x18>
   82872:	f114 34ff 	adds.w	r4, r4, #4294967295
   82876:	d33b      	bcc.n	828f0 <memset+0x90>
   82878:	f803 2b01 	strb.w	r2, [r3], #1
   8287c:	079d      	lsls	r5, r3, #30
   8287e:	d1f8      	bne.n	82872 <memset+0x12>
   82880:	2c03      	cmp	r4, #3
   82882:	d92e      	bls.n	828e2 <memset+0x82>
   82884:	b2cd      	uxtb	r5, r1
   82886:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8288a:	2c0f      	cmp	r4, #15
   8288c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   82890:	d919      	bls.n	828c6 <memset+0x66>
   82892:	4626      	mov	r6, r4
   82894:	f103 0210 	add.w	r2, r3, #16
   82898:	3e10      	subs	r6, #16
   8289a:	2e0f      	cmp	r6, #15
   8289c:	f842 5c10 	str.w	r5, [r2, #-16]
   828a0:	f842 5c0c 	str.w	r5, [r2, #-12]
   828a4:	f842 5c08 	str.w	r5, [r2, #-8]
   828a8:	f842 5c04 	str.w	r5, [r2, #-4]
   828ac:	f102 0210 	add.w	r2, r2, #16
   828b0:	d8f2      	bhi.n	82898 <memset+0x38>
   828b2:	f1a4 0210 	sub.w	r2, r4, #16
   828b6:	f022 020f 	bic.w	r2, r2, #15
   828ba:	f004 040f 	and.w	r4, r4, #15
   828be:	3210      	adds	r2, #16
   828c0:	2c03      	cmp	r4, #3
   828c2:	4413      	add	r3, r2
   828c4:	d90d      	bls.n	828e2 <memset+0x82>
   828c6:	461e      	mov	r6, r3
   828c8:	4622      	mov	r2, r4
   828ca:	3a04      	subs	r2, #4
   828cc:	2a03      	cmp	r2, #3
   828ce:	f846 5b04 	str.w	r5, [r6], #4
   828d2:	d8fa      	bhi.n	828ca <memset+0x6a>
   828d4:	1f22      	subs	r2, r4, #4
   828d6:	f022 0203 	bic.w	r2, r2, #3
   828da:	3204      	adds	r2, #4
   828dc:	4413      	add	r3, r2
   828de:	f004 0403 	and.w	r4, r4, #3
   828e2:	b12c      	cbz	r4, 828f0 <memset+0x90>
   828e4:	b2c9      	uxtb	r1, r1
   828e6:	441c      	add	r4, r3
   828e8:	f803 1b01 	strb.w	r1, [r3], #1
   828ec:	429c      	cmp	r4, r3
   828ee:	d1fb      	bne.n	828e8 <memset+0x88>
   828f0:	bc70      	pop	{r4, r5, r6}
   828f2:	4770      	bx	lr
   828f4:	4614      	mov	r4, r2
   828f6:	4603      	mov	r3, r0
   828f8:	e7c2      	b.n	82880 <memset+0x20>
   828fa:	bf00      	nop

000828fc <snprintf>:
   828fc:	b40c      	push	{r2, r3}
   828fe:	b5f0      	push	{r4, r5, r6, r7, lr}
   82900:	4b22      	ldr	r3, [pc, #136]	; (8298c <snprintf+0x90>)
   82902:	1e0c      	subs	r4, r1, #0
   82904:	b09d      	sub	sp, #116	; 0x74
   82906:	681d      	ldr	r5, [r3, #0]
   82908:	db3b      	blt.n	82982 <snprintf+0x86>
   8290a:	f44f 7302 	mov.w	r3, #520	; 0x208
   8290e:	9002      	str	r0, [sp, #8]
   82910:	9006      	str	r0, [sp, #24]
   82912:	f8ad 3014 	strh.w	r3, [sp, #20]
   82916:	f64f 77ff 	movw	r7, #65535	; 0xffff
   8291a:	ae23      	add	r6, sp, #140	; 0x8c
   8291c:	d015      	beq.n	8294a <snprintf+0x4e>
   8291e:	3c01      	subs	r4, #1
   82920:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82922:	4633      	mov	r3, r6
   82924:	a902      	add	r1, sp, #8
   82926:	4628      	mov	r0, r5
   82928:	9404      	str	r4, [sp, #16]
   8292a:	9407      	str	r4, [sp, #28]
   8292c:	f8ad 7016 	strh.w	r7, [sp, #22]
   82930:	9601      	str	r6, [sp, #4]
   82932:	f000 f85b 	bl	829ec <_svfprintf_r>
   82936:	1c42      	adds	r2, r0, #1
   82938:	db19      	blt.n	8296e <snprintf+0x72>
   8293a:	2200      	movs	r2, #0
   8293c:	9b02      	ldr	r3, [sp, #8]
   8293e:	701a      	strb	r2, [r3, #0]
   82940:	b01d      	add	sp, #116	; 0x74
   82942:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   82946:	b002      	add	sp, #8
   82948:	4770      	bx	lr
   8294a:	4633      	mov	r3, r6
   8294c:	9a22      	ldr	r2, [sp, #136]	; 0x88
   8294e:	a902      	add	r1, sp, #8
   82950:	4628      	mov	r0, r5
   82952:	9404      	str	r4, [sp, #16]
   82954:	9407      	str	r4, [sp, #28]
   82956:	f8ad 7016 	strh.w	r7, [sp, #22]
   8295a:	9601      	str	r6, [sp, #4]
   8295c:	f000 f846 	bl	829ec <_svfprintf_r>
   82960:	1c43      	adds	r3, r0, #1
   82962:	db07      	blt.n	82974 <snprintf+0x78>
   82964:	b01d      	add	sp, #116	; 0x74
   82966:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8296a:	b002      	add	sp, #8
   8296c:	4770      	bx	lr
   8296e:	238b      	movs	r3, #139	; 0x8b
   82970:	602b      	str	r3, [r5, #0]
   82972:	e7e2      	b.n	8293a <snprintf+0x3e>
   82974:	238b      	movs	r3, #139	; 0x8b
   82976:	602b      	str	r3, [r5, #0]
   82978:	b01d      	add	sp, #116	; 0x74
   8297a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8297e:	b002      	add	sp, #8
   82980:	4770      	bx	lr
   82982:	238b      	movs	r3, #139	; 0x8b
   82984:	f04f 30ff 	mov.w	r0, #4294967295
   82988:	602b      	str	r3, [r5, #0]
   8298a:	e7eb      	b.n	82964 <snprintf+0x68>
   8298c:	200701e0 	.word	0x200701e0

00082990 <strlen>:
   82990:	f020 0103 	bic.w	r1, r0, #3
   82994:	f010 0003 	ands.w	r0, r0, #3
   82998:	f1c0 0000 	rsb	r0, r0, #0
   8299c:	f851 3b04 	ldr.w	r3, [r1], #4
   829a0:	f100 0c04 	add.w	ip, r0, #4
   829a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   829a8:	f06f 0200 	mvn.w	r2, #0
   829ac:	bf1c      	itt	ne
   829ae:	fa22 f20c 	lsrne.w	r2, r2, ip
   829b2:	4313      	orrne	r3, r2
   829b4:	f04f 0c01 	mov.w	ip, #1
   829b8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   829bc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   829c0:	eba3 020c 	sub.w	r2, r3, ip
   829c4:	ea22 0203 	bic.w	r2, r2, r3
   829c8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   829cc:	bf04      	itt	eq
   829ce:	f851 3b04 	ldreq.w	r3, [r1], #4
   829d2:	3004      	addeq	r0, #4
   829d4:	d0f4      	beq.n	829c0 <strlen+0x30>
   829d6:	f1c2 0100 	rsb	r1, r2, #0
   829da:	ea02 0201 	and.w	r2, r2, r1
   829de:	fab2 f282 	clz	r2, r2
   829e2:	f1c2 021f 	rsb	r2, r2, #31
   829e6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   829ea:	4770      	bx	lr

000829ec <_svfprintf_r>:
   829ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   829f0:	b0c3      	sub	sp, #268	; 0x10c
   829f2:	460c      	mov	r4, r1
   829f4:	910b      	str	r1, [sp, #44]	; 0x2c
   829f6:	4692      	mov	sl, r2
   829f8:	930f      	str	r3, [sp, #60]	; 0x3c
   829fa:	900c      	str	r0, [sp, #48]	; 0x30
   829fc:	f002 fb8e 	bl	8511c <_localeconv_r>
   82a00:	6803      	ldr	r3, [r0, #0]
   82a02:	4618      	mov	r0, r3
   82a04:	931a      	str	r3, [sp, #104]	; 0x68
   82a06:	f7ff ffc3 	bl	82990 <strlen>
   82a0a:	89a3      	ldrh	r3, [r4, #12]
   82a0c:	9019      	str	r0, [sp, #100]	; 0x64
   82a0e:	0619      	lsls	r1, r3, #24
   82a10:	d503      	bpl.n	82a1a <_svfprintf_r+0x2e>
   82a12:	6923      	ldr	r3, [r4, #16]
   82a14:	2b00      	cmp	r3, #0
   82a16:	f001 8035 	beq.w	83a84 <_svfprintf_r+0x1098>
   82a1a:	2300      	movs	r3, #0
   82a1c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   82a20:	46c8      	mov	r8, r9
   82a22:	9315      	str	r3, [sp, #84]	; 0x54
   82a24:	9313      	str	r3, [sp, #76]	; 0x4c
   82a26:	9314      	str	r3, [sp, #80]	; 0x50
   82a28:	9318      	str	r3, [sp, #96]	; 0x60
   82a2a:	931b      	str	r3, [sp, #108]	; 0x6c
   82a2c:	9309      	str	r3, [sp, #36]	; 0x24
   82a2e:	9316      	str	r3, [sp, #88]	; 0x58
   82a30:	9317      	str	r3, [sp, #92]	; 0x5c
   82a32:	9327      	str	r3, [sp, #156]	; 0x9c
   82a34:	9326      	str	r3, [sp, #152]	; 0x98
   82a36:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   82a3a:	f89a 3000 	ldrb.w	r3, [sl]
   82a3e:	4654      	mov	r4, sl
   82a40:	b1eb      	cbz	r3, 82a7e <_svfprintf_r+0x92>
   82a42:	2b25      	cmp	r3, #37	; 0x25
   82a44:	d102      	bne.n	82a4c <_svfprintf_r+0x60>
   82a46:	e01a      	b.n	82a7e <_svfprintf_r+0x92>
   82a48:	2b25      	cmp	r3, #37	; 0x25
   82a4a:	d003      	beq.n	82a54 <_svfprintf_r+0x68>
   82a4c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   82a50:	2b00      	cmp	r3, #0
   82a52:	d1f9      	bne.n	82a48 <_svfprintf_r+0x5c>
   82a54:	eba4 050a 	sub.w	r5, r4, sl
   82a58:	b18d      	cbz	r5, 82a7e <_svfprintf_r+0x92>
   82a5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a5c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82a5e:	3301      	adds	r3, #1
   82a60:	442a      	add	r2, r5
   82a62:	2b07      	cmp	r3, #7
   82a64:	f8c8 a000 	str.w	sl, [r8]
   82a68:	f8c8 5004 	str.w	r5, [r8, #4]
   82a6c:	9227      	str	r2, [sp, #156]	; 0x9c
   82a6e:	9326      	str	r3, [sp, #152]	; 0x98
   82a70:	f300 808a 	bgt.w	82b88 <_svfprintf_r+0x19c>
   82a74:	f108 0808 	add.w	r8, r8, #8
   82a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82a7a:	442b      	add	r3, r5
   82a7c:	9309      	str	r3, [sp, #36]	; 0x24
   82a7e:	7823      	ldrb	r3, [r4, #0]
   82a80:	2b00      	cmp	r3, #0
   82a82:	f000 8089 	beq.w	82b98 <_svfprintf_r+0x1ac>
   82a86:	2300      	movs	r3, #0
   82a88:	f04f 30ff 	mov.w	r0, #4294967295
   82a8c:	461a      	mov	r2, r3
   82a8e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82a92:	4619      	mov	r1, r3
   82a94:	930d      	str	r3, [sp, #52]	; 0x34
   82a96:	469b      	mov	fp, r3
   82a98:	7863      	ldrb	r3, [r4, #1]
   82a9a:	f104 0a01 	add.w	sl, r4, #1
   82a9e:	900a      	str	r0, [sp, #40]	; 0x28
   82aa0:	f10a 0a01 	add.w	sl, sl, #1
   82aa4:	f1a3 0020 	sub.w	r0, r3, #32
   82aa8:	2858      	cmp	r0, #88	; 0x58
   82aaa:	f200 83b7 	bhi.w	8321c <_svfprintf_r+0x830>
   82aae:	e8df f010 	tbh	[pc, r0, lsl #1]
   82ab2:	034c      	.short	0x034c
   82ab4:	03b503b5 	.word	0x03b503b5
   82ab8:	03b50354 	.word	0x03b50354
   82abc:	03b503b5 	.word	0x03b503b5
   82ac0:	03b503b5 	.word	0x03b503b5
   82ac4:	005903b5 	.word	0x005903b5
   82ac8:	03b50359 	.word	0x03b50359
   82acc:	02140066 	.word	0x02140066
   82ad0:	022f03b5 	.word	0x022f03b5
   82ad4:	03a503a5 	.word	0x03a503a5
   82ad8:	03a503a5 	.word	0x03a503a5
   82adc:	03a503a5 	.word	0x03a503a5
   82ae0:	03a503a5 	.word	0x03a503a5
   82ae4:	03b503a5 	.word	0x03b503a5
   82ae8:	03b503b5 	.word	0x03b503b5
   82aec:	03b503b5 	.word	0x03b503b5
   82af0:	03b503b5 	.word	0x03b503b5
   82af4:	03b503b5 	.word	0x03b503b5
   82af8:	028b03b5 	.word	0x028b03b5
   82afc:	03b502d3 	.word	0x03b502d3
   82b00:	03b502d3 	.word	0x03b502d3
   82b04:	03b503b5 	.word	0x03b503b5
   82b08:	031b03b5 	.word	0x031b03b5
   82b0c:	03b503b5 	.word	0x03b503b5
   82b10:	03b50320 	.word	0x03b50320
   82b14:	03b503b5 	.word	0x03b503b5
   82b18:	03b503b5 	.word	0x03b503b5
   82b1c:	03b50234 	.word	0x03b50234
   82b20:	024b03b5 	.word	0x024b03b5
   82b24:	03b503b5 	.word	0x03b503b5
   82b28:	03b503b5 	.word	0x03b503b5
   82b2c:	03b503b5 	.word	0x03b503b5
   82b30:	03b503b5 	.word	0x03b503b5
   82b34:	03b503b5 	.word	0x03b503b5
   82b38:	039e0276 	.word	0x039e0276
   82b3c:	02d302d3 	.word	0x02d302d3
   82b40:	036302d3 	.word	0x036302d3
   82b44:	03b5039e 	.word	0x03b5039e
   82b48:	036803b5 	.word	0x036803b5
   82b4c:	037503b5 	.word	0x037503b5
   82b50:	038c01dd 	.word	0x038c01dd
   82b54:	03b5035e 	.word	0x03b5035e
   82b58:	03b501f2 	.word	0x03b501f2
   82b5c:	03b50087 	.word	0x03b50087
   82b60:	033203b5 	.word	0x033203b5
   82b64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82b66:	6823      	ldr	r3, [r4, #0]
   82b68:	4618      	mov	r0, r3
   82b6a:	930d      	str	r3, [sp, #52]	; 0x34
   82b6c:	4623      	mov	r3, r4
   82b6e:	2800      	cmp	r0, #0
   82b70:	f103 0304 	add.w	r3, r3, #4
   82b74:	930f      	str	r3, [sp, #60]	; 0x3c
   82b76:	da04      	bge.n	82b82 <_svfprintf_r+0x196>
   82b78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82b7a:	425b      	negs	r3, r3
   82b7c:	930d      	str	r3, [sp, #52]	; 0x34
   82b7e:	f04b 0b04 	orr.w	fp, fp, #4
   82b82:	f89a 3000 	ldrb.w	r3, [sl]
   82b86:	e78b      	b.n	82aa0 <_svfprintf_r+0xb4>
   82b88:	aa25      	add	r2, sp, #148	; 0x94
   82b8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b8c:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b8e:	f003 fb09 	bl	861a4 <__ssprint_r>
   82b92:	b940      	cbnz	r0, 82ba6 <_svfprintf_r+0x1ba>
   82b94:	46c8      	mov	r8, r9
   82b96:	e76f      	b.n	82a78 <_svfprintf_r+0x8c>
   82b98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82b9a:	b123      	cbz	r3, 82ba6 <_svfprintf_r+0x1ba>
   82b9c:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b9e:	aa25      	add	r2, sp, #148	; 0x94
   82ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82ba2:	f003 faff 	bl	861a4 <__ssprint_r>
   82ba6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82ba8:	899b      	ldrh	r3, [r3, #12]
   82baa:	f013 0f40 	tst.w	r3, #64	; 0x40
   82bae:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82bb0:	bf18      	it	ne
   82bb2:	f04f 33ff 	movne.w	r3, #4294967295
   82bb6:	9309      	str	r3, [sp, #36]	; 0x24
   82bb8:	9809      	ldr	r0, [sp, #36]	; 0x24
   82bba:	b043      	add	sp, #268	; 0x10c
   82bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82bc0:	f01b 0f20 	tst.w	fp, #32
   82bc4:	9311      	str	r3, [sp, #68]	; 0x44
   82bc6:	f040 81af 	bne.w	82f28 <_svfprintf_r+0x53c>
   82bca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82bcc:	f01b 0f10 	tst.w	fp, #16
   82bd0:	4613      	mov	r3, r2
   82bd2:	f040 859a 	bne.w	8370a <_svfprintf_r+0xd1e>
   82bd6:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82bda:	f000 8596 	beq.w	8370a <_svfprintf_r+0xd1e>
   82bde:	2500      	movs	r5, #0
   82be0:	2301      	movs	r3, #1
   82be2:	8814      	ldrh	r4, [r2, #0]
   82be4:	3204      	adds	r2, #4
   82be6:	920f      	str	r2, [sp, #60]	; 0x3c
   82be8:	2200      	movs	r2, #0
   82bea:	4617      	mov	r7, r2
   82bec:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   82bf0:	990a      	ldr	r1, [sp, #40]	; 0x28
   82bf2:	1c4a      	adds	r2, r1, #1
   82bf4:	f000 8210 	beq.w	83018 <_svfprintf_r+0x62c>
   82bf8:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   82bfc:	9207      	str	r2, [sp, #28]
   82bfe:	ea54 0205 	orrs.w	r2, r4, r5
   82c02:	f040 820f 	bne.w	83024 <_svfprintf_r+0x638>
   82c06:	2900      	cmp	r1, #0
   82c08:	f040 8431 	bne.w	8346e <_svfprintf_r+0xa82>
   82c0c:	2b00      	cmp	r3, #0
   82c0e:	f040 8539 	bne.w	83684 <_svfprintf_r+0xc98>
   82c12:	f01b 0301 	ands.w	r3, fp, #1
   82c16:	930e      	str	r3, [sp, #56]	; 0x38
   82c18:	f000 8662 	beq.w	838e0 <_svfprintf_r+0xef4>
   82c1c:	2330      	movs	r3, #48	; 0x30
   82c1e:	ae42      	add	r6, sp, #264	; 0x108
   82c20:	f806 3d41 	strb.w	r3, [r6, #-65]!
   82c24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82c28:	4293      	cmp	r3, r2
   82c2a:	bfb8      	it	lt
   82c2c:	4613      	movlt	r3, r2
   82c2e:	9308      	str	r3, [sp, #32]
   82c30:	2300      	movs	r3, #0
   82c32:	9312      	str	r3, [sp, #72]	; 0x48
   82c34:	b117      	cbz	r7, 82c3c <_svfprintf_r+0x250>
   82c36:	9b08      	ldr	r3, [sp, #32]
   82c38:	3301      	adds	r3, #1
   82c3a:	9308      	str	r3, [sp, #32]
   82c3c:	9b07      	ldr	r3, [sp, #28]
   82c3e:	f013 0302 	ands.w	r3, r3, #2
   82c42:	9310      	str	r3, [sp, #64]	; 0x40
   82c44:	d002      	beq.n	82c4c <_svfprintf_r+0x260>
   82c46:	9b08      	ldr	r3, [sp, #32]
   82c48:	3302      	adds	r3, #2
   82c4a:	9308      	str	r3, [sp, #32]
   82c4c:	9b07      	ldr	r3, [sp, #28]
   82c4e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   82c52:	f040 8310 	bne.w	83276 <_svfprintf_r+0x88a>
   82c56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82c58:	9a08      	ldr	r2, [sp, #32]
   82c5a:	eba3 0b02 	sub.w	fp, r3, r2
   82c5e:	f1bb 0f00 	cmp.w	fp, #0
   82c62:	f340 8308 	ble.w	83276 <_svfprintf_r+0x88a>
   82c66:	f1bb 0f10 	cmp.w	fp, #16
   82c6a:	f340 87b2 	ble.w	83bd2 <_svfprintf_r+0x11e6>
   82c6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82c70:	4643      	mov	r3, r8
   82c72:	4621      	mov	r1, r4
   82c74:	46a8      	mov	r8, r5
   82c76:	2710      	movs	r7, #16
   82c78:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82c7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82c7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82c7e:	e006      	b.n	82c8e <_svfprintf_r+0x2a2>
   82c80:	f1ab 0b10 	sub.w	fp, fp, #16
   82c84:	f1bb 0f10 	cmp.w	fp, #16
   82c88:	f103 0308 	add.w	r3, r3, #8
   82c8c:	dd18      	ble.n	82cc0 <_svfprintf_r+0x2d4>
   82c8e:	3201      	adds	r2, #1
   82c90:	48ab      	ldr	r0, [pc, #684]	; (82f40 <_svfprintf_r+0x554>)
   82c92:	3110      	adds	r1, #16
   82c94:	2a07      	cmp	r2, #7
   82c96:	9127      	str	r1, [sp, #156]	; 0x9c
   82c98:	9226      	str	r2, [sp, #152]	; 0x98
   82c9a:	e883 0081 	stmia.w	r3, {r0, r7}
   82c9e:	ddef      	ble.n	82c80 <_svfprintf_r+0x294>
   82ca0:	aa25      	add	r2, sp, #148	; 0x94
   82ca2:	4629      	mov	r1, r5
   82ca4:	4620      	mov	r0, r4
   82ca6:	f003 fa7d 	bl	861a4 <__ssprint_r>
   82caa:	2800      	cmp	r0, #0
   82cac:	f47f af7b 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   82cb0:	f1ab 0b10 	sub.w	fp, fp, #16
   82cb4:	f1bb 0f10 	cmp.w	fp, #16
   82cb8:	464b      	mov	r3, r9
   82cba:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82cbc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82cbe:	dce6      	bgt.n	82c8e <_svfprintf_r+0x2a2>
   82cc0:	4645      	mov	r5, r8
   82cc2:	460c      	mov	r4, r1
   82cc4:	4698      	mov	r8, r3
   82cc6:	3201      	adds	r2, #1
   82cc8:	4b9d      	ldr	r3, [pc, #628]	; (82f40 <_svfprintf_r+0x554>)
   82cca:	445c      	add	r4, fp
   82ccc:	2a07      	cmp	r2, #7
   82cce:	9427      	str	r4, [sp, #156]	; 0x9c
   82cd0:	9226      	str	r2, [sp, #152]	; 0x98
   82cd2:	e888 0808 	stmia.w	r8, {r3, fp}
   82cd6:	f300 82c3 	bgt.w	83260 <_svfprintf_r+0x874>
   82cda:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82cde:	f108 0808 	add.w	r8, r8, #8
   82ce2:	b187      	cbz	r7, 82d06 <_svfprintf_r+0x31a>
   82ce4:	2101      	movs	r1, #1
   82ce6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ce8:	440c      	add	r4, r1
   82cea:	440b      	add	r3, r1
   82cec:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   82cf0:	2b07      	cmp	r3, #7
   82cf2:	9427      	str	r4, [sp, #156]	; 0x9c
   82cf4:	9326      	str	r3, [sp, #152]	; 0x98
   82cf6:	f8c8 1004 	str.w	r1, [r8, #4]
   82cfa:	f8c8 2000 	str.w	r2, [r8]
   82cfe:	f300 83cd 	bgt.w	8349c <_svfprintf_r+0xab0>
   82d02:	f108 0808 	add.w	r8, r8, #8
   82d06:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82d08:	b17b      	cbz	r3, 82d2a <_svfprintf_r+0x33e>
   82d0a:	2102      	movs	r1, #2
   82d0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d0e:	440c      	add	r4, r1
   82d10:	3301      	adds	r3, #1
   82d12:	aa1e      	add	r2, sp, #120	; 0x78
   82d14:	2b07      	cmp	r3, #7
   82d16:	9427      	str	r4, [sp, #156]	; 0x9c
   82d18:	9326      	str	r3, [sp, #152]	; 0x98
   82d1a:	f8c8 1004 	str.w	r1, [r8, #4]
   82d1e:	f8c8 2000 	str.w	r2, [r8]
   82d22:	f300 8411 	bgt.w	83548 <_svfprintf_r+0xb5c>
   82d26:	f108 0808 	add.w	r8, r8, #8
   82d2a:	2d80      	cmp	r5, #128	; 0x80
   82d2c:	f000 8304 	beq.w	83338 <_svfprintf_r+0x94c>
   82d30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82d34:	1a9f      	subs	r7, r3, r2
   82d36:	2f00      	cmp	r7, #0
   82d38:	dd37      	ble.n	82daa <_svfprintf_r+0x3be>
   82d3a:	2f10      	cmp	r7, #16
   82d3c:	f340 8679 	ble.w	83a32 <_svfprintf_r+0x1046>
   82d40:	4d80      	ldr	r5, [pc, #512]	; (82f44 <_svfprintf_r+0x558>)
   82d42:	4642      	mov	r2, r8
   82d44:	4621      	mov	r1, r4
   82d46:	46b0      	mov	r8, r6
   82d48:	f04f 0b10 	mov.w	fp, #16
   82d4c:	462e      	mov	r6, r5
   82d4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d50:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82d52:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82d54:	e004      	b.n	82d60 <_svfprintf_r+0x374>
   82d56:	3f10      	subs	r7, #16
   82d58:	2f10      	cmp	r7, #16
   82d5a:	f102 0208 	add.w	r2, r2, #8
   82d5e:	dd15      	ble.n	82d8c <_svfprintf_r+0x3a0>
   82d60:	3301      	adds	r3, #1
   82d62:	3110      	adds	r1, #16
   82d64:	2b07      	cmp	r3, #7
   82d66:	9127      	str	r1, [sp, #156]	; 0x9c
   82d68:	9326      	str	r3, [sp, #152]	; 0x98
   82d6a:	e882 0840 	stmia.w	r2, {r6, fp}
   82d6e:	ddf2      	ble.n	82d56 <_svfprintf_r+0x36a>
   82d70:	aa25      	add	r2, sp, #148	; 0x94
   82d72:	4629      	mov	r1, r5
   82d74:	4620      	mov	r0, r4
   82d76:	f003 fa15 	bl	861a4 <__ssprint_r>
   82d7a:	2800      	cmp	r0, #0
   82d7c:	f47f af13 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   82d80:	3f10      	subs	r7, #16
   82d82:	2f10      	cmp	r7, #16
   82d84:	464a      	mov	r2, r9
   82d86:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82d88:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d8a:	dce9      	bgt.n	82d60 <_svfprintf_r+0x374>
   82d8c:	4635      	mov	r5, r6
   82d8e:	460c      	mov	r4, r1
   82d90:	4646      	mov	r6, r8
   82d92:	4690      	mov	r8, r2
   82d94:	3301      	adds	r3, #1
   82d96:	443c      	add	r4, r7
   82d98:	2b07      	cmp	r3, #7
   82d9a:	9427      	str	r4, [sp, #156]	; 0x9c
   82d9c:	9326      	str	r3, [sp, #152]	; 0x98
   82d9e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82da2:	f300 8370 	bgt.w	83486 <_svfprintf_r+0xa9a>
   82da6:	f108 0808 	add.w	r8, r8, #8
   82daa:	9b07      	ldr	r3, [sp, #28]
   82dac:	05df      	lsls	r7, r3, #23
   82dae:	f100 8264 	bmi.w	8327a <_svfprintf_r+0x88e>
   82db2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82db4:	990e      	ldr	r1, [sp, #56]	; 0x38
   82db6:	3301      	adds	r3, #1
   82db8:	440c      	add	r4, r1
   82dba:	2b07      	cmp	r3, #7
   82dbc:	9427      	str	r4, [sp, #156]	; 0x9c
   82dbe:	f8c8 6000 	str.w	r6, [r8]
   82dc2:	f8c8 1004 	str.w	r1, [r8, #4]
   82dc6:	9326      	str	r3, [sp, #152]	; 0x98
   82dc8:	f300 83b3 	bgt.w	83532 <_svfprintf_r+0xb46>
   82dcc:	f108 0808 	add.w	r8, r8, #8
   82dd0:	9b07      	ldr	r3, [sp, #28]
   82dd2:	075b      	lsls	r3, r3, #29
   82dd4:	d53b      	bpl.n	82e4e <_svfprintf_r+0x462>
   82dd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82dd8:	9a08      	ldr	r2, [sp, #32]
   82dda:	1a9d      	subs	r5, r3, r2
   82ddc:	2d00      	cmp	r5, #0
   82dde:	dd36      	ble.n	82e4e <_svfprintf_r+0x462>
   82de0:	2d10      	cmp	r5, #16
   82de2:	f340 8721 	ble.w	83c28 <_svfprintf_r+0x123c>
   82de6:	2610      	movs	r6, #16
   82de8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82dea:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82dec:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   82df0:	e004      	b.n	82dfc <_svfprintf_r+0x410>
   82df2:	3d10      	subs	r5, #16
   82df4:	2d10      	cmp	r5, #16
   82df6:	f108 0808 	add.w	r8, r8, #8
   82dfa:	dd16      	ble.n	82e2a <_svfprintf_r+0x43e>
   82dfc:	3301      	adds	r3, #1
   82dfe:	4a50      	ldr	r2, [pc, #320]	; (82f40 <_svfprintf_r+0x554>)
   82e00:	3410      	adds	r4, #16
   82e02:	2b07      	cmp	r3, #7
   82e04:	9427      	str	r4, [sp, #156]	; 0x9c
   82e06:	9326      	str	r3, [sp, #152]	; 0x98
   82e08:	e888 0044 	stmia.w	r8, {r2, r6}
   82e0c:	ddf1      	ble.n	82df2 <_svfprintf_r+0x406>
   82e0e:	aa25      	add	r2, sp, #148	; 0x94
   82e10:	4659      	mov	r1, fp
   82e12:	4638      	mov	r0, r7
   82e14:	f003 f9c6 	bl	861a4 <__ssprint_r>
   82e18:	2800      	cmp	r0, #0
   82e1a:	f47f aec4 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   82e1e:	3d10      	subs	r5, #16
   82e20:	2d10      	cmp	r5, #16
   82e22:	46c8      	mov	r8, r9
   82e24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e26:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82e28:	dce8      	bgt.n	82dfc <_svfprintf_r+0x410>
   82e2a:	3301      	adds	r3, #1
   82e2c:	4a44      	ldr	r2, [pc, #272]	; (82f40 <_svfprintf_r+0x554>)
   82e2e:	442c      	add	r4, r5
   82e30:	2b07      	cmp	r3, #7
   82e32:	9427      	str	r4, [sp, #156]	; 0x9c
   82e34:	9326      	str	r3, [sp, #152]	; 0x98
   82e36:	e888 0024 	stmia.w	r8, {r2, r5}
   82e3a:	dd08      	ble.n	82e4e <_svfprintf_r+0x462>
   82e3c:	aa25      	add	r2, sp, #148	; 0x94
   82e3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e40:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e42:	f003 f9af 	bl	861a4 <__ssprint_r>
   82e46:	2800      	cmp	r0, #0
   82e48:	f47f aead 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   82e4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82e50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82e52:	9908      	ldr	r1, [sp, #32]
   82e54:	428a      	cmp	r2, r1
   82e56:	bfac      	ite	ge
   82e58:	189b      	addge	r3, r3, r2
   82e5a:	185b      	addlt	r3, r3, r1
   82e5c:	9309      	str	r3, [sp, #36]	; 0x24
   82e5e:	2c00      	cmp	r4, #0
   82e60:	f040 82fb 	bne.w	8345a <_svfprintf_r+0xa6e>
   82e64:	2300      	movs	r3, #0
   82e66:	46c8      	mov	r8, r9
   82e68:	9326      	str	r3, [sp, #152]	; 0x98
   82e6a:	e5e6      	b.n	82a3a <_svfprintf_r+0x4e>
   82e6c:	9311      	str	r3, [sp, #68]	; 0x44
   82e6e:	f01b 0320 	ands.w	r3, fp, #32
   82e72:	f040 8145 	bne.w	83100 <_svfprintf_r+0x714>
   82e76:	f01b 0210 	ands.w	r2, fp, #16
   82e7a:	f040 8466 	bne.w	8374a <_svfprintf_r+0xd5e>
   82e7e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   82e82:	f000 8462 	beq.w	8374a <_svfprintf_r+0xd5e>
   82e86:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82e88:	4613      	mov	r3, r2
   82e8a:	460a      	mov	r2, r1
   82e8c:	3204      	adds	r2, #4
   82e8e:	880c      	ldrh	r4, [r1, #0]
   82e90:	2500      	movs	r5, #0
   82e92:	920f      	str	r2, [sp, #60]	; 0x3c
   82e94:	e6a8      	b.n	82be8 <_svfprintf_r+0x1fc>
   82e96:	2500      	movs	r5, #0
   82e98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82e9a:	9311      	str	r3, [sp, #68]	; 0x44
   82e9c:	6816      	ldr	r6, [r2, #0]
   82e9e:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   82ea2:	1d14      	adds	r4, r2, #4
   82ea4:	2e00      	cmp	r6, #0
   82ea6:	f000 86cd 	beq.w	83c44 <_svfprintf_r+0x1258>
   82eaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82eac:	1c53      	adds	r3, r2, #1
   82eae:	f000 861b 	beq.w	83ae8 <_svfprintf_r+0x10fc>
   82eb2:	4629      	mov	r1, r5
   82eb4:	4630      	mov	r0, r6
   82eb6:	f002 fbfb 	bl	856b0 <memchr>
   82eba:	2800      	cmp	r0, #0
   82ebc:	f000 870d 	beq.w	83cda <_svfprintf_r+0x12ee>
   82ec0:	1b83      	subs	r3, r0, r6
   82ec2:	950a      	str	r5, [sp, #40]	; 0x28
   82ec4:	930e      	str	r3, [sp, #56]	; 0x38
   82ec6:	940f      	str	r4, [sp, #60]	; 0x3c
   82ec8:	f8cd b01c 	str.w	fp, [sp, #28]
   82ecc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82ed0:	9308      	str	r3, [sp, #32]
   82ed2:	9512      	str	r5, [sp, #72]	; 0x48
   82ed4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82ed8:	e6ac      	b.n	82c34 <_svfprintf_r+0x248>
   82eda:	f89a 3000 	ldrb.w	r3, [sl]
   82ede:	f10a 0401 	add.w	r4, sl, #1
   82ee2:	2b2a      	cmp	r3, #42	; 0x2a
   82ee4:	f000 87c2 	beq.w	83e6c <_svfprintf_r+0x1480>
   82ee8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82eec:	2809      	cmp	r0, #9
   82eee:	46a2      	mov	sl, r4
   82ef0:	f200 8718 	bhi.w	83d24 <_svfprintf_r+0x1338>
   82ef4:	2300      	movs	r3, #0
   82ef6:	461c      	mov	r4, r3
   82ef8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82efc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82f00:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82f04:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82f08:	2809      	cmp	r0, #9
   82f0a:	d9f5      	bls.n	82ef8 <_svfprintf_r+0x50c>
   82f0c:	940a      	str	r4, [sp, #40]	; 0x28
   82f0e:	e5c9      	b.n	82aa4 <_svfprintf_r+0xb8>
   82f10:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   82f14:	f89a 3000 	ldrb.w	r3, [sl]
   82f18:	e5c2      	b.n	82aa0 <_svfprintf_r+0xb4>
   82f1a:	f04b 0b10 	orr.w	fp, fp, #16
   82f1e:	f01b 0f20 	tst.w	fp, #32
   82f22:	9311      	str	r3, [sp, #68]	; 0x44
   82f24:	f43f ae51 	beq.w	82bca <_svfprintf_r+0x1de>
   82f28:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82f2a:	3407      	adds	r4, #7
   82f2c:	f024 0307 	bic.w	r3, r4, #7
   82f30:	f103 0208 	add.w	r2, r3, #8
   82f34:	e9d3 4500 	ldrd	r4, r5, [r3]
   82f38:	920f      	str	r2, [sp, #60]	; 0x3c
   82f3a:	2301      	movs	r3, #1
   82f3c:	e654      	b.n	82be8 <_svfprintf_r+0x1fc>
   82f3e:	bf00      	nop
   82f40:	00087088 	.word	0x00087088
   82f44:	00087098 	.word	0x00087098
   82f48:	9311      	str	r3, [sp, #68]	; 0x44
   82f4a:	2a00      	cmp	r2, #0
   82f4c:	f040 87ad 	bne.w	83eaa <_svfprintf_r+0x14be>
   82f50:	4bbe      	ldr	r3, [pc, #760]	; (8324c <_svfprintf_r+0x860>)
   82f52:	f01b 0f20 	tst.w	fp, #32
   82f56:	9318      	str	r3, [sp, #96]	; 0x60
   82f58:	f040 80e7 	bne.w	8312a <_svfprintf_r+0x73e>
   82f5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82f5e:	f01b 0f10 	tst.w	fp, #16
   82f62:	4613      	mov	r3, r2
   82f64:	f040 83d8 	bne.w	83718 <_svfprintf_r+0xd2c>
   82f68:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82f6c:	f000 83d4 	beq.w	83718 <_svfprintf_r+0xd2c>
   82f70:	2500      	movs	r5, #0
   82f72:	3304      	adds	r3, #4
   82f74:	8814      	ldrh	r4, [r2, #0]
   82f76:	930f      	str	r3, [sp, #60]	; 0x3c
   82f78:	f01b 0f01 	tst.w	fp, #1
   82f7c:	f000 80e3 	beq.w	83146 <_svfprintf_r+0x75a>
   82f80:	ea54 0305 	orrs.w	r3, r4, r5
   82f84:	f000 80df 	beq.w	83146 <_svfprintf_r+0x75a>
   82f88:	2330      	movs	r3, #48	; 0x30
   82f8a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82f8e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   82f92:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   82f96:	f04b 0b02 	orr.w	fp, fp, #2
   82f9a:	2302      	movs	r3, #2
   82f9c:	e624      	b.n	82be8 <_svfprintf_r+0x1fc>
   82f9e:	2201      	movs	r2, #1
   82fa0:	9311      	str	r3, [sp, #68]	; 0x44
   82fa2:	2300      	movs	r3, #0
   82fa4:	4611      	mov	r1, r2
   82fa6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82fa8:	9208      	str	r2, [sp, #32]
   82faa:	6802      	ldr	r2, [r0, #0]
   82fac:	461f      	mov	r7, r3
   82fae:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82fb2:	930a      	str	r3, [sp, #40]	; 0x28
   82fb4:	9312      	str	r3, [sp, #72]	; 0x48
   82fb6:	1d03      	adds	r3, r0, #4
   82fb8:	f8cd b01c 	str.w	fp, [sp, #28]
   82fbc:	910e      	str	r1, [sp, #56]	; 0x38
   82fbe:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82fc2:	930f      	str	r3, [sp, #60]	; 0x3c
   82fc4:	ae28      	add	r6, sp, #160	; 0xa0
   82fc6:	e639      	b.n	82c3c <_svfprintf_r+0x250>
   82fc8:	9311      	str	r3, [sp, #68]	; 0x44
   82fca:	2a00      	cmp	r2, #0
   82fcc:	f040 8784 	bne.w	83ed8 <_svfprintf_r+0x14ec>
   82fd0:	f04b 0b10 	orr.w	fp, fp, #16
   82fd4:	f01b 0f20 	tst.w	fp, #32
   82fd8:	f040 8475 	bne.w	838c6 <_svfprintf_r+0xeda>
   82fdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82fde:	f01b 0f10 	tst.w	fp, #16
   82fe2:	4613      	mov	r3, r2
   82fe4:	f040 839d 	bne.w	83722 <_svfprintf_r+0xd36>
   82fe8:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82fec:	f000 8399 	beq.w	83722 <_svfprintf_r+0xd36>
   82ff0:	f9b2 4000 	ldrsh.w	r4, [r2]
   82ff4:	3304      	adds	r3, #4
   82ff6:	17e5      	asrs	r5, r4, #31
   82ff8:	930f      	str	r3, [sp, #60]	; 0x3c
   82ffa:	4622      	mov	r2, r4
   82ffc:	462b      	mov	r3, r5
   82ffe:	2a00      	cmp	r2, #0
   83000:	f173 0300 	sbcs.w	r3, r3, #0
   83004:	f2c0 8398 	blt.w	83738 <_svfprintf_r+0xd4c>
   83008:	990a      	ldr	r1, [sp, #40]	; 0x28
   8300a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8300e:	1c4a      	adds	r2, r1, #1
   83010:	f04f 0301 	mov.w	r3, #1
   83014:	f47f adf0 	bne.w	82bf8 <_svfprintf_r+0x20c>
   83018:	ea54 0205 	orrs.w	r2, r4, r5
   8301c:	f000 8229 	beq.w	83472 <_svfprintf_r+0xa86>
   83020:	f8cd b01c 	str.w	fp, [sp, #28]
   83024:	2b01      	cmp	r3, #1
   83026:	f000 830e 	beq.w	83646 <_svfprintf_r+0xc5a>
   8302a:	2b02      	cmp	r3, #2
   8302c:	f040 829c 	bne.w	83568 <_svfprintf_r+0xb7c>
   83030:	464e      	mov	r6, r9
   83032:	9818      	ldr	r0, [sp, #96]	; 0x60
   83034:	0923      	lsrs	r3, r4, #4
   83036:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   8303a:	0929      	lsrs	r1, r5, #4
   8303c:	f004 020f 	and.w	r2, r4, #15
   83040:	460d      	mov	r5, r1
   83042:	461c      	mov	r4, r3
   83044:	5c83      	ldrb	r3, [r0, r2]
   83046:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8304a:	ea54 0305 	orrs.w	r3, r4, r5
   8304e:	d1f1      	bne.n	83034 <_svfprintf_r+0x648>
   83050:	eba9 0306 	sub.w	r3, r9, r6
   83054:	930e      	str	r3, [sp, #56]	; 0x38
   83056:	e5e5      	b.n	82c24 <_svfprintf_r+0x238>
   83058:	9311      	str	r3, [sp, #68]	; 0x44
   8305a:	2a00      	cmp	r2, #0
   8305c:	f040 8738 	bne.w	83ed0 <_svfprintf_r+0x14e4>
   83060:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83062:	f01b 0f08 	tst.w	fp, #8
   83066:	f104 0407 	add.w	r4, r4, #7
   8306a:	f000 84cf 	beq.w	83a0c <_svfprintf_r+0x1020>
   8306e:	f024 0307 	bic.w	r3, r4, #7
   83072:	f103 0208 	add.w	r2, r3, #8
   83076:	920f      	str	r2, [sp, #60]	; 0x3c
   83078:	681a      	ldr	r2, [r3, #0]
   8307a:	685b      	ldr	r3, [r3, #4]
   8307c:	9215      	str	r2, [sp, #84]	; 0x54
   8307e:	9314      	str	r3, [sp, #80]	; 0x50
   83080:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83082:	9d15      	ldr	r5, [sp, #84]	; 0x54
   83084:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   83088:	4628      	mov	r0, r5
   8308a:	4621      	mov	r1, r4
   8308c:	f04f 32ff 	mov.w	r2, #4294967295
   83090:	4b6f      	ldr	r3, [pc, #444]	; (83250 <_svfprintf_r+0x864>)
   83092:	f003 fdf5 	bl	86c80 <__aeabi_dcmpun>
   83096:	2800      	cmp	r0, #0
   83098:	f040 8434 	bne.w	83904 <_svfprintf_r+0xf18>
   8309c:	4628      	mov	r0, r5
   8309e:	4621      	mov	r1, r4
   830a0:	f04f 32ff 	mov.w	r2, #4294967295
   830a4:	4b6a      	ldr	r3, [pc, #424]	; (83250 <_svfprintf_r+0x864>)
   830a6:	f003 fdcd 	bl	86c44 <__aeabi_dcmple>
   830aa:	2800      	cmp	r0, #0
   830ac:	f040 842a 	bne.w	83904 <_svfprintf_r+0xf18>
   830b0:	a815      	add	r0, sp, #84	; 0x54
   830b2:	c80d      	ldmia	r0, {r0, r2, r3}
   830b4:	9914      	ldr	r1, [sp, #80]	; 0x50
   830b6:	f003 fdbb 	bl	86c30 <__aeabi_dcmplt>
   830ba:	2800      	cmp	r0, #0
   830bc:	f040 85d4 	bne.w	83c68 <_svfprintf_r+0x127c>
   830c0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   830c4:	2303      	movs	r3, #3
   830c6:	461a      	mov	r2, r3
   830c8:	9308      	str	r3, [sp, #32]
   830ca:	2300      	movs	r3, #0
   830cc:	4e61      	ldr	r6, [pc, #388]	; (83254 <_svfprintf_r+0x868>)
   830ce:	4619      	mov	r1, r3
   830d0:	930a      	str	r3, [sp, #40]	; 0x28
   830d2:	4b61      	ldr	r3, [pc, #388]	; (83258 <_svfprintf_r+0x86c>)
   830d4:	920e      	str	r2, [sp, #56]	; 0x38
   830d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   830d8:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   830dc:	9007      	str	r0, [sp, #28]
   830de:	9112      	str	r1, [sp, #72]	; 0x48
   830e0:	2a47      	cmp	r2, #71	; 0x47
   830e2:	bfd8      	it	le
   830e4:	461e      	movle	r6, r3
   830e6:	e5a5      	b.n	82c34 <_svfprintf_r+0x248>
   830e8:	f04b 0b08 	orr.w	fp, fp, #8
   830ec:	f89a 3000 	ldrb.w	r3, [sl]
   830f0:	e4d6      	b.n	82aa0 <_svfprintf_r+0xb4>
   830f2:	f04b 0b10 	orr.w	fp, fp, #16
   830f6:	9311      	str	r3, [sp, #68]	; 0x44
   830f8:	f01b 0320 	ands.w	r3, fp, #32
   830fc:	f43f aebb 	beq.w	82e76 <_svfprintf_r+0x48a>
   83100:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83102:	3407      	adds	r4, #7
   83104:	f024 0307 	bic.w	r3, r4, #7
   83108:	f103 0208 	add.w	r2, r3, #8
   8310c:	e9d3 4500 	ldrd	r4, r5, [r3]
   83110:	920f      	str	r2, [sp, #60]	; 0x3c
   83112:	2300      	movs	r3, #0
   83114:	e568      	b.n	82be8 <_svfprintf_r+0x1fc>
   83116:	9311      	str	r3, [sp, #68]	; 0x44
   83118:	2a00      	cmp	r2, #0
   8311a:	f040 86c2 	bne.w	83ea2 <_svfprintf_r+0x14b6>
   8311e:	4b4f      	ldr	r3, [pc, #316]	; (8325c <_svfprintf_r+0x870>)
   83120:	f01b 0f20 	tst.w	fp, #32
   83124:	9318      	str	r3, [sp, #96]	; 0x60
   83126:	f43f af19 	beq.w	82f5c <_svfprintf_r+0x570>
   8312a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8312c:	f01b 0f01 	tst.w	fp, #1
   83130:	f104 0407 	add.w	r4, r4, #7
   83134:	f024 0307 	bic.w	r3, r4, #7
   83138:	f103 0208 	add.w	r2, r3, #8
   8313c:	920f      	str	r2, [sp, #60]	; 0x3c
   8313e:	e9d3 4500 	ldrd	r4, r5, [r3]
   83142:	f47f af1d 	bne.w	82f80 <_svfprintf_r+0x594>
   83146:	2302      	movs	r3, #2
   83148:	e54e      	b.n	82be8 <_svfprintf_r+0x1fc>
   8314a:	f89a 3000 	ldrb.w	r3, [sl]
   8314e:	2900      	cmp	r1, #0
   83150:	f47f aca6 	bne.w	82aa0 <_svfprintf_r+0xb4>
   83154:	2201      	movs	r2, #1
   83156:	2120      	movs	r1, #32
   83158:	e4a2      	b.n	82aa0 <_svfprintf_r+0xb4>
   8315a:	f04b 0b01 	orr.w	fp, fp, #1
   8315e:	f89a 3000 	ldrb.w	r3, [sl]
   83162:	e49d      	b.n	82aa0 <_svfprintf_r+0xb4>
   83164:	f89a 3000 	ldrb.w	r3, [sl]
   83168:	2201      	movs	r2, #1
   8316a:	212b      	movs	r1, #43	; 0x2b
   8316c:	e498      	b.n	82aa0 <_svfprintf_r+0xb4>
   8316e:	f04b 0b20 	orr.w	fp, fp, #32
   83172:	f89a 3000 	ldrb.w	r3, [sl]
   83176:	e493      	b.n	82aa0 <_svfprintf_r+0xb4>
   83178:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   8317c:	f89a 3000 	ldrb.w	r3, [sl]
   83180:	e48e      	b.n	82aa0 <_svfprintf_r+0xb4>
   83182:	f89a 3000 	ldrb.w	r3, [sl]
   83186:	2b6c      	cmp	r3, #108	; 0x6c
   83188:	bf03      	ittte	eq
   8318a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   8318e:	f04b 0b20 	orreq.w	fp, fp, #32
   83192:	f10a 0a01 	addeq.w	sl, sl, #1
   83196:	f04b 0b10 	orrne.w	fp, fp, #16
   8319a:	e481      	b.n	82aa0 <_svfprintf_r+0xb4>
   8319c:	2a00      	cmp	r2, #0
   8319e:	f040 867c 	bne.w	83e9a <_svfprintf_r+0x14ae>
   831a2:	f01b 0f20 	tst.w	fp, #32
   831a6:	f040 8452 	bne.w	83a4e <_svfprintf_r+0x1062>
   831aa:	f01b 0f10 	tst.w	fp, #16
   831ae:	f040 8438 	bne.w	83a22 <_svfprintf_r+0x1036>
   831b2:	f01b 0f40 	tst.w	fp, #64	; 0x40
   831b6:	f000 8434 	beq.w	83a22 <_svfprintf_r+0x1036>
   831ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   831bc:	6813      	ldr	r3, [r2, #0]
   831be:	3204      	adds	r2, #4
   831c0:	920f      	str	r2, [sp, #60]	; 0x3c
   831c2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   831c6:	801a      	strh	r2, [r3, #0]
   831c8:	e437      	b.n	82a3a <_svfprintf_r+0x4e>
   831ca:	2378      	movs	r3, #120	; 0x78
   831cc:	2230      	movs	r2, #48	; 0x30
   831ce:	980f      	ldr	r0, [sp, #60]	; 0x3c
   831d0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   831d4:	9311      	str	r3, [sp, #68]	; 0x44
   831d6:	1d03      	adds	r3, r0, #4
   831d8:	930f      	str	r3, [sp, #60]	; 0x3c
   831da:	4b20      	ldr	r3, [pc, #128]	; (8325c <_svfprintf_r+0x870>)
   831dc:	6804      	ldr	r4, [r0, #0]
   831de:	9318      	str	r3, [sp, #96]	; 0x60
   831e0:	f04b 0b02 	orr.w	fp, fp, #2
   831e4:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   831e8:	2500      	movs	r5, #0
   831ea:	2302      	movs	r3, #2
   831ec:	e4fc      	b.n	82be8 <_svfprintf_r+0x1fc>
   831ee:	9311      	str	r3, [sp, #68]	; 0x44
   831f0:	2a00      	cmp	r2, #0
   831f2:	f43f aeef 	beq.w	82fd4 <_svfprintf_r+0x5e8>
   831f6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   831fa:	e6eb      	b.n	82fd4 <_svfprintf_r+0x5e8>
   831fc:	2000      	movs	r0, #0
   831fe:	4604      	mov	r4, r0
   83200:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   83204:	f81a 3b01 	ldrb.w	r3, [sl], #1
   83208:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   8320c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   83210:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   83214:	2809      	cmp	r0, #9
   83216:	d9f5      	bls.n	83204 <_svfprintf_r+0x818>
   83218:	940d      	str	r4, [sp, #52]	; 0x34
   8321a:	e443      	b.n	82aa4 <_svfprintf_r+0xb8>
   8321c:	9311      	str	r3, [sp, #68]	; 0x44
   8321e:	2a00      	cmp	r2, #0
   83220:	f040 864a 	bne.w	83eb8 <_svfprintf_r+0x14cc>
   83224:	9a11      	ldr	r2, [sp, #68]	; 0x44
   83226:	2a00      	cmp	r2, #0
   83228:	f43f acb6 	beq.w	82b98 <_svfprintf_r+0x1ac>
   8322c:	2300      	movs	r3, #0
   8322e:	2101      	movs	r1, #1
   83230:	461f      	mov	r7, r3
   83232:	9108      	str	r1, [sp, #32]
   83234:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   83238:	f8cd b01c 	str.w	fp, [sp, #28]
   8323c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83240:	930a      	str	r3, [sp, #40]	; 0x28
   83242:	9312      	str	r3, [sp, #72]	; 0x48
   83244:	910e      	str	r1, [sp, #56]	; 0x38
   83246:	ae28      	add	r6, sp, #160	; 0xa0
   83248:	e4f8      	b.n	82c3c <_svfprintf_r+0x250>
   8324a:	bf00      	nop
   8324c:	00087054 	.word	0x00087054
   83250:	7fefffff 	.word	0x7fefffff
   83254:	00087048 	.word	0x00087048
   83258:	00087044 	.word	0x00087044
   8325c:	00087068 	.word	0x00087068
   83260:	aa25      	add	r2, sp, #148	; 0x94
   83262:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83264:	980c      	ldr	r0, [sp, #48]	; 0x30
   83266:	f002 ff9d 	bl	861a4 <__ssprint_r>
   8326a:	2800      	cmp	r0, #0
   8326c:	f47f ac9b 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83270:	46c8      	mov	r8, r9
   83272:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83276:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83278:	e533      	b.n	82ce2 <_svfprintf_r+0x2f6>
   8327a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8327c:	2b65      	cmp	r3, #101	; 0x65
   8327e:	f340 809a 	ble.w	833b6 <_svfprintf_r+0x9ca>
   83282:	a815      	add	r0, sp, #84	; 0x54
   83284:	c80d      	ldmia	r0, {r0, r2, r3}
   83286:	9914      	ldr	r1, [sp, #80]	; 0x50
   83288:	f003 fcc8 	bl	86c1c <__aeabi_dcmpeq>
   8328c:	2800      	cmp	r0, #0
   8328e:	f000 8193 	beq.w	835b8 <_svfprintf_r+0xbcc>
   83292:	2101      	movs	r1, #1
   83294:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83296:	4ab5      	ldr	r2, [pc, #724]	; (8356c <_svfprintf_r+0xb80>)
   83298:	440b      	add	r3, r1
   8329a:	440c      	add	r4, r1
   8329c:	2b07      	cmp	r3, #7
   8329e:	9427      	str	r4, [sp, #156]	; 0x9c
   832a0:	9326      	str	r3, [sp, #152]	; 0x98
   832a2:	f8c8 1004 	str.w	r1, [r8, #4]
   832a6:	f8c8 2000 	str.w	r2, [r8]
   832aa:	f300 83c6 	bgt.w	83a3a <_svfprintf_r+0x104e>
   832ae:	f108 0808 	add.w	r8, r8, #8
   832b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   832b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   832b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   832b8:	4293      	cmp	r3, r2
   832ba:	db03      	blt.n	832c4 <_svfprintf_r+0x8d8>
   832bc:	9b07      	ldr	r3, [sp, #28]
   832be:	07dd      	lsls	r5, r3, #31
   832c0:	f57f ad86 	bpl.w	82dd0 <_svfprintf_r+0x3e4>
   832c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   832c6:	9919      	ldr	r1, [sp, #100]	; 0x64
   832c8:	3301      	adds	r3, #1
   832ca:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   832cc:	440c      	add	r4, r1
   832ce:	2b07      	cmp	r3, #7
   832d0:	f8c8 2000 	str.w	r2, [r8]
   832d4:	f8c8 1004 	str.w	r1, [r8, #4]
   832d8:	9427      	str	r4, [sp, #156]	; 0x9c
   832da:	9326      	str	r3, [sp, #152]	; 0x98
   832dc:	f300 83c4 	bgt.w	83a68 <_svfprintf_r+0x107c>
   832e0:	f108 0808 	add.w	r8, r8, #8
   832e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   832e6:	1e5e      	subs	r6, r3, #1
   832e8:	2e00      	cmp	r6, #0
   832ea:	f77f ad71 	ble.w	82dd0 <_svfprintf_r+0x3e4>
   832ee:	2e10      	cmp	r6, #16
   832f0:	f340 8575 	ble.w	83dde <_svfprintf_r+0x13f2>
   832f4:	4622      	mov	r2, r4
   832f6:	2710      	movs	r7, #16
   832f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   832fa:	4d9d      	ldr	r5, [pc, #628]	; (83570 <_svfprintf_r+0xb84>)
   832fc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83300:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83302:	e005      	b.n	83310 <_svfprintf_r+0x924>
   83304:	f108 0808 	add.w	r8, r8, #8
   83308:	3e10      	subs	r6, #16
   8330a:	2e10      	cmp	r6, #16
   8330c:	f340 8225 	ble.w	8375a <_svfprintf_r+0xd6e>
   83310:	3301      	adds	r3, #1
   83312:	3210      	adds	r2, #16
   83314:	2b07      	cmp	r3, #7
   83316:	9227      	str	r2, [sp, #156]	; 0x9c
   83318:	9326      	str	r3, [sp, #152]	; 0x98
   8331a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8331e:	ddf1      	ble.n	83304 <_svfprintf_r+0x918>
   83320:	aa25      	add	r2, sp, #148	; 0x94
   83322:	4621      	mov	r1, r4
   83324:	4658      	mov	r0, fp
   83326:	f002 ff3d 	bl	861a4 <__ssprint_r>
   8332a:	2800      	cmp	r0, #0
   8332c:	f47f ac3b 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83330:	46c8      	mov	r8, r9
   83332:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83334:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83336:	e7e7      	b.n	83308 <_svfprintf_r+0x91c>
   83338:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8333a:	9a08      	ldr	r2, [sp, #32]
   8333c:	1a9f      	subs	r7, r3, r2
   8333e:	2f00      	cmp	r7, #0
   83340:	f77f acf6 	ble.w	82d30 <_svfprintf_r+0x344>
   83344:	2f10      	cmp	r7, #16
   83346:	f340 84a8 	ble.w	83c9a <_svfprintf_r+0x12ae>
   8334a:	4d89      	ldr	r5, [pc, #548]	; (83570 <_svfprintf_r+0xb84>)
   8334c:	4642      	mov	r2, r8
   8334e:	4621      	mov	r1, r4
   83350:	46b0      	mov	r8, r6
   83352:	f04f 0b10 	mov.w	fp, #16
   83356:	462e      	mov	r6, r5
   83358:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8335a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8335c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8335e:	e004      	b.n	8336a <_svfprintf_r+0x97e>
   83360:	3f10      	subs	r7, #16
   83362:	2f10      	cmp	r7, #16
   83364:	f102 0208 	add.w	r2, r2, #8
   83368:	dd15      	ble.n	83396 <_svfprintf_r+0x9aa>
   8336a:	3301      	adds	r3, #1
   8336c:	3110      	adds	r1, #16
   8336e:	2b07      	cmp	r3, #7
   83370:	9127      	str	r1, [sp, #156]	; 0x9c
   83372:	9326      	str	r3, [sp, #152]	; 0x98
   83374:	e882 0840 	stmia.w	r2, {r6, fp}
   83378:	ddf2      	ble.n	83360 <_svfprintf_r+0x974>
   8337a:	aa25      	add	r2, sp, #148	; 0x94
   8337c:	4629      	mov	r1, r5
   8337e:	4620      	mov	r0, r4
   83380:	f002 ff10 	bl	861a4 <__ssprint_r>
   83384:	2800      	cmp	r0, #0
   83386:	f47f ac0e 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   8338a:	3f10      	subs	r7, #16
   8338c:	2f10      	cmp	r7, #16
   8338e:	464a      	mov	r2, r9
   83390:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83392:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83394:	dce9      	bgt.n	8336a <_svfprintf_r+0x97e>
   83396:	4635      	mov	r5, r6
   83398:	460c      	mov	r4, r1
   8339a:	4646      	mov	r6, r8
   8339c:	4690      	mov	r8, r2
   8339e:	3301      	adds	r3, #1
   833a0:	443c      	add	r4, r7
   833a2:	2b07      	cmp	r3, #7
   833a4:	9427      	str	r4, [sp, #156]	; 0x9c
   833a6:	9326      	str	r3, [sp, #152]	; 0x98
   833a8:	e888 00a0 	stmia.w	r8, {r5, r7}
   833ac:	f300 829e 	bgt.w	838ec <_svfprintf_r+0xf00>
   833b0:	f108 0808 	add.w	r8, r8, #8
   833b4:	e4bc      	b.n	82d30 <_svfprintf_r+0x344>
   833b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   833b8:	2b01      	cmp	r3, #1
   833ba:	f340 824f 	ble.w	8385c <_svfprintf_r+0xe70>
   833be:	2301      	movs	r3, #1
   833c0:	9f26      	ldr	r7, [sp, #152]	; 0x98
   833c2:	441c      	add	r4, r3
   833c4:	441f      	add	r7, r3
   833c6:	2f07      	cmp	r7, #7
   833c8:	9427      	str	r4, [sp, #156]	; 0x9c
   833ca:	f8c8 6000 	str.w	r6, [r8]
   833ce:	9726      	str	r7, [sp, #152]	; 0x98
   833d0:	f8c8 3004 	str.w	r3, [r8, #4]
   833d4:	f300 825f 	bgt.w	83896 <_svfprintf_r+0xeaa>
   833d8:	f108 0808 	add.w	r8, r8, #8
   833dc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   833de:	3701      	adds	r7, #1
   833e0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   833e2:	4414      	add	r4, r2
   833e4:	2f07      	cmp	r7, #7
   833e6:	9427      	str	r4, [sp, #156]	; 0x9c
   833e8:	9726      	str	r7, [sp, #152]	; 0x98
   833ea:	f8c8 3000 	str.w	r3, [r8]
   833ee:	f8c8 2004 	str.w	r2, [r8, #4]
   833f2:	f300 825c 	bgt.w	838ae <_svfprintf_r+0xec2>
   833f6:	f108 0808 	add.w	r8, r8, #8
   833fa:	a815      	add	r0, sp, #84	; 0x54
   833fc:	c80d      	ldmia	r0, {r0, r2, r3}
   833fe:	9914      	ldr	r1, [sp, #80]	; 0x50
   83400:	f003 fc0c 	bl	86c1c <__aeabi_dcmpeq>
   83404:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83406:	2800      	cmp	r0, #0
   83408:	f040 8141 	bne.w	8368e <_svfprintf_r+0xca2>
   8340c:	3b01      	subs	r3, #1
   8340e:	3701      	adds	r7, #1
   83410:	3601      	adds	r6, #1
   83412:	441c      	add	r4, r3
   83414:	2f07      	cmp	r7, #7
   83416:	f8c8 6000 	str.w	r6, [r8]
   8341a:	9726      	str	r7, [sp, #152]	; 0x98
   8341c:	9427      	str	r4, [sp, #156]	; 0x9c
   8341e:	f8c8 3004 	str.w	r3, [r8, #4]
   83422:	f300 8166 	bgt.w	836f2 <_svfprintf_r+0xd06>
   83426:	f108 0808 	add.w	r8, r8, #8
   8342a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   8342c:	3701      	adds	r7, #1
   8342e:	4414      	add	r4, r2
   83430:	ab21      	add	r3, sp, #132	; 0x84
   83432:	2f07      	cmp	r7, #7
   83434:	9427      	str	r4, [sp, #156]	; 0x9c
   83436:	9726      	str	r7, [sp, #152]	; 0x98
   83438:	f8c8 2004 	str.w	r2, [r8, #4]
   8343c:	f8c8 3000 	str.w	r3, [r8]
   83440:	f77f acc4 	ble.w	82dcc <_svfprintf_r+0x3e0>
   83444:	aa25      	add	r2, sp, #148	; 0x94
   83446:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83448:	980c      	ldr	r0, [sp, #48]	; 0x30
   8344a:	f002 feab 	bl	861a4 <__ssprint_r>
   8344e:	2800      	cmp	r0, #0
   83450:	f47f aba9 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83454:	46c8      	mov	r8, r9
   83456:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83458:	e4ba      	b.n	82dd0 <_svfprintf_r+0x3e4>
   8345a:	aa25      	add	r2, sp, #148	; 0x94
   8345c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8345e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83460:	f002 fea0 	bl	861a4 <__ssprint_r>
   83464:	2800      	cmp	r0, #0
   83466:	f43f acfd 	beq.w	82e64 <_svfprintf_r+0x478>
   8346a:	f7ff bb9c 	b.w	82ba6 <_svfprintf_r+0x1ba>
   8346e:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83472:	2b01      	cmp	r3, #1
   83474:	f000 817e 	beq.w	83774 <_svfprintf_r+0xd88>
   83478:	2b02      	cmp	r3, #2
   8347a:	d171      	bne.n	83560 <_svfprintf_r+0xb74>
   8347c:	f8cd b01c 	str.w	fp, [sp, #28]
   83480:	2400      	movs	r4, #0
   83482:	2500      	movs	r5, #0
   83484:	e5d4      	b.n	83030 <_svfprintf_r+0x644>
   83486:	aa25      	add	r2, sp, #148	; 0x94
   83488:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8348a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8348c:	f002 fe8a 	bl	861a4 <__ssprint_r>
   83490:	2800      	cmp	r0, #0
   83492:	f47f ab88 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83496:	46c8      	mov	r8, r9
   83498:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8349a:	e486      	b.n	82daa <_svfprintf_r+0x3be>
   8349c:	aa25      	add	r2, sp, #148	; 0x94
   8349e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   834a0:	980c      	ldr	r0, [sp, #48]	; 0x30
   834a2:	f002 fe7f 	bl	861a4 <__ssprint_r>
   834a6:	2800      	cmp	r0, #0
   834a8:	f47f ab7d 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   834ac:	46c8      	mov	r8, r9
   834ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   834b0:	e429      	b.n	82d06 <_svfprintf_r+0x31a>
   834b2:	2001      	movs	r0, #1
   834b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   834b6:	4a2d      	ldr	r2, [pc, #180]	; (8356c <_svfprintf_r+0xb80>)
   834b8:	4403      	add	r3, r0
   834ba:	4404      	add	r4, r0
   834bc:	2b07      	cmp	r3, #7
   834be:	9427      	str	r4, [sp, #156]	; 0x9c
   834c0:	9326      	str	r3, [sp, #152]	; 0x98
   834c2:	f8c8 0004 	str.w	r0, [r8, #4]
   834c6:	f8c8 2000 	str.w	r2, [r8]
   834ca:	f340 82d8 	ble.w	83a7e <_svfprintf_r+0x1092>
   834ce:	aa25      	add	r2, sp, #148	; 0x94
   834d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   834d2:	980c      	ldr	r0, [sp, #48]	; 0x30
   834d4:	f002 fe66 	bl	861a4 <__ssprint_r>
   834d8:	2800      	cmp	r0, #0
   834da:	f47f ab64 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   834de:	46c8      	mov	r8, r9
   834e0:	991f      	ldr	r1, [sp, #124]	; 0x7c
   834e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   834e4:	b929      	cbnz	r1, 834f2 <_svfprintf_r+0xb06>
   834e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   834e8:	b91b      	cbnz	r3, 834f2 <_svfprintf_r+0xb06>
   834ea:	9b07      	ldr	r3, [sp, #28]
   834ec:	07d8      	lsls	r0, r3, #31
   834ee:	f57f ac6f 	bpl.w	82dd0 <_svfprintf_r+0x3e4>
   834f2:	9819      	ldr	r0, [sp, #100]	; 0x64
   834f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   834f6:	4602      	mov	r2, r0
   834f8:	3301      	adds	r3, #1
   834fa:	4422      	add	r2, r4
   834fc:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   834fe:	2b07      	cmp	r3, #7
   83500:	9227      	str	r2, [sp, #156]	; 0x9c
   83502:	f8c8 4000 	str.w	r4, [r8]
   83506:	f8c8 0004 	str.w	r0, [r8, #4]
   8350a:	9326      	str	r3, [sp, #152]	; 0x98
   8350c:	f300 8431 	bgt.w	83d72 <_svfprintf_r+0x1386>
   83510:	f108 0808 	add.w	r8, r8, #8
   83514:	2900      	cmp	r1, #0
   83516:	f2c0 8409 	blt.w	83d2c <_svfprintf_r+0x1340>
   8351a:	9913      	ldr	r1, [sp, #76]	; 0x4c
   8351c:	3301      	adds	r3, #1
   8351e:	188c      	adds	r4, r1, r2
   83520:	2b07      	cmp	r3, #7
   83522:	9427      	str	r4, [sp, #156]	; 0x9c
   83524:	9326      	str	r3, [sp, #152]	; 0x98
   83526:	f8c8 6000 	str.w	r6, [r8]
   8352a:	f8c8 1004 	str.w	r1, [r8, #4]
   8352e:	f77f ac4d 	ble.w	82dcc <_svfprintf_r+0x3e0>
   83532:	aa25      	add	r2, sp, #148	; 0x94
   83534:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83536:	980c      	ldr	r0, [sp, #48]	; 0x30
   83538:	f002 fe34 	bl	861a4 <__ssprint_r>
   8353c:	2800      	cmp	r0, #0
   8353e:	f47f ab32 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83542:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83544:	46c8      	mov	r8, r9
   83546:	e443      	b.n	82dd0 <_svfprintf_r+0x3e4>
   83548:	aa25      	add	r2, sp, #148	; 0x94
   8354a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8354c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8354e:	f002 fe29 	bl	861a4 <__ssprint_r>
   83552:	2800      	cmp	r0, #0
   83554:	f47f ab27 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83558:	46c8      	mov	r8, r9
   8355a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8355c:	f7ff bbe5 	b.w	82d2a <_svfprintf_r+0x33e>
   83560:	2400      	movs	r4, #0
   83562:	2500      	movs	r5, #0
   83564:	f8cd b01c 	str.w	fp, [sp, #28]
   83568:	4649      	mov	r1, r9
   8356a:	e004      	b.n	83576 <_svfprintf_r+0xb8a>
   8356c:	00087084 	.word	0x00087084
   83570:	00087098 	.word	0x00087098
   83574:	4631      	mov	r1, r6
   83576:	08e2      	lsrs	r2, r4, #3
   83578:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   8357c:	08e8      	lsrs	r0, r5, #3
   8357e:	f004 0307 	and.w	r3, r4, #7
   83582:	4605      	mov	r5, r0
   83584:	4614      	mov	r4, r2
   83586:	3330      	adds	r3, #48	; 0x30
   83588:	ea54 0205 	orrs.w	r2, r4, r5
   8358c:	f801 3c01 	strb.w	r3, [r1, #-1]
   83590:	f101 36ff 	add.w	r6, r1, #4294967295
   83594:	d1ee      	bne.n	83574 <_svfprintf_r+0xb88>
   83596:	9a07      	ldr	r2, [sp, #28]
   83598:	07d2      	lsls	r2, r2, #31
   8359a:	f57f ad59 	bpl.w	83050 <_svfprintf_r+0x664>
   8359e:	2b30      	cmp	r3, #48	; 0x30
   835a0:	f43f ad56 	beq.w	83050 <_svfprintf_r+0x664>
   835a4:	2330      	movs	r3, #48	; 0x30
   835a6:	3902      	subs	r1, #2
   835a8:	f806 3c01 	strb.w	r3, [r6, #-1]
   835ac:	eba9 0301 	sub.w	r3, r9, r1
   835b0:	930e      	str	r3, [sp, #56]	; 0x38
   835b2:	460e      	mov	r6, r1
   835b4:	f7ff bb36 	b.w	82c24 <_svfprintf_r+0x238>
   835b8:	991f      	ldr	r1, [sp, #124]	; 0x7c
   835ba:	2900      	cmp	r1, #0
   835bc:	f77f af79 	ble.w	834b2 <_svfprintf_r+0xac6>
   835c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   835c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   835c4:	4293      	cmp	r3, r2
   835c6:	bfa8      	it	ge
   835c8:	4613      	movge	r3, r2
   835ca:	2b00      	cmp	r3, #0
   835cc:	461f      	mov	r7, r3
   835ce:	dd0b      	ble.n	835e8 <_svfprintf_r+0xbfc>
   835d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   835d2:	443c      	add	r4, r7
   835d4:	3301      	adds	r3, #1
   835d6:	2b07      	cmp	r3, #7
   835d8:	9427      	str	r4, [sp, #156]	; 0x9c
   835da:	e888 00c0 	stmia.w	r8, {r6, r7}
   835de:	9326      	str	r3, [sp, #152]	; 0x98
   835e0:	f300 82fb 	bgt.w	83bda <_svfprintf_r+0x11ee>
   835e4:	f108 0808 	add.w	r8, r8, #8
   835e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   835ea:	2f00      	cmp	r7, #0
   835ec:	bfa8      	it	ge
   835ee:	1bdb      	subge	r3, r3, r7
   835f0:	2b00      	cmp	r3, #0
   835f2:	461f      	mov	r7, r3
   835f4:	f340 80d7 	ble.w	837a6 <_svfprintf_r+0xdba>
   835f8:	2b10      	cmp	r3, #16
   835fa:	f340 8434 	ble.w	83e66 <_svfprintf_r+0x147a>
   835fe:	4dba      	ldr	r5, [pc, #744]	; (838e8 <_svfprintf_r+0xefc>)
   83600:	4642      	mov	r2, r8
   83602:	4621      	mov	r1, r4
   83604:	46b0      	mov	r8, r6
   83606:	f04f 0b10 	mov.w	fp, #16
   8360a:	462e      	mov	r6, r5
   8360c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8360e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83610:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83612:	e004      	b.n	8361e <_svfprintf_r+0xc32>
   83614:	3208      	adds	r2, #8
   83616:	3f10      	subs	r7, #16
   83618:	2f10      	cmp	r7, #16
   8361a:	f340 80b5 	ble.w	83788 <_svfprintf_r+0xd9c>
   8361e:	3301      	adds	r3, #1
   83620:	3110      	adds	r1, #16
   83622:	2b07      	cmp	r3, #7
   83624:	9127      	str	r1, [sp, #156]	; 0x9c
   83626:	9326      	str	r3, [sp, #152]	; 0x98
   83628:	e882 0840 	stmia.w	r2, {r6, fp}
   8362c:	ddf2      	ble.n	83614 <_svfprintf_r+0xc28>
   8362e:	aa25      	add	r2, sp, #148	; 0x94
   83630:	4629      	mov	r1, r5
   83632:	4620      	mov	r0, r4
   83634:	f002 fdb6 	bl	861a4 <__ssprint_r>
   83638:	2800      	cmp	r0, #0
   8363a:	f47f aab4 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   8363e:	464a      	mov	r2, r9
   83640:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83642:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83644:	e7e7      	b.n	83616 <_svfprintf_r+0xc2a>
   83646:	2d00      	cmp	r5, #0
   83648:	bf08      	it	eq
   8364a:	2c0a      	cmpeq	r4, #10
   8364c:	f0c0 8090 	bcc.w	83770 <_svfprintf_r+0xd84>
   83650:	464e      	mov	r6, r9
   83652:	4620      	mov	r0, r4
   83654:	4629      	mov	r1, r5
   83656:	220a      	movs	r2, #10
   83658:	2300      	movs	r3, #0
   8365a:	f003 fb4f 	bl	86cfc <__aeabi_uldivmod>
   8365e:	3230      	adds	r2, #48	; 0x30
   83660:	f806 2d01 	strb.w	r2, [r6, #-1]!
   83664:	4620      	mov	r0, r4
   83666:	4629      	mov	r1, r5
   83668:	2300      	movs	r3, #0
   8366a:	220a      	movs	r2, #10
   8366c:	f003 fb46 	bl	86cfc <__aeabi_uldivmod>
   83670:	4604      	mov	r4, r0
   83672:	460d      	mov	r5, r1
   83674:	ea54 0305 	orrs.w	r3, r4, r5
   83678:	d1eb      	bne.n	83652 <_svfprintf_r+0xc66>
   8367a:	eba9 0306 	sub.w	r3, r9, r6
   8367e:	930e      	str	r3, [sp, #56]	; 0x38
   83680:	f7ff bad0 	b.w	82c24 <_svfprintf_r+0x238>
   83684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83686:	464e      	mov	r6, r9
   83688:	930e      	str	r3, [sp, #56]	; 0x38
   8368a:	f7ff bacb 	b.w	82c24 <_svfprintf_r+0x238>
   8368e:	1e5e      	subs	r6, r3, #1
   83690:	2e00      	cmp	r6, #0
   83692:	f77f aeca 	ble.w	8342a <_svfprintf_r+0xa3e>
   83696:	2e10      	cmp	r6, #16
   83698:	f340 83e3 	ble.w	83e62 <_svfprintf_r+0x1476>
   8369c:	4622      	mov	r2, r4
   8369e:	f04f 0b10 	mov.w	fp, #16
   836a2:	4d91      	ldr	r5, [pc, #580]	; (838e8 <_svfprintf_r+0xefc>)
   836a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   836a6:	e004      	b.n	836b2 <_svfprintf_r+0xcc6>
   836a8:	3e10      	subs	r6, #16
   836aa:	2e10      	cmp	r6, #16
   836ac:	f108 0808 	add.w	r8, r8, #8
   836b0:	dd15      	ble.n	836de <_svfprintf_r+0xcf2>
   836b2:	3701      	adds	r7, #1
   836b4:	3210      	adds	r2, #16
   836b6:	2f07      	cmp	r7, #7
   836b8:	9227      	str	r2, [sp, #156]	; 0x9c
   836ba:	9726      	str	r7, [sp, #152]	; 0x98
   836bc:	e888 0820 	stmia.w	r8, {r5, fp}
   836c0:	ddf2      	ble.n	836a8 <_svfprintf_r+0xcbc>
   836c2:	aa25      	add	r2, sp, #148	; 0x94
   836c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   836c6:	4620      	mov	r0, r4
   836c8:	f002 fd6c 	bl	861a4 <__ssprint_r>
   836cc:	2800      	cmp	r0, #0
   836ce:	f47f aa6a 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   836d2:	3e10      	subs	r6, #16
   836d4:	2e10      	cmp	r6, #16
   836d6:	46c8      	mov	r8, r9
   836d8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   836da:	9f26      	ldr	r7, [sp, #152]	; 0x98
   836dc:	dce9      	bgt.n	836b2 <_svfprintf_r+0xcc6>
   836de:	4614      	mov	r4, r2
   836e0:	3701      	adds	r7, #1
   836e2:	4434      	add	r4, r6
   836e4:	2f07      	cmp	r7, #7
   836e6:	9427      	str	r4, [sp, #156]	; 0x9c
   836e8:	9726      	str	r7, [sp, #152]	; 0x98
   836ea:	e888 0060 	stmia.w	r8, {r5, r6}
   836ee:	f77f ae9a 	ble.w	83426 <_svfprintf_r+0xa3a>
   836f2:	aa25      	add	r2, sp, #148	; 0x94
   836f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   836f6:	980c      	ldr	r0, [sp, #48]	; 0x30
   836f8:	f002 fd54 	bl	861a4 <__ssprint_r>
   836fc:	2800      	cmp	r0, #0
   836fe:	f47f aa52 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83702:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83704:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83706:	46c8      	mov	r8, r9
   83708:	e68f      	b.n	8342a <_svfprintf_r+0xa3e>
   8370a:	3204      	adds	r2, #4
   8370c:	681c      	ldr	r4, [r3, #0]
   8370e:	2500      	movs	r5, #0
   83710:	2301      	movs	r3, #1
   83712:	920f      	str	r2, [sp, #60]	; 0x3c
   83714:	f7ff ba68 	b.w	82be8 <_svfprintf_r+0x1fc>
   83718:	681c      	ldr	r4, [r3, #0]
   8371a:	3304      	adds	r3, #4
   8371c:	930f      	str	r3, [sp, #60]	; 0x3c
   8371e:	2500      	movs	r5, #0
   83720:	e42a      	b.n	82f78 <_svfprintf_r+0x58c>
   83722:	681c      	ldr	r4, [r3, #0]
   83724:	3304      	adds	r3, #4
   83726:	17e5      	asrs	r5, r4, #31
   83728:	4622      	mov	r2, r4
   8372a:	930f      	str	r3, [sp, #60]	; 0x3c
   8372c:	462b      	mov	r3, r5
   8372e:	2a00      	cmp	r2, #0
   83730:	f173 0300 	sbcs.w	r3, r3, #0
   83734:	f6bf ac68 	bge.w	83008 <_svfprintf_r+0x61c>
   83738:	272d      	movs	r7, #45	; 0x2d
   8373a:	4264      	negs	r4, r4
   8373c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   83740:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83744:	2301      	movs	r3, #1
   83746:	f7ff ba53 	b.w	82bf0 <_svfprintf_r+0x204>
   8374a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8374c:	2500      	movs	r5, #0
   8374e:	460a      	mov	r2, r1
   83750:	3204      	adds	r2, #4
   83752:	680c      	ldr	r4, [r1, #0]
   83754:	920f      	str	r2, [sp, #60]	; 0x3c
   83756:	f7ff ba47 	b.w	82be8 <_svfprintf_r+0x1fc>
   8375a:	4614      	mov	r4, r2
   8375c:	3301      	adds	r3, #1
   8375e:	4434      	add	r4, r6
   83760:	2b07      	cmp	r3, #7
   83762:	9427      	str	r4, [sp, #156]	; 0x9c
   83764:	9326      	str	r3, [sp, #152]	; 0x98
   83766:	e888 0060 	stmia.w	r8, {r5, r6}
   8376a:	f77f ab2f 	ble.w	82dcc <_svfprintf_r+0x3e0>
   8376e:	e6e0      	b.n	83532 <_svfprintf_r+0xb46>
   83770:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83774:	2301      	movs	r3, #1
   83776:	ae42      	add	r6, sp, #264	; 0x108
   83778:	3430      	adds	r4, #48	; 0x30
   8377a:	f8cd b01c 	str.w	fp, [sp, #28]
   8377e:	f806 4d41 	strb.w	r4, [r6, #-65]!
   83782:	930e      	str	r3, [sp, #56]	; 0x38
   83784:	f7ff ba4e 	b.w	82c24 <_svfprintf_r+0x238>
   83788:	4635      	mov	r5, r6
   8378a:	460c      	mov	r4, r1
   8378c:	4646      	mov	r6, r8
   8378e:	4690      	mov	r8, r2
   83790:	3301      	adds	r3, #1
   83792:	443c      	add	r4, r7
   83794:	2b07      	cmp	r3, #7
   83796:	9427      	str	r4, [sp, #156]	; 0x9c
   83798:	9326      	str	r3, [sp, #152]	; 0x98
   8379a:	e888 00a0 	stmia.w	r8, {r5, r7}
   8379e:	f300 8246 	bgt.w	83c2e <_svfprintf_r+0x1242>
   837a2:	f108 0808 	add.w	r8, r8, #8
   837a6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   837a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   837aa:	429a      	cmp	r2, r3
   837ac:	db45      	blt.n	8383a <_svfprintf_r+0xe4e>
   837ae:	9b07      	ldr	r3, [sp, #28]
   837b0:	07d9      	lsls	r1, r3, #31
   837b2:	d442      	bmi.n	8383a <_svfprintf_r+0xe4e>
   837b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   837b6:	9812      	ldr	r0, [sp, #72]	; 0x48
   837b8:	1a9a      	subs	r2, r3, r2
   837ba:	1a1d      	subs	r5, r3, r0
   837bc:	4295      	cmp	r5, r2
   837be:	bfa8      	it	ge
   837c0:	4615      	movge	r5, r2
   837c2:	2d00      	cmp	r5, #0
   837c4:	dd0e      	ble.n	837e4 <_svfprintf_r+0xdf8>
   837c6:	9926      	ldr	r1, [sp, #152]	; 0x98
   837c8:	4406      	add	r6, r0
   837ca:	3101      	adds	r1, #1
   837cc:	442c      	add	r4, r5
   837ce:	2907      	cmp	r1, #7
   837d0:	f8c8 6000 	str.w	r6, [r8]
   837d4:	9427      	str	r4, [sp, #156]	; 0x9c
   837d6:	f8c8 5004 	str.w	r5, [r8, #4]
   837da:	9126      	str	r1, [sp, #152]	; 0x98
   837dc:	f300 8216 	bgt.w	83c0c <_svfprintf_r+0x1220>
   837e0:	f108 0808 	add.w	r8, r8, #8
   837e4:	2d00      	cmp	r5, #0
   837e6:	bfb4      	ite	lt
   837e8:	4616      	movlt	r6, r2
   837ea:	1b56      	subge	r6, r2, r5
   837ec:	2e00      	cmp	r6, #0
   837ee:	f77f aaef 	ble.w	82dd0 <_svfprintf_r+0x3e4>
   837f2:	2e10      	cmp	r6, #16
   837f4:	f340 82f3 	ble.w	83dde <_svfprintf_r+0x13f2>
   837f8:	4622      	mov	r2, r4
   837fa:	2710      	movs	r7, #16
   837fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   837fe:	4d3a      	ldr	r5, [pc, #232]	; (838e8 <_svfprintf_r+0xefc>)
   83800:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83804:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83806:	e004      	b.n	83812 <_svfprintf_r+0xe26>
   83808:	f108 0808 	add.w	r8, r8, #8
   8380c:	3e10      	subs	r6, #16
   8380e:	2e10      	cmp	r6, #16
   83810:	dda3      	ble.n	8375a <_svfprintf_r+0xd6e>
   83812:	3301      	adds	r3, #1
   83814:	3210      	adds	r2, #16
   83816:	2b07      	cmp	r3, #7
   83818:	9227      	str	r2, [sp, #156]	; 0x9c
   8381a:	9326      	str	r3, [sp, #152]	; 0x98
   8381c:	e888 00a0 	stmia.w	r8, {r5, r7}
   83820:	ddf2      	ble.n	83808 <_svfprintf_r+0xe1c>
   83822:	aa25      	add	r2, sp, #148	; 0x94
   83824:	4621      	mov	r1, r4
   83826:	4658      	mov	r0, fp
   83828:	f002 fcbc 	bl	861a4 <__ssprint_r>
   8382c:	2800      	cmp	r0, #0
   8382e:	f47f a9ba 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83832:	46c8      	mov	r8, r9
   83834:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83836:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83838:	e7e8      	b.n	8380c <_svfprintf_r+0xe20>
   8383a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8383c:	9819      	ldr	r0, [sp, #100]	; 0x64
   8383e:	3301      	adds	r3, #1
   83840:	991a      	ldr	r1, [sp, #104]	; 0x68
   83842:	4404      	add	r4, r0
   83844:	2b07      	cmp	r3, #7
   83846:	9427      	str	r4, [sp, #156]	; 0x9c
   83848:	f8c8 1000 	str.w	r1, [r8]
   8384c:	f8c8 0004 	str.w	r0, [r8, #4]
   83850:	9326      	str	r3, [sp, #152]	; 0x98
   83852:	f300 81cf 	bgt.w	83bf4 <_svfprintf_r+0x1208>
   83856:	f108 0808 	add.w	r8, r8, #8
   8385a:	e7ab      	b.n	837b4 <_svfprintf_r+0xdc8>
   8385c:	9b07      	ldr	r3, [sp, #28]
   8385e:	07da      	lsls	r2, r3, #31
   83860:	f53f adad 	bmi.w	833be <_svfprintf_r+0x9d2>
   83864:	2301      	movs	r3, #1
   83866:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83868:	441c      	add	r4, r3
   8386a:	441f      	add	r7, r3
   8386c:	2f07      	cmp	r7, #7
   8386e:	9427      	str	r4, [sp, #156]	; 0x9c
   83870:	f8c8 6000 	str.w	r6, [r8]
   83874:	9726      	str	r7, [sp, #152]	; 0x98
   83876:	f8c8 3004 	str.w	r3, [r8, #4]
   8387a:	f77f add4 	ble.w	83426 <_svfprintf_r+0xa3a>
   8387e:	aa25      	add	r2, sp, #148	; 0x94
   83880:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83882:	980c      	ldr	r0, [sp, #48]	; 0x30
   83884:	f002 fc8e 	bl	861a4 <__ssprint_r>
   83888:	2800      	cmp	r0, #0
   8388a:	f47f a98c 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   8388e:	46c8      	mov	r8, r9
   83890:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83892:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83894:	e5c9      	b.n	8342a <_svfprintf_r+0xa3e>
   83896:	aa25      	add	r2, sp, #148	; 0x94
   83898:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8389a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8389c:	f002 fc82 	bl	861a4 <__ssprint_r>
   838a0:	2800      	cmp	r0, #0
   838a2:	f47f a980 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   838a6:	46c8      	mov	r8, r9
   838a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   838aa:	9f26      	ldr	r7, [sp, #152]	; 0x98
   838ac:	e596      	b.n	833dc <_svfprintf_r+0x9f0>
   838ae:	aa25      	add	r2, sp, #148	; 0x94
   838b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   838b2:	980c      	ldr	r0, [sp, #48]	; 0x30
   838b4:	f002 fc76 	bl	861a4 <__ssprint_r>
   838b8:	2800      	cmp	r0, #0
   838ba:	f47f a974 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   838be:	46c8      	mov	r8, r9
   838c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   838c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
   838c4:	e599      	b.n	833fa <_svfprintf_r+0xa0e>
   838c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   838c8:	3407      	adds	r4, #7
   838ca:	f024 0407 	bic.w	r4, r4, #7
   838ce:	f104 0108 	add.w	r1, r4, #8
   838d2:	e9d4 2300 	ldrd	r2, r3, [r4]
   838d6:	910f      	str	r1, [sp, #60]	; 0x3c
   838d8:	4614      	mov	r4, r2
   838da:	461d      	mov	r5, r3
   838dc:	f7ff bb8f 	b.w	82ffe <_svfprintf_r+0x612>
   838e0:	464e      	mov	r6, r9
   838e2:	f7ff b99f 	b.w	82c24 <_svfprintf_r+0x238>
   838e6:	bf00      	nop
   838e8:	00087098 	.word	0x00087098
   838ec:	aa25      	add	r2, sp, #148	; 0x94
   838ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
   838f0:	980c      	ldr	r0, [sp, #48]	; 0x30
   838f2:	f002 fc57 	bl	861a4 <__ssprint_r>
   838f6:	2800      	cmp	r0, #0
   838f8:	f47f a955 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   838fc:	46c8      	mov	r8, r9
   838fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83900:	f7ff ba16 	b.w	82d30 <_svfprintf_r+0x344>
   83904:	9c15      	ldr	r4, [sp, #84]	; 0x54
   83906:	4622      	mov	r2, r4
   83908:	4620      	mov	r0, r4
   8390a:	9c14      	ldr	r4, [sp, #80]	; 0x50
   8390c:	4623      	mov	r3, r4
   8390e:	4621      	mov	r1, r4
   83910:	f003 f9b6 	bl	86c80 <__aeabi_dcmpun>
   83914:	2800      	cmp	r0, #0
   83916:	f040 8273 	bne.w	83e00 <_svfprintf_r+0x1414>
   8391a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8391c:	3301      	adds	r3, #1
   8391e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83920:	f023 0320 	bic.w	r3, r3, #32
   83924:	930e      	str	r3, [sp, #56]	; 0x38
   83926:	f000 819c 	beq.w	83c62 <_svfprintf_r+0x1276>
   8392a:	2b47      	cmp	r3, #71	; 0x47
   8392c:	f000 80d6 	beq.w	83adc <_svfprintf_r+0x10f0>
   83930:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   83934:	9307      	str	r3, [sp, #28]
   83936:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83938:	1e1f      	subs	r7, r3, #0
   8393a:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8393c:	9308      	str	r3, [sp, #32]
   8393e:	bfb7      	itett	lt
   83940:	463b      	movlt	r3, r7
   83942:	2300      	movge	r3, #0
   83944:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   83948:	232d      	movlt	r3, #45	; 0x2d
   8394a:	9310      	str	r3, [sp, #64]	; 0x40
   8394c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8394e:	2b66      	cmp	r3, #102	; 0x66
   83950:	f000 8190 	beq.w	83c74 <_svfprintf_r+0x1288>
   83954:	2b46      	cmp	r3, #70	; 0x46
   83956:	f000 80a4 	beq.w	83aa2 <_svfprintf_r+0x10b6>
   8395a:	2002      	movs	r0, #2
   8395c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8395e:	a923      	add	r1, sp, #140	; 0x8c
   83960:	2b45      	cmp	r3, #69	; 0x45
   83962:	bf0a      	itet	eq
   83964:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   83966:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   83968:	1c5d      	addeq	r5, r3, #1
   8396a:	e88d 0021 	stmia.w	sp, {r0, r5}
   8396e:	9104      	str	r1, [sp, #16]
   83970:	a820      	add	r0, sp, #128	; 0x80
   83972:	a91f      	add	r1, sp, #124	; 0x7c
   83974:	463b      	mov	r3, r7
   83976:	9003      	str	r0, [sp, #12]
   83978:	9a08      	ldr	r2, [sp, #32]
   8397a:	9102      	str	r1, [sp, #8]
   8397c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8397e:	f000 fb5b 	bl	84038 <_dtoa_r>
   83982:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83984:	4606      	mov	r6, r0
   83986:	2b67      	cmp	r3, #103	; 0x67
   83988:	f040 81ba 	bne.w	83d00 <_svfprintf_r+0x1314>
   8398c:	f01b 0f01 	tst.w	fp, #1
   83990:	f000 8223 	beq.w	83dda <_svfprintf_r+0x13ee>
   83994:	1974      	adds	r4, r6, r5
   83996:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83998:	9808      	ldr	r0, [sp, #32]
   8399a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   8399c:	4639      	mov	r1, r7
   8399e:	f003 f93d 	bl	86c1c <__aeabi_dcmpeq>
   839a2:	2800      	cmp	r0, #0
   839a4:	f040 8124 	bne.w	83bf0 <_svfprintf_r+0x1204>
   839a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   839aa:	42a3      	cmp	r3, r4
   839ac:	d206      	bcs.n	839bc <_svfprintf_r+0xfd0>
   839ae:	2130      	movs	r1, #48	; 0x30
   839b0:	1c5a      	adds	r2, r3, #1
   839b2:	9223      	str	r2, [sp, #140]	; 0x8c
   839b4:	7019      	strb	r1, [r3, #0]
   839b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   839b8:	429c      	cmp	r4, r3
   839ba:	d8f9      	bhi.n	839b0 <_svfprintf_r+0xfc4>
   839bc:	1b9b      	subs	r3, r3, r6
   839be:	9313      	str	r3, [sp, #76]	; 0x4c
   839c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   839c2:	2b47      	cmp	r3, #71	; 0x47
   839c4:	f000 80a2 	beq.w	83b0c <_svfprintf_r+0x1120>
   839c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   839ca:	2b65      	cmp	r3, #101	; 0x65
   839cc:	f340 81a7 	ble.w	83d1e <_svfprintf_r+0x1332>
   839d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   839d2:	2b66      	cmp	r3, #102	; 0x66
   839d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   839d6:	9312      	str	r3, [sp, #72]	; 0x48
   839d8:	f000 8171 	beq.w	83cbe <_svfprintf_r+0x12d2>
   839dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   839de:	9a12      	ldr	r2, [sp, #72]	; 0x48
   839e0:	4619      	mov	r1, r3
   839e2:	4291      	cmp	r1, r2
   839e4:	f300 815d 	bgt.w	83ca2 <_svfprintf_r+0x12b6>
   839e8:	f01b 0f01 	tst.w	fp, #1
   839ec:	f040 81f0 	bne.w	83dd0 <_svfprintf_r+0x13e4>
   839f0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   839f4:	9308      	str	r3, [sp, #32]
   839f6:	2367      	movs	r3, #103	; 0x67
   839f8:	920e      	str	r2, [sp, #56]	; 0x38
   839fa:	9311      	str	r3, [sp, #68]	; 0x44
   839fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   839fe:	2b00      	cmp	r3, #0
   83a00:	d17d      	bne.n	83afe <_svfprintf_r+0x1112>
   83a02:	930a      	str	r3, [sp, #40]	; 0x28
   83a04:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83a08:	f7ff b914 	b.w	82c34 <_svfprintf_r+0x248>
   83a0c:	f024 0407 	bic.w	r4, r4, #7
   83a10:	6823      	ldr	r3, [r4, #0]
   83a12:	9315      	str	r3, [sp, #84]	; 0x54
   83a14:	6863      	ldr	r3, [r4, #4]
   83a16:	9314      	str	r3, [sp, #80]	; 0x50
   83a18:	f104 0308 	add.w	r3, r4, #8
   83a1c:	930f      	str	r3, [sp, #60]	; 0x3c
   83a1e:	f7ff bb2f 	b.w	83080 <_svfprintf_r+0x694>
   83a22:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83a24:	6813      	ldr	r3, [r2, #0]
   83a26:	3204      	adds	r2, #4
   83a28:	920f      	str	r2, [sp, #60]	; 0x3c
   83a2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83a2c:	601a      	str	r2, [r3, #0]
   83a2e:	f7ff b804 	b.w	82a3a <_svfprintf_r+0x4e>
   83a32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83a34:	4daf      	ldr	r5, [pc, #700]	; (83cf4 <_svfprintf_r+0x1308>)
   83a36:	f7ff b9ad 	b.w	82d94 <_svfprintf_r+0x3a8>
   83a3a:	aa25      	add	r2, sp, #148	; 0x94
   83a3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a3e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a40:	f002 fbb0 	bl	861a4 <__ssprint_r>
   83a44:	2800      	cmp	r0, #0
   83a46:	f47f a8ae 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83a4a:	46c8      	mov	r8, r9
   83a4c:	e431      	b.n	832b2 <_svfprintf_r+0x8c6>
   83a4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83a50:	4613      	mov	r3, r2
   83a52:	3304      	adds	r3, #4
   83a54:	930f      	str	r3, [sp, #60]	; 0x3c
   83a56:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83a58:	6811      	ldr	r1, [r2, #0]
   83a5a:	17dd      	asrs	r5, r3, #31
   83a5c:	461a      	mov	r2, r3
   83a5e:	462b      	mov	r3, r5
   83a60:	e9c1 2300 	strd	r2, r3, [r1]
   83a64:	f7fe bfe9 	b.w	82a3a <_svfprintf_r+0x4e>
   83a68:	aa25      	add	r2, sp, #148	; 0x94
   83a6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a6c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a6e:	f002 fb99 	bl	861a4 <__ssprint_r>
   83a72:	2800      	cmp	r0, #0
   83a74:	f47f a897 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83a78:	46c8      	mov	r8, r9
   83a7a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83a7c:	e432      	b.n	832e4 <_svfprintf_r+0x8f8>
   83a7e:	f108 0808 	add.w	r8, r8, #8
   83a82:	e52f      	b.n	834e4 <_svfprintf_r+0xaf8>
   83a84:	2140      	movs	r1, #64	; 0x40
   83a86:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a88:	f001 fb5a 	bl	85140 <_malloc_r>
   83a8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a8e:	6010      	str	r0, [r2, #0]
   83a90:	6110      	str	r0, [r2, #16]
   83a92:	2800      	cmp	r0, #0
   83a94:	f000 8214 	beq.w	83ec0 <_svfprintf_r+0x14d4>
   83a98:	2340      	movs	r3, #64	; 0x40
   83a9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a9c:	6153      	str	r3, [r2, #20]
   83a9e:	f7fe bfbc 	b.w	82a1a <_svfprintf_r+0x2e>
   83aa2:	2003      	movs	r0, #3
   83aa4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83aa6:	a923      	add	r1, sp, #140	; 0x8c
   83aa8:	e88d 0011 	stmia.w	sp, {r0, r4}
   83aac:	9104      	str	r1, [sp, #16]
   83aae:	a820      	add	r0, sp, #128	; 0x80
   83ab0:	a91f      	add	r1, sp, #124	; 0x7c
   83ab2:	9003      	str	r0, [sp, #12]
   83ab4:	9a08      	ldr	r2, [sp, #32]
   83ab6:	463b      	mov	r3, r7
   83ab8:	9102      	str	r1, [sp, #8]
   83aba:	980c      	ldr	r0, [sp, #48]	; 0x30
   83abc:	f000 fabc 	bl	84038 <_dtoa_r>
   83ac0:	4625      	mov	r5, r4
   83ac2:	4606      	mov	r6, r0
   83ac4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83ac6:	1974      	adds	r4, r6, r5
   83ac8:	2b46      	cmp	r3, #70	; 0x46
   83aca:	f47f af64 	bne.w	83996 <_svfprintf_r+0xfaa>
   83ace:	7833      	ldrb	r3, [r6, #0]
   83ad0:	2b30      	cmp	r3, #48	; 0x30
   83ad2:	f000 8187 	beq.w	83de4 <_svfprintf_r+0x13f8>
   83ad6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   83ad8:	442c      	add	r4, r5
   83ada:	e75c      	b.n	83996 <_svfprintf_r+0xfaa>
   83adc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ade:	2b00      	cmp	r3, #0
   83ae0:	bf08      	it	eq
   83ae2:	2301      	moveq	r3, #1
   83ae4:	930a      	str	r3, [sp, #40]	; 0x28
   83ae6:	e723      	b.n	83930 <_svfprintf_r+0xf44>
   83ae8:	4630      	mov	r0, r6
   83aea:	950a      	str	r5, [sp, #40]	; 0x28
   83aec:	f7fe ff50 	bl	82990 <strlen>
   83af0:	940f      	str	r4, [sp, #60]	; 0x3c
   83af2:	900e      	str	r0, [sp, #56]	; 0x38
   83af4:	f8cd b01c 	str.w	fp, [sp, #28]
   83af8:	4603      	mov	r3, r0
   83afa:	f7ff b9e7 	b.w	82ecc <_svfprintf_r+0x4e0>
   83afe:	272d      	movs	r7, #45	; 0x2d
   83b00:	2300      	movs	r3, #0
   83b02:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83b06:	930a      	str	r3, [sp, #40]	; 0x28
   83b08:	f7ff b895 	b.w	82c36 <_svfprintf_r+0x24a>
   83b0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83b0e:	461a      	mov	r2, r3
   83b10:	9312      	str	r3, [sp, #72]	; 0x48
   83b12:	3303      	adds	r3, #3
   83b14:	db04      	blt.n	83b20 <_svfprintf_r+0x1134>
   83b16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83b18:	4619      	mov	r1, r3
   83b1a:	4291      	cmp	r1, r2
   83b1c:	f6bf af5e 	bge.w	839dc <_svfprintf_r+0xff0>
   83b20:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83b22:	3b02      	subs	r3, #2
   83b24:	9311      	str	r3, [sp, #68]	; 0x44
   83b26:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83b28:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   83b2c:	3b01      	subs	r3, #1
   83b2e:	2b00      	cmp	r3, #0
   83b30:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   83b34:	bfb4      	ite	lt
   83b36:	222d      	movlt	r2, #45	; 0x2d
   83b38:	222b      	movge	r2, #43	; 0x2b
   83b3a:	931f      	str	r3, [sp, #124]	; 0x7c
   83b3c:	bfb8      	it	lt
   83b3e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   83b40:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   83b44:	bfb8      	it	lt
   83b46:	f1c3 0301 	rsblt	r3, r3, #1
   83b4a:	2b09      	cmp	r3, #9
   83b4c:	f340 811f 	ble.w	83d8e <_svfprintf_r+0x13a2>
   83b50:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   83b54:	4601      	mov	r1, r0
   83b56:	4c68      	ldr	r4, [pc, #416]	; (83cf8 <_svfprintf_r+0x130c>)
   83b58:	e000      	b.n	83b5c <_svfprintf_r+0x1170>
   83b5a:	4611      	mov	r1, r2
   83b5c:	fb84 5203 	smull	r5, r2, r4, r3
   83b60:	17dd      	asrs	r5, r3, #31
   83b62:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   83b66:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   83b6a:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   83b6e:	3230      	adds	r2, #48	; 0x30
   83b70:	2d09      	cmp	r5, #9
   83b72:	f801 2c01 	strb.w	r2, [r1, #-1]
   83b76:	462b      	mov	r3, r5
   83b78:	f101 32ff 	add.w	r2, r1, #4294967295
   83b7c:	dced      	bgt.n	83b5a <_svfprintf_r+0x116e>
   83b7e:	3330      	adds	r3, #48	; 0x30
   83b80:	3902      	subs	r1, #2
   83b82:	b2dc      	uxtb	r4, r3
   83b84:	4288      	cmp	r0, r1
   83b86:	f802 4c01 	strb.w	r4, [r2, #-1]
   83b8a:	f240 8192 	bls.w	83eb2 <_svfprintf_r+0x14c6>
   83b8e:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   83b92:	4613      	mov	r3, r2
   83b94:	e001      	b.n	83b9a <_svfprintf_r+0x11ae>
   83b96:	f813 4b01 	ldrb.w	r4, [r3], #1
   83b9a:	4283      	cmp	r3, r0
   83b9c:	f801 4b01 	strb.w	r4, [r1], #1
   83ba0:	d1f9      	bne.n	83b96 <_svfprintf_r+0x11aa>
   83ba2:	3301      	adds	r3, #1
   83ba4:	1a9b      	subs	r3, r3, r2
   83ba6:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   83baa:	4413      	add	r3, r2
   83bac:	aa21      	add	r2, sp, #132	; 0x84
   83bae:	1a9b      	subs	r3, r3, r2
   83bb0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83bb2:	931b      	str	r3, [sp, #108]	; 0x6c
   83bb4:	2a01      	cmp	r2, #1
   83bb6:	4413      	add	r3, r2
   83bb8:	930e      	str	r3, [sp, #56]	; 0x38
   83bba:	f340 8148 	ble.w	83e4e <_svfprintf_r+0x1462>
   83bbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83bc0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83bc2:	4413      	add	r3, r2
   83bc4:	930e      	str	r3, [sp, #56]	; 0x38
   83bc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83bca:	9308      	str	r3, [sp, #32]
   83bcc:	2300      	movs	r3, #0
   83bce:	9312      	str	r3, [sp, #72]	; 0x48
   83bd0:	e714      	b.n	839fc <_svfprintf_r+0x1010>
   83bd2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bd4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83bd6:	f7ff b876 	b.w	82cc6 <_svfprintf_r+0x2da>
   83bda:	aa25      	add	r2, sp, #148	; 0x94
   83bdc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bde:	980c      	ldr	r0, [sp, #48]	; 0x30
   83be0:	f002 fae0 	bl	861a4 <__ssprint_r>
   83be4:	2800      	cmp	r0, #0
   83be6:	f47e afde 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83bea:	46c8      	mov	r8, r9
   83bec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bee:	e4fb      	b.n	835e8 <_svfprintf_r+0xbfc>
   83bf0:	4623      	mov	r3, r4
   83bf2:	e6e3      	b.n	839bc <_svfprintf_r+0xfd0>
   83bf4:	aa25      	add	r2, sp, #148	; 0x94
   83bf6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bf8:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bfa:	f002 fad3 	bl	861a4 <__ssprint_r>
   83bfe:	2800      	cmp	r0, #0
   83c00:	f47e afd1 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83c04:	46c8      	mov	r8, r9
   83c06:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83c08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c0a:	e5d3      	b.n	837b4 <_svfprintf_r+0xdc8>
   83c0c:	aa25      	add	r2, sp, #148	; 0x94
   83c0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83c10:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c12:	f002 fac7 	bl	861a4 <__ssprint_r>
   83c16:	2800      	cmp	r0, #0
   83c18:	f47e afc5 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83c1c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83c1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83c20:	46c8      	mov	r8, r9
   83c22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c24:	1a9a      	subs	r2, r3, r2
   83c26:	e5dd      	b.n	837e4 <_svfprintf_r+0xdf8>
   83c28:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83c2a:	f7ff b8fe 	b.w	82e2a <_svfprintf_r+0x43e>
   83c2e:	aa25      	add	r2, sp, #148	; 0x94
   83c30:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83c32:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c34:	f002 fab6 	bl	861a4 <__ssprint_r>
   83c38:	2800      	cmp	r0, #0
   83c3a:	f47e afb4 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83c3e:	46c8      	mov	r8, r9
   83c40:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c42:	e5b0      	b.n	837a6 <_svfprintf_r+0xdba>
   83c44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83c46:	4637      	mov	r7, r6
   83c48:	2b06      	cmp	r3, #6
   83c4a:	bf28      	it	cs
   83c4c:	2306      	movcs	r3, #6
   83c4e:	960a      	str	r6, [sp, #40]	; 0x28
   83c50:	9612      	str	r6, [sp, #72]	; 0x48
   83c52:	9308      	str	r3, [sp, #32]
   83c54:	940f      	str	r4, [sp, #60]	; 0x3c
   83c56:	f8cd b01c 	str.w	fp, [sp, #28]
   83c5a:	930e      	str	r3, [sp, #56]	; 0x38
   83c5c:	4e27      	ldr	r6, [pc, #156]	; (83cfc <_svfprintf_r+0x1310>)
   83c5e:	f7fe bfe9 	b.w	82c34 <_svfprintf_r+0x248>
   83c62:	2306      	movs	r3, #6
   83c64:	930a      	str	r3, [sp, #40]	; 0x28
   83c66:	e663      	b.n	83930 <_svfprintf_r+0xf44>
   83c68:	232d      	movs	r3, #45	; 0x2d
   83c6a:	461f      	mov	r7, r3
   83c6c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83c70:	f7ff ba28 	b.w	830c4 <_svfprintf_r+0x6d8>
   83c74:	2003      	movs	r0, #3
   83c76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83c78:	a923      	add	r1, sp, #140	; 0x8c
   83c7a:	e88d 0011 	stmia.w	sp, {r0, r4}
   83c7e:	9104      	str	r1, [sp, #16]
   83c80:	a820      	add	r0, sp, #128	; 0x80
   83c82:	a91f      	add	r1, sp, #124	; 0x7c
   83c84:	9003      	str	r0, [sp, #12]
   83c86:	9a08      	ldr	r2, [sp, #32]
   83c88:	463b      	mov	r3, r7
   83c8a:	9102      	str	r1, [sp, #8]
   83c8c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c8e:	f000 f9d3 	bl	84038 <_dtoa_r>
   83c92:	4625      	mov	r5, r4
   83c94:	4606      	mov	r6, r0
   83c96:	1904      	adds	r4, r0, r4
   83c98:	e719      	b.n	83ace <_svfprintf_r+0x10e2>
   83c9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83c9c:	4d15      	ldr	r5, [pc, #84]	; (83cf4 <_svfprintf_r+0x1308>)
   83c9e:	f7ff bb7e 	b.w	8339e <_svfprintf_r+0x9b2>
   83ca2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83ca4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83ca6:	4413      	add	r3, r2
   83ca8:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83caa:	930e      	str	r3, [sp, #56]	; 0x38
   83cac:	2a00      	cmp	r2, #0
   83cae:	f340 80c7 	ble.w	83e40 <_svfprintf_r+0x1454>
   83cb2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83cb6:	9308      	str	r3, [sp, #32]
   83cb8:	2367      	movs	r3, #103	; 0x67
   83cba:	9311      	str	r3, [sp, #68]	; 0x44
   83cbc:	e69e      	b.n	839fc <_svfprintf_r+0x1010>
   83cbe:	2b00      	cmp	r3, #0
   83cc0:	f340 80e1 	ble.w	83e86 <_svfprintf_r+0x149a>
   83cc4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83cc6:	2a00      	cmp	r2, #0
   83cc8:	f040 80b0 	bne.w	83e2c <_svfprintf_r+0x1440>
   83ccc:	f01b 0f01 	tst.w	fp, #1
   83cd0:	f040 80ac 	bne.w	83e2c <_svfprintf_r+0x1440>
   83cd4:	9308      	str	r3, [sp, #32]
   83cd6:	930e      	str	r3, [sp, #56]	; 0x38
   83cd8:	e690      	b.n	839fc <_svfprintf_r+0x1010>
   83cda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83cdc:	940f      	str	r4, [sp, #60]	; 0x3c
   83cde:	9308      	str	r3, [sp, #32]
   83ce0:	930e      	str	r3, [sp, #56]	; 0x38
   83ce2:	900a      	str	r0, [sp, #40]	; 0x28
   83ce4:	f8cd b01c 	str.w	fp, [sp, #28]
   83ce8:	9012      	str	r0, [sp, #72]	; 0x48
   83cea:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83cee:	f7fe bfa1 	b.w	82c34 <_svfprintf_r+0x248>
   83cf2:	bf00      	nop
   83cf4:	00087098 	.word	0x00087098
   83cf8:	66666667 	.word	0x66666667
   83cfc:	0008707c 	.word	0x0008707c
   83d00:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83d02:	2b47      	cmp	r3, #71	; 0x47
   83d04:	f47f ae46 	bne.w	83994 <_svfprintf_r+0xfa8>
   83d08:	f01b 0f01 	tst.w	fp, #1
   83d0c:	f47f aeda 	bne.w	83ac4 <_svfprintf_r+0x10d8>
   83d10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83d12:	1b9b      	subs	r3, r3, r6
   83d14:	9313      	str	r3, [sp, #76]	; 0x4c
   83d16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83d18:	2b47      	cmp	r3, #71	; 0x47
   83d1a:	f43f aef7 	beq.w	83b0c <_svfprintf_r+0x1120>
   83d1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83d20:	9312      	str	r3, [sp, #72]	; 0x48
   83d22:	e700      	b.n	83b26 <_svfprintf_r+0x113a>
   83d24:	2000      	movs	r0, #0
   83d26:	900a      	str	r0, [sp, #40]	; 0x28
   83d28:	f7fe bebc 	b.w	82aa4 <_svfprintf_r+0xb8>
   83d2c:	424f      	negs	r7, r1
   83d2e:	3110      	adds	r1, #16
   83d30:	da35      	bge.n	83d9e <_svfprintf_r+0x13b2>
   83d32:	2410      	movs	r4, #16
   83d34:	4d6a      	ldr	r5, [pc, #424]	; (83ee0 <_svfprintf_r+0x14f4>)
   83d36:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83d3a:	e004      	b.n	83d46 <_svfprintf_r+0x135a>
   83d3c:	f108 0808 	add.w	r8, r8, #8
   83d40:	3f10      	subs	r7, #16
   83d42:	2f10      	cmp	r7, #16
   83d44:	dd2c      	ble.n	83da0 <_svfprintf_r+0x13b4>
   83d46:	3301      	adds	r3, #1
   83d48:	3210      	adds	r2, #16
   83d4a:	2b07      	cmp	r3, #7
   83d4c:	9227      	str	r2, [sp, #156]	; 0x9c
   83d4e:	9326      	str	r3, [sp, #152]	; 0x98
   83d50:	f8c8 5000 	str.w	r5, [r8]
   83d54:	f8c8 4004 	str.w	r4, [r8, #4]
   83d58:	ddf0      	ble.n	83d3c <_svfprintf_r+0x1350>
   83d5a:	aa25      	add	r2, sp, #148	; 0x94
   83d5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d5e:	4658      	mov	r0, fp
   83d60:	f002 fa20 	bl	861a4 <__ssprint_r>
   83d64:	2800      	cmp	r0, #0
   83d66:	f47e af1e 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83d6a:	46c8      	mov	r8, r9
   83d6c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83d6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d70:	e7e6      	b.n	83d40 <_svfprintf_r+0x1354>
   83d72:	aa25      	add	r2, sp, #148	; 0x94
   83d74:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d76:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d78:	f002 fa14 	bl	861a4 <__ssprint_r>
   83d7c:	2800      	cmp	r0, #0
   83d7e:	f47e af12 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83d82:	46c8      	mov	r8, r9
   83d84:	991f      	ldr	r1, [sp, #124]	; 0x7c
   83d86:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83d88:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d8a:	f7ff bbc3 	b.w	83514 <_svfprintf_r+0xb28>
   83d8e:	2230      	movs	r2, #48	; 0x30
   83d90:	4413      	add	r3, r2
   83d92:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   83d96:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   83d9a:	ab22      	add	r3, sp, #136	; 0x88
   83d9c:	e706      	b.n	83bac <_svfprintf_r+0x11c0>
   83d9e:	4d50      	ldr	r5, [pc, #320]	; (83ee0 <_svfprintf_r+0x14f4>)
   83da0:	3301      	adds	r3, #1
   83da2:	443a      	add	r2, r7
   83da4:	2b07      	cmp	r3, #7
   83da6:	e888 00a0 	stmia.w	r8, {r5, r7}
   83daa:	9227      	str	r2, [sp, #156]	; 0x9c
   83dac:	9326      	str	r3, [sp, #152]	; 0x98
   83dae:	f108 0808 	add.w	r8, r8, #8
   83db2:	f77f abb2 	ble.w	8351a <_svfprintf_r+0xb2e>
   83db6:	aa25      	add	r2, sp, #148	; 0x94
   83db8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83dba:	980c      	ldr	r0, [sp, #48]	; 0x30
   83dbc:	f002 f9f2 	bl	861a4 <__ssprint_r>
   83dc0:	2800      	cmp	r0, #0
   83dc2:	f47e aef0 	bne.w	82ba6 <_svfprintf_r+0x1ba>
   83dc6:	46c8      	mov	r8, r9
   83dc8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83dca:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83dcc:	f7ff bba5 	b.w	8351a <_svfprintf_r+0xb2e>
   83dd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83dd2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83dd4:	4413      	add	r3, r2
   83dd6:	930e      	str	r3, [sp, #56]	; 0x38
   83dd8:	e76b      	b.n	83cb2 <_svfprintf_r+0x12c6>
   83dda:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83ddc:	e5ee      	b.n	839bc <_svfprintf_r+0xfd0>
   83dde:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83de0:	4d3f      	ldr	r5, [pc, #252]	; (83ee0 <_svfprintf_r+0x14f4>)
   83de2:	e4bb      	b.n	8375c <_svfprintf_r+0xd70>
   83de4:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83de6:	9808      	ldr	r0, [sp, #32]
   83de8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   83dea:	4639      	mov	r1, r7
   83dec:	f002 ff16 	bl	86c1c <__aeabi_dcmpeq>
   83df0:	2800      	cmp	r0, #0
   83df2:	f47f ae70 	bne.w	83ad6 <_svfprintf_r+0x10ea>
   83df6:	f1c5 0501 	rsb	r5, r5, #1
   83dfa:	951f      	str	r5, [sp, #124]	; 0x7c
   83dfc:	442c      	add	r4, r5
   83dfe:	e5ca      	b.n	83996 <_svfprintf_r+0xfaa>
   83e00:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83e02:	4e38      	ldr	r6, [pc, #224]	; (83ee4 <_svfprintf_r+0x14f8>)
   83e04:	2b00      	cmp	r3, #0
   83e06:	bfbe      	ittt	lt
   83e08:	232d      	movlt	r3, #45	; 0x2d
   83e0a:	461f      	movlt	r7, r3
   83e0c:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   83e10:	f04f 0303 	mov.w	r3, #3
   83e14:	461a      	mov	r2, r3
   83e16:	9308      	str	r3, [sp, #32]
   83e18:	f04f 0300 	mov.w	r3, #0
   83e1c:	bfa8      	it	ge
   83e1e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   83e22:	4619      	mov	r1, r3
   83e24:	930a      	str	r3, [sp, #40]	; 0x28
   83e26:	4b30      	ldr	r3, [pc, #192]	; (83ee8 <_svfprintf_r+0x14fc>)
   83e28:	f7ff b954 	b.w	830d4 <_svfprintf_r+0x6e8>
   83e2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e2e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83e30:	4413      	add	r3, r2
   83e32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83e34:	441a      	add	r2, r3
   83e36:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   83e3a:	920e      	str	r2, [sp, #56]	; 0x38
   83e3c:	9308      	str	r3, [sp, #32]
   83e3e:	e5dd      	b.n	839fc <_svfprintf_r+0x1010>
   83e40:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e42:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83e44:	f1c3 0301 	rsb	r3, r3, #1
   83e48:	441a      	add	r2, r3
   83e4a:	4613      	mov	r3, r2
   83e4c:	e7c3      	b.n	83dd6 <_svfprintf_r+0x13ea>
   83e4e:	f01b 0301 	ands.w	r3, fp, #1
   83e52:	9312      	str	r3, [sp, #72]	; 0x48
   83e54:	f47f aeb3 	bne.w	83bbe <_svfprintf_r+0x11d2>
   83e58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83e5a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83e5e:	9308      	str	r3, [sp, #32]
   83e60:	e5cc      	b.n	839fc <_svfprintf_r+0x1010>
   83e62:	4d1f      	ldr	r5, [pc, #124]	; (83ee0 <_svfprintf_r+0x14f4>)
   83e64:	e43c      	b.n	836e0 <_svfprintf_r+0xcf4>
   83e66:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83e68:	4d1d      	ldr	r5, [pc, #116]	; (83ee0 <_svfprintf_r+0x14f4>)
   83e6a:	e491      	b.n	83790 <_svfprintf_r+0xda4>
   83e6c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   83e6e:	f89a 3001 	ldrb.w	r3, [sl, #1]
   83e72:	6828      	ldr	r0, [r5, #0]
   83e74:	46a2      	mov	sl, r4
   83e76:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   83e7a:	900a      	str	r0, [sp, #40]	; 0x28
   83e7c:	4628      	mov	r0, r5
   83e7e:	3004      	adds	r0, #4
   83e80:	900f      	str	r0, [sp, #60]	; 0x3c
   83e82:	f7fe be0d 	b.w	82aa0 <_svfprintf_r+0xb4>
   83e86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83e88:	b913      	cbnz	r3, 83e90 <_svfprintf_r+0x14a4>
   83e8a:	f01b 0f01 	tst.w	fp, #1
   83e8e:	d002      	beq.n	83e96 <_svfprintf_r+0x14aa>
   83e90:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83e92:	3301      	adds	r3, #1
   83e94:	e7cd      	b.n	83e32 <_svfprintf_r+0x1446>
   83e96:	2301      	movs	r3, #1
   83e98:	e71c      	b.n	83cd4 <_svfprintf_r+0x12e8>
   83e9a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83e9e:	f7ff b980 	b.w	831a2 <_svfprintf_r+0x7b6>
   83ea2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83ea6:	f7ff b93a 	b.w	8311e <_svfprintf_r+0x732>
   83eaa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83eae:	f7ff b84f 	b.w	82f50 <_svfprintf_r+0x564>
   83eb2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   83eb6:	e679      	b.n	83bac <_svfprintf_r+0x11c0>
   83eb8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83ebc:	f7ff b9b2 	b.w	83224 <_svfprintf_r+0x838>
   83ec0:	f04f 32ff 	mov.w	r2, #4294967295
   83ec4:	230c      	movs	r3, #12
   83ec6:	9209      	str	r2, [sp, #36]	; 0x24
   83ec8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83eca:	6013      	str	r3, [r2, #0]
   83ecc:	f7fe be74 	b.w	82bb8 <_svfprintf_r+0x1cc>
   83ed0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83ed4:	f7ff b8c4 	b.w	83060 <_svfprintf_r+0x674>
   83ed8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83edc:	f7ff b878 	b.w	82fd0 <_svfprintf_r+0x5e4>
   83ee0:	00087098 	.word	0x00087098
   83ee4:	00087050 	.word	0x00087050
   83ee8:	0008704c 	.word	0x0008704c

00083eec <register_fini>:
   83eec:	4b02      	ldr	r3, [pc, #8]	; (83ef8 <register_fini+0xc>)
   83eee:	b113      	cbz	r3, 83ef6 <register_fini+0xa>
   83ef0:	4802      	ldr	r0, [pc, #8]	; (83efc <register_fini+0x10>)
   83ef2:	f000 b805 	b.w	83f00 <atexit>
   83ef6:	4770      	bx	lr
   83ef8:	00000000 	.word	0x00000000
   83efc:	00084e7d 	.word	0x00084e7d

00083f00 <atexit>:
   83f00:	2300      	movs	r3, #0
   83f02:	4601      	mov	r1, r0
   83f04:	461a      	mov	r2, r3
   83f06:	4618      	mov	r0, r3
   83f08:	f002 b9d6 	b.w	862b8 <__register_exitproc>

00083f0c <quorem>:
   83f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83f10:	6903      	ldr	r3, [r0, #16]
   83f12:	690f      	ldr	r7, [r1, #16]
   83f14:	b083      	sub	sp, #12
   83f16:	429f      	cmp	r7, r3
   83f18:	f300 8088 	bgt.w	8402c <quorem+0x120>
   83f1c:	3f01      	subs	r7, #1
   83f1e:	f101 0614 	add.w	r6, r1, #20
   83f22:	f100 0a14 	add.w	sl, r0, #20
   83f26:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   83f2a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   83f2e:	3301      	adds	r3, #1
   83f30:	fbb2 f8f3 	udiv	r8, r2, r3
   83f34:	00bb      	lsls	r3, r7, #2
   83f36:	9300      	str	r3, [sp, #0]
   83f38:	eb06 0903 	add.w	r9, r6, r3
   83f3c:	4453      	add	r3, sl
   83f3e:	9301      	str	r3, [sp, #4]
   83f40:	f1b8 0f00 	cmp.w	r8, #0
   83f44:	d03b      	beq.n	83fbe <quorem+0xb2>
   83f46:	2300      	movs	r3, #0
   83f48:	46b4      	mov	ip, r6
   83f4a:	461c      	mov	r4, r3
   83f4c:	46d6      	mov	lr, sl
   83f4e:	f85c 2b04 	ldr.w	r2, [ip], #4
   83f52:	f8de 5000 	ldr.w	r5, [lr]
   83f56:	fa1f fb82 	uxth.w	fp, r2
   83f5a:	fb08 330b 	mla	r3, r8, fp, r3
   83f5e:	0c12      	lsrs	r2, r2, #16
   83f60:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   83f64:	fb08 bb02 	mla	fp, r8, r2, fp
   83f68:	b29a      	uxth	r2, r3
   83f6a:	1aa2      	subs	r2, r4, r2
   83f6c:	b2ab      	uxth	r3, r5
   83f6e:	fa1f f48b 	uxth.w	r4, fp
   83f72:	441a      	add	r2, r3
   83f74:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   83f78:	eb04 4422 	add.w	r4, r4, r2, asr #16
   83f7c:	b292      	uxth	r2, r2
   83f7e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   83f82:	45e1      	cmp	r9, ip
   83f84:	f84e 2b04 	str.w	r2, [lr], #4
   83f88:	ea4f 4424 	mov.w	r4, r4, asr #16
   83f8c:	ea4f 431b 	mov.w	r3, fp, lsr #16
   83f90:	d2dd      	bcs.n	83f4e <quorem+0x42>
   83f92:	9b00      	ldr	r3, [sp, #0]
   83f94:	f85a 3003 	ldr.w	r3, [sl, r3]
   83f98:	b98b      	cbnz	r3, 83fbe <quorem+0xb2>
   83f9a:	9c01      	ldr	r4, [sp, #4]
   83f9c:	1f23      	subs	r3, r4, #4
   83f9e:	459a      	cmp	sl, r3
   83fa0:	d20c      	bcs.n	83fbc <quorem+0xb0>
   83fa2:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83fa6:	b94b      	cbnz	r3, 83fbc <quorem+0xb0>
   83fa8:	f1a4 0308 	sub.w	r3, r4, #8
   83fac:	e002      	b.n	83fb4 <quorem+0xa8>
   83fae:	681a      	ldr	r2, [r3, #0]
   83fb0:	3b04      	subs	r3, #4
   83fb2:	b91a      	cbnz	r2, 83fbc <quorem+0xb0>
   83fb4:	459a      	cmp	sl, r3
   83fb6:	f107 37ff 	add.w	r7, r7, #4294967295
   83fba:	d3f8      	bcc.n	83fae <quorem+0xa2>
   83fbc:	6107      	str	r7, [r0, #16]
   83fbe:	4604      	mov	r4, r0
   83fc0:	f001 fe2a 	bl	85c18 <__mcmp>
   83fc4:	2800      	cmp	r0, #0
   83fc6:	db2d      	blt.n	84024 <quorem+0x118>
   83fc8:	4655      	mov	r5, sl
   83fca:	2300      	movs	r3, #0
   83fcc:	f108 0801 	add.w	r8, r8, #1
   83fd0:	f856 1b04 	ldr.w	r1, [r6], #4
   83fd4:	6828      	ldr	r0, [r5, #0]
   83fd6:	b28a      	uxth	r2, r1
   83fd8:	1a9a      	subs	r2, r3, r2
   83fda:	0c0b      	lsrs	r3, r1, #16
   83fdc:	b281      	uxth	r1, r0
   83fde:	440a      	add	r2, r1
   83fe0:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83fe4:	eb03 4322 	add.w	r3, r3, r2, asr #16
   83fe8:	b292      	uxth	r2, r2
   83fea:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   83fee:	45b1      	cmp	r9, r6
   83ff0:	f845 2b04 	str.w	r2, [r5], #4
   83ff4:	ea4f 4323 	mov.w	r3, r3, asr #16
   83ff8:	d2ea      	bcs.n	83fd0 <quorem+0xc4>
   83ffa:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   83ffe:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   84002:	b97a      	cbnz	r2, 84024 <quorem+0x118>
   84004:	1f1a      	subs	r2, r3, #4
   84006:	4592      	cmp	sl, r2
   84008:	d20b      	bcs.n	84022 <quorem+0x116>
   8400a:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8400e:	b942      	cbnz	r2, 84022 <quorem+0x116>
   84010:	3b08      	subs	r3, #8
   84012:	e002      	b.n	8401a <quorem+0x10e>
   84014:	681a      	ldr	r2, [r3, #0]
   84016:	3b04      	subs	r3, #4
   84018:	b91a      	cbnz	r2, 84022 <quorem+0x116>
   8401a:	459a      	cmp	sl, r3
   8401c:	f107 37ff 	add.w	r7, r7, #4294967295
   84020:	d3f8      	bcc.n	84014 <quorem+0x108>
   84022:	6127      	str	r7, [r4, #16]
   84024:	4640      	mov	r0, r8
   84026:	b003      	add	sp, #12
   84028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8402c:	2000      	movs	r0, #0
   8402e:	b003      	add	sp, #12
   84030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84034:	0000      	movs	r0, r0
	...

00084038 <_dtoa_r>:
   84038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8403c:	6c05      	ldr	r5, [r0, #64]	; 0x40
   8403e:	b09b      	sub	sp, #108	; 0x6c
   84040:	4604      	mov	r4, r0
   84042:	4692      	mov	sl, r2
   84044:	469b      	mov	fp, r3
   84046:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   84048:	b14d      	cbz	r5, 8405e <_dtoa_r+0x26>
   8404a:	2301      	movs	r3, #1
   8404c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   8404e:	4629      	mov	r1, r5
   84050:	4093      	lsls	r3, r2
   84052:	60ab      	str	r3, [r5, #8]
   84054:	606a      	str	r2, [r5, #4]
   84056:	f001 fc07 	bl	85868 <_Bfree>
   8405a:	2300      	movs	r3, #0
   8405c:	6423      	str	r3, [r4, #64]	; 0x40
   8405e:	f1bb 0f00 	cmp.w	fp, #0
   84062:	465d      	mov	r5, fp
   84064:	db35      	blt.n	840d2 <_dtoa_r+0x9a>
   84066:	2300      	movs	r3, #0
   84068:	6033      	str	r3, [r6, #0]
   8406a:	4b9d      	ldr	r3, [pc, #628]	; (842e0 <_dtoa_r+0x2a8>)
   8406c:	43ab      	bics	r3, r5
   8406e:	d015      	beq.n	8409c <_dtoa_r+0x64>
   84070:	2200      	movs	r2, #0
   84072:	2300      	movs	r3, #0
   84074:	4650      	mov	r0, sl
   84076:	4659      	mov	r1, fp
   84078:	f002 fdd0 	bl	86c1c <__aeabi_dcmpeq>
   8407c:	4680      	mov	r8, r0
   8407e:	2800      	cmp	r0, #0
   84080:	d02d      	beq.n	840de <_dtoa_r+0xa6>
   84082:	2301      	movs	r3, #1
   84084:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84086:	6013      	str	r3, [r2, #0]
   84088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8408a:	2b00      	cmp	r3, #0
   8408c:	f000 80bd 	beq.w	8420a <_dtoa_r+0x1d2>
   84090:	4894      	ldr	r0, [pc, #592]	; (842e4 <_dtoa_r+0x2ac>)
   84092:	6018      	str	r0, [r3, #0]
   84094:	3801      	subs	r0, #1
   84096:	b01b      	add	sp, #108	; 0x6c
   84098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8409c:	f242 730f 	movw	r3, #9999	; 0x270f
   840a0:	9a26      	ldr	r2, [sp, #152]	; 0x98
   840a2:	6013      	str	r3, [r2, #0]
   840a4:	f1ba 0f00 	cmp.w	sl, #0
   840a8:	d10d      	bne.n	840c6 <_dtoa_r+0x8e>
   840aa:	f3c5 0513 	ubfx	r5, r5, #0, #20
   840ae:	b955      	cbnz	r5, 840c6 <_dtoa_r+0x8e>
   840b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   840b2:	488d      	ldr	r0, [pc, #564]	; (842e8 <_dtoa_r+0x2b0>)
   840b4:	2b00      	cmp	r3, #0
   840b6:	d0ee      	beq.n	84096 <_dtoa_r+0x5e>
   840b8:	f100 0308 	add.w	r3, r0, #8
   840bc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   840be:	6013      	str	r3, [r2, #0]
   840c0:	b01b      	add	sp, #108	; 0x6c
   840c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   840c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   840c8:	4888      	ldr	r0, [pc, #544]	; (842ec <_dtoa_r+0x2b4>)
   840ca:	2b00      	cmp	r3, #0
   840cc:	d0e3      	beq.n	84096 <_dtoa_r+0x5e>
   840ce:	1cc3      	adds	r3, r0, #3
   840d0:	e7f4      	b.n	840bc <_dtoa_r+0x84>
   840d2:	2301      	movs	r3, #1
   840d4:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   840d8:	6033      	str	r3, [r6, #0]
   840da:	46ab      	mov	fp, r5
   840dc:	e7c5      	b.n	8406a <_dtoa_r+0x32>
   840de:	aa18      	add	r2, sp, #96	; 0x60
   840e0:	ab19      	add	r3, sp, #100	; 0x64
   840e2:	9201      	str	r2, [sp, #4]
   840e4:	9300      	str	r3, [sp, #0]
   840e6:	4652      	mov	r2, sl
   840e8:	465b      	mov	r3, fp
   840ea:	4620      	mov	r0, r4
   840ec:	f001 fe3e 	bl	85d6c <__d2b>
   840f0:	0d2b      	lsrs	r3, r5, #20
   840f2:	4681      	mov	r9, r0
   840f4:	d071      	beq.n	841da <_dtoa_r+0x1a2>
   840f6:	4650      	mov	r0, sl
   840f8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   840fc:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   84100:	9f18      	ldr	r7, [sp, #96]	; 0x60
   84102:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   84106:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   8410a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   8410e:	2200      	movs	r2, #0
   84110:	4b77      	ldr	r3, [pc, #476]	; (842f0 <_dtoa_r+0x2b8>)
   84112:	f002 f967 	bl	863e4 <__aeabi_dsub>
   84116:	a36c      	add	r3, pc, #432	; (adr r3, 842c8 <_dtoa_r+0x290>)
   84118:	e9d3 2300 	ldrd	r2, r3, [r3]
   8411c:	f002 fb16 	bl	8674c <__aeabi_dmul>
   84120:	a36b      	add	r3, pc, #428	; (adr r3, 842d0 <_dtoa_r+0x298>)
   84122:	e9d3 2300 	ldrd	r2, r3, [r3]
   84126:	f002 f95f 	bl	863e8 <__adddf3>
   8412a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8412e:	4630      	mov	r0, r6
   84130:	f002 faa6 	bl	86680 <__aeabi_i2d>
   84134:	a368      	add	r3, pc, #416	; (adr r3, 842d8 <_dtoa_r+0x2a0>)
   84136:	e9d3 2300 	ldrd	r2, r3, [r3]
   8413a:	f002 fb07 	bl	8674c <__aeabi_dmul>
   8413e:	4602      	mov	r2, r0
   84140:	460b      	mov	r3, r1
   84142:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   84146:	f002 f94f 	bl	863e8 <__adddf3>
   8414a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8414e:	f002 fdad 	bl	86cac <__aeabi_d2iz>
   84152:	2200      	movs	r2, #0
   84154:	9002      	str	r0, [sp, #8]
   84156:	2300      	movs	r3, #0
   84158:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8415c:	f002 fd68 	bl	86c30 <__aeabi_dcmplt>
   84160:	2800      	cmp	r0, #0
   84162:	f040 816d 	bne.w	84440 <_dtoa_r+0x408>
   84166:	9d02      	ldr	r5, [sp, #8]
   84168:	2d16      	cmp	r5, #22
   8416a:	f200 8157 	bhi.w	8441c <_dtoa_r+0x3e4>
   8416e:	4961      	ldr	r1, [pc, #388]	; (842f4 <_dtoa_r+0x2bc>)
   84170:	4652      	mov	r2, sl
   84172:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   84176:	465b      	mov	r3, fp
   84178:	e9d1 0100 	ldrd	r0, r1, [r1]
   8417c:	f002 fd76 	bl	86c6c <__aeabi_dcmpgt>
   84180:	2800      	cmp	r0, #0
   84182:	f000 81be 	beq.w	84502 <_dtoa_r+0x4ca>
   84186:	1e6b      	subs	r3, r5, #1
   84188:	9302      	str	r3, [sp, #8]
   8418a:	2300      	movs	r3, #0
   8418c:	930e      	str	r3, [sp, #56]	; 0x38
   8418e:	1bbf      	subs	r7, r7, r6
   84190:	1e7b      	subs	r3, r7, #1
   84192:	9308      	str	r3, [sp, #32]
   84194:	f100 814e 	bmi.w	84434 <_dtoa_r+0x3fc>
   84198:	2300      	movs	r3, #0
   8419a:	930a      	str	r3, [sp, #40]	; 0x28
   8419c:	9b02      	ldr	r3, [sp, #8]
   8419e:	2b00      	cmp	r3, #0
   841a0:	f2c0 813f 	blt.w	84422 <_dtoa_r+0x3ea>
   841a4:	9a08      	ldr	r2, [sp, #32]
   841a6:	930d      	str	r3, [sp, #52]	; 0x34
   841a8:	4611      	mov	r1, r2
   841aa:	4419      	add	r1, r3
   841ac:	2300      	movs	r3, #0
   841ae:	9108      	str	r1, [sp, #32]
   841b0:	930c      	str	r3, [sp, #48]	; 0x30
   841b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
   841b4:	2b09      	cmp	r3, #9
   841b6:	d82a      	bhi.n	8420e <_dtoa_r+0x1d6>
   841b8:	2b05      	cmp	r3, #5
   841ba:	f340 8658 	ble.w	84e6e <_dtoa_r+0xe36>
   841be:	2500      	movs	r5, #0
   841c0:	3b04      	subs	r3, #4
   841c2:	9324      	str	r3, [sp, #144]	; 0x90
   841c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   841c6:	3b02      	subs	r3, #2
   841c8:	2b03      	cmp	r3, #3
   841ca:	f200 863f 	bhi.w	84e4c <_dtoa_r+0xe14>
   841ce:	e8df f013 	tbh	[pc, r3, lsl #1]
   841d2:	03ce      	.short	0x03ce
   841d4:	03d902c3 	.word	0x03d902c3
   841d8:	045b      	.short	0x045b
   841da:	9f18      	ldr	r7, [sp, #96]	; 0x60
   841dc:	9e19      	ldr	r6, [sp, #100]	; 0x64
   841de:	443e      	add	r6, r7
   841e0:	f206 4332 	addw	r3, r6, #1074	; 0x432
   841e4:	2b20      	cmp	r3, #32
   841e6:	f340 8187 	ble.w	844f8 <_dtoa_r+0x4c0>
   841ea:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   841ee:	f206 4012 	addw	r0, r6, #1042	; 0x412
   841f2:	409d      	lsls	r5, r3
   841f4:	fa2a f000 	lsr.w	r0, sl, r0
   841f8:	4328      	orrs	r0, r5
   841fa:	f002 fa31 	bl	86660 <__aeabi_ui2d>
   841fe:	2301      	movs	r3, #1
   84200:	3e01      	subs	r6, #1
   84202:	9314      	str	r3, [sp, #80]	; 0x50
   84204:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   84208:	e781      	b.n	8410e <_dtoa_r+0xd6>
   8420a:	483b      	ldr	r0, [pc, #236]	; (842f8 <_dtoa_r+0x2c0>)
   8420c:	e743      	b.n	84096 <_dtoa_r+0x5e>
   8420e:	2100      	movs	r1, #0
   84210:	4620      	mov	r0, r4
   84212:	6461      	str	r1, [r4, #68]	; 0x44
   84214:	9125      	str	r1, [sp, #148]	; 0x94
   84216:	f001 fb01 	bl	8581c <_Balloc>
   8421a:	f04f 33ff 	mov.w	r3, #4294967295
   8421e:	9307      	str	r3, [sp, #28]
   84220:	930f      	str	r3, [sp, #60]	; 0x3c
   84222:	2301      	movs	r3, #1
   84224:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84226:	9004      	str	r0, [sp, #16]
   84228:	6420      	str	r0, [r4, #64]	; 0x40
   8422a:	9224      	str	r2, [sp, #144]	; 0x90
   8422c:	930b      	str	r3, [sp, #44]	; 0x2c
   8422e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84230:	2b00      	cmp	r3, #0
   84232:	f2c0 80d3 	blt.w	843dc <_dtoa_r+0x3a4>
   84236:	9a02      	ldr	r2, [sp, #8]
   84238:	2a0e      	cmp	r2, #14
   8423a:	f300 80cf 	bgt.w	843dc <_dtoa_r+0x3a4>
   8423e:	4b2d      	ldr	r3, [pc, #180]	; (842f4 <_dtoa_r+0x2bc>)
   84240:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84244:	e9d3 2300 	ldrd	r2, r3, [r3]
   84248:	e9cd 2308 	strd	r2, r3, [sp, #32]
   8424c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8424e:	2b00      	cmp	r3, #0
   84250:	f2c0 83b4 	blt.w	849bc <_dtoa_r+0x984>
   84254:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   84258:	4650      	mov	r0, sl
   8425a:	462a      	mov	r2, r5
   8425c:	4633      	mov	r3, r6
   8425e:	4659      	mov	r1, fp
   84260:	f002 fb9e 	bl	869a0 <__aeabi_ddiv>
   84264:	f002 fd22 	bl	86cac <__aeabi_d2iz>
   84268:	4680      	mov	r8, r0
   8426a:	f002 fa09 	bl	86680 <__aeabi_i2d>
   8426e:	462a      	mov	r2, r5
   84270:	4633      	mov	r3, r6
   84272:	f002 fa6b 	bl	8674c <__aeabi_dmul>
   84276:	4602      	mov	r2, r0
   84278:	460b      	mov	r3, r1
   8427a:	4650      	mov	r0, sl
   8427c:	4659      	mov	r1, fp
   8427e:	f002 f8b1 	bl	863e4 <__aeabi_dsub>
   84282:	9e07      	ldr	r6, [sp, #28]
   84284:	9f04      	ldr	r7, [sp, #16]
   84286:	f108 0530 	add.w	r5, r8, #48	; 0x30
   8428a:	2e01      	cmp	r6, #1
   8428c:	703d      	strb	r5, [r7, #0]
   8428e:	4602      	mov	r2, r0
   84290:	460b      	mov	r3, r1
   84292:	f107 0501 	add.w	r5, r7, #1
   84296:	d064      	beq.n	84362 <_dtoa_r+0x32a>
   84298:	2200      	movs	r2, #0
   8429a:	4b18      	ldr	r3, [pc, #96]	; (842fc <_dtoa_r+0x2c4>)
   8429c:	f002 fa56 	bl	8674c <__aeabi_dmul>
   842a0:	2200      	movs	r2, #0
   842a2:	2300      	movs	r3, #0
   842a4:	4606      	mov	r6, r0
   842a6:	460f      	mov	r7, r1
   842a8:	f002 fcb8 	bl	86c1c <__aeabi_dcmpeq>
   842ac:	2800      	cmp	r0, #0
   842ae:	f040 8082 	bne.w	843b6 <_dtoa_r+0x37e>
   842b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   842b6:	f04f 0a00 	mov.w	sl, #0
   842ba:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   842be:	f04f 0b00 	mov.w	fp, #0
   842c2:	940b      	str	r4, [sp, #44]	; 0x2c
   842c4:	e029      	b.n	8431a <_dtoa_r+0x2e2>
   842c6:	bf00      	nop
   842c8:	636f4361 	.word	0x636f4361
   842cc:	3fd287a7 	.word	0x3fd287a7
   842d0:	8b60c8b3 	.word	0x8b60c8b3
   842d4:	3fc68a28 	.word	0x3fc68a28
   842d8:	509f79fb 	.word	0x509f79fb
   842dc:	3fd34413 	.word	0x3fd34413
   842e0:	7ff00000 	.word	0x7ff00000
   842e4:	00087085 	.word	0x00087085
   842e8:	000870a8 	.word	0x000870a8
   842ec:	000870b4 	.word	0x000870b4
   842f0:	3ff80000 	.word	0x3ff80000
   842f4:	000870f0 	.word	0x000870f0
   842f8:	00087084 	.word	0x00087084
   842fc:	40240000 	.word	0x40240000
   84300:	2200      	movs	r2, #0
   84302:	4b81      	ldr	r3, [pc, #516]	; (84508 <_dtoa_r+0x4d0>)
   84304:	f002 fa22 	bl	8674c <__aeabi_dmul>
   84308:	4652      	mov	r2, sl
   8430a:	465b      	mov	r3, fp
   8430c:	4606      	mov	r6, r0
   8430e:	460f      	mov	r7, r1
   84310:	f002 fc84 	bl	86c1c <__aeabi_dcmpeq>
   84314:	2800      	cmp	r0, #0
   84316:	f040 83ba 	bne.w	84a8e <_dtoa_r+0xa56>
   8431a:	4642      	mov	r2, r8
   8431c:	464b      	mov	r3, r9
   8431e:	4630      	mov	r0, r6
   84320:	4639      	mov	r1, r7
   84322:	f002 fb3d 	bl	869a0 <__aeabi_ddiv>
   84326:	f002 fcc1 	bl	86cac <__aeabi_d2iz>
   8432a:	4604      	mov	r4, r0
   8432c:	f002 f9a8 	bl	86680 <__aeabi_i2d>
   84330:	4642      	mov	r2, r8
   84332:	464b      	mov	r3, r9
   84334:	f002 fa0a 	bl	8674c <__aeabi_dmul>
   84338:	4602      	mov	r2, r0
   8433a:	460b      	mov	r3, r1
   8433c:	4630      	mov	r0, r6
   8433e:	4639      	mov	r1, r7
   84340:	f002 f850 	bl	863e4 <__aeabi_dsub>
   84344:	f104 0630 	add.w	r6, r4, #48	; 0x30
   84348:	f805 6b01 	strb.w	r6, [r5], #1
   8434c:	9e04      	ldr	r6, [sp, #16]
   8434e:	9f07      	ldr	r7, [sp, #28]
   84350:	1bae      	subs	r6, r5, r6
   84352:	42be      	cmp	r6, r7
   84354:	4602      	mov	r2, r0
   84356:	460b      	mov	r3, r1
   84358:	d1d2      	bne.n	84300 <_dtoa_r+0x2c8>
   8435a:	46a0      	mov	r8, r4
   8435c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84360:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84362:	4610      	mov	r0, r2
   84364:	4619      	mov	r1, r3
   84366:	f002 f83f 	bl	863e8 <__adddf3>
   8436a:	4606      	mov	r6, r0
   8436c:	460f      	mov	r7, r1
   8436e:	4602      	mov	r2, r0
   84370:	460b      	mov	r3, r1
   84372:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84376:	f002 fc5b 	bl	86c30 <__aeabi_dcmplt>
   8437a:	b948      	cbnz	r0, 84390 <_dtoa_r+0x358>
   8437c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84380:	4632      	mov	r2, r6
   84382:	463b      	mov	r3, r7
   84384:	f002 fc4a 	bl	86c1c <__aeabi_dcmpeq>
   84388:	b1a8      	cbz	r0, 843b6 <_dtoa_r+0x37e>
   8438a:	f018 0f01 	tst.w	r8, #1
   8438e:	d012      	beq.n	843b6 <_dtoa_r+0x37e>
   84390:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84394:	1e6b      	subs	r3, r5, #1
   84396:	9a04      	ldr	r2, [sp, #16]
   84398:	e004      	b.n	843a4 <_dtoa_r+0x36c>
   8439a:	429a      	cmp	r2, r3
   8439c:	f000 8402 	beq.w	84ba4 <_dtoa_r+0xb6c>
   843a0:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   843a4:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   843a8:	f103 0501 	add.w	r5, r3, #1
   843ac:	d0f5      	beq.n	8439a <_dtoa_r+0x362>
   843ae:	f108 0801 	add.w	r8, r8, #1
   843b2:	f883 8000 	strb.w	r8, [r3]
   843b6:	4649      	mov	r1, r9
   843b8:	4620      	mov	r0, r4
   843ba:	f001 fa55 	bl	85868 <_Bfree>
   843be:	2200      	movs	r2, #0
   843c0:	9b02      	ldr	r3, [sp, #8]
   843c2:	702a      	strb	r2, [r5, #0]
   843c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   843c6:	3301      	adds	r3, #1
   843c8:	6013      	str	r3, [r2, #0]
   843ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   843cc:	2b00      	cmp	r3, #0
   843ce:	f000 839f 	beq.w	84b10 <_dtoa_r+0xad8>
   843d2:	9804      	ldr	r0, [sp, #16]
   843d4:	601d      	str	r5, [r3, #0]
   843d6:	b01b      	add	sp, #108	; 0x6c
   843d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   843de:	2a00      	cmp	r2, #0
   843e0:	d03e      	beq.n	84460 <_dtoa_r+0x428>
   843e2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   843e4:	2a01      	cmp	r2, #1
   843e6:	f340 8311 	ble.w	84a0c <_dtoa_r+0x9d4>
   843ea:	9b07      	ldr	r3, [sp, #28]
   843ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   843ee:	1e5f      	subs	r7, r3, #1
   843f0:	42ba      	cmp	r2, r7
   843f2:	f2c0 8390 	blt.w	84b16 <_dtoa_r+0xade>
   843f6:	1bd7      	subs	r7, r2, r7
   843f8:	9b07      	ldr	r3, [sp, #28]
   843fa:	2b00      	cmp	r3, #0
   843fc:	f2c0 848c 	blt.w	84d18 <_dtoa_r+0xce0>
   84400:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84402:	9b07      	ldr	r3, [sp, #28]
   84404:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84406:	2101      	movs	r1, #1
   84408:	441a      	add	r2, r3
   8440a:	920a      	str	r2, [sp, #40]	; 0x28
   8440c:	9a08      	ldr	r2, [sp, #32]
   8440e:	4620      	mov	r0, r4
   84410:	441a      	add	r2, r3
   84412:	9208      	str	r2, [sp, #32]
   84414:	f001 fac4 	bl	859a0 <__i2b>
   84418:	4606      	mov	r6, r0
   8441a:	e023      	b.n	84464 <_dtoa_r+0x42c>
   8441c:	2301      	movs	r3, #1
   8441e:	930e      	str	r3, [sp, #56]	; 0x38
   84420:	e6b5      	b.n	8418e <_dtoa_r+0x156>
   84422:	2300      	movs	r3, #0
   84424:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84426:	930d      	str	r3, [sp, #52]	; 0x34
   84428:	9b02      	ldr	r3, [sp, #8]
   8442a:	1ad2      	subs	r2, r2, r3
   8442c:	425b      	negs	r3, r3
   8442e:	920a      	str	r2, [sp, #40]	; 0x28
   84430:	930c      	str	r3, [sp, #48]	; 0x30
   84432:	e6be      	b.n	841b2 <_dtoa_r+0x17a>
   84434:	f1c7 0301 	rsb	r3, r7, #1
   84438:	930a      	str	r3, [sp, #40]	; 0x28
   8443a:	2300      	movs	r3, #0
   8443c:	9308      	str	r3, [sp, #32]
   8443e:	e6ad      	b.n	8419c <_dtoa_r+0x164>
   84440:	9d02      	ldr	r5, [sp, #8]
   84442:	4628      	mov	r0, r5
   84444:	f002 f91c 	bl	86680 <__aeabi_i2d>
   84448:	4602      	mov	r2, r0
   8444a:	460b      	mov	r3, r1
   8444c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   84450:	f002 fbe4 	bl	86c1c <__aeabi_dcmpeq>
   84454:	2800      	cmp	r0, #0
   84456:	f47f ae86 	bne.w	84166 <_dtoa_r+0x12e>
   8445a:	1e6b      	subs	r3, r5, #1
   8445c:	9302      	str	r3, [sp, #8]
   8445e:	e682      	b.n	84166 <_dtoa_r+0x12e>
   84460:	ad0a      	add	r5, sp, #40	; 0x28
   84462:	cde0      	ldmia	r5, {r5, r6, r7}
   84464:	2d00      	cmp	r5, #0
   84466:	dd0c      	ble.n	84482 <_dtoa_r+0x44a>
   84468:	9908      	ldr	r1, [sp, #32]
   8446a:	2900      	cmp	r1, #0
   8446c:	460b      	mov	r3, r1
   8446e:	dd08      	ble.n	84482 <_dtoa_r+0x44a>
   84470:	42a9      	cmp	r1, r5
   84472:	bfa8      	it	ge
   84474:	462b      	movge	r3, r5
   84476:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84478:	1aed      	subs	r5, r5, r3
   8447a:	1ad2      	subs	r2, r2, r3
   8447c:	1acb      	subs	r3, r1, r3
   8447e:	920a      	str	r2, [sp, #40]	; 0x28
   84480:	9308      	str	r3, [sp, #32]
   84482:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84484:	b1d3      	cbz	r3, 844bc <_dtoa_r+0x484>
   84486:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84488:	2b00      	cmp	r3, #0
   8448a:	f000 82b8 	beq.w	849fe <_dtoa_r+0x9c6>
   8448e:	2f00      	cmp	r7, #0
   84490:	dd10      	ble.n	844b4 <_dtoa_r+0x47c>
   84492:	4631      	mov	r1, r6
   84494:	463a      	mov	r2, r7
   84496:	4620      	mov	r0, r4
   84498:	f001 fb1e 	bl	85ad8 <__pow5mult>
   8449c:	464a      	mov	r2, r9
   8449e:	4601      	mov	r1, r0
   844a0:	4606      	mov	r6, r0
   844a2:	4620      	mov	r0, r4
   844a4:	f001 fa86 	bl	859b4 <__multiply>
   844a8:	4603      	mov	r3, r0
   844aa:	4649      	mov	r1, r9
   844ac:	4620      	mov	r0, r4
   844ae:	4699      	mov	r9, r3
   844b0:	f001 f9da 	bl	85868 <_Bfree>
   844b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   844b6:	1bda      	subs	r2, r3, r7
   844b8:	f040 82a2 	bne.w	84a00 <_dtoa_r+0x9c8>
   844bc:	2101      	movs	r1, #1
   844be:	4620      	mov	r0, r4
   844c0:	f001 fa6e 	bl	859a0 <__i2b>
   844c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   844c6:	4680      	mov	r8, r0
   844c8:	2b00      	cmp	r3, #0
   844ca:	dd1f      	ble.n	8450c <_dtoa_r+0x4d4>
   844cc:	4601      	mov	r1, r0
   844ce:	461a      	mov	r2, r3
   844d0:	4620      	mov	r0, r4
   844d2:	f001 fb01 	bl	85ad8 <__pow5mult>
   844d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   844d8:	4680      	mov	r8, r0
   844da:	2b01      	cmp	r3, #1
   844dc:	f340 8255 	ble.w	8498a <_dtoa_r+0x952>
   844e0:	2300      	movs	r3, #0
   844e2:	930c      	str	r3, [sp, #48]	; 0x30
   844e4:	f8d8 3010 	ldr.w	r3, [r8, #16]
   844e8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   844ec:	6918      	ldr	r0, [r3, #16]
   844ee:	f001 fa07 	bl	85900 <__hi0bits>
   844f2:	f1c0 0020 	rsb	r0, r0, #32
   844f6:	e013      	b.n	84520 <_dtoa_r+0x4e8>
   844f8:	f1c3 0520 	rsb	r5, r3, #32
   844fc:	fa0a f005 	lsl.w	r0, sl, r5
   84500:	e67b      	b.n	841fa <_dtoa_r+0x1c2>
   84502:	900e      	str	r0, [sp, #56]	; 0x38
   84504:	e643      	b.n	8418e <_dtoa_r+0x156>
   84506:	bf00      	nop
   84508:	40240000 	.word	0x40240000
   8450c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8450e:	2b01      	cmp	r3, #1
   84510:	f340 8285 	ble.w	84a1e <_dtoa_r+0x9e6>
   84514:	2300      	movs	r3, #0
   84516:	930c      	str	r3, [sp, #48]	; 0x30
   84518:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8451a:	2001      	movs	r0, #1
   8451c:	2b00      	cmp	r3, #0
   8451e:	d1e1      	bne.n	844e4 <_dtoa_r+0x4ac>
   84520:	9a08      	ldr	r2, [sp, #32]
   84522:	4410      	add	r0, r2
   84524:	f010 001f 	ands.w	r0, r0, #31
   84528:	f000 80a1 	beq.w	8466e <_dtoa_r+0x636>
   8452c:	f1c0 0320 	rsb	r3, r0, #32
   84530:	2b04      	cmp	r3, #4
   84532:	f340 8486 	ble.w	84e42 <_dtoa_r+0xe0a>
   84536:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84538:	f1c0 001c 	rsb	r0, r0, #28
   8453c:	4403      	add	r3, r0
   8453e:	930a      	str	r3, [sp, #40]	; 0x28
   84540:	4613      	mov	r3, r2
   84542:	4403      	add	r3, r0
   84544:	4405      	add	r5, r0
   84546:	9308      	str	r3, [sp, #32]
   84548:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8454a:	2b00      	cmp	r3, #0
   8454c:	dd05      	ble.n	8455a <_dtoa_r+0x522>
   8454e:	4649      	mov	r1, r9
   84550:	461a      	mov	r2, r3
   84552:	4620      	mov	r0, r4
   84554:	f001 fb10 	bl	85b78 <__lshift>
   84558:	4681      	mov	r9, r0
   8455a:	9b08      	ldr	r3, [sp, #32]
   8455c:	2b00      	cmp	r3, #0
   8455e:	dd05      	ble.n	8456c <_dtoa_r+0x534>
   84560:	4641      	mov	r1, r8
   84562:	461a      	mov	r2, r3
   84564:	4620      	mov	r0, r4
   84566:	f001 fb07 	bl	85b78 <__lshift>
   8456a:	4680      	mov	r8, r0
   8456c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8456e:	2b00      	cmp	r3, #0
   84570:	f040 8086 	bne.w	84680 <_dtoa_r+0x648>
   84574:	9b07      	ldr	r3, [sp, #28]
   84576:	2b00      	cmp	r3, #0
   84578:	f340 8264 	ble.w	84a44 <_dtoa_r+0xa0c>
   8457c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8457e:	2b00      	cmp	r3, #0
   84580:	f000 8098 	beq.w	846b4 <_dtoa_r+0x67c>
   84584:	2d00      	cmp	r5, #0
   84586:	dd05      	ble.n	84594 <_dtoa_r+0x55c>
   84588:	4631      	mov	r1, r6
   8458a:	462a      	mov	r2, r5
   8458c:	4620      	mov	r0, r4
   8458e:	f001 faf3 	bl	85b78 <__lshift>
   84592:	4606      	mov	r6, r0
   84594:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84596:	2b00      	cmp	r3, #0
   84598:	f040 8336 	bne.w	84c08 <_dtoa_r+0xbd0>
   8459c:	9608      	str	r6, [sp, #32]
   8459e:	9b07      	ldr	r3, [sp, #28]
   845a0:	9a04      	ldr	r2, [sp, #16]
   845a2:	3b01      	subs	r3, #1
   845a4:	18d3      	adds	r3, r2, r3
   845a6:	930b      	str	r3, [sp, #44]	; 0x2c
   845a8:	4617      	mov	r7, r2
   845aa:	f00a 0301 	and.w	r3, sl, #1
   845ae:	46c2      	mov	sl, r8
   845b0:	f8dd b020 	ldr.w	fp, [sp, #32]
   845b4:	930c      	str	r3, [sp, #48]	; 0x30
   845b6:	4651      	mov	r1, sl
   845b8:	4648      	mov	r0, r9
   845ba:	f7ff fca7 	bl	83f0c <quorem>
   845be:	4631      	mov	r1, r6
   845c0:	4605      	mov	r5, r0
   845c2:	4648      	mov	r0, r9
   845c4:	f001 fb28 	bl	85c18 <__mcmp>
   845c8:	465a      	mov	r2, fp
   845ca:	9007      	str	r0, [sp, #28]
   845cc:	4651      	mov	r1, sl
   845ce:	4620      	mov	r0, r4
   845d0:	f001 fb3e 	bl	85c50 <__mdiff>
   845d4:	68c2      	ldr	r2, [r0, #12]
   845d6:	4680      	mov	r8, r0
   845d8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   845dc:	2a00      	cmp	r2, #0
   845de:	f040 8229 	bne.w	84a34 <_dtoa_r+0x9fc>
   845e2:	4601      	mov	r1, r0
   845e4:	4648      	mov	r0, r9
   845e6:	930a      	str	r3, [sp, #40]	; 0x28
   845e8:	f001 fb16 	bl	85c18 <__mcmp>
   845ec:	4641      	mov	r1, r8
   845ee:	9008      	str	r0, [sp, #32]
   845f0:	4620      	mov	r0, r4
   845f2:	f001 f939 	bl	85868 <_Bfree>
   845f6:	9a08      	ldr	r2, [sp, #32]
   845f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   845fa:	b932      	cbnz	r2, 8460a <_dtoa_r+0x5d2>
   845fc:	9924      	ldr	r1, [sp, #144]	; 0x90
   845fe:	b921      	cbnz	r1, 8460a <_dtoa_r+0x5d2>
   84600:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84602:	2a00      	cmp	r2, #0
   84604:	f000 83ee 	beq.w	84de4 <_dtoa_r+0xdac>
   84608:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8460a:	9907      	ldr	r1, [sp, #28]
   8460c:	2900      	cmp	r1, #0
   8460e:	f2c0 829f 	blt.w	84b50 <_dtoa_r+0xb18>
   84612:	d105      	bne.n	84620 <_dtoa_r+0x5e8>
   84614:	9924      	ldr	r1, [sp, #144]	; 0x90
   84616:	b919      	cbnz	r1, 84620 <_dtoa_r+0x5e8>
   84618:	990c      	ldr	r1, [sp, #48]	; 0x30
   8461a:	2900      	cmp	r1, #0
   8461c:	f000 8298 	beq.w	84b50 <_dtoa_r+0xb18>
   84620:	2a00      	cmp	r2, #0
   84622:	f300 8305 	bgt.w	84c30 <_dtoa_r+0xbf8>
   84626:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84628:	f107 0801 	add.w	r8, r7, #1
   8462c:	4297      	cmp	r7, r2
   8462e:	703b      	strb	r3, [r7, #0]
   84630:	4645      	mov	r5, r8
   84632:	f000 830b 	beq.w	84c4c <_dtoa_r+0xc14>
   84636:	4649      	mov	r1, r9
   84638:	2300      	movs	r3, #0
   8463a:	220a      	movs	r2, #10
   8463c:	4620      	mov	r0, r4
   8463e:	f001 f91d 	bl	8587c <__multadd>
   84642:	455e      	cmp	r6, fp
   84644:	4681      	mov	r9, r0
   84646:	4631      	mov	r1, r6
   84648:	f04f 0300 	mov.w	r3, #0
   8464c:	f04f 020a 	mov.w	r2, #10
   84650:	4620      	mov	r0, r4
   84652:	f000 81e9 	beq.w	84a28 <_dtoa_r+0x9f0>
   84656:	f001 f911 	bl	8587c <__multadd>
   8465a:	4659      	mov	r1, fp
   8465c:	4606      	mov	r6, r0
   8465e:	2300      	movs	r3, #0
   84660:	220a      	movs	r2, #10
   84662:	4620      	mov	r0, r4
   84664:	f001 f90a 	bl	8587c <__multadd>
   84668:	4647      	mov	r7, r8
   8466a:	4683      	mov	fp, r0
   8466c:	e7a3      	b.n	845b6 <_dtoa_r+0x57e>
   8466e:	201c      	movs	r0, #28
   84670:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84672:	4405      	add	r5, r0
   84674:	4403      	add	r3, r0
   84676:	930a      	str	r3, [sp, #40]	; 0x28
   84678:	9b08      	ldr	r3, [sp, #32]
   8467a:	4403      	add	r3, r0
   8467c:	9308      	str	r3, [sp, #32]
   8467e:	e763      	b.n	84548 <_dtoa_r+0x510>
   84680:	4641      	mov	r1, r8
   84682:	4648      	mov	r0, r9
   84684:	f001 fac8 	bl	85c18 <__mcmp>
   84688:	2800      	cmp	r0, #0
   8468a:	f6bf af73 	bge.w	84574 <_dtoa_r+0x53c>
   8468e:	9f02      	ldr	r7, [sp, #8]
   84690:	4649      	mov	r1, r9
   84692:	2300      	movs	r3, #0
   84694:	220a      	movs	r2, #10
   84696:	4620      	mov	r0, r4
   84698:	3f01      	subs	r7, #1
   8469a:	9702      	str	r7, [sp, #8]
   8469c:	f001 f8ee 	bl	8587c <__multadd>
   846a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   846a2:	4681      	mov	r9, r0
   846a4:	2b00      	cmp	r3, #0
   846a6:	f040 83b5 	bne.w	84e14 <_dtoa_r+0xddc>
   846aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   846ac:	2b00      	cmp	r3, #0
   846ae:	f340 83be 	ble.w	84e2e <_dtoa_r+0xdf6>
   846b2:	9307      	str	r3, [sp, #28]
   846b4:	f8dd a010 	ldr.w	sl, [sp, #16]
   846b8:	9f07      	ldr	r7, [sp, #28]
   846ba:	4655      	mov	r5, sl
   846bc:	e006      	b.n	846cc <_dtoa_r+0x694>
   846be:	4649      	mov	r1, r9
   846c0:	2300      	movs	r3, #0
   846c2:	220a      	movs	r2, #10
   846c4:	4620      	mov	r0, r4
   846c6:	f001 f8d9 	bl	8587c <__multadd>
   846ca:	4681      	mov	r9, r0
   846cc:	4641      	mov	r1, r8
   846ce:	4648      	mov	r0, r9
   846d0:	f7ff fc1c 	bl	83f0c <quorem>
   846d4:	3030      	adds	r0, #48	; 0x30
   846d6:	f805 0b01 	strb.w	r0, [r5], #1
   846da:	eba5 030a 	sub.w	r3, r5, sl
   846de:	42bb      	cmp	r3, r7
   846e0:	dbed      	blt.n	846be <_dtoa_r+0x686>
   846e2:	9b04      	ldr	r3, [sp, #16]
   846e4:	9a07      	ldr	r2, [sp, #28]
   846e6:	4682      	mov	sl, r0
   846e8:	2a01      	cmp	r2, #1
   846ea:	bfac      	ite	ge
   846ec:	189b      	addge	r3, r3, r2
   846ee:	3301      	addlt	r3, #1
   846f0:	f04f 0b00 	mov.w	fp, #0
   846f4:	461d      	mov	r5, r3
   846f6:	4649      	mov	r1, r9
   846f8:	2201      	movs	r2, #1
   846fa:	4620      	mov	r0, r4
   846fc:	f001 fa3c 	bl	85b78 <__lshift>
   84700:	4641      	mov	r1, r8
   84702:	4681      	mov	r9, r0
   84704:	f001 fa88 	bl	85c18 <__mcmp>
   84708:	2800      	cmp	r0, #0
   8470a:	f340 823f 	ble.w	84b8c <_dtoa_r+0xb54>
   8470e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   84712:	1e6b      	subs	r3, r5, #1
   84714:	9904      	ldr	r1, [sp, #16]
   84716:	e004      	b.n	84722 <_dtoa_r+0x6ea>
   84718:	428b      	cmp	r3, r1
   8471a:	f000 81ae 	beq.w	84a7a <_dtoa_r+0xa42>
   8471e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   84722:	2a39      	cmp	r2, #57	; 0x39
   84724:	f103 0501 	add.w	r5, r3, #1
   84728:	d0f6      	beq.n	84718 <_dtoa_r+0x6e0>
   8472a:	3201      	adds	r2, #1
   8472c:	701a      	strb	r2, [r3, #0]
   8472e:	4641      	mov	r1, r8
   84730:	4620      	mov	r0, r4
   84732:	f001 f899 	bl	85868 <_Bfree>
   84736:	2e00      	cmp	r6, #0
   84738:	f43f ae3d 	beq.w	843b6 <_dtoa_r+0x37e>
   8473c:	f1bb 0f00 	cmp.w	fp, #0
   84740:	d005      	beq.n	8474e <_dtoa_r+0x716>
   84742:	45b3      	cmp	fp, r6
   84744:	d003      	beq.n	8474e <_dtoa_r+0x716>
   84746:	4659      	mov	r1, fp
   84748:	4620      	mov	r0, r4
   8474a:	f001 f88d 	bl	85868 <_Bfree>
   8474e:	4631      	mov	r1, r6
   84750:	4620      	mov	r0, r4
   84752:	f001 f889 	bl	85868 <_Bfree>
   84756:	e62e      	b.n	843b6 <_dtoa_r+0x37e>
   84758:	2300      	movs	r3, #0
   8475a:	930b      	str	r3, [sp, #44]	; 0x2c
   8475c:	9b02      	ldr	r3, [sp, #8]
   8475e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84760:	4413      	add	r3, r2
   84762:	930f      	str	r3, [sp, #60]	; 0x3c
   84764:	3301      	adds	r3, #1
   84766:	2b01      	cmp	r3, #1
   84768:	461f      	mov	r7, r3
   8476a:	461e      	mov	r6, r3
   8476c:	bfb8      	it	lt
   8476e:	2701      	movlt	r7, #1
   84770:	9307      	str	r3, [sp, #28]
   84772:	2100      	movs	r1, #0
   84774:	2f17      	cmp	r7, #23
   84776:	6461      	str	r1, [r4, #68]	; 0x44
   84778:	d90a      	bls.n	84790 <_dtoa_r+0x758>
   8477a:	2201      	movs	r2, #1
   8477c:	2304      	movs	r3, #4
   8477e:	005b      	lsls	r3, r3, #1
   84780:	f103 0014 	add.w	r0, r3, #20
   84784:	4287      	cmp	r7, r0
   84786:	4611      	mov	r1, r2
   84788:	f102 0201 	add.w	r2, r2, #1
   8478c:	d2f7      	bcs.n	8477e <_dtoa_r+0x746>
   8478e:	6461      	str	r1, [r4, #68]	; 0x44
   84790:	4620      	mov	r0, r4
   84792:	f001 f843 	bl	8581c <_Balloc>
   84796:	2e0e      	cmp	r6, #14
   84798:	9004      	str	r0, [sp, #16]
   8479a:	6420      	str	r0, [r4, #64]	; 0x40
   8479c:	f63f ad47 	bhi.w	8422e <_dtoa_r+0x1f6>
   847a0:	2d00      	cmp	r5, #0
   847a2:	f43f ad44 	beq.w	8422e <_dtoa_r+0x1f6>
   847a6:	9902      	ldr	r1, [sp, #8]
   847a8:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   847ac:	2900      	cmp	r1, #0
   847ae:	f340 8203 	ble.w	84bb8 <_dtoa_r+0xb80>
   847b2:	4bb9      	ldr	r3, [pc, #740]	; (84a98 <_dtoa_r+0xa60>)
   847b4:	f001 020f 	and.w	r2, r1, #15
   847b8:	110d      	asrs	r5, r1, #4
   847ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   847be:	06e9      	lsls	r1, r5, #27
   847c0:	e9d3 6700 	ldrd	r6, r7, [r3]
   847c4:	f140 81af 	bpl.w	84b26 <_dtoa_r+0xaee>
   847c8:	4bb4      	ldr	r3, [pc, #720]	; (84a9c <_dtoa_r+0xa64>)
   847ca:	4650      	mov	r0, sl
   847cc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   847d0:	4659      	mov	r1, fp
   847d2:	f002 f8e5 	bl	869a0 <__aeabi_ddiv>
   847d6:	f04f 0a03 	mov.w	sl, #3
   847da:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   847de:	f005 050f 	and.w	r5, r5, #15
   847e2:	b18d      	cbz	r5, 84808 <_dtoa_r+0x7d0>
   847e4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 84a9c <_dtoa_r+0xa64>
   847e8:	07ea      	lsls	r2, r5, #31
   847ea:	d509      	bpl.n	84800 <_dtoa_r+0x7c8>
   847ec:	e9d8 2300 	ldrd	r2, r3, [r8]
   847f0:	4630      	mov	r0, r6
   847f2:	4639      	mov	r1, r7
   847f4:	f001 ffaa 	bl	8674c <__aeabi_dmul>
   847f8:	4606      	mov	r6, r0
   847fa:	460f      	mov	r7, r1
   847fc:	f10a 0a01 	add.w	sl, sl, #1
   84800:	106d      	asrs	r5, r5, #1
   84802:	f108 0808 	add.w	r8, r8, #8
   84806:	d1ef      	bne.n	847e8 <_dtoa_r+0x7b0>
   84808:	463b      	mov	r3, r7
   8480a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8480e:	4632      	mov	r2, r6
   84810:	f002 f8c6 	bl	869a0 <__aeabi_ddiv>
   84814:	4607      	mov	r7, r0
   84816:	4688      	mov	r8, r1
   84818:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8481a:	b143      	cbz	r3, 8482e <_dtoa_r+0x7f6>
   8481c:	2200      	movs	r2, #0
   8481e:	4ba0      	ldr	r3, [pc, #640]	; (84aa0 <_dtoa_r+0xa68>)
   84820:	4638      	mov	r0, r7
   84822:	4641      	mov	r1, r8
   84824:	f002 fa04 	bl	86c30 <__aeabi_dcmplt>
   84828:	2800      	cmp	r0, #0
   8482a:	f040 8287 	bne.w	84d3c <_dtoa_r+0xd04>
   8482e:	4650      	mov	r0, sl
   84830:	f001 ff26 	bl	86680 <__aeabi_i2d>
   84834:	463a      	mov	r2, r7
   84836:	4643      	mov	r3, r8
   84838:	f001 ff88 	bl	8674c <__aeabi_dmul>
   8483c:	4b99      	ldr	r3, [pc, #612]	; (84aa4 <_dtoa_r+0xa6c>)
   8483e:	2200      	movs	r2, #0
   84840:	f001 fdd2 	bl	863e8 <__adddf3>
   84844:	9b07      	ldr	r3, [sp, #28]
   84846:	4605      	mov	r5, r0
   84848:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8484c:	2b00      	cmp	r3, #0
   8484e:	f000 813f 	beq.w	84ad0 <_dtoa_r+0xa98>
   84852:	9b02      	ldr	r3, [sp, #8]
   84854:	9315      	str	r3, [sp, #84]	; 0x54
   84856:	9b07      	ldr	r3, [sp, #28]
   84858:	9312      	str	r3, [sp, #72]	; 0x48
   8485a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8485c:	2b00      	cmp	r3, #0
   8485e:	f000 81fb 	beq.w	84c58 <_dtoa_r+0xc20>
   84862:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84864:	4b8c      	ldr	r3, [pc, #560]	; (84a98 <_dtoa_r+0xa60>)
   84866:	2000      	movs	r0, #0
   84868:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8486c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   84870:	498d      	ldr	r1, [pc, #564]	; (84aa8 <_dtoa_r+0xa70>)
   84872:	f002 f895 	bl	869a0 <__aeabi_ddiv>
   84876:	462a      	mov	r2, r5
   84878:	4633      	mov	r3, r6
   8487a:	f001 fdb3 	bl	863e4 <__aeabi_dsub>
   8487e:	4682      	mov	sl, r0
   84880:	468b      	mov	fp, r1
   84882:	4638      	mov	r0, r7
   84884:	4641      	mov	r1, r8
   84886:	f002 fa11 	bl	86cac <__aeabi_d2iz>
   8488a:	4605      	mov	r5, r0
   8488c:	f001 fef8 	bl	86680 <__aeabi_i2d>
   84890:	4602      	mov	r2, r0
   84892:	460b      	mov	r3, r1
   84894:	4638      	mov	r0, r7
   84896:	4641      	mov	r1, r8
   84898:	f001 fda4 	bl	863e4 <__aeabi_dsub>
   8489c:	3530      	adds	r5, #48	; 0x30
   8489e:	fa5f f885 	uxtb.w	r8, r5
   848a2:	9d04      	ldr	r5, [sp, #16]
   848a4:	4606      	mov	r6, r0
   848a6:	460f      	mov	r7, r1
   848a8:	f885 8000 	strb.w	r8, [r5]
   848ac:	4602      	mov	r2, r0
   848ae:	460b      	mov	r3, r1
   848b0:	4650      	mov	r0, sl
   848b2:	4659      	mov	r1, fp
   848b4:	3501      	adds	r5, #1
   848b6:	f002 f9d9 	bl	86c6c <__aeabi_dcmpgt>
   848ba:	2800      	cmp	r0, #0
   848bc:	d154      	bne.n	84968 <_dtoa_r+0x930>
   848be:	4632      	mov	r2, r6
   848c0:	463b      	mov	r3, r7
   848c2:	2000      	movs	r0, #0
   848c4:	4976      	ldr	r1, [pc, #472]	; (84aa0 <_dtoa_r+0xa68>)
   848c6:	f001 fd8d 	bl	863e4 <__aeabi_dsub>
   848ca:	4602      	mov	r2, r0
   848cc:	460b      	mov	r3, r1
   848ce:	4650      	mov	r0, sl
   848d0:	4659      	mov	r1, fp
   848d2:	f002 f9cb 	bl	86c6c <__aeabi_dcmpgt>
   848d6:	2800      	cmp	r0, #0
   848d8:	f040 8270 	bne.w	84dbc <_dtoa_r+0xd84>
   848dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
   848de:	2a01      	cmp	r2, #1
   848e0:	f000 8112 	beq.w	84b08 <_dtoa_r+0xad0>
   848e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   848e6:	9a04      	ldr	r2, [sp, #16]
   848e8:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   848ec:	4413      	add	r3, r2
   848ee:	4699      	mov	r9, r3
   848f0:	e00f      	b.n	84912 <_dtoa_r+0x8da>
   848f2:	4632      	mov	r2, r6
   848f4:	463b      	mov	r3, r7
   848f6:	2000      	movs	r0, #0
   848f8:	4969      	ldr	r1, [pc, #420]	; (84aa0 <_dtoa_r+0xa68>)
   848fa:	f001 fd73 	bl	863e4 <__aeabi_dsub>
   848fe:	4652      	mov	r2, sl
   84900:	465b      	mov	r3, fp
   84902:	f002 f995 	bl	86c30 <__aeabi_dcmplt>
   84906:	2800      	cmp	r0, #0
   84908:	f040 8256 	bne.w	84db8 <_dtoa_r+0xd80>
   8490c:	454d      	cmp	r5, r9
   8490e:	f000 80f9 	beq.w	84b04 <_dtoa_r+0xacc>
   84912:	4650      	mov	r0, sl
   84914:	4659      	mov	r1, fp
   84916:	2200      	movs	r2, #0
   84918:	4b64      	ldr	r3, [pc, #400]	; (84aac <_dtoa_r+0xa74>)
   8491a:	f001 ff17 	bl	8674c <__aeabi_dmul>
   8491e:	2200      	movs	r2, #0
   84920:	4b62      	ldr	r3, [pc, #392]	; (84aac <_dtoa_r+0xa74>)
   84922:	4682      	mov	sl, r0
   84924:	468b      	mov	fp, r1
   84926:	4630      	mov	r0, r6
   84928:	4639      	mov	r1, r7
   8492a:	f001 ff0f 	bl	8674c <__aeabi_dmul>
   8492e:	460f      	mov	r7, r1
   84930:	4606      	mov	r6, r0
   84932:	f002 f9bb 	bl	86cac <__aeabi_d2iz>
   84936:	4680      	mov	r8, r0
   84938:	f001 fea2 	bl	86680 <__aeabi_i2d>
   8493c:	4602      	mov	r2, r0
   8493e:	460b      	mov	r3, r1
   84940:	4630      	mov	r0, r6
   84942:	4639      	mov	r1, r7
   84944:	f001 fd4e 	bl	863e4 <__aeabi_dsub>
   84948:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8494c:	fa5f f888 	uxtb.w	r8, r8
   84950:	f805 8b01 	strb.w	r8, [r5], #1
   84954:	4652      	mov	r2, sl
   84956:	465b      	mov	r3, fp
   84958:	4606      	mov	r6, r0
   8495a:	460f      	mov	r7, r1
   8495c:	f002 f968 	bl	86c30 <__aeabi_dcmplt>
   84960:	2800      	cmp	r0, #0
   84962:	d0c6      	beq.n	848f2 <_dtoa_r+0x8ba>
   84964:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84968:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8496a:	9302      	str	r3, [sp, #8]
   8496c:	e523      	b.n	843b6 <_dtoa_r+0x37e>
   8496e:	2300      	movs	r3, #0
   84970:	930b      	str	r3, [sp, #44]	; 0x2c
   84972:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84974:	2b00      	cmp	r3, #0
   84976:	f340 80dd 	ble.w	84b34 <_dtoa_r+0xafc>
   8497a:	461f      	mov	r7, r3
   8497c:	461e      	mov	r6, r3
   8497e:	930f      	str	r3, [sp, #60]	; 0x3c
   84980:	9307      	str	r3, [sp, #28]
   84982:	e6f6      	b.n	84772 <_dtoa_r+0x73a>
   84984:	2301      	movs	r3, #1
   84986:	930b      	str	r3, [sp, #44]	; 0x2c
   84988:	e7f3      	b.n	84972 <_dtoa_r+0x93a>
   8498a:	f1ba 0f00 	cmp.w	sl, #0
   8498e:	f47f ada7 	bne.w	844e0 <_dtoa_r+0x4a8>
   84992:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84996:	2b00      	cmp	r3, #0
   84998:	f47f adbc 	bne.w	84514 <_dtoa_r+0x4dc>
   8499c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   849a0:	0d3f      	lsrs	r7, r7, #20
   849a2:	053f      	lsls	r7, r7, #20
   849a4:	2f00      	cmp	r7, #0
   849a6:	f000 820d 	beq.w	84dc4 <_dtoa_r+0xd8c>
   849aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   849ac:	3301      	adds	r3, #1
   849ae:	930a      	str	r3, [sp, #40]	; 0x28
   849b0:	9b08      	ldr	r3, [sp, #32]
   849b2:	3301      	adds	r3, #1
   849b4:	9308      	str	r3, [sp, #32]
   849b6:	2301      	movs	r3, #1
   849b8:	930c      	str	r3, [sp, #48]	; 0x30
   849ba:	e5ad      	b.n	84518 <_dtoa_r+0x4e0>
   849bc:	9b07      	ldr	r3, [sp, #28]
   849be:	2b00      	cmp	r3, #0
   849c0:	f73f ac48 	bgt.w	84254 <_dtoa_r+0x21c>
   849c4:	f040 8222 	bne.w	84e0c <_dtoa_r+0xdd4>
   849c8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   849cc:	2200      	movs	r2, #0
   849ce:	4b38      	ldr	r3, [pc, #224]	; (84ab0 <_dtoa_r+0xa78>)
   849d0:	f001 febc 	bl	8674c <__aeabi_dmul>
   849d4:	4652      	mov	r2, sl
   849d6:	465b      	mov	r3, fp
   849d8:	f002 f93e 	bl	86c58 <__aeabi_dcmpge>
   849dc:	f8dd 801c 	ldr.w	r8, [sp, #28]
   849e0:	4646      	mov	r6, r8
   849e2:	2800      	cmp	r0, #0
   849e4:	d041      	beq.n	84a6a <_dtoa_r+0xa32>
   849e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   849e8:	9d04      	ldr	r5, [sp, #16]
   849ea:	43db      	mvns	r3, r3
   849ec:	9302      	str	r3, [sp, #8]
   849ee:	4641      	mov	r1, r8
   849f0:	4620      	mov	r0, r4
   849f2:	f000 ff39 	bl	85868 <_Bfree>
   849f6:	2e00      	cmp	r6, #0
   849f8:	f43f acdd 	beq.w	843b6 <_dtoa_r+0x37e>
   849fc:	e6a7      	b.n	8474e <_dtoa_r+0x716>
   849fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84a00:	4649      	mov	r1, r9
   84a02:	4620      	mov	r0, r4
   84a04:	f001 f868 	bl	85ad8 <__pow5mult>
   84a08:	4681      	mov	r9, r0
   84a0a:	e557      	b.n	844bc <_dtoa_r+0x484>
   84a0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
   84a0e:	2a00      	cmp	r2, #0
   84a10:	f000 8188 	beq.w	84d24 <_dtoa_r+0xcec>
   84a14:	f203 4333 	addw	r3, r3, #1075	; 0x433
   84a18:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84a1a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84a1c:	e4f2      	b.n	84404 <_dtoa_r+0x3cc>
   84a1e:	f1ba 0f00 	cmp.w	sl, #0
   84a22:	f47f ad77 	bne.w	84514 <_dtoa_r+0x4dc>
   84a26:	e7b4      	b.n	84992 <_dtoa_r+0x95a>
   84a28:	f000 ff28 	bl	8587c <__multadd>
   84a2c:	4647      	mov	r7, r8
   84a2e:	4606      	mov	r6, r0
   84a30:	4683      	mov	fp, r0
   84a32:	e5c0      	b.n	845b6 <_dtoa_r+0x57e>
   84a34:	4601      	mov	r1, r0
   84a36:	4620      	mov	r0, r4
   84a38:	9308      	str	r3, [sp, #32]
   84a3a:	f000 ff15 	bl	85868 <_Bfree>
   84a3e:	2201      	movs	r2, #1
   84a40:	9b08      	ldr	r3, [sp, #32]
   84a42:	e5e2      	b.n	8460a <_dtoa_r+0x5d2>
   84a44:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84a46:	2b02      	cmp	r3, #2
   84a48:	f77f ad98 	ble.w	8457c <_dtoa_r+0x544>
   84a4c:	9b07      	ldr	r3, [sp, #28]
   84a4e:	2b00      	cmp	r3, #0
   84a50:	d1c9      	bne.n	849e6 <_dtoa_r+0x9ae>
   84a52:	4641      	mov	r1, r8
   84a54:	2205      	movs	r2, #5
   84a56:	4620      	mov	r0, r4
   84a58:	f000 ff10 	bl	8587c <__multadd>
   84a5c:	4601      	mov	r1, r0
   84a5e:	4680      	mov	r8, r0
   84a60:	4648      	mov	r0, r9
   84a62:	f001 f8d9 	bl	85c18 <__mcmp>
   84a66:	2800      	cmp	r0, #0
   84a68:	ddbd      	ble.n	849e6 <_dtoa_r+0x9ae>
   84a6a:	2331      	movs	r3, #49	; 0x31
   84a6c:	9a02      	ldr	r2, [sp, #8]
   84a6e:	9904      	ldr	r1, [sp, #16]
   84a70:	3201      	adds	r2, #1
   84a72:	9202      	str	r2, [sp, #8]
   84a74:	700b      	strb	r3, [r1, #0]
   84a76:	1c4d      	adds	r5, r1, #1
   84a78:	e7b9      	b.n	849ee <_dtoa_r+0x9b6>
   84a7a:	2331      	movs	r3, #49	; 0x31
   84a7c:	9a02      	ldr	r2, [sp, #8]
   84a7e:	3201      	adds	r2, #1
   84a80:	9202      	str	r2, [sp, #8]
   84a82:	9a04      	ldr	r2, [sp, #16]
   84a84:	7013      	strb	r3, [r2, #0]
   84a86:	e652      	b.n	8472e <_dtoa_r+0x6f6>
   84a88:	2301      	movs	r3, #1
   84a8a:	930b      	str	r3, [sp, #44]	; 0x2c
   84a8c:	e666      	b.n	8475c <_dtoa_r+0x724>
   84a8e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84a92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84a94:	e48f      	b.n	843b6 <_dtoa_r+0x37e>
   84a96:	bf00      	nop
   84a98:	000870f0 	.word	0x000870f0
   84a9c:	000870c8 	.word	0x000870c8
   84aa0:	3ff00000 	.word	0x3ff00000
   84aa4:	401c0000 	.word	0x401c0000
   84aa8:	3fe00000 	.word	0x3fe00000
   84aac:	40240000 	.word	0x40240000
   84ab0:	40140000 	.word	0x40140000
   84ab4:	4650      	mov	r0, sl
   84ab6:	f001 fde3 	bl	86680 <__aeabi_i2d>
   84aba:	463a      	mov	r2, r7
   84abc:	4643      	mov	r3, r8
   84abe:	f001 fe45 	bl	8674c <__aeabi_dmul>
   84ac2:	2200      	movs	r2, #0
   84ac4:	4bc1      	ldr	r3, [pc, #772]	; (84dcc <_dtoa_r+0xd94>)
   84ac6:	f001 fc8f 	bl	863e8 <__adddf3>
   84aca:	4605      	mov	r5, r0
   84acc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84ad0:	4641      	mov	r1, r8
   84ad2:	2200      	movs	r2, #0
   84ad4:	4bbe      	ldr	r3, [pc, #760]	; (84dd0 <_dtoa_r+0xd98>)
   84ad6:	4638      	mov	r0, r7
   84ad8:	f001 fc84 	bl	863e4 <__aeabi_dsub>
   84adc:	462a      	mov	r2, r5
   84ade:	4633      	mov	r3, r6
   84ae0:	4682      	mov	sl, r0
   84ae2:	468b      	mov	fp, r1
   84ae4:	f002 f8c2 	bl	86c6c <__aeabi_dcmpgt>
   84ae8:	4680      	mov	r8, r0
   84aea:	2800      	cmp	r0, #0
   84aec:	f040 8110 	bne.w	84d10 <_dtoa_r+0xcd8>
   84af0:	462a      	mov	r2, r5
   84af2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   84af6:	4650      	mov	r0, sl
   84af8:	4659      	mov	r1, fp
   84afa:	f002 f899 	bl	86c30 <__aeabi_dcmplt>
   84afe:	b118      	cbz	r0, 84b08 <_dtoa_r+0xad0>
   84b00:	4646      	mov	r6, r8
   84b02:	e770      	b.n	849e6 <_dtoa_r+0x9ae>
   84b04:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84b08:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   84b0c:	f7ff bb8f 	b.w	8422e <_dtoa_r+0x1f6>
   84b10:	9804      	ldr	r0, [sp, #16]
   84b12:	f7ff bac0 	b.w	84096 <_dtoa_r+0x5e>
   84b16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84b18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84b1a:	1afb      	subs	r3, r7, r3
   84b1c:	441a      	add	r2, r3
   84b1e:	970c      	str	r7, [sp, #48]	; 0x30
   84b20:	920d      	str	r2, [sp, #52]	; 0x34
   84b22:	2700      	movs	r7, #0
   84b24:	e468      	b.n	843f8 <_dtoa_r+0x3c0>
   84b26:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   84b2a:	f04f 0a02 	mov.w	sl, #2
   84b2e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   84b32:	e656      	b.n	847e2 <_dtoa_r+0x7aa>
   84b34:	2100      	movs	r1, #0
   84b36:	2301      	movs	r3, #1
   84b38:	4620      	mov	r0, r4
   84b3a:	6461      	str	r1, [r4, #68]	; 0x44
   84b3c:	9325      	str	r3, [sp, #148]	; 0x94
   84b3e:	f000 fe6d 	bl	8581c <_Balloc>
   84b42:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84b44:	9004      	str	r0, [sp, #16]
   84b46:	9307      	str	r3, [sp, #28]
   84b48:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84b4a:	6420      	str	r0, [r4, #64]	; 0x40
   84b4c:	930f      	str	r3, [sp, #60]	; 0x3c
   84b4e:	e627      	b.n	847a0 <_dtoa_r+0x768>
   84b50:	2a00      	cmp	r2, #0
   84b52:	46d0      	mov	r8, sl
   84b54:	f8cd b020 	str.w	fp, [sp, #32]
   84b58:	469a      	mov	sl, r3
   84b5a:	dd11      	ble.n	84b80 <_dtoa_r+0xb48>
   84b5c:	4649      	mov	r1, r9
   84b5e:	2201      	movs	r2, #1
   84b60:	4620      	mov	r0, r4
   84b62:	f001 f809 	bl	85b78 <__lshift>
   84b66:	4641      	mov	r1, r8
   84b68:	4681      	mov	r9, r0
   84b6a:	f001 f855 	bl	85c18 <__mcmp>
   84b6e:	2800      	cmp	r0, #0
   84b70:	f340 8145 	ble.w	84dfe <_dtoa_r+0xdc6>
   84b74:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84b78:	f000 8105 	beq.w	84d86 <_dtoa_r+0xd4e>
   84b7c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   84b80:	46b3      	mov	fp, r6
   84b82:	f887 a000 	strb.w	sl, [r7]
   84b86:	1c7d      	adds	r5, r7, #1
   84b88:	9e08      	ldr	r6, [sp, #32]
   84b8a:	e5d0      	b.n	8472e <_dtoa_r+0x6f6>
   84b8c:	d104      	bne.n	84b98 <_dtoa_r+0xb60>
   84b8e:	f01a 0f01 	tst.w	sl, #1
   84b92:	d001      	beq.n	84b98 <_dtoa_r+0xb60>
   84b94:	e5bb      	b.n	8470e <_dtoa_r+0x6d6>
   84b96:	4615      	mov	r5, r2
   84b98:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84b9c:	1e6a      	subs	r2, r5, #1
   84b9e:	2b30      	cmp	r3, #48	; 0x30
   84ba0:	d0f9      	beq.n	84b96 <_dtoa_r+0xb5e>
   84ba2:	e5c4      	b.n	8472e <_dtoa_r+0x6f6>
   84ba4:	2230      	movs	r2, #48	; 0x30
   84ba6:	9904      	ldr	r1, [sp, #16]
   84ba8:	700a      	strb	r2, [r1, #0]
   84baa:	9a02      	ldr	r2, [sp, #8]
   84bac:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84bb0:	3201      	adds	r2, #1
   84bb2:	9202      	str	r2, [sp, #8]
   84bb4:	f7ff bbfb 	b.w	843ae <_dtoa_r+0x376>
   84bb8:	f000 80bb 	beq.w	84d32 <_dtoa_r+0xcfa>
   84bbc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84bc0:	9b02      	ldr	r3, [sp, #8]
   84bc2:	f04f 0a02 	mov.w	sl, #2
   84bc6:	425d      	negs	r5, r3
   84bc8:	4b82      	ldr	r3, [pc, #520]	; (84dd4 <_dtoa_r+0xd9c>)
   84bca:	f005 020f 	and.w	r2, r5, #15
   84bce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84bd2:	e9d3 2300 	ldrd	r2, r3, [r3]
   84bd6:	f001 fdb9 	bl	8674c <__aeabi_dmul>
   84bda:	112d      	asrs	r5, r5, #4
   84bdc:	4607      	mov	r7, r0
   84bde:	4688      	mov	r8, r1
   84be0:	f43f ae1a 	beq.w	84818 <_dtoa_r+0x7e0>
   84be4:	4e7c      	ldr	r6, [pc, #496]	; (84dd8 <_dtoa_r+0xda0>)
   84be6:	07eb      	lsls	r3, r5, #31
   84be8:	d509      	bpl.n	84bfe <_dtoa_r+0xbc6>
   84bea:	e9d6 2300 	ldrd	r2, r3, [r6]
   84bee:	4638      	mov	r0, r7
   84bf0:	4641      	mov	r1, r8
   84bf2:	f001 fdab 	bl	8674c <__aeabi_dmul>
   84bf6:	4607      	mov	r7, r0
   84bf8:	4688      	mov	r8, r1
   84bfa:	f10a 0a01 	add.w	sl, sl, #1
   84bfe:	106d      	asrs	r5, r5, #1
   84c00:	f106 0608 	add.w	r6, r6, #8
   84c04:	d1ef      	bne.n	84be6 <_dtoa_r+0xbae>
   84c06:	e607      	b.n	84818 <_dtoa_r+0x7e0>
   84c08:	6871      	ldr	r1, [r6, #4]
   84c0a:	4620      	mov	r0, r4
   84c0c:	f000 fe06 	bl	8581c <_Balloc>
   84c10:	4605      	mov	r5, r0
   84c12:	6933      	ldr	r3, [r6, #16]
   84c14:	f106 010c 	add.w	r1, r6, #12
   84c18:	3302      	adds	r3, #2
   84c1a:	009a      	lsls	r2, r3, #2
   84c1c:	300c      	adds	r0, #12
   84c1e:	f7fd fda9 	bl	82774 <memcpy>
   84c22:	4629      	mov	r1, r5
   84c24:	2201      	movs	r2, #1
   84c26:	4620      	mov	r0, r4
   84c28:	f000 ffa6 	bl	85b78 <__lshift>
   84c2c:	9008      	str	r0, [sp, #32]
   84c2e:	e4b6      	b.n	8459e <_dtoa_r+0x566>
   84c30:	2b39      	cmp	r3, #57	; 0x39
   84c32:	f8cd b020 	str.w	fp, [sp, #32]
   84c36:	46d0      	mov	r8, sl
   84c38:	f000 80a5 	beq.w	84d86 <_dtoa_r+0xd4e>
   84c3c:	f103 0a01 	add.w	sl, r3, #1
   84c40:	46b3      	mov	fp, r6
   84c42:	f887 a000 	strb.w	sl, [r7]
   84c46:	1c7d      	adds	r5, r7, #1
   84c48:	9e08      	ldr	r6, [sp, #32]
   84c4a:	e570      	b.n	8472e <_dtoa_r+0x6f6>
   84c4c:	465a      	mov	r2, fp
   84c4e:	46d0      	mov	r8, sl
   84c50:	46b3      	mov	fp, r6
   84c52:	469a      	mov	sl, r3
   84c54:	4616      	mov	r6, r2
   84c56:	e54e      	b.n	846f6 <_dtoa_r+0x6be>
   84c58:	9812      	ldr	r0, [sp, #72]	; 0x48
   84c5a:	495e      	ldr	r1, [pc, #376]	; (84dd4 <_dtoa_r+0xd9c>)
   84c5c:	462a      	mov	r2, r5
   84c5e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   84c62:	4633      	mov	r3, r6
   84c64:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   84c68:	f001 fd70 	bl	8674c <__aeabi_dmul>
   84c6c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   84c70:	4638      	mov	r0, r7
   84c72:	4641      	mov	r1, r8
   84c74:	f002 f81a 	bl	86cac <__aeabi_d2iz>
   84c78:	4605      	mov	r5, r0
   84c7a:	f001 fd01 	bl	86680 <__aeabi_i2d>
   84c7e:	4602      	mov	r2, r0
   84c80:	460b      	mov	r3, r1
   84c82:	4638      	mov	r0, r7
   84c84:	4641      	mov	r1, r8
   84c86:	f001 fbad 	bl	863e4 <__aeabi_dsub>
   84c8a:	4606      	mov	r6, r0
   84c8c:	9812      	ldr	r0, [sp, #72]	; 0x48
   84c8e:	9a04      	ldr	r2, [sp, #16]
   84c90:	3530      	adds	r5, #48	; 0x30
   84c92:	2801      	cmp	r0, #1
   84c94:	7015      	strb	r5, [r2, #0]
   84c96:	460f      	mov	r7, r1
   84c98:	f102 0501 	add.w	r5, r2, #1
   84c9c:	d026      	beq.n	84cec <_dtoa_r+0xcb4>
   84c9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84ca0:	9a04      	ldr	r2, [sp, #16]
   84ca2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   84ca6:	4413      	add	r3, r2
   84ca8:	f04f 0a00 	mov.w	sl, #0
   84cac:	4699      	mov	r9, r3
   84cae:	f8df b130 	ldr.w	fp, [pc, #304]	; 84de0 <_dtoa_r+0xda8>
   84cb2:	4652      	mov	r2, sl
   84cb4:	465b      	mov	r3, fp
   84cb6:	4630      	mov	r0, r6
   84cb8:	4639      	mov	r1, r7
   84cba:	f001 fd47 	bl	8674c <__aeabi_dmul>
   84cbe:	460f      	mov	r7, r1
   84cc0:	4606      	mov	r6, r0
   84cc2:	f001 fff3 	bl	86cac <__aeabi_d2iz>
   84cc6:	4680      	mov	r8, r0
   84cc8:	f001 fcda 	bl	86680 <__aeabi_i2d>
   84ccc:	4602      	mov	r2, r0
   84cce:	460b      	mov	r3, r1
   84cd0:	4630      	mov	r0, r6
   84cd2:	4639      	mov	r1, r7
   84cd4:	f001 fb86 	bl	863e4 <__aeabi_dsub>
   84cd8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84cdc:	f805 8b01 	strb.w	r8, [r5], #1
   84ce0:	454d      	cmp	r5, r9
   84ce2:	4606      	mov	r6, r0
   84ce4:	460f      	mov	r7, r1
   84ce6:	d1e4      	bne.n	84cb2 <_dtoa_r+0xc7a>
   84ce8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84cec:	2200      	movs	r2, #0
   84cee:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   84cf2:	4b3a      	ldr	r3, [pc, #232]	; (84ddc <_dtoa_r+0xda4>)
   84cf4:	f001 fb78 	bl	863e8 <__adddf3>
   84cf8:	4632      	mov	r2, r6
   84cfa:	463b      	mov	r3, r7
   84cfc:	f001 ff98 	bl	86c30 <__aeabi_dcmplt>
   84d00:	2800      	cmp	r0, #0
   84d02:	d046      	beq.n	84d92 <_dtoa_r+0xd5a>
   84d04:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84d06:	9302      	str	r3, [sp, #8]
   84d08:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84d0c:	f7ff bb42 	b.w	84394 <_dtoa_r+0x35c>
   84d10:	f04f 0800 	mov.w	r8, #0
   84d14:	4646      	mov	r6, r8
   84d16:	e6a8      	b.n	84a6a <_dtoa_r+0xa32>
   84d18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84d1a:	9a07      	ldr	r2, [sp, #28]
   84d1c:	1a9d      	subs	r5, r3, r2
   84d1e:	2300      	movs	r3, #0
   84d20:	f7ff bb70 	b.w	84404 <_dtoa_r+0x3cc>
   84d24:	9b18      	ldr	r3, [sp, #96]	; 0x60
   84d26:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84d28:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   84d2c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84d2e:	f7ff bb69 	b.w	84404 <_dtoa_r+0x3cc>
   84d32:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   84d36:	f04f 0a02 	mov.w	sl, #2
   84d3a:	e56d      	b.n	84818 <_dtoa_r+0x7e0>
   84d3c:	9b07      	ldr	r3, [sp, #28]
   84d3e:	2b00      	cmp	r3, #0
   84d40:	f43f aeb8 	beq.w	84ab4 <_dtoa_r+0xa7c>
   84d44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d46:	2b00      	cmp	r3, #0
   84d48:	f77f aede 	ble.w	84b08 <_dtoa_r+0xad0>
   84d4c:	2200      	movs	r2, #0
   84d4e:	4b24      	ldr	r3, [pc, #144]	; (84de0 <_dtoa_r+0xda8>)
   84d50:	4638      	mov	r0, r7
   84d52:	4641      	mov	r1, r8
   84d54:	f001 fcfa 	bl	8674c <__aeabi_dmul>
   84d58:	4607      	mov	r7, r0
   84d5a:	4688      	mov	r8, r1
   84d5c:	f10a 0001 	add.w	r0, sl, #1
   84d60:	f001 fc8e 	bl	86680 <__aeabi_i2d>
   84d64:	463a      	mov	r2, r7
   84d66:	4643      	mov	r3, r8
   84d68:	f001 fcf0 	bl	8674c <__aeabi_dmul>
   84d6c:	2200      	movs	r2, #0
   84d6e:	4b17      	ldr	r3, [pc, #92]	; (84dcc <_dtoa_r+0xd94>)
   84d70:	f001 fb3a 	bl	863e8 <__adddf3>
   84d74:	9a02      	ldr	r2, [sp, #8]
   84d76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d78:	3a01      	subs	r2, #1
   84d7a:	4605      	mov	r5, r0
   84d7c:	9215      	str	r2, [sp, #84]	; 0x54
   84d7e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84d82:	9312      	str	r3, [sp, #72]	; 0x48
   84d84:	e569      	b.n	8485a <_dtoa_r+0x822>
   84d86:	2239      	movs	r2, #57	; 0x39
   84d88:	46b3      	mov	fp, r6
   84d8a:	703a      	strb	r2, [r7, #0]
   84d8c:	9e08      	ldr	r6, [sp, #32]
   84d8e:	1c7d      	adds	r5, r7, #1
   84d90:	e4bf      	b.n	84712 <_dtoa_r+0x6da>
   84d92:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   84d96:	2000      	movs	r0, #0
   84d98:	4910      	ldr	r1, [pc, #64]	; (84ddc <_dtoa_r+0xda4>)
   84d9a:	f001 fb23 	bl	863e4 <__aeabi_dsub>
   84d9e:	4632      	mov	r2, r6
   84da0:	463b      	mov	r3, r7
   84da2:	f001 ff63 	bl	86c6c <__aeabi_dcmpgt>
   84da6:	b908      	cbnz	r0, 84dac <_dtoa_r+0xd74>
   84da8:	e6ae      	b.n	84b08 <_dtoa_r+0xad0>
   84daa:	4615      	mov	r5, r2
   84dac:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84db0:	1e6a      	subs	r2, r5, #1
   84db2:	2b30      	cmp	r3, #48	; 0x30
   84db4:	d0f9      	beq.n	84daa <_dtoa_r+0xd72>
   84db6:	e5d7      	b.n	84968 <_dtoa_r+0x930>
   84db8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84dbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84dbe:	9302      	str	r3, [sp, #8]
   84dc0:	f7ff bae8 	b.w	84394 <_dtoa_r+0x35c>
   84dc4:	970c      	str	r7, [sp, #48]	; 0x30
   84dc6:	f7ff bba7 	b.w	84518 <_dtoa_r+0x4e0>
   84dca:	bf00      	nop
   84dcc:	401c0000 	.word	0x401c0000
   84dd0:	40140000 	.word	0x40140000
   84dd4:	000870f0 	.word	0x000870f0
   84dd8:	000870c8 	.word	0x000870c8
   84ddc:	3fe00000 	.word	0x3fe00000
   84de0:	40240000 	.word	0x40240000
   84de4:	2b39      	cmp	r3, #57	; 0x39
   84de6:	f8cd b020 	str.w	fp, [sp, #32]
   84dea:	46d0      	mov	r8, sl
   84dec:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84df0:	469a      	mov	sl, r3
   84df2:	d0c8      	beq.n	84d86 <_dtoa_r+0xd4e>
   84df4:	f1bb 0f00 	cmp.w	fp, #0
   84df8:	f73f aec0 	bgt.w	84b7c <_dtoa_r+0xb44>
   84dfc:	e6c0      	b.n	84b80 <_dtoa_r+0xb48>
   84dfe:	f47f aebf 	bne.w	84b80 <_dtoa_r+0xb48>
   84e02:	f01a 0f01 	tst.w	sl, #1
   84e06:	f43f aebb 	beq.w	84b80 <_dtoa_r+0xb48>
   84e0a:	e6b3      	b.n	84b74 <_dtoa_r+0xb3c>
   84e0c:	f04f 0800 	mov.w	r8, #0
   84e10:	4646      	mov	r6, r8
   84e12:	e5e8      	b.n	849e6 <_dtoa_r+0x9ae>
   84e14:	4631      	mov	r1, r6
   84e16:	2300      	movs	r3, #0
   84e18:	220a      	movs	r2, #10
   84e1a:	4620      	mov	r0, r4
   84e1c:	f000 fd2e 	bl	8587c <__multadd>
   84e20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e22:	4606      	mov	r6, r0
   84e24:	2b00      	cmp	r3, #0
   84e26:	dd07      	ble.n	84e38 <_dtoa_r+0xe00>
   84e28:	9307      	str	r3, [sp, #28]
   84e2a:	f7ff bbab 	b.w	84584 <_dtoa_r+0x54c>
   84e2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84e30:	2b02      	cmp	r3, #2
   84e32:	dc1f      	bgt.n	84e74 <_dtoa_r+0xe3c>
   84e34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e36:	e43c      	b.n	846b2 <_dtoa_r+0x67a>
   84e38:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84e3a:	2b02      	cmp	r3, #2
   84e3c:	dc1a      	bgt.n	84e74 <_dtoa_r+0xe3c>
   84e3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e40:	e7f2      	b.n	84e28 <_dtoa_r+0xdf0>
   84e42:	f43f ab81 	beq.w	84548 <_dtoa_r+0x510>
   84e46:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   84e4a:	e411      	b.n	84670 <_dtoa_r+0x638>
   84e4c:	2500      	movs	r5, #0
   84e4e:	4620      	mov	r0, r4
   84e50:	6465      	str	r5, [r4, #68]	; 0x44
   84e52:	4629      	mov	r1, r5
   84e54:	f000 fce2 	bl	8581c <_Balloc>
   84e58:	f04f 33ff 	mov.w	r3, #4294967295
   84e5c:	9307      	str	r3, [sp, #28]
   84e5e:	930f      	str	r3, [sp, #60]	; 0x3c
   84e60:	2301      	movs	r3, #1
   84e62:	9004      	str	r0, [sp, #16]
   84e64:	9525      	str	r5, [sp, #148]	; 0x94
   84e66:	6420      	str	r0, [r4, #64]	; 0x40
   84e68:	930b      	str	r3, [sp, #44]	; 0x2c
   84e6a:	f7ff b9e0 	b.w	8422e <_dtoa_r+0x1f6>
   84e6e:	2501      	movs	r5, #1
   84e70:	f7ff b9a8 	b.w	841c4 <_dtoa_r+0x18c>
   84e74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e76:	9307      	str	r3, [sp, #28]
   84e78:	e5e8      	b.n	84a4c <_dtoa_r+0xa14>
   84e7a:	bf00      	nop

00084e7c <__libc_fini_array>:
   84e7c:	b538      	push	{r3, r4, r5, lr}
   84e7e:	4c0a      	ldr	r4, [pc, #40]	; (84ea8 <__libc_fini_array+0x2c>)
   84e80:	4d0a      	ldr	r5, [pc, #40]	; (84eac <__libc_fini_array+0x30>)
   84e82:	1b64      	subs	r4, r4, r5
   84e84:	10a4      	asrs	r4, r4, #2
   84e86:	d00a      	beq.n	84e9e <__libc_fini_array+0x22>
   84e88:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   84e8c:	3b01      	subs	r3, #1
   84e8e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   84e92:	3c01      	subs	r4, #1
   84e94:	f855 3904 	ldr.w	r3, [r5], #-4
   84e98:	4798      	blx	r3
   84e9a:	2c00      	cmp	r4, #0
   84e9c:	d1f9      	bne.n	84e92 <__libc_fini_array+0x16>
   84e9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   84ea2:	f002 ba1b 	b.w	872dc <_fini>
   84ea6:	bf00      	nop
   84ea8:	000872ec 	.word	0x000872ec
   84eac:	000872e8 	.word	0x000872e8

00084eb0 <_malloc_trim_r>:
   84eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84eb2:	460c      	mov	r4, r1
   84eb4:	4f23      	ldr	r7, [pc, #140]	; (84f44 <_malloc_trim_r+0x94>)
   84eb6:	4606      	mov	r6, r0
   84eb8:	f000 fca4 	bl	85804 <__malloc_lock>
   84ebc:	68bb      	ldr	r3, [r7, #8]
   84ebe:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84ec2:	685d      	ldr	r5, [r3, #4]
   84ec4:	310f      	adds	r1, #15
   84ec6:	f025 0503 	bic.w	r5, r5, #3
   84eca:	4429      	add	r1, r5
   84ecc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84ed0:	f021 010f 	bic.w	r1, r1, #15
   84ed4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84ed8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84edc:	db07      	blt.n	84eee <_malloc_trim_r+0x3e>
   84ede:	2100      	movs	r1, #0
   84ee0:	4630      	mov	r0, r6
   84ee2:	f001 f94d 	bl	86180 <_sbrk_r>
   84ee6:	68bb      	ldr	r3, [r7, #8]
   84ee8:	442b      	add	r3, r5
   84eea:	4298      	cmp	r0, r3
   84eec:	d004      	beq.n	84ef8 <_malloc_trim_r+0x48>
   84eee:	4630      	mov	r0, r6
   84ef0:	f000 fc8e 	bl	85810 <__malloc_unlock>
   84ef4:	2000      	movs	r0, #0
   84ef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84ef8:	4261      	negs	r1, r4
   84efa:	4630      	mov	r0, r6
   84efc:	f001 f940 	bl	86180 <_sbrk_r>
   84f00:	3001      	adds	r0, #1
   84f02:	d00d      	beq.n	84f20 <_malloc_trim_r+0x70>
   84f04:	4b10      	ldr	r3, [pc, #64]	; (84f48 <_malloc_trim_r+0x98>)
   84f06:	68ba      	ldr	r2, [r7, #8]
   84f08:	6819      	ldr	r1, [r3, #0]
   84f0a:	1b2d      	subs	r5, r5, r4
   84f0c:	f045 0501 	orr.w	r5, r5, #1
   84f10:	4630      	mov	r0, r6
   84f12:	1b09      	subs	r1, r1, r4
   84f14:	6055      	str	r5, [r2, #4]
   84f16:	6019      	str	r1, [r3, #0]
   84f18:	f000 fc7a 	bl	85810 <__malloc_unlock>
   84f1c:	2001      	movs	r0, #1
   84f1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84f20:	2100      	movs	r1, #0
   84f22:	4630      	mov	r0, r6
   84f24:	f001 f92c 	bl	86180 <_sbrk_r>
   84f28:	68ba      	ldr	r2, [r7, #8]
   84f2a:	1a83      	subs	r3, r0, r2
   84f2c:	2b0f      	cmp	r3, #15
   84f2e:	ddde      	ble.n	84eee <_malloc_trim_r+0x3e>
   84f30:	4c06      	ldr	r4, [pc, #24]	; (84f4c <_malloc_trim_r+0x9c>)
   84f32:	4905      	ldr	r1, [pc, #20]	; (84f48 <_malloc_trim_r+0x98>)
   84f34:	6824      	ldr	r4, [r4, #0]
   84f36:	f043 0301 	orr.w	r3, r3, #1
   84f3a:	1b00      	subs	r0, r0, r4
   84f3c:	6053      	str	r3, [r2, #4]
   84f3e:	6008      	str	r0, [r1, #0]
   84f40:	e7d5      	b.n	84eee <_malloc_trim_r+0x3e>
   84f42:	bf00      	nop
   84f44:	20070780 	.word	0x20070780
   84f48:	20070dd0 	.word	0x20070dd0
   84f4c:	20070b88 	.word	0x20070b88

00084f50 <_free_r>:
   84f50:	2900      	cmp	r1, #0
   84f52:	d044      	beq.n	84fde <_free_r+0x8e>
   84f54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84f58:	460d      	mov	r5, r1
   84f5a:	4680      	mov	r8, r0
   84f5c:	f000 fc52 	bl	85804 <__malloc_lock>
   84f60:	f855 7c04 	ldr.w	r7, [r5, #-4]
   84f64:	4969      	ldr	r1, [pc, #420]	; (8510c <_free_r+0x1bc>)
   84f66:	f1a5 0408 	sub.w	r4, r5, #8
   84f6a:	f027 0301 	bic.w	r3, r7, #1
   84f6e:	18e2      	adds	r2, r4, r3
   84f70:	688e      	ldr	r6, [r1, #8]
   84f72:	6850      	ldr	r0, [r2, #4]
   84f74:	42b2      	cmp	r2, r6
   84f76:	f020 0003 	bic.w	r0, r0, #3
   84f7a:	d05e      	beq.n	8503a <_free_r+0xea>
   84f7c:	07fe      	lsls	r6, r7, #31
   84f7e:	6050      	str	r0, [r2, #4]
   84f80:	d40b      	bmi.n	84f9a <_free_r+0x4a>
   84f82:	f855 7c08 	ldr.w	r7, [r5, #-8]
   84f86:	f101 0e08 	add.w	lr, r1, #8
   84f8a:	1be4      	subs	r4, r4, r7
   84f8c:	68a5      	ldr	r5, [r4, #8]
   84f8e:	443b      	add	r3, r7
   84f90:	4575      	cmp	r5, lr
   84f92:	d06d      	beq.n	85070 <_free_r+0x120>
   84f94:	68e7      	ldr	r7, [r4, #12]
   84f96:	60ef      	str	r7, [r5, #12]
   84f98:	60bd      	str	r5, [r7, #8]
   84f9a:	1815      	adds	r5, r2, r0
   84f9c:	686d      	ldr	r5, [r5, #4]
   84f9e:	07ed      	lsls	r5, r5, #31
   84fa0:	d53e      	bpl.n	85020 <_free_r+0xd0>
   84fa2:	f043 0201 	orr.w	r2, r3, #1
   84fa6:	6062      	str	r2, [r4, #4]
   84fa8:	50e3      	str	r3, [r4, r3]
   84faa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84fae:	d217      	bcs.n	84fe0 <_free_r+0x90>
   84fb0:	2201      	movs	r2, #1
   84fb2:	08db      	lsrs	r3, r3, #3
   84fb4:	1098      	asrs	r0, r3, #2
   84fb6:	684d      	ldr	r5, [r1, #4]
   84fb8:	4413      	add	r3, r2
   84fba:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   84fbe:	4082      	lsls	r2, r0
   84fc0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   84fc4:	432a      	orrs	r2, r5
   84fc6:	3808      	subs	r0, #8
   84fc8:	60e0      	str	r0, [r4, #12]
   84fca:	60a7      	str	r7, [r4, #8]
   84fcc:	604a      	str	r2, [r1, #4]
   84fce:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   84fd2:	60fc      	str	r4, [r7, #12]
   84fd4:	4640      	mov	r0, r8
   84fd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84fda:	f000 bc19 	b.w	85810 <__malloc_unlock>
   84fde:	4770      	bx	lr
   84fe0:	0a5a      	lsrs	r2, r3, #9
   84fe2:	2a04      	cmp	r2, #4
   84fe4:	d852      	bhi.n	8508c <_free_r+0x13c>
   84fe6:	099a      	lsrs	r2, r3, #6
   84fe8:	f102 0739 	add.w	r7, r2, #57	; 0x39
   84fec:	00ff      	lsls	r7, r7, #3
   84fee:	f102 0538 	add.w	r5, r2, #56	; 0x38
   84ff2:	19c8      	adds	r0, r1, r7
   84ff4:	59ca      	ldr	r2, [r1, r7]
   84ff6:	3808      	subs	r0, #8
   84ff8:	4290      	cmp	r0, r2
   84ffa:	d04f      	beq.n	8509c <_free_r+0x14c>
   84ffc:	6851      	ldr	r1, [r2, #4]
   84ffe:	f021 0103 	bic.w	r1, r1, #3
   85002:	428b      	cmp	r3, r1
   85004:	d232      	bcs.n	8506c <_free_r+0x11c>
   85006:	6892      	ldr	r2, [r2, #8]
   85008:	4290      	cmp	r0, r2
   8500a:	d1f7      	bne.n	84ffc <_free_r+0xac>
   8500c:	68c3      	ldr	r3, [r0, #12]
   8500e:	60a0      	str	r0, [r4, #8]
   85010:	60e3      	str	r3, [r4, #12]
   85012:	609c      	str	r4, [r3, #8]
   85014:	60c4      	str	r4, [r0, #12]
   85016:	4640      	mov	r0, r8
   85018:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8501c:	f000 bbf8 	b.w	85810 <__malloc_unlock>
   85020:	6895      	ldr	r5, [r2, #8]
   85022:	4f3b      	ldr	r7, [pc, #236]	; (85110 <_free_r+0x1c0>)
   85024:	4403      	add	r3, r0
   85026:	42bd      	cmp	r5, r7
   85028:	d040      	beq.n	850ac <_free_r+0x15c>
   8502a:	68d0      	ldr	r0, [r2, #12]
   8502c:	f043 0201 	orr.w	r2, r3, #1
   85030:	60e8      	str	r0, [r5, #12]
   85032:	6085      	str	r5, [r0, #8]
   85034:	6062      	str	r2, [r4, #4]
   85036:	50e3      	str	r3, [r4, r3]
   85038:	e7b7      	b.n	84faa <_free_r+0x5a>
   8503a:	07ff      	lsls	r7, r7, #31
   8503c:	4403      	add	r3, r0
   8503e:	d407      	bmi.n	85050 <_free_r+0x100>
   85040:	f855 5c08 	ldr.w	r5, [r5, #-8]
   85044:	1b64      	subs	r4, r4, r5
   85046:	68e2      	ldr	r2, [r4, #12]
   85048:	68a0      	ldr	r0, [r4, #8]
   8504a:	442b      	add	r3, r5
   8504c:	60c2      	str	r2, [r0, #12]
   8504e:	6090      	str	r0, [r2, #8]
   85050:	4a30      	ldr	r2, [pc, #192]	; (85114 <_free_r+0x1c4>)
   85052:	f043 0001 	orr.w	r0, r3, #1
   85056:	6812      	ldr	r2, [r2, #0]
   85058:	6060      	str	r0, [r4, #4]
   8505a:	4293      	cmp	r3, r2
   8505c:	608c      	str	r4, [r1, #8]
   8505e:	d3b9      	bcc.n	84fd4 <_free_r+0x84>
   85060:	4b2d      	ldr	r3, [pc, #180]	; (85118 <_free_r+0x1c8>)
   85062:	4640      	mov	r0, r8
   85064:	6819      	ldr	r1, [r3, #0]
   85066:	f7ff ff23 	bl	84eb0 <_malloc_trim_r>
   8506a:	e7b3      	b.n	84fd4 <_free_r+0x84>
   8506c:	4610      	mov	r0, r2
   8506e:	e7cd      	b.n	8500c <_free_r+0xbc>
   85070:	1811      	adds	r1, r2, r0
   85072:	6849      	ldr	r1, [r1, #4]
   85074:	07c9      	lsls	r1, r1, #31
   85076:	d444      	bmi.n	85102 <_free_r+0x1b2>
   85078:	6891      	ldr	r1, [r2, #8]
   8507a:	4403      	add	r3, r0
   8507c:	68d2      	ldr	r2, [r2, #12]
   8507e:	f043 0001 	orr.w	r0, r3, #1
   85082:	60ca      	str	r2, [r1, #12]
   85084:	6091      	str	r1, [r2, #8]
   85086:	6060      	str	r0, [r4, #4]
   85088:	50e3      	str	r3, [r4, r3]
   8508a:	e7a3      	b.n	84fd4 <_free_r+0x84>
   8508c:	2a14      	cmp	r2, #20
   8508e:	d816      	bhi.n	850be <_free_r+0x16e>
   85090:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   85094:	00ff      	lsls	r7, r7, #3
   85096:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8509a:	e7aa      	b.n	84ff2 <_free_r+0xa2>
   8509c:	2301      	movs	r3, #1
   8509e:	10aa      	asrs	r2, r5, #2
   850a0:	684d      	ldr	r5, [r1, #4]
   850a2:	4093      	lsls	r3, r2
   850a4:	432b      	orrs	r3, r5
   850a6:	604b      	str	r3, [r1, #4]
   850a8:	4603      	mov	r3, r0
   850aa:	e7b0      	b.n	8500e <_free_r+0xbe>
   850ac:	f043 0201 	orr.w	r2, r3, #1
   850b0:	614c      	str	r4, [r1, #20]
   850b2:	610c      	str	r4, [r1, #16]
   850b4:	60e5      	str	r5, [r4, #12]
   850b6:	60a5      	str	r5, [r4, #8]
   850b8:	6062      	str	r2, [r4, #4]
   850ba:	50e3      	str	r3, [r4, r3]
   850bc:	e78a      	b.n	84fd4 <_free_r+0x84>
   850be:	2a54      	cmp	r2, #84	; 0x54
   850c0:	d806      	bhi.n	850d0 <_free_r+0x180>
   850c2:	0b1a      	lsrs	r2, r3, #12
   850c4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   850c8:	00ff      	lsls	r7, r7, #3
   850ca:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   850ce:	e790      	b.n	84ff2 <_free_r+0xa2>
   850d0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   850d4:	d806      	bhi.n	850e4 <_free_r+0x194>
   850d6:	0bda      	lsrs	r2, r3, #15
   850d8:	f102 0778 	add.w	r7, r2, #120	; 0x78
   850dc:	00ff      	lsls	r7, r7, #3
   850de:	f102 0577 	add.w	r5, r2, #119	; 0x77
   850e2:	e786      	b.n	84ff2 <_free_r+0xa2>
   850e4:	f240 5054 	movw	r0, #1364	; 0x554
   850e8:	4282      	cmp	r2, r0
   850ea:	d806      	bhi.n	850fa <_free_r+0x1aa>
   850ec:	0c9a      	lsrs	r2, r3, #18
   850ee:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   850f2:	00ff      	lsls	r7, r7, #3
   850f4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   850f8:	e77b      	b.n	84ff2 <_free_r+0xa2>
   850fa:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   850fe:	257e      	movs	r5, #126	; 0x7e
   85100:	e777      	b.n	84ff2 <_free_r+0xa2>
   85102:	f043 0101 	orr.w	r1, r3, #1
   85106:	6061      	str	r1, [r4, #4]
   85108:	6013      	str	r3, [r2, #0]
   8510a:	e763      	b.n	84fd4 <_free_r+0x84>
   8510c:	20070780 	.word	0x20070780
   85110:	20070788 	.word	0x20070788
   85114:	20070b8c 	.word	0x20070b8c
   85118:	20070e00 	.word	0x20070e00

0008511c <_localeconv_r>:
   8511c:	4a04      	ldr	r2, [pc, #16]	; (85130 <_localeconv_r+0x14>)
   8511e:	4b05      	ldr	r3, [pc, #20]	; (85134 <_localeconv_r+0x18>)
   85120:	6812      	ldr	r2, [r2, #0]
   85122:	6b50      	ldr	r0, [r2, #52]	; 0x34
   85124:	2800      	cmp	r0, #0
   85126:	bf08      	it	eq
   85128:	4618      	moveq	r0, r3
   8512a:	30f0      	adds	r0, #240	; 0xf0
   8512c:	4770      	bx	lr
   8512e:	bf00      	nop
   85130:	200701e0 	.word	0x200701e0
   85134:	20070614 	.word	0x20070614

00085138 <__retarget_lock_acquire_recursive>:
   85138:	4770      	bx	lr
   8513a:	bf00      	nop

0008513c <__retarget_lock_release_recursive>:
   8513c:	4770      	bx	lr
   8513e:	bf00      	nop

00085140 <_malloc_r>:
   85140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85144:	f101 060b 	add.w	r6, r1, #11
   85148:	2e16      	cmp	r6, #22
   8514a:	b083      	sub	sp, #12
   8514c:	4605      	mov	r5, r0
   8514e:	f240 809e 	bls.w	8528e <_malloc_r+0x14e>
   85152:	f036 0607 	bics.w	r6, r6, #7
   85156:	f100 80bd 	bmi.w	852d4 <_malloc_r+0x194>
   8515a:	42b1      	cmp	r1, r6
   8515c:	f200 80ba 	bhi.w	852d4 <_malloc_r+0x194>
   85160:	f000 fb50 	bl	85804 <__malloc_lock>
   85164:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   85168:	f0c0 8285 	bcc.w	85676 <_malloc_r+0x536>
   8516c:	0a73      	lsrs	r3, r6, #9
   8516e:	f000 80b8 	beq.w	852e2 <_malloc_r+0x1a2>
   85172:	2b04      	cmp	r3, #4
   85174:	f200 816c 	bhi.w	85450 <_malloc_r+0x310>
   85178:	09b3      	lsrs	r3, r6, #6
   8517a:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8517e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   85182:	00c1      	lsls	r1, r0, #3
   85184:	4fb8      	ldr	r7, [pc, #736]	; (85468 <_malloc_r+0x328>)
   85186:	4439      	add	r1, r7
   85188:	684c      	ldr	r4, [r1, #4]
   8518a:	3908      	subs	r1, #8
   8518c:	42a1      	cmp	r1, r4
   8518e:	d106      	bne.n	8519e <_malloc_r+0x5e>
   85190:	e00c      	b.n	851ac <_malloc_r+0x6c>
   85192:	2a00      	cmp	r2, #0
   85194:	f280 80ab 	bge.w	852ee <_malloc_r+0x1ae>
   85198:	68e4      	ldr	r4, [r4, #12]
   8519a:	42a1      	cmp	r1, r4
   8519c:	d006      	beq.n	851ac <_malloc_r+0x6c>
   8519e:	6863      	ldr	r3, [r4, #4]
   851a0:	f023 0303 	bic.w	r3, r3, #3
   851a4:	1b9a      	subs	r2, r3, r6
   851a6:	2a0f      	cmp	r2, #15
   851a8:	ddf3      	ble.n	85192 <_malloc_r+0x52>
   851aa:	4670      	mov	r0, lr
   851ac:	693c      	ldr	r4, [r7, #16]
   851ae:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 8547c <_malloc_r+0x33c>
   851b2:	4574      	cmp	r4, lr
   851b4:	f000 819e 	beq.w	854f4 <_malloc_r+0x3b4>
   851b8:	6863      	ldr	r3, [r4, #4]
   851ba:	f023 0303 	bic.w	r3, r3, #3
   851be:	1b9a      	subs	r2, r3, r6
   851c0:	2a0f      	cmp	r2, #15
   851c2:	f300 8183 	bgt.w	854cc <_malloc_r+0x38c>
   851c6:	2a00      	cmp	r2, #0
   851c8:	f8c7 e014 	str.w	lr, [r7, #20]
   851cc:	f8c7 e010 	str.w	lr, [r7, #16]
   851d0:	f280 8091 	bge.w	852f6 <_malloc_r+0x1b6>
   851d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   851d8:	f080 8154 	bcs.w	85484 <_malloc_r+0x344>
   851dc:	2201      	movs	r2, #1
   851de:	08db      	lsrs	r3, r3, #3
   851e0:	6879      	ldr	r1, [r7, #4]
   851e2:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   851e6:	4413      	add	r3, r2
   851e8:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   851ec:	fa02 f20c 	lsl.w	r2, r2, ip
   851f0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   851f4:	430a      	orrs	r2, r1
   851f6:	f1ac 0108 	sub.w	r1, ip, #8
   851fa:	60e1      	str	r1, [r4, #12]
   851fc:	f8c4 8008 	str.w	r8, [r4, #8]
   85200:	607a      	str	r2, [r7, #4]
   85202:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   85206:	f8c8 400c 	str.w	r4, [r8, #12]
   8520a:	2401      	movs	r4, #1
   8520c:	1083      	asrs	r3, r0, #2
   8520e:	409c      	lsls	r4, r3
   85210:	4294      	cmp	r4, r2
   85212:	d87d      	bhi.n	85310 <_malloc_r+0x1d0>
   85214:	4214      	tst	r4, r2
   85216:	d106      	bne.n	85226 <_malloc_r+0xe6>
   85218:	f020 0003 	bic.w	r0, r0, #3
   8521c:	0064      	lsls	r4, r4, #1
   8521e:	4214      	tst	r4, r2
   85220:	f100 0004 	add.w	r0, r0, #4
   85224:	d0fa      	beq.n	8521c <_malloc_r+0xdc>
   85226:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   8522a:	46cc      	mov	ip, r9
   8522c:	4680      	mov	r8, r0
   8522e:	f8dc 300c 	ldr.w	r3, [ip, #12]
   85232:	459c      	cmp	ip, r3
   85234:	d107      	bne.n	85246 <_malloc_r+0x106>
   85236:	e15f      	b.n	854f8 <_malloc_r+0x3b8>
   85238:	2a00      	cmp	r2, #0
   8523a:	f280 816d 	bge.w	85518 <_malloc_r+0x3d8>
   8523e:	68db      	ldr	r3, [r3, #12]
   85240:	459c      	cmp	ip, r3
   85242:	f000 8159 	beq.w	854f8 <_malloc_r+0x3b8>
   85246:	6859      	ldr	r1, [r3, #4]
   85248:	f021 0103 	bic.w	r1, r1, #3
   8524c:	1b8a      	subs	r2, r1, r6
   8524e:	2a0f      	cmp	r2, #15
   85250:	ddf2      	ble.n	85238 <_malloc_r+0xf8>
   85252:	68dc      	ldr	r4, [r3, #12]
   85254:	f8d3 c008 	ldr.w	ip, [r3, #8]
   85258:	f046 0801 	orr.w	r8, r6, #1
   8525c:	4628      	mov	r0, r5
   8525e:	441e      	add	r6, r3
   85260:	f042 0501 	orr.w	r5, r2, #1
   85264:	f8c3 8004 	str.w	r8, [r3, #4]
   85268:	f8cc 400c 	str.w	r4, [ip, #12]
   8526c:	f8c4 c008 	str.w	ip, [r4, #8]
   85270:	617e      	str	r6, [r7, #20]
   85272:	613e      	str	r6, [r7, #16]
   85274:	f8c6 e00c 	str.w	lr, [r6, #12]
   85278:	f8c6 e008 	str.w	lr, [r6, #8]
   8527c:	6075      	str	r5, [r6, #4]
   8527e:	505a      	str	r2, [r3, r1]
   85280:	9300      	str	r3, [sp, #0]
   85282:	f000 fac5 	bl	85810 <__malloc_unlock>
   85286:	9b00      	ldr	r3, [sp, #0]
   85288:	f103 0408 	add.w	r4, r3, #8
   8528c:	e01e      	b.n	852cc <_malloc_r+0x18c>
   8528e:	2910      	cmp	r1, #16
   85290:	d820      	bhi.n	852d4 <_malloc_r+0x194>
   85292:	f000 fab7 	bl	85804 <__malloc_lock>
   85296:	2610      	movs	r6, #16
   85298:	2318      	movs	r3, #24
   8529a:	2002      	movs	r0, #2
   8529c:	4f72      	ldr	r7, [pc, #456]	; (85468 <_malloc_r+0x328>)
   8529e:	443b      	add	r3, r7
   852a0:	685c      	ldr	r4, [r3, #4]
   852a2:	f1a3 0208 	sub.w	r2, r3, #8
   852a6:	4294      	cmp	r4, r2
   852a8:	f000 812f 	beq.w	8550a <_malloc_r+0x3ca>
   852ac:	6863      	ldr	r3, [r4, #4]
   852ae:	68e1      	ldr	r1, [r4, #12]
   852b0:	f023 0303 	bic.w	r3, r3, #3
   852b4:	4423      	add	r3, r4
   852b6:	685a      	ldr	r2, [r3, #4]
   852b8:	68a6      	ldr	r6, [r4, #8]
   852ba:	f042 0201 	orr.w	r2, r2, #1
   852be:	60f1      	str	r1, [r6, #12]
   852c0:	4628      	mov	r0, r5
   852c2:	608e      	str	r6, [r1, #8]
   852c4:	605a      	str	r2, [r3, #4]
   852c6:	f000 faa3 	bl	85810 <__malloc_unlock>
   852ca:	3408      	adds	r4, #8
   852cc:	4620      	mov	r0, r4
   852ce:	b003      	add	sp, #12
   852d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   852d4:	2400      	movs	r4, #0
   852d6:	230c      	movs	r3, #12
   852d8:	4620      	mov	r0, r4
   852da:	602b      	str	r3, [r5, #0]
   852dc:	b003      	add	sp, #12
   852de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   852e2:	2040      	movs	r0, #64	; 0x40
   852e4:	f44f 7100 	mov.w	r1, #512	; 0x200
   852e8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   852ec:	e74a      	b.n	85184 <_malloc_r+0x44>
   852ee:	4423      	add	r3, r4
   852f0:	685a      	ldr	r2, [r3, #4]
   852f2:	68e1      	ldr	r1, [r4, #12]
   852f4:	e7e0      	b.n	852b8 <_malloc_r+0x178>
   852f6:	4423      	add	r3, r4
   852f8:	685a      	ldr	r2, [r3, #4]
   852fa:	4628      	mov	r0, r5
   852fc:	f042 0201 	orr.w	r2, r2, #1
   85300:	605a      	str	r2, [r3, #4]
   85302:	3408      	adds	r4, #8
   85304:	f000 fa84 	bl	85810 <__malloc_unlock>
   85308:	4620      	mov	r0, r4
   8530a:	b003      	add	sp, #12
   8530c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85310:	68bc      	ldr	r4, [r7, #8]
   85312:	6863      	ldr	r3, [r4, #4]
   85314:	f023 0803 	bic.w	r8, r3, #3
   85318:	45b0      	cmp	r8, r6
   8531a:	d304      	bcc.n	85326 <_malloc_r+0x1e6>
   8531c:	eba8 0306 	sub.w	r3, r8, r6
   85320:	2b0f      	cmp	r3, #15
   85322:	f300 8085 	bgt.w	85430 <_malloc_r+0x2f0>
   85326:	f8df 9158 	ldr.w	r9, [pc, #344]	; 85480 <_malloc_r+0x340>
   8532a:	4b50      	ldr	r3, [pc, #320]	; (8546c <_malloc_r+0x32c>)
   8532c:	f8d9 2000 	ldr.w	r2, [r9]
   85330:	681b      	ldr	r3, [r3, #0]
   85332:	3201      	adds	r2, #1
   85334:	4433      	add	r3, r6
   85336:	eb04 0a08 	add.w	sl, r4, r8
   8533a:	f000 8154 	beq.w	855e6 <_malloc_r+0x4a6>
   8533e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   85342:	330f      	adds	r3, #15
   85344:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   85348:	f02b 0b0f 	bic.w	fp, fp, #15
   8534c:	4659      	mov	r1, fp
   8534e:	4628      	mov	r0, r5
   85350:	f000 ff16 	bl	86180 <_sbrk_r>
   85354:	1c41      	adds	r1, r0, #1
   85356:	4602      	mov	r2, r0
   85358:	f000 80fb 	beq.w	85552 <_malloc_r+0x412>
   8535c:	4582      	cmp	sl, r0
   8535e:	f200 80f6 	bhi.w	8554e <_malloc_r+0x40e>
   85362:	4b43      	ldr	r3, [pc, #268]	; (85470 <_malloc_r+0x330>)
   85364:	6819      	ldr	r1, [r3, #0]
   85366:	4459      	add	r1, fp
   85368:	6019      	str	r1, [r3, #0]
   8536a:	f000 814c 	beq.w	85606 <_malloc_r+0x4c6>
   8536e:	f8d9 0000 	ldr.w	r0, [r9]
   85372:	3001      	adds	r0, #1
   85374:	bf1b      	ittet	ne
   85376:	eba2 0a0a 	subne.w	sl, r2, sl
   8537a:	4451      	addne	r1, sl
   8537c:	f8c9 2000 	streq.w	r2, [r9]
   85380:	6019      	strne	r1, [r3, #0]
   85382:	f012 0107 	ands.w	r1, r2, #7
   85386:	f000 8114 	beq.w	855b2 <_malloc_r+0x472>
   8538a:	f1c1 0008 	rsb	r0, r1, #8
   8538e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   85392:	4402      	add	r2, r0
   85394:	3108      	adds	r1, #8
   85396:	eb02 090b 	add.w	r9, r2, fp
   8539a:	f3c9 090b 	ubfx	r9, r9, #0, #12
   8539e:	eba1 0909 	sub.w	r9, r1, r9
   853a2:	4649      	mov	r1, r9
   853a4:	4628      	mov	r0, r5
   853a6:	9301      	str	r3, [sp, #4]
   853a8:	9200      	str	r2, [sp, #0]
   853aa:	f000 fee9 	bl	86180 <_sbrk_r>
   853ae:	1c43      	adds	r3, r0, #1
   853b0:	e89d 000c 	ldmia.w	sp, {r2, r3}
   853b4:	f000 8142 	beq.w	8563c <_malloc_r+0x4fc>
   853b8:	1a80      	subs	r0, r0, r2
   853ba:	4448      	add	r0, r9
   853bc:	f040 0001 	orr.w	r0, r0, #1
   853c0:	6819      	ldr	r1, [r3, #0]
   853c2:	42bc      	cmp	r4, r7
   853c4:	4449      	add	r1, r9
   853c6:	60ba      	str	r2, [r7, #8]
   853c8:	6019      	str	r1, [r3, #0]
   853ca:	6050      	str	r0, [r2, #4]
   853cc:	d017      	beq.n	853fe <_malloc_r+0x2be>
   853ce:	f1b8 0f0f 	cmp.w	r8, #15
   853d2:	f240 80fa 	bls.w	855ca <_malloc_r+0x48a>
   853d6:	f04f 0c05 	mov.w	ip, #5
   853da:	6862      	ldr	r2, [r4, #4]
   853dc:	f1a8 000c 	sub.w	r0, r8, #12
   853e0:	f020 0007 	bic.w	r0, r0, #7
   853e4:	f002 0201 	and.w	r2, r2, #1
   853e8:	eb04 0e00 	add.w	lr, r4, r0
   853ec:	4302      	orrs	r2, r0
   853ee:	280f      	cmp	r0, #15
   853f0:	6062      	str	r2, [r4, #4]
   853f2:	f8ce c004 	str.w	ip, [lr, #4]
   853f6:	f8ce c008 	str.w	ip, [lr, #8]
   853fa:	f200 8116 	bhi.w	8562a <_malloc_r+0x4ea>
   853fe:	4b1d      	ldr	r3, [pc, #116]	; (85474 <_malloc_r+0x334>)
   85400:	68bc      	ldr	r4, [r7, #8]
   85402:	681a      	ldr	r2, [r3, #0]
   85404:	4291      	cmp	r1, r2
   85406:	bf88      	it	hi
   85408:	6019      	strhi	r1, [r3, #0]
   8540a:	4b1b      	ldr	r3, [pc, #108]	; (85478 <_malloc_r+0x338>)
   8540c:	681a      	ldr	r2, [r3, #0]
   8540e:	4291      	cmp	r1, r2
   85410:	6862      	ldr	r2, [r4, #4]
   85412:	bf88      	it	hi
   85414:	6019      	strhi	r1, [r3, #0]
   85416:	f022 0203 	bic.w	r2, r2, #3
   8541a:	4296      	cmp	r6, r2
   8541c:	eba2 0306 	sub.w	r3, r2, r6
   85420:	d801      	bhi.n	85426 <_malloc_r+0x2e6>
   85422:	2b0f      	cmp	r3, #15
   85424:	dc04      	bgt.n	85430 <_malloc_r+0x2f0>
   85426:	4628      	mov	r0, r5
   85428:	f000 f9f2 	bl	85810 <__malloc_unlock>
   8542c:	2400      	movs	r4, #0
   8542e:	e74d      	b.n	852cc <_malloc_r+0x18c>
   85430:	f046 0201 	orr.w	r2, r6, #1
   85434:	f043 0301 	orr.w	r3, r3, #1
   85438:	4426      	add	r6, r4
   8543a:	6062      	str	r2, [r4, #4]
   8543c:	4628      	mov	r0, r5
   8543e:	60be      	str	r6, [r7, #8]
   85440:	3408      	adds	r4, #8
   85442:	6073      	str	r3, [r6, #4]
   85444:	f000 f9e4 	bl	85810 <__malloc_unlock>
   85448:	4620      	mov	r0, r4
   8544a:	b003      	add	sp, #12
   8544c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85450:	2b14      	cmp	r3, #20
   85452:	d970      	bls.n	85536 <_malloc_r+0x3f6>
   85454:	2b54      	cmp	r3, #84	; 0x54
   85456:	f200 80a2 	bhi.w	8559e <_malloc_r+0x45e>
   8545a:	0b33      	lsrs	r3, r6, #12
   8545c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   85460:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   85464:	00c1      	lsls	r1, r0, #3
   85466:	e68d      	b.n	85184 <_malloc_r+0x44>
   85468:	20070780 	.word	0x20070780
   8546c:	20070e00 	.word	0x20070e00
   85470:	20070dd0 	.word	0x20070dd0
   85474:	20070df8 	.word	0x20070df8
   85478:	20070dfc 	.word	0x20070dfc
   8547c:	20070788 	.word	0x20070788
   85480:	20070b88 	.word	0x20070b88
   85484:	0a5a      	lsrs	r2, r3, #9
   85486:	2a04      	cmp	r2, #4
   85488:	d95b      	bls.n	85542 <_malloc_r+0x402>
   8548a:	2a14      	cmp	r2, #20
   8548c:	f200 80ae 	bhi.w	855ec <_malloc_r+0x4ac>
   85490:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   85494:	00c9      	lsls	r1, r1, #3
   85496:	325b      	adds	r2, #91	; 0x5b
   85498:	eb07 0c01 	add.w	ip, r7, r1
   8549c:	5879      	ldr	r1, [r7, r1]
   8549e:	f1ac 0c08 	sub.w	ip, ip, #8
   854a2:	458c      	cmp	ip, r1
   854a4:	f000 8088 	beq.w	855b8 <_malloc_r+0x478>
   854a8:	684a      	ldr	r2, [r1, #4]
   854aa:	f022 0203 	bic.w	r2, r2, #3
   854ae:	4293      	cmp	r3, r2
   854b0:	d273      	bcs.n	8559a <_malloc_r+0x45a>
   854b2:	6889      	ldr	r1, [r1, #8]
   854b4:	458c      	cmp	ip, r1
   854b6:	d1f7      	bne.n	854a8 <_malloc_r+0x368>
   854b8:	f8dc 300c 	ldr.w	r3, [ip, #12]
   854bc:	687a      	ldr	r2, [r7, #4]
   854be:	60e3      	str	r3, [r4, #12]
   854c0:	f8c4 c008 	str.w	ip, [r4, #8]
   854c4:	609c      	str	r4, [r3, #8]
   854c6:	f8cc 400c 	str.w	r4, [ip, #12]
   854ca:	e69e      	b.n	8520a <_malloc_r+0xca>
   854cc:	f046 0c01 	orr.w	ip, r6, #1
   854d0:	f042 0101 	orr.w	r1, r2, #1
   854d4:	4426      	add	r6, r4
   854d6:	f8c4 c004 	str.w	ip, [r4, #4]
   854da:	4628      	mov	r0, r5
   854dc:	617e      	str	r6, [r7, #20]
   854de:	613e      	str	r6, [r7, #16]
   854e0:	f8c6 e00c 	str.w	lr, [r6, #12]
   854e4:	f8c6 e008 	str.w	lr, [r6, #8]
   854e8:	6071      	str	r1, [r6, #4]
   854ea:	50e2      	str	r2, [r4, r3]
   854ec:	f000 f990 	bl	85810 <__malloc_unlock>
   854f0:	3408      	adds	r4, #8
   854f2:	e6eb      	b.n	852cc <_malloc_r+0x18c>
   854f4:	687a      	ldr	r2, [r7, #4]
   854f6:	e688      	b.n	8520a <_malloc_r+0xca>
   854f8:	f108 0801 	add.w	r8, r8, #1
   854fc:	f018 0f03 	tst.w	r8, #3
   85500:	f10c 0c08 	add.w	ip, ip, #8
   85504:	f47f ae93 	bne.w	8522e <_malloc_r+0xee>
   85508:	e02d      	b.n	85566 <_malloc_r+0x426>
   8550a:	68dc      	ldr	r4, [r3, #12]
   8550c:	42a3      	cmp	r3, r4
   8550e:	bf08      	it	eq
   85510:	3002      	addeq	r0, #2
   85512:	f43f ae4b 	beq.w	851ac <_malloc_r+0x6c>
   85516:	e6c9      	b.n	852ac <_malloc_r+0x16c>
   85518:	461c      	mov	r4, r3
   8551a:	4419      	add	r1, r3
   8551c:	684a      	ldr	r2, [r1, #4]
   8551e:	68db      	ldr	r3, [r3, #12]
   85520:	f854 6f08 	ldr.w	r6, [r4, #8]!
   85524:	f042 0201 	orr.w	r2, r2, #1
   85528:	604a      	str	r2, [r1, #4]
   8552a:	4628      	mov	r0, r5
   8552c:	60f3      	str	r3, [r6, #12]
   8552e:	609e      	str	r6, [r3, #8]
   85530:	f000 f96e 	bl	85810 <__malloc_unlock>
   85534:	e6ca      	b.n	852cc <_malloc_r+0x18c>
   85536:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8553a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8553e:	00c1      	lsls	r1, r0, #3
   85540:	e620      	b.n	85184 <_malloc_r+0x44>
   85542:	099a      	lsrs	r2, r3, #6
   85544:	f102 0139 	add.w	r1, r2, #57	; 0x39
   85548:	00c9      	lsls	r1, r1, #3
   8554a:	3238      	adds	r2, #56	; 0x38
   8554c:	e7a4      	b.n	85498 <_malloc_r+0x358>
   8554e:	42bc      	cmp	r4, r7
   85550:	d054      	beq.n	855fc <_malloc_r+0x4bc>
   85552:	68bc      	ldr	r4, [r7, #8]
   85554:	6862      	ldr	r2, [r4, #4]
   85556:	f022 0203 	bic.w	r2, r2, #3
   8555a:	e75e      	b.n	8541a <_malloc_r+0x2da>
   8555c:	f859 3908 	ldr.w	r3, [r9], #-8
   85560:	4599      	cmp	r9, r3
   85562:	f040 8086 	bne.w	85672 <_malloc_r+0x532>
   85566:	f010 0f03 	tst.w	r0, #3
   8556a:	f100 30ff 	add.w	r0, r0, #4294967295
   8556e:	d1f5      	bne.n	8555c <_malloc_r+0x41c>
   85570:	687b      	ldr	r3, [r7, #4]
   85572:	ea23 0304 	bic.w	r3, r3, r4
   85576:	607b      	str	r3, [r7, #4]
   85578:	0064      	lsls	r4, r4, #1
   8557a:	429c      	cmp	r4, r3
   8557c:	f63f aec8 	bhi.w	85310 <_malloc_r+0x1d0>
   85580:	2c00      	cmp	r4, #0
   85582:	f43f aec5 	beq.w	85310 <_malloc_r+0x1d0>
   85586:	421c      	tst	r4, r3
   85588:	4640      	mov	r0, r8
   8558a:	f47f ae4c 	bne.w	85226 <_malloc_r+0xe6>
   8558e:	0064      	lsls	r4, r4, #1
   85590:	421c      	tst	r4, r3
   85592:	f100 0004 	add.w	r0, r0, #4
   85596:	d0fa      	beq.n	8558e <_malloc_r+0x44e>
   85598:	e645      	b.n	85226 <_malloc_r+0xe6>
   8559a:	468c      	mov	ip, r1
   8559c:	e78c      	b.n	854b8 <_malloc_r+0x378>
   8559e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   855a2:	d815      	bhi.n	855d0 <_malloc_r+0x490>
   855a4:	0bf3      	lsrs	r3, r6, #15
   855a6:	f103 0078 	add.w	r0, r3, #120	; 0x78
   855aa:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   855ae:	00c1      	lsls	r1, r0, #3
   855b0:	e5e8      	b.n	85184 <_malloc_r+0x44>
   855b2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   855b6:	e6ee      	b.n	85396 <_malloc_r+0x256>
   855b8:	2101      	movs	r1, #1
   855ba:	687b      	ldr	r3, [r7, #4]
   855bc:	1092      	asrs	r2, r2, #2
   855be:	fa01 f202 	lsl.w	r2, r1, r2
   855c2:	431a      	orrs	r2, r3
   855c4:	607a      	str	r2, [r7, #4]
   855c6:	4663      	mov	r3, ip
   855c8:	e779      	b.n	854be <_malloc_r+0x37e>
   855ca:	2301      	movs	r3, #1
   855cc:	6053      	str	r3, [r2, #4]
   855ce:	e72a      	b.n	85426 <_malloc_r+0x2e6>
   855d0:	f240 5254 	movw	r2, #1364	; 0x554
   855d4:	4293      	cmp	r3, r2
   855d6:	d822      	bhi.n	8561e <_malloc_r+0x4de>
   855d8:	0cb3      	lsrs	r3, r6, #18
   855da:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   855de:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   855e2:	00c1      	lsls	r1, r0, #3
   855e4:	e5ce      	b.n	85184 <_malloc_r+0x44>
   855e6:	f103 0b10 	add.w	fp, r3, #16
   855ea:	e6af      	b.n	8534c <_malloc_r+0x20c>
   855ec:	2a54      	cmp	r2, #84	; 0x54
   855ee:	d829      	bhi.n	85644 <_malloc_r+0x504>
   855f0:	0b1a      	lsrs	r2, r3, #12
   855f2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   855f6:	00c9      	lsls	r1, r1, #3
   855f8:	326e      	adds	r2, #110	; 0x6e
   855fa:	e74d      	b.n	85498 <_malloc_r+0x358>
   855fc:	4b20      	ldr	r3, [pc, #128]	; (85680 <_malloc_r+0x540>)
   855fe:	6819      	ldr	r1, [r3, #0]
   85600:	4459      	add	r1, fp
   85602:	6019      	str	r1, [r3, #0]
   85604:	e6b3      	b.n	8536e <_malloc_r+0x22e>
   85606:	f3ca 000b 	ubfx	r0, sl, #0, #12
   8560a:	2800      	cmp	r0, #0
   8560c:	f47f aeaf 	bne.w	8536e <_malloc_r+0x22e>
   85610:	eb08 030b 	add.w	r3, r8, fp
   85614:	68ba      	ldr	r2, [r7, #8]
   85616:	f043 0301 	orr.w	r3, r3, #1
   8561a:	6053      	str	r3, [r2, #4]
   8561c:	e6ef      	b.n	853fe <_malloc_r+0x2be>
   8561e:	207f      	movs	r0, #127	; 0x7f
   85620:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   85624:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   85628:	e5ac      	b.n	85184 <_malloc_r+0x44>
   8562a:	f104 0108 	add.w	r1, r4, #8
   8562e:	4628      	mov	r0, r5
   85630:	9300      	str	r3, [sp, #0]
   85632:	f7ff fc8d 	bl	84f50 <_free_r>
   85636:	9b00      	ldr	r3, [sp, #0]
   85638:	6819      	ldr	r1, [r3, #0]
   8563a:	e6e0      	b.n	853fe <_malloc_r+0x2be>
   8563c:	2001      	movs	r0, #1
   8563e:	f04f 0900 	mov.w	r9, #0
   85642:	e6bd      	b.n	853c0 <_malloc_r+0x280>
   85644:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85648:	d805      	bhi.n	85656 <_malloc_r+0x516>
   8564a:	0bda      	lsrs	r2, r3, #15
   8564c:	f102 0178 	add.w	r1, r2, #120	; 0x78
   85650:	00c9      	lsls	r1, r1, #3
   85652:	3277      	adds	r2, #119	; 0x77
   85654:	e720      	b.n	85498 <_malloc_r+0x358>
   85656:	f240 5154 	movw	r1, #1364	; 0x554
   8565a:	428a      	cmp	r2, r1
   8565c:	d805      	bhi.n	8566a <_malloc_r+0x52a>
   8565e:	0c9a      	lsrs	r2, r3, #18
   85660:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   85664:	00c9      	lsls	r1, r1, #3
   85666:	327c      	adds	r2, #124	; 0x7c
   85668:	e716      	b.n	85498 <_malloc_r+0x358>
   8566a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8566e:	227e      	movs	r2, #126	; 0x7e
   85670:	e712      	b.n	85498 <_malloc_r+0x358>
   85672:	687b      	ldr	r3, [r7, #4]
   85674:	e780      	b.n	85578 <_malloc_r+0x438>
   85676:	08f0      	lsrs	r0, r6, #3
   85678:	f106 0308 	add.w	r3, r6, #8
   8567c:	e60e      	b.n	8529c <_malloc_r+0x15c>
   8567e:	bf00      	nop
   85680:	20070dd0 	.word	0x20070dd0

00085684 <__ascii_mbtowc>:
   85684:	b082      	sub	sp, #8
   85686:	b149      	cbz	r1, 8569c <__ascii_mbtowc+0x18>
   85688:	b15a      	cbz	r2, 856a2 <__ascii_mbtowc+0x1e>
   8568a:	b16b      	cbz	r3, 856a8 <__ascii_mbtowc+0x24>
   8568c:	7813      	ldrb	r3, [r2, #0]
   8568e:	600b      	str	r3, [r1, #0]
   85690:	7812      	ldrb	r2, [r2, #0]
   85692:	1c10      	adds	r0, r2, #0
   85694:	bf18      	it	ne
   85696:	2001      	movne	r0, #1
   85698:	b002      	add	sp, #8
   8569a:	4770      	bx	lr
   8569c:	a901      	add	r1, sp, #4
   8569e:	2a00      	cmp	r2, #0
   856a0:	d1f3      	bne.n	8568a <__ascii_mbtowc+0x6>
   856a2:	4610      	mov	r0, r2
   856a4:	b002      	add	sp, #8
   856a6:	4770      	bx	lr
   856a8:	f06f 0001 	mvn.w	r0, #1
   856ac:	e7f4      	b.n	85698 <__ascii_mbtowc+0x14>
   856ae:	bf00      	nop

000856b0 <memchr>:
   856b0:	0783      	lsls	r3, r0, #30
   856b2:	b470      	push	{r4, r5, r6}
   856b4:	b2cd      	uxtb	r5, r1
   856b6:	d03d      	beq.n	85734 <memchr+0x84>
   856b8:	1e54      	subs	r4, r2, #1
   856ba:	b30a      	cbz	r2, 85700 <memchr+0x50>
   856bc:	7803      	ldrb	r3, [r0, #0]
   856be:	42ab      	cmp	r3, r5
   856c0:	d01f      	beq.n	85702 <memchr+0x52>
   856c2:	1c43      	adds	r3, r0, #1
   856c4:	e005      	b.n	856d2 <memchr+0x22>
   856c6:	f114 34ff 	adds.w	r4, r4, #4294967295
   856ca:	d319      	bcc.n	85700 <memchr+0x50>
   856cc:	7802      	ldrb	r2, [r0, #0]
   856ce:	42aa      	cmp	r2, r5
   856d0:	d017      	beq.n	85702 <memchr+0x52>
   856d2:	f013 0f03 	tst.w	r3, #3
   856d6:	4618      	mov	r0, r3
   856d8:	f103 0301 	add.w	r3, r3, #1
   856dc:	d1f3      	bne.n	856c6 <memchr+0x16>
   856de:	2c03      	cmp	r4, #3
   856e0:	d811      	bhi.n	85706 <memchr+0x56>
   856e2:	b34c      	cbz	r4, 85738 <memchr+0x88>
   856e4:	7803      	ldrb	r3, [r0, #0]
   856e6:	42ab      	cmp	r3, r5
   856e8:	d00b      	beq.n	85702 <memchr+0x52>
   856ea:	4404      	add	r4, r0
   856ec:	1c43      	adds	r3, r0, #1
   856ee:	e002      	b.n	856f6 <memchr+0x46>
   856f0:	7802      	ldrb	r2, [r0, #0]
   856f2:	42aa      	cmp	r2, r5
   856f4:	d005      	beq.n	85702 <memchr+0x52>
   856f6:	429c      	cmp	r4, r3
   856f8:	4618      	mov	r0, r3
   856fa:	f103 0301 	add.w	r3, r3, #1
   856fe:	d1f7      	bne.n	856f0 <memchr+0x40>
   85700:	2000      	movs	r0, #0
   85702:	bc70      	pop	{r4, r5, r6}
   85704:	4770      	bx	lr
   85706:	0209      	lsls	r1, r1, #8
   85708:	b289      	uxth	r1, r1
   8570a:	4329      	orrs	r1, r5
   8570c:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   85710:	6803      	ldr	r3, [r0, #0]
   85712:	4606      	mov	r6, r0
   85714:	404b      	eors	r3, r1
   85716:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   8571a:	ea22 0303 	bic.w	r3, r2, r3
   8571e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   85722:	f100 0004 	add.w	r0, r0, #4
   85726:	d103      	bne.n	85730 <memchr+0x80>
   85728:	3c04      	subs	r4, #4
   8572a:	2c03      	cmp	r4, #3
   8572c:	d8f0      	bhi.n	85710 <memchr+0x60>
   8572e:	e7d8      	b.n	856e2 <memchr+0x32>
   85730:	4630      	mov	r0, r6
   85732:	e7d7      	b.n	856e4 <memchr+0x34>
   85734:	4614      	mov	r4, r2
   85736:	e7d2      	b.n	856de <memchr+0x2e>
   85738:	4620      	mov	r0, r4
   8573a:	e7e2      	b.n	85702 <memchr+0x52>

0008573c <memmove>:
   8573c:	4288      	cmp	r0, r1
   8573e:	b5f0      	push	{r4, r5, r6, r7, lr}
   85740:	d90d      	bls.n	8575e <memmove+0x22>
   85742:	188b      	adds	r3, r1, r2
   85744:	4298      	cmp	r0, r3
   85746:	d20a      	bcs.n	8575e <memmove+0x22>
   85748:	1884      	adds	r4, r0, r2
   8574a:	2a00      	cmp	r2, #0
   8574c:	d051      	beq.n	857f2 <memmove+0xb6>
   8574e:	4622      	mov	r2, r4
   85750:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   85754:	4299      	cmp	r1, r3
   85756:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8575a:	d1f9      	bne.n	85750 <memmove+0x14>
   8575c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8575e:	2a0f      	cmp	r2, #15
   85760:	d948      	bls.n	857f4 <memmove+0xb8>
   85762:	ea41 0300 	orr.w	r3, r1, r0
   85766:	079b      	lsls	r3, r3, #30
   85768:	d146      	bne.n	857f8 <memmove+0xbc>
   8576a:	4615      	mov	r5, r2
   8576c:	f100 0410 	add.w	r4, r0, #16
   85770:	f101 0310 	add.w	r3, r1, #16
   85774:	f853 6c10 	ldr.w	r6, [r3, #-16]
   85778:	3d10      	subs	r5, #16
   8577a:	f844 6c10 	str.w	r6, [r4, #-16]
   8577e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   85782:	2d0f      	cmp	r5, #15
   85784:	f844 6c0c 	str.w	r6, [r4, #-12]
   85788:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8578c:	f104 0410 	add.w	r4, r4, #16
   85790:	f844 6c18 	str.w	r6, [r4, #-24]
   85794:	f853 6c04 	ldr.w	r6, [r3, #-4]
   85798:	f103 0310 	add.w	r3, r3, #16
   8579c:	f844 6c14 	str.w	r6, [r4, #-20]
   857a0:	d8e8      	bhi.n	85774 <memmove+0x38>
   857a2:	f1a2 0310 	sub.w	r3, r2, #16
   857a6:	f023 030f 	bic.w	r3, r3, #15
   857aa:	f002 0e0f 	and.w	lr, r2, #15
   857ae:	3310      	adds	r3, #16
   857b0:	f1be 0f03 	cmp.w	lr, #3
   857b4:	4419      	add	r1, r3
   857b6:	4403      	add	r3, r0
   857b8:	d921      	bls.n	857fe <memmove+0xc2>
   857ba:	460e      	mov	r6, r1
   857bc:	4674      	mov	r4, lr
   857be:	1f1d      	subs	r5, r3, #4
   857c0:	f856 7b04 	ldr.w	r7, [r6], #4
   857c4:	3c04      	subs	r4, #4
   857c6:	2c03      	cmp	r4, #3
   857c8:	f845 7f04 	str.w	r7, [r5, #4]!
   857cc:	d8f8      	bhi.n	857c0 <memmove+0x84>
   857ce:	f1ae 0404 	sub.w	r4, lr, #4
   857d2:	f024 0403 	bic.w	r4, r4, #3
   857d6:	3404      	adds	r4, #4
   857d8:	4421      	add	r1, r4
   857da:	4423      	add	r3, r4
   857dc:	f002 0203 	and.w	r2, r2, #3
   857e0:	b162      	cbz	r2, 857fc <memmove+0xc0>
   857e2:	3b01      	subs	r3, #1
   857e4:	440a      	add	r2, r1
   857e6:	f811 4b01 	ldrb.w	r4, [r1], #1
   857ea:	428a      	cmp	r2, r1
   857ec:	f803 4f01 	strb.w	r4, [r3, #1]!
   857f0:	d1f9      	bne.n	857e6 <memmove+0xaa>
   857f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   857f4:	4603      	mov	r3, r0
   857f6:	e7f3      	b.n	857e0 <memmove+0xa4>
   857f8:	4603      	mov	r3, r0
   857fa:	e7f2      	b.n	857e2 <memmove+0xa6>
   857fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   857fe:	4672      	mov	r2, lr
   85800:	e7ee      	b.n	857e0 <memmove+0xa4>
   85802:	bf00      	nop

00085804 <__malloc_lock>:
   85804:	4801      	ldr	r0, [pc, #4]	; (8580c <__malloc_lock+0x8>)
   85806:	f7ff bc97 	b.w	85138 <__retarget_lock_acquire_recursive>
   8580a:	bf00      	nop
   8580c:	20070e34 	.word	0x20070e34

00085810 <__malloc_unlock>:
   85810:	4801      	ldr	r0, [pc, #4]	; (85818 <__malloc_unlock+0x8>)
   85812:	f7ff bc93 	b.w	8513c <__retarget_lock_release_recursive>
   85816:	bf00      	nop
   85818:	20070e34 	.word	0x20070e34

0008581c <_Balloc>:
   8581c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8581e:	b570      	push	{r4, r5, r6, lr}
   85820:	4605      	mov	r5, r0
   85822:	460c      	mov	r4, r1
   85824:	b14b      	cbz	r3, 8583a <_Balloc+0x1e>
   85826:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8582a:	b180      	cbz	r0, 8584e <_Balloc+0x32>
   8582c:	6802      	ldr	r2, [r0, #0]
   8582e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   85832:	2300      	movs	r3, #0
   85834:	6103      	str	r3, [r0, #16]
   85836:	60c3      	str	r3, [r0, #12]
   85838:	bd70      	pop	{r4, r5, r6, pc}
   8583a:	2221      	movs	r2, #33	; 0x21
   8583c:	2104      	movs	r1, #4
   8583e:	f000 fd9d 	bl	8637c <_calloc_r>
   85842:	64e8      	str	r0, [r5, #76]	; 0x4c
   85844:	4603      	mov	r3, r0
   85846:	2800      	cmp	r0, #0
   85848:	d1ed      	bne.n	85826 <_Balloc+0xa>
   8584a:	2000      	movs	r0, #0
   8584c:	bd70      	pop	{r4, r5, r6, pc}
   8584e:	2101      	movs	r1, #1
   85850:	fa01 f604 	lsl.w	r6, r1, r4
   85854:	1d72      	adds	r2, r6, #5
   85856:	4628      	mov	r0, r5
   85858:	0092      	lsls	r2, r2, #2
   8585a:	f000 fd8f 	bl	8637c <_calloc_r>
   8585e:	2800      	cmp	r0, #0
   85860:	d0f3      	beq.n	8584a <_Balloc+0x2e>
   85862:	6044      	str	r4, [r0, #4]
   85864:	6086      	str	r6, [r0, #8]
   85866:	e7e4      	b.n	85832 <_Balloc+0x16>

00085868 <_Bfree>:
   85868:	b131      	cbz	r1, 85878 <_Bfree+0x10>
   8586a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8586c:	684a      	ldr	r2, [r1, #4]
   8586e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   85872:	6008      	str	r0, [r1, #0]
   85874:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   85878:	4770      	bx	lr
   8587a:	bf00      	nop

0008587c <__multadd>:
   8587c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8587e:	460c      	mov	r4, r1
   85880:	4605      	mov	r5, r0
   85882:	f04f 0e00 	mov.w	lr, #0
   85886:	690e      	ldr	r6, [r1, #16]
   85888:	b083      	sub	sp, #12
   8588a:	f101 0714 	add.w	r7, r1, #20
   8588e:	6838      	ldr	r0, [r7, #0]
   85890:	f10e 0e01 	add.w	lr, lr, #1
   85894:	b281      	uxth	r1, r0
   85896:	fb02 3301 	mla	r3, r2, r1, r3
   8589a:	0c01      	lsrs	r1, r0, #16
   8589c:	0c18      	lsrs	r0, r3, #16
   8589e:	fb02 0101 	mla	r1, r2, r1, r0
   858a2:	b29b      	uxth	r3, r3
   858a4:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   858a8:	4576      	cmp	r6, lr
   858aa:	f847 3b04 	str.w	r3, [r7], #4
   858ae:	ea4f 4311 	mov.w	r3, r1, lsr #16
   858b2:	dcec      	bgt.n	8588e <__multadd+0x12>
   858b4:	b13b      	cbz	r3, 858c6 <__multadd+0x4a>
   858b6:	68a2      	ldr	r2, [r4, #8]
   858b8:	4296      	cmp	r6, r2
   858ba:	da07      	bge.n	858cc <__multadd+0x50>
   858bc:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   858c0:	3601      	adds	r6, #1
   858c2:	6153      	str	r3, [r2, #20]
   858c4:	6126      	str	r6, [r4, #16]
   858c6:	4620      	mov	r0, r4
   858c8:	b003      	add	sp, #12
   858ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
   858cc:	6861      	ldr	r1, [r4, #4]
   858ce:	4628      	mov	r0, r5
   858d0:	3101      	adds	r1, #1
   858d2:	9301      	str	r3, [sp, #4]
   858d4:	f7ff ffa2 	bl	8581c <_Balloc>
   858d8:	4607      	mov	r7, r0
   858da:	6922      	ldr	r2, [r4, #16]
   858dc:	f104 010c 	add.w	r1, r4, #12
   858e0:	3202      	adds	r2, #2
   858e2:	0092      	lsls	r2, r2, #2
   858e4:	300c      	adds	r0, #12
   858e6:	f7fc ff45 	bl	82774 <memcpy>
   858ea:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   858ec:	6861      	ldr	r1, [r4, #4]
   858ee:	9b01      	ldr	r3, [sp, #4]
   858f0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   858f4:	6020      	str	r0, [r4, #0]
   858f6:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   858fa:	463c      	mov	r4, r7
   858fc:	e7de      	b.n	858bc <__multadd+0x40>
   858fe:	bf00      	nop

00085900 <__hi0bits>:
   85900:	0c02      	lsrs	r2, r0, #16
   85902:	0412      	lsls	r2, r2, #16
   85904:	4603      	mov	r3, r0
   85906:	b9b2      	cbnz	r2, 85936 <__hi0bits+0x36>
   85908:	0403      	lsls	r3, r0, #16
   8590a:	2010      	movs	r0, #16
   8590c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   85910:	bf04      	itt	eq
   85912:	021b      	lsleq	r3, r3, #8
   85914:	3008      	addeq	r0, #8
   85916:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   8591a:	bf04      	itt	eq
   8591c:	011b      	lsleq	r3, r3, #4
   8591e:	3004      	addeq	r0, #4
   85920:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   85924:	bf04      	itt	eq
   85926:	009b      	lsleq	r3, r3, #2
   85928:	3002      	addeq	r0, #2
   8592a:	2b00      	cmp	r3, #0
   8592c:	db02      	blt.n	85934 <__hi0bits+0x34>
   8592e:	005b      	lsls	r3, r3, #1
   85930:	d403      	bmi.n	8593a <__hi0bits+0x3a>
   85932:	2020      	movs	r0, #32
   85934:	4770      	bx	lr
   85936:	2000      	movs	r0, #0
   85938:	e7e8      	b.n	8590c <__hi0bits+0xc>
   8593a:	3001      	adds	r0, #1
   8593c:	4770      	bx	lr
   8593e:	bf00      	nop

00085940 <__lo0bits>:
   85940:	6803      	ldr	r3, [r0, #0]
   85942:	4601      	mov	r1, r0
   85944:	f013 0207 	ands.w	r2, r3, #7
   85948:	d007      	beq.n	8595a <__lo0bits+0x1a>
   8594a:	07da      	lsls	r2, r3, #31
   8594c:	d421      	bmi.n	85992 <__lo0bits+0x52>
   8594e:	0798      	lsls	r0, r3, #30
   85950:	d421      	bmi.n	85996 <__lo0bits+0x56>
   85952:	089b      	lsrs	r3, r3, #2
   85954:	600b      	str	r3, [r1, #0]
   85956:	2002      	movs	r0, #2
   85958:	4770      	bx	lr
   8595a:	b298      	uxth	r0, r3
   8595c:	b198      	cbz	r0, 85986 <__lo0bits+0x46>
   8595e:	4610      	mov	r0, r2
   85960:	f013 0fff 	tst.w	r3, #255	; 0xff
   85964:	bf04      	itt	eq
   85966:	0a1b      	lsreq	r3, r3, #8
   85968:	3008      	addeq	r0, #8
   8596a:	071a      	lsls	r2, r3, #28
   8596c:	bf04      	itt	eq
   8596e:	091b      	lsreq	r3, r3, #4
   85970:	3004      	addeq	r0, #4
   85972:	079a      	lsls	r2, r3, #30
   85974:	bf04      	itt	eq
   85976:	089b      	lsreq	r3, r3, #2
   85978:	3002      	addeq	r0, #2
   8597a:	07da      	lsls	r2, r3, #31
   8597c:	d407      	bmi.n	8598e <__lo0bits+0x4e>
   8597e:	085b      	lsrs	r3, r3, #1
   85980:	d104      	bne.n	8598c <__lo0bits+0x4c>
   85982:	2020      	movs	r0, #32
   85984:	4770      	bx	lr
   85986:	0c1b      	lsrs	r3, r3, #16
   85988:	2010      	movs	r0, #16
   8598a:	e7e9      	b.n	85960 <__lo0bits+0x20>
   8598c:	3001      	adds	r0, #1
   8598e:	600b      	str	r3, [r1, #0]
   85990:	4770      	bx	lr
   85992:	2000      	movs	r0, #0
   85994:	4770      	bx	lr
   85996:	085b      	lsrs	r3, r3, #1
   85998:	600b      	str	r3, [r1, #0]
   8599a:	2001      	movs	r0, #1
   8599c:	4770      	bx	lr
   8599e:	bf00      	nop

000859a0 <__i2b>:
   859a0:	b510      	push	{r4, lr}
   859a2:	460c      	mov	r4, r1
   859a4:	2101      	movs	r1, #1
   859a6:	f7ff ff39 	bl	8581c <_Balloc>
   859aa:	2201      	movs	r2, #1
   859ac:	6144      	str	r4, [r0, #20]
   859ae:	6102      	str	r2, [r0, #16]
   859b0:	bd10      	pop	{r4, pc}
   859b2:	bf00      	nop

000859b4 <__multiply>:
   859b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   859b8:	690c      	ldr	r4, [r1, #16]
   859ba:	6915      	ldr	r5, [r2, #16]
   859bc:	b083      	sub	sp, #12
   859be:	42ac      	cmp	r4, r5
   859c0:	468b      	mov	fp, r1
   859c2:	4616      	mov	r6, r2
   859c4:	da04      	bge.n	859d0 <__multiply+0x1c>
   859c6:	4622      	mov	r2, r4
   859c8:	46b3      	mov	fp, r6
   859ca:	462c      	mov	r4, r5
   859cc:	460e      	mov	r6, r1
   859ce:	4615      	mov	r5, r2
   859d0:	f8db 3008 	ldr.w	r3, [fp, #8]
   859d4:	eb04 0805 	add.w	r8, r4, r5
   859d8:	f8db 1004 	ldr.w	r1, [fp, #4]
   859dc:	4598      	cmp	r8, r3
   859de:	bfc8      	it	gt
   859e0:	3101      	addgt	r1, #1
   859e2:	f7ff ff1b 	bl	8581c <_Balloc>
   859e6:	f100 0914 	add.w	r9, r0, #20
   859ea:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   859ee:	45d1      	cmp	r9, sl
   859f0:	9000      	str	r0, [sp, #0]
   859f2:	d205      	bcs.n	85a00 <__multiply+0x4c>
   859f4:	464b      	mov	r3, r9
   859f6:	2100      	movs	r1, #0
   859f8:	f843 1b04 	str.w	r1, [r3], #4
   859fc:	459a      	cmp	sl, r3
   859fe:	d8fb      	bhi.n	859f8 <__multiply+0x44>
   85a00:	f106 0c14 	add.w	ip, r6, #20
   85a04:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   85a08:	f10b 0b14 	add.w	fp, fp, #20
   85a0c:	459c      	cmp	ip, r3
   85a0e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   85a12:	d24b      	bcs.n	85aac <__multiply+0xf8>
   85a14:	f8cd a004 	str.w	sl, [sp, #4]
   85a18:	469a      	mov	sl, r3
   85a1a:	f8dc 5000 	ldr.w	r5, [ip]
   85a1e:	b2af      	uxth	r7, r5
   85a20:	b1e7      	cbz	r7, 85a5c <__multiply+0xa8>
   85a22:	464d      	mov	r5, r9
   85a24:	465e      	mov	r6, fp
   85a26:	2100      	movs	r1, #0
   85a28:	f856 2b04 	ldr.w	r2, [r6], #4
   85a2c:	6828      	ldr	r0, [r5, #0]
   85a2e:	b293      	uxth	r3, r2
   85a30:	b284      	uxth	r4, r0
   85a32:	0c12      	lsrs	r2, r2, #16
   85a34:	fb07 4303 	mla	r3, r7, r3, r4
   85a38:	0c00      	lsrs	r0, r0, #16
   85a3a:	fb07 0202 	mla	r2, r7, r2, r0
   85a3e:	440b      	add	r3, r1
   85a40:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   85a44:	b29b      	uxth	r3, r3
   85a46:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   85a4a:	45b6      	cmp	lr, r6
   85a4c:	f845 3b04 	str.w	r3, [r5], #4
   85a50:	ea4f 4111 	mov.w	r1, r1, lsr #16
   85a54:	d8e8      	bhi.n	85a28 <__multiply+0x74>
   85a56:	6029      	str	r1, [r5, #0]
   85a58:	f8dc 5000 	ldr.w	r5, [ip]
   85a5c:	0c2d      	lsrs	r5, r5, #16
   85a5e:	d01d      	beq.n	85a9c <__multiply+0xe8>
   85a60:	f8d9 3000 	ldr.w	r3, [r9]
   85a64:	4648      	mov	r0, r9
   85a66:	461c      	mov	r4, r3
   85a68:	4659      	mov	r1, fp
   85a6a:	2200      	movs	r2, #0
   85a6c:	880e      	ldrh	r6, [r1, #0]
   85a6e:	0c24      	lsrs	r4, r4, #16
   85a70:	fb05 4406 	mla	r4, r5, r6, r4
   85a74:	b29b      	uxth	r3, r3
   85a76:	4422      	add	r2, r4
   85a78:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85a7c:	f840 3b04 	str.w	r3, [r0], #4
   85a80:	f851 3b04 	ldr.w	r3, [r1], #4
   85a84:	6804      	ldr	r4, [r0, #0]
   85a86:	0c1b      	lsrs	r3, r3, #16
   85a88:	b2a6      	uxth	r6, r4
   85a8a:	fb05 6303 	mla	r3, r5, r3, r6
   85a8e:	458e      	cmp	lr, r1
   85a90:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   85a94:	ea4f 4213 	mov.w	r2, r3, lsr #16
   85a98:	d8e8      	bhi.n	85a6c <__multiply+0xb8>
   85a9a:	6003      	str	r3, [r0, #0]
   85a9c:	f10c 0c04 	add.w	ip, ip, #4
   85aa0:	45e2      	cmp	sl, ip
   85aa2:	f109 0904 	add.w	r9, r9, #4
   85aa6:	d8b8      	bhi.n	85a1a <__multiply+0x66>
   85aa8:	f8dd a004 	ldr.w	sl, [sp, #4]
   85aac:	f1b8 0f00 	cmp.w	r8, #0
   85ab0:	dd0b      	ble.n	85aca <__multiply+0x116>
   85ab2:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   85ab6:	f1aa 0a04 	sub.w	sl, sl, #4
   85aba:	b11b      	cbz	r3, 85ac4 <__multiply+0x110>
   85abc:	e005      	b.n	85aca <__multiply+0x116>
   85abe:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   85ac2:	b913      	cbnz	r3, 85aca <__multiply+0x116>
   85ac4:	f1b8 0801 	subs.w	r8, r8, #1
   85ac8:	d1f9      	bne.n	85abe <__multiply+0x10a>
   85aca:	9800      	ldr	r0, [sp, #0]
   85acc:	f8c0 8010 	str.w	r8, [r0, #16]
   85ad0:	b003      	add	sp, #12
   85ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ad6:	bf00      	nop

00085ad8 <__pow5mult>:
   85ad8:	f012 0303 	ands.w	r3, r2, #3
   85adc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85ae0:	4614      	mov	r4, r2
   85ae2:	4607      	mov	r7, r0
   85ae4:	d12e      	bne.n	85b44 <__pow5mult+0x6c>
   85ae6:	460d      	mov	r5, r1
   85ae8:	10a4      	asrs	r4, r4, #2
   85aea:	d01c      	beq.n	85b26 <__pow5mult+0x4e>
   85aec:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   85aee:	b396      	cbz	r6, 85b56 <__pow5mult+0x7e>
   85af0:	07e3      	lsls	r3, r4, #31
   85af2:	f04f 0800 	mov.w	r8, #0
   85af6:	d406      	bmi.n	85b06 <__pow5mult+0x2e>
   85af8:	1064      	asrs	r4, r4, #1
   85afa:	d014      	beq.n	85b26 <__pow5mult+0x4e>
   85afc:	6830      	ldr	r0, [r6, #0]
   85afe:	b1a8      	cbz	r0, 85b2c <__pow5mult+0x54>
   85b00:	4606      	mov	r6, r0
   85b02:	07e3      	lsls	r3, r4, #31
   85b04:	d5f8      	bpl.n	85af8 <__pow5mult+0x20>
   85b06:	4632      	mov	r2, r6
   85b08:	4629      	mov	r1, r5
   85b0a:	4638      	mov	r0, r7
   85b0c:	f7ff ff52 	bl	859b4 <__multiply>
   85b10:	b1b5      	cbz	r5, 85b40 <__pow5mult+0x68>
   85b12:	686a      	ldr	r2, [r5, #4]
   85b14:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85b16:	1064      	asrs	r4, r4, #1
   85b18:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85b1c:	6029      	str	r1, [r5, #0]
   85b1e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   85b22:	4605      	mov	r5, r0
   85b24:	d1ea      	bne.n	85afc <__pow5mult+0x24>
   85b26:	4628      	mov	r0, r5
   85b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85b2c:	4632      	mov	r2, r6
   85b2e:	4631      	mov	r1, r6
   85b30:	4638      	mov	r0, r7
   85b32:	f7ff ff3f 	bl	859b4 <__multiply>
   85b36:	6030      	str	r0, [r6, #0]
   85b38:	f8c0 8000 	str.w	r8, [r0]
   85b3c:	4606      	mov	r6, r0
   85b3e:	e7e0      	b.n	85b02 <__pow5mult+0x2a>
   85b40:	4605      	mov	r5, r0
   85b42:	e7d9      	b.n	85af8 <__pow5mult+0x20>
   85b44:	4a0b      	ldr	r2, [pc, #44]	; (85b74 <__pow5mult+0x9c>)
   85b46:	3b01      	subs	r3, #1
   85b48:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   85b4c:	2300      	movs	r3, #0
   85b4e:	f7ff fe95 	bl	8587c <__multadd>
   85b52:	4605      	mov	r5, r0
   85b54:	e7c8      	b.n	85ae8 <__pow5mult+0x10>
   85b56:	2101      	movs	r1, #1
   85b58:	4638      	mov	r0, r7
   85b5a:	f7ff fe5f 	bl	8581c <_Balloc>
   85b5e:	f240 2171 	movw	r1, #625	; 0x271
   85b62:	2201      	movs	r2, #1
   85b64:	2300      	movs	r3, #0
   85b66:	6141      	str	r1, [r0, #20]
   85b68:	6102      	str	r2, [r0, #16]
   85b6a:	4606      	mov	r6, r0
   85b6c:	64b8      	str	r0, [r7, #72]	; 0x48
   85b6e:	6003      	str	r3, [r0, #0]
   85b70:	e7be      	b.n	85af0 <__pow5mult+0x18>
   85b72:	bf00      	nop
   85b74:	000871b8 	.word	0x000871b8

00085b78 <__lshift>:
   85b78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85b7c:	690b      	ldr	r3, [r1, #16]
   85b7e:	1154      	asrs	r4, r2, #5
   85b80:	eb04 0803 	add.w	r8, r4, r3
   85b84:	688b      	ldr	r3, [r1, #8]
   85b86:	f108 0501 	add.w	r5, r8, #1
   85b8a:	429d      	cmp	r5, r3
   85b8c:	460e      	mov	r6, r1
   85b8e:	4691      	mov	r9, r2
   85b90:	4607      	mov	r7, r0
   85b92:	6849      	ldr	r1, [r1, #4]
   85b94:	dd04      	ble.n	85ba0 <__lshift+0x28>
   85b96:	005b      	lsls	r3, r3, #1
   85b98:	429d      	cmp	r5, r3
   85b9a:	f101 0101 	add.w	r1, r1, #1
   85b9e:	dcfa      	bgt.n	85b96 <__lshift+0x1e>
   85ba0:	4638      	mov	r0, r7
   85ba2:	f7ff fe3b 	bl	8581c <_Balloc>
   85ba6:	2c00      	cmp	r4, #0
   85ba8:	f100 0314 	add.w	r3, r0, #20
   85bac:	dd06      	ble.n	85bbc <__lshift+0x44>
   85bae:	2100      	movs	r1, #0
   85bb0:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   85bb4:	f843 1b04 	str.w	r1, [r3], #4
   85bb8:	429a      	cmp	r2, r3
   85bba:	d1fb      	bne.n	85bb4 <__lshift+0x3c>
   85bbc:	6934      	ldr	r4, [r6, #16]
   85bbe:	f106 0114 	add.w	r1, r6, #20
   85bc2:	f019 091f 	ands.w	r9, r9, #31
   85bc6:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   85bca:	d01d      	beq.n	85c08 <__lshift+0x90>
   85bcc:	2200      	movs	r2, #0
   85bce:	f1c9 0c20 	rsb	ip, r9, #32
   85bd2:	680c      	ldr	r4, [r1, #0]
   85bd4:	fa04 f409 	lsl.w	r4, r4, r9
   85bd8:	4314      	orrs	r4, r2
   85bda:	f843 4b04 	str.w	r4, [r3], #4
   85bde:	f851 2b04 	ldr.w	r2, [r1], #4
   85be2:	458e      	cmp	lr, r1
   85be4:	fa22 f20c 	lsr.w	r2, r2, ip
   85be8:	d8f3      	bhi.n	85bd2 <__lshift+0x5a>
   85bea:	601a      	str	r2, [r3, #0]
   85bec:	b10a      	cbz	r2, 85bf2 <__lshift+0x7a>
   85bee:	f108 0502 	add.w	r5, r8, #2
   85bf2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85bf4:	6872      	ldr	r2, [r6, #4]
   85bf6:	3d01      	subs	r5, #1
   85bf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85bfc:	6105      	str	r5, [r0, #16]
   85bfe:	6031      	str	r1, [r6, #0]
   85c00:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   85c04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85c08:	3b04      	subs	r3, #4
   85c0a:	f851 2b04 	ldr.w	r2, [r1], #4
   85c0e:	458e      	cmp	lr, r1
   85c10:	f843 2f04 	str.w	r2, [r3, #4]!
   85c14:	d8f9      	bhi.n	85c0a <__lshift+0x92>
   85c16:	e7ec      	b.n	85bf2 <__lshift+0x7a>

00085c18 <__mcmp>:
   85c18:	b430      	push	{r4, r5}
   85c1a:	690b      	ldr	r3, [r1, #16]
   85c1c:	4605      	mov	r5, r0
   85c1e:	6900      	ldr	r0, [r0, #16]
   85c20:	1ac0      	subs	r0, r0, r3
   85c22:	d10f      	bne.n	85c44 <__mcmp+0x2c>
   85c24:	009b      	lsls	r3, r3, #2
   85c26:	3514      	adds	r5, #20
   85c28:	3114      	adds	r1, #20
   85c2a:	4419      	add	r1, r3
   85c2c:	442b      	add	r3, r5
   85c2e:	e001      	b.n	85c34 <__mcmp+0x1c>
   85c30:	429d      	cmp	r5, r3
   85c32:	d207      	bcs.n	85c44 <__mcmp+0x2c>
   85c34:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   85c38:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85c3c:	4294      	cmp	r4, r2
   85c3e:	d0f7      	beq.n	85c30 <__mcmp+0x18>
   85c40:	d302      	bcc.n	85c48 <__mcmp+0x30>
   85c42:	2001      	movs	r0, #1
   85c44:	bc30      	pop	{r4, r5}
   85c46:	4770      	bx	lr
   85c48:	f04f 30ff 	mov.w	r0, #4294967295
   85c4c:	e7fa      	b.n	85c44 <__mcmp+0x2c>
   85c4e:	bf00      	nop

00085c50 <__mdiff>:
   85c50:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85c54:	690c      	ldr	r4, [r1, #16]
   85c56:	4689      	mov	r9, r1
   85c58:	6911      	ldr	r1, [r2, #16]
   85c5a:	4692      	mov	sl, r2
   85c5c:	1a64      	subs	r4, r4, r1
   85c5e:	2c00      	cmp	r4, #0
   85c60:	d117      	bne.n	85c92 <__mdiff+0x42>
   85c62:	0089      	lsls	r1, r1, #2
   85c64:	f109 0714 	add.w	r7, r9, #20
   85c68:	f102 0614 	add.w	r6, r2, #20
   85c6c:	187b      	adds	r3, r7, r1
   85c6e:	4431      	add	r1, r6
   85c70:	e001      	b.n	85c76 <__mdiff+0x26>
   85c72:	429f      	cmp	r7, r3
   85c74:	d265      	bcs.n	85d42 <__mdiff+0xf2>
   85c76:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   85c7a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85c7e:	4295      	cmp	r5, r2
   85c80:	d0f7      	beq.n	85c72 <__mdiff+0x22>
   85c82:	d267      	bcs.n	85d54 <__mdiff+0x104>
   85c84:	464b      	mov	r3, r9
   85c86:	46bb      	mov	fp, r7
   85c88:	46d1      	mov	r9, sl
   85c8a:	4637      	mov	r7, r6
   85c8c:	469a      	mov	sl, r3
   85c8e:	2401      	movs	r4, #1
   85c90:	e005      	b.n	85c9e <__mdiff+0x4e>
   85c92:	db61      	blt.n	85d58 <__mdiff+0x108>
   85c94:	2400      	movs	r4, #0
   85c96:	f109 0714 	add.w	r7, r9, #20
   85c9a:	f10a 0b14 	add.w	fp, sl, #20
   85c9e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   85ca2:	f7ff fdbb 	bl	8581c <_Balloc>
   85ca6:	465d      	mov	r5, fp
   85ca8:	f04f 0800 	mov.w	r8, #0
   85cac:	f8d9 e010 	ldr.w	lr, [r9, #16]
   85cb0:	f8da 3010 	ldr.w	r3, [sl, #16]
   85cb4:	463e      	mov	r6, r7
   85cb6:	60c4      	str	r4, [r0, #12]
   85cb8:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   85cbc:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   85cc0:	f100 0414 	add.w	r4, r0, #20
   85cc4:	f856 9b04 	ldr.w	r9, [r6], #4
   85cc8:	f855 2b04 	ldr.w	r2, [r5], #4
   85ccc:	fa1f f389 	uxth.w	r3, r9
   85cd0:	4443      	add	r3, r8
   85cd2:	fa1f f882 	uxth.w	r8, r2
   85cd6:	0c12      	lsrs	r2, r2, #16
   85cd8:	eba3 0308 	sub.w	r3, r3, r8
   85cdc:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   85ce0:	eb02 4223 	add.w	r2, r2, r3, asr #16
   85ce4:	b29b      	uxth	r3, r3
   85ce6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85cea:	45ac      	cmp	ip, r5
   85cec:	f844 3b04 	str.w	r3, [r4], #4
   85cf0:	ea4f 4822 	mov.w	r8, r2, asr #16
   85cf4:	d8e6      	bhi.n	85cc4 <__mdiff+0x74>
   85cf6:	42b7      	cmp	r7, r6
   85cf8:	d917      	bls.n	85d2a <__mdiff+0xda>
   85cfa:	46a4      	mov	ip, r4
   85cfc:	4635      	mov	r5, r6
   85cfe:	f855 3b04 	ldr.w	r3, [r5], #4
   85d02:	b299      	uxth	r1, r3
   85d04:	4441      	add	r1, r8
   85d06:	140a      	asrs	r2, r1, #16
   85d08:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   85d0c:	b289      	uxth	r1, r1
   85d0e:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   85d12:	42af      	cmp	r7, r5
   85d14:	f84c 3b04 	str.w	r3, [ip], #4
   85d18:	ea4f 4822 	mov.w	r8, r2, asr #16
   85d1c:	d8ef      	bhi.n	85cfe <__mdiff+0xae>
   85d1e:	43f6      	mvns	r6, r6
   85d20:	4437      	add	r7, r6
   85d22:	f027 0703 	bic.w	r7, r7, #3
   85d26:	3704      	adds	r7, #4
   85d28:	443c      	add	r4, r7
   85d2a:	3c04      	subs	r4, #4
   85d2c:	b92b      	cbnz	r3, 85d3a <__mdiff+0xea>
   85d2e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   85d32:	f10e 3eff 	add.w	lr, lr, #4294967295
   85d36:	2b00      	cmp	r3, #0
   85d38:	d0f9      	beq.n	85d2e <__mdiff+0xde>
   85d3a:	f8c0 e010 	str.w	lr, [r0, #16]
   85d3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d42:	2100      	movs	r1, #0
   85d44:	f7ff fd6a 	bl	8581c <_Balloc>
   85d48:	2201      	movs	r2, #1
   85d4a:	2300      	movs	r3, #0
   85d4c:	6102      	str	r2, [r0, #16]
   85d4e:	6143      	str	r3, [r0, #20]
   85d50:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d54:	46b3      	mov	fp, r6
   85d56:	e7a2      	b.n	85c9e <__mdiff+0x4e>
   85d58:	464b      	mov	r3, r9
   85d5a:	f109 0b14 	add.w	fp, r9, #20
   85d5e:	f102 0714 	add.w	r7, r2, #20
   85d62:	4691      	mov	r9, r2
   85d64:	2401      	movs	r4, #1
   85d66:	469a      	mov	sl, r3
   85d68:	e799      	b.n	85c9e <__mdiff+0x4e>
   85d6a:	bf00      	nop

00085d6c <__d2b>:
   85d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
   85d6e:	2101      	movs	r1, #1
   85d70:	b083      	sub	sp, #12
   85d72:	461c      	mov	r4, r3
   85d74:	f3c3 550a 	ubfx	r5, r3, #20, #11
   85d78:	4616      	mov	r6, r2
   85d7a:	f7ff fd4f 	bl	8581c <_Balloc>
   85d7e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   85d82:	4607      	mov	r7, r0
   85d84:	b10d      	cbz	r5, 85d8a <__d2b+0x1e>
   85d86:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   85d8a:	9401      	str	r4, [sp, #4]
   85d8c:	b306      	cbz	r6, 85dd0 <__d2b+0x64>
   85d8e:	a802      	add	r0, sp, #8
   85d90:	f840 6d08 	str.w	r6, [r0, #-8]!
   85d94:	f7ff fdd4 	bl	85940 <__lo0bits>
   85d98:	2800      	cmp	r0, #0
   85d9a:	d130      	bne.n	85dfe <__d2b+0x92>
   85d9c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85da0:	617a      	str	r2, [r7, #20]
   85da2:	2b00      	cmp	r3, #0
   85da4:	bf0c      	ite	eq
   85da6:	2101      	moveq	r1, #1
   85da8:	2102      	movne	r1, #2
   85daa:	61bb      	str	r3, [r7, #24]
   85dac:	6139      	str	r1, [r7, #16]
   85dae:	b9d5      	cbnz	r5, 85de6 <__d2b+0x7a>
   85db0:	9a08      	ldr	r2, [sp, #32]
   85db2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   85db6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   85dba:	6010      	str	r0, [r2, #0]
   85dbc:	6918      	ldr	r0, [r3, #16]
   85dbe:	f7ff fd9f 	bl	85900 <__hi0bits>
   85dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85dc4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   85dc8:	6018      	str	r0, [r3, #0]
   85dca:	4638      	mov	r0, r7
   85dcc:	b003      	add	sp, #12
   85dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85dd0:	a801      	add	r0, sp, #4
   85dd2:	f7ff fdb5 	bl	85940 <__lo0bits>
   85dd6:	2201      	movs	r2, #1
   85dd8:	9b01      	ldr	r3, [sp, #4]
   85dda:	4611      	mov	r1, r2
   85ddc:	3020      	adds	r0, #32
   85dde:	613a      	str	r2, [r7, #16]
   85de0:	617b      	str	r3, [r7, #20]
   85de2:	2d00      	cmp	r5, #0
   85de4:	d0e4      	beq.n	85db0 <__d2b+0x44>
   85de6:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   85dea:	9a08      	ldr	r2, [sp, #32]
   85dec:	4403      	add	r3, r0
   85dee:	6013      	str	r3, [r2, #0]
   85df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85df2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   85df6:	6018      	str	r0, [r3, #0]
   85df8:	4638      	mov	r0, r7
   85dfa:	b003      	add	sp, #12
   85dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85dfe:	9b01      	ldr	r3, [sp, #4]
   85e00:	f1c0 0220 	rsb	r2, r0, #32
   85e04:	9900      	ldr	r1, [sp, #0]
   85e06:	fa03 f202 	lsl.w	r2, r3, r2
   85e0a:	430a      	orrs	r2, r1
   85e0c:	40c3      	lsrs	r3, r0
   85e0e:	9301      	str	r3, [sp, #4]
   85e10:	617a      	str	r2, [r7, #20]
   85e12:	e7c6      	b.n	85da2 <__d2b+0x36>

00085e14 <_realloc_r>:
   85e14:	2900      	cmp	r1, #0
   85e16:	f000 8094 	beq.w	85f42 <_realloc_r+0x12e>
   85e1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85e1e:	460c      	mov	r4, r1
   85e20:	4615      	mov	r5, r2
   85e22:	b083      	sub	sp, #12
   85e24:	4680      	mov	r8, r0
   85e26:	f105 060b 	add.w	r6, r5, #11
   85e2a:	f7ff fceb 	bl	85804 <__malloc_lock>
   85e2e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   85e32:	2e16      	cmp	r6, #22
   85e34:	f02e 0703 	bic.w	r7, lr, #3
   85e38:	f1a4 0908 	sub.w	r9, r4, #8
   85e3c:	d83c      	bhi.n	85eb8 <_realloc_r+0xa4>
   85e3e:	2210      	movs	r2, #16
   85e40:	4616      	mov	r6, r2
   85e42:	42b5      	cmp	r5, r6
   85e44:	d83d      	bhi.n	85ec2 <_realloc_r+0xae>
   85e46:	4297      	cmp	r7, r2
   85e48:	da43      	bge.n	85ed2 <_realloc_r+0xbe>
   85e4a:	4bc6      	ldr	r3, [pc, #792]	; (86164 <_realloc_r+0x350>)
   85e4c:	eb09 0007 	add.w	r0, r9, r7
   85e50:	6899      	ldr	r1, [r3, #8]
   85e52:	4288      	cmp	r0, r1
   85e54:	f000 80c3 	beq.w	85fde <_realloc_r+0x1ca>
   85e58:	6843      	ldr	r3, [r0, #4]
   85e5a:	f023 0101 	bic.w	r1, r3, #1
   85e5e:	4401      	add	r1, r0
   85e60:	6849      	ldr	r1, [r1, #4]
   85e62:	07c9      	lsls	r1, r1, #31
   85e64:	d54d      	bpl.n	85f02 <_realloc_r+0xee>
   85e66:	f01e 0f01 	tst.w	lr, #1
   85e6a:	f000 809b 	beq.w	85fa4 <_realloc_r+0x190>
   85e6e:	4629      	mov	r1, r5
   85e70:	4640      	mov	r0, r8
   85e72:	f7ff f965 	bl	85140 <_malloc_r>
   85e76:	4605      	mov	r5, r0
   85e78:	2800      	cmp	r0, #0
   85e7a:	d03b      	beq.n	85ef4 <_realloc_r+0xe0>
   85e7c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85e80:	f1a0 0208 	sub.w	r2, r0, #8
   85e84:	f023 0301 	bic.w	r3, r3, #1
   85e88:	444b      	add	r3, r9
   85e8a:	429a      	cmp	r2, r3
   85e8c:	f000 812b 	beq.w	860e6 <_realloc_r+0x2d2>
   85e90:	1f3a      	subs	r2, r7, #4
   85e92:	2a24      	cmp	r2, #36	; 0x24
   85e94:	f200 8118 	bhi.w	860c8 <_realloc_r+0x2b4>
   85e98:	2a13      	cmp	r2, #19
   85e9a:	f200 80eb 	bhi.w	86074 <_realloc_r+0x260>
   85e9e:	4603      	mov	r3, r0
   85ea0:	4622      	mov	r2, r4
   85ea2:	6811      	ldr	r1, [r2, #0]
   85ea4:	6019      	str	r1, [r3, #0]
   85ea6:	6851      	ldr	r1, [r2, #4]
   85ea8:	6059      	str	r1, [r3, #4]
   85eaa:	6892      	ldr	r2, [r2, #8]
   85eac:	609a      	str	r2, [r3, #8]
   85eae:	4621      	mov	r1, r4
   85eb0:	4640      	mov	r0, r8
   85eb2:	f7ff f84d 	bl	84f50 <_free_r>
   85eb6:	e01d      	b.n	85ef4 <_realloc_r+0xe0>
   85eb8:	f026 0607 	bic.w	r6, r6, #7
   85ebc:	2e00      	cmp	r6, #0
   85ebe:	4632      	mov	r2, r6
   85ec0:	dabf      	bge.n	85e42 <_realloc_r+0x2e>
   85ec2:	2500      	movs	r5, #0
   85ec4:	230c      	movs	r3, #12
   85ec6:	4628      	mov	r0, r5
   85ec8:	f8c8 3000 	str.w	r3, [r8]
   85ecc:	b003      	add	sp, #12
   85ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ed2:	4625      	mov	r5, r4
   85ed4:	1bbb      	subs	r3, r7, r6
   85ed6:	2b0f      	cmp	r3, #15
   85ed8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   85edc:	d81d      	bhi.n	85f1a <_realloc_r+0x106>
   85ede:	f002 0201 	and.w	r2, r2, #1
   85ee2:	433a      	orrs	r2, r7
   85ee4:	eb09 0107 	add.w	r1, r9, r7
   85ee8:	f8c9 2004 	str.w	r2, [r9, #4]
   85eec:	684b      	ldr	r3, [r1, #4]
   85eee:	f043 0301 	orr.w	r3, r3, #1
   85ef2:	604b      	str	r3, [r1, #4]
   85ef4:	4640      	mov	r0, r8
   85ef6:	f7ff fc8b 	bl	85810 <__malloc_unlock>
   85efa:	4628      	mov	r0, r5
   85efc:	b003      	add	sp, #12
   85efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85f02:	f023 0303 	bic.w	r3, r3, #3
   85f06:	18f9      	adds	r1, r7, r3
   85f08:	4291      	cmp	r1, r2
   85f0a:	db1d      	blt.n	85f48 <_realloc_r+0x134>
   85f0c:	68c3      	ldr	r3, [r0, #12]
   85f0e:	6882      	ldr	r2, [r0, #8]
   85f10:	4625      	mov	r5, r4
   85f12:	60d3      	str	r3, [r2, #12]
   85f14:	460f      	mov	r7, r1
   85f16:	609a      	str	r2, [r3, #8]
   85f18:	e7dc      	b.n	85ed4 <_realloc_r+0xc0>
   85f1a:	f002 0201 	and.w	r2, r2, #1
   85f1e:	eb09 0106 	add.w	r1, r9, r6
   85f22:	f043 0301 	orr.w	r3, r3, #1
   85f26:	4332      	orrs	r2, r6
   85f28:	f8c9 2004 	str.w	r2, [r9, #4]
   85f2c:	444f      	add	r7, r9
   85f2e:	604b      	str	r3, [r1, #4]
   85f30:	687b      	ldr	r3, [r7, #4]
   85f32:	3108      	adds	r1, #8
   85f34:	f043 0301 	orr.w	r3, r3, #1
   85f38:	607b      	str	r3, [r7, #4]
   85f3a:	4640      	mov	r0, r8
   85f3c:	f7ff f808 	bl	84f50 <_free_r>
   85f40:	e7d8      	b.n	85ef4 <_realloc_r+0xe0>
   85f42:	4611      	mov	r1, r2
   85f44:	f7ff b8fc 	b.w	85140 <_malloc_r>
   85f48:	f01e 0f01 	tst.w	lr, #1
   85f4c:	d18f      	bne.n	85e6e <_realloc_r+0x5a>
   85f4e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85f52:	eba9 0a01 	sub.w	sl, r9, r1
   85f56:	f8da 1004 	ldr.w	r1, [sl, #4]
   85f5a:	f021 0103 	bic.w	r1, r1, #3
   85f5e:	440b      	add	r3, r1
   85f60:	443b      	add	r3, r7
   85f62:	4293      	cmp	r3, r2
   85f64:	db26      	blt.n	85fb4 <_realloc_r+0x1a0>
   85f66:	4655      	mov	r5, sl
   85f68:	68c1      	ldr	r1, [r0, #12]
   85f6a:	6880      	ldr	r0, [r0, #8]
   85f6c:	1f3a      	subs	r2, r7, #4
   85f6e:	60c1      	str	r1, [r0, #12]
   85f70:	6088      	str	r0, [r1, #8]
   85f72:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85f76:	f8da 100c 	ldr.w	r1, [sl, #12]
   85f7a:	2a24      	cmp	r2, #36	; 0x24
   85f7c:	60c1      	str	r1, [r0, #12]
   85f7e:	6088      	str	r0, [r1, #8]
   85f80:	d826      	bhi.n	85fd0 <_realloc_r+0x1bc>
   85f82:	2a13      	cmp	r2, #19
   85f84:	f240 8081 	bls.w	8608a <_realloc_r+0x276>
   85f88:	6821      	ldr	r1, [r4, #0]
   85f8a:	2a1b      	cmp	r2, #27
   85f8c:	f8ca 1008 	str.w	r1, [sl, #8]
   85f90:	6861      	ldr	r1, [r4, #4]
   85f92:	f8ca 100c 	str.w	r1, [sl, #12]
   85f96:	f200 80ad 	bhi.w	860f4 <_realloc_r+0x2e0>
   85f9a:	f104 0008 	add.w	r0, r4, #8
   85f9e:	f10a 0210 	add.w	r2, sl, #16
   85fa2:	e074      	b.n	8608e <_realloc_r+0x27a>
   85fa4:	f854 3c08 	ldr.w	r3, [r4, #-8]
   85fa8:	eba9 0a03 	sub.w	sl, r9, r3
   85fac:	f8da 1004 	ldr.w	r1, [sl, #4]
   85fb0:	f021 0103 	bic.w	r1, r1, #3
   85fb4:	187b      	adds	r3, r7, r1
   85fb6:	4293      	cmp	r3, r2
   85fb8:	f6ff af59 	blt.w	85e6e <_realloc_r+0x5a>
   85fbc:	4655      	mov	r5, sl
   85fbe:	f8da 100c 	ldr.w	r1, [sl, #12]
   85fc2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85fc6:	1f3a      	subs	r2, r7, #4
   85fc8:	2a24      	cmp	r2, #36	; 0x24
   85fca:	60c1      	str	r1, [r0, #12]
   85fcc:	6088      	str	r0, [r1, #8]
   85fce:	d9d8      	bls.n	85f82 <_realloc_r+0x16e>
   85fd0:	4621      	mov	r1, r4
   85fd2:	4628      	mov	r0, r5
   85fd4:	461f      	mov	r7, r3
   85fd6:	46d1      	mov	r9, sl
   85fd8:	f7ff fbb0 	bl	8573c <memmove>
   85fdc:	e77a      	b.n	85ed4 <_realloc_r+0xc0>
   85fde:	6841      	ldr	r1, [r0, #4]
   85fe0:	f106 0010 	add.w	r0, r6, #16
   85fe4:	f021 0b03 	bic.w	fp, r1, #3
   85fe8:	44bb      	add	fp, r7
   85fea:	4583      	cmp	fp, r0
   85fec:	da58      	bge.n	860a0 <_realloc_r+0x28c>
   85fee:	f01e 0f01 	tst.w	lr, #1
   85ff2:	f47f af3c 	bne.w	85e6e <_realloc_r+0x5a>
   85ff6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85ffa:	eba9 0a01 	sub.w	sl, r9, r1
   85ffe:	f8da 1004 	ldr.w	r1, [sl, #4]
   86002:	f021 0103 	bic.w	r1, r1, #3
   86006:	448b      	add	fp, r1
   86008:	4558      	cmp	r0, fp
   8600a:	dcd3      	bgt.n	85fb4 <_realloc_r+0x1a0>
   8600c:	4655      	mov	r5, sl
   8600e:	f8da 100c 	ldr.w	r1, [sl, #12]
   86012:	f855 0f08 	ldr.w	r0, [r5, #8]!
   86016:	1f3a      	subs	r2, r7, #4
   86018:	2a24      	cmp	r2, #36	; 0x24
   8601a:	60c1      	str	r1, [r0, #12]
   8601c:	6088      	str	r0, [r1, #8]
   8601e:	f200 808d 	bhi.w	8613c <_realloc_r+0x328>
   86022:	2a13      	cmp	r2, #19
   86024:	f240 8087 	bls.w	86136 <_realloc_r+0x322>
   86028:	6821      	ldr	r1, [r4, #0]
   8602a:	2a1b      	cmp	r2, #27
   8602c:	f8ca 1008 	str.w	r1, [sl, #8]
   86030:	6861      	ldr	r1, [r4, #4]
   86032:	f8ca 100c 	str.w	r1, [sl, #12]
   86036:	f200 8088 	bhi.w	8614a <_realloc_r+0x336>
   8603a:	f104 0108 	add.w	r1, r4, #8
   8603e:	f10a 0210 	add.w	r2, sl, #16
   86042:	6808      	ldr	r0, [r1, #0]
   86044:	6010      	str	r0, [r2, #0]
   86046:	6848      	ldr	r0, [r1, #4]
   86048:	6050      	str	r0, [r2, #4]
   8604a:	6889      	ldr	r1, [r1, #8]
   8604c:	6091      	str	r1, [r2, #8]
   8604e:	ebab 0206 	sub.w	r2, fp, r6
   86052:	eb0a 0106 	add.w	r1, sl, r6
   86056:	f042 0201 	orr.w	r2, r2, #1
   8605a:	6099      	str	r1, [r3, #8]
   8605c:	604a      	str	r2, [r1, #4]
   8605e:	f8da 3004 	ldr.w	r3, [sl, #4]
   86062:	4640      	mov	r0, r8
   86064:	f003 0301 	and.w	r3, r3, #1
   86068:	431e      	orrs	r6, r3
   8606a:	f8ca 6004 	str.w	r6, [sl, #4]
   8606e:	f7ff fbcf 	bl	85810 <__malloc_unlock>
   86072:	e742      	b.n	85efa <_realloc_r+0xe6>
   86074:	6823      	ldr	r3, [r4, #0]
   86076:	2a1b      	cmp	r2, #27
   86078:	6003      	str	r3, [r0, #0]
   8607a:	6863      	ldr	r3, [r4, #4]
   8607c:	6043      	str	r3, [r0, #4]
   8607e:	d827      	bhi.n	860d0 <_realloc_r+0x2bc>
   86080:	f100 0308 	add.w	r3, r0, #8
   86084:	f104 0208 	add.w	r2, r4, #8
   86088:	e70b      	b.n	85ea2 <_realloc_r+0x8e>
   8608a:	4620      	mov	r0, r4
   8608c:	462a      	mov	r2, r5
   8608e:	6801      	ldr	r1, [r0, #0]
   86090:	461f      	mov	r7, r3
   86092:	6011      	str	r1, [r2, #0]
   86094:	6841      	ldr	r1, [r0, #4]
   86096:	46d1      	mov	r9, sl
   86098:	6051      	str	r1, [r2, #4]
   8609a:	6883      	ldr	r3, [r0, #8]
   8609c:	6093      	str	r3, [r2, #8]
   8609e:	e719      	b.n	85ed4 <_realloc_r+0xc0>
   860a0:	ebab 0b06 	sub.w	fp, fp, r6
   860a4:	eb09 0106 	add.w	r1, r9, r6
   860a8:	f04b 0201 	orr.w	r2, fp, #1
   860ac:	6099      	str	r1, [r3, #8]
   860ae:	604a      	str	r2, [r1, #4]
   860b0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   860b4:	4640      	mov	r0, r8
   860b6:	f003 0301 	and.w	r3, r3, #1
   860ba:	431e      	orrs	r6, r3
   860bc:	f844 6c04 	str.w	r6, [r4, #-4]
   860c0:	f7ff fba6 	bl	85810 <__malloc_unlock>
   860c4:	4625      	mov	r5, r4
   860c6:	e718      	b.n	85efa <_realloc_r+0xe6>
   860c8:	4621      	mov	r1, r4
   860ca:	f7ff fb37 	bl	8573c <memmove>
   860ce:	e6ee      	b.n	85eae <_realloc_r+0x9a>
   860d0:	68a3      	ldr	r3, [r4, #8]
   860d2:	2a24      	cmp	r2, #36	; 0x24
   860d4:	6083      	str	r3, [r0, #8]
   860d6:	68e3      	ldr	r3, [r4, #12]
   860d8:	60c3      	str	r3, [r0, #12]
   860da:	d018      	beq.n	8610e <_realloc_r+0x2fa>
   860dc:	f100 0310 	add.w	r3, r0, #16
   860e0:	f104 0210 	add.w	r2, r4, #16
   860e4:	e6dd      	b.n	85ea2 <_realloc_r+0x8e>
   860e6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   860ea:	4625      	mov	r5, r4
   860ec:	f023 0303 	bic.w	r3, r3, #3
   860f0:	441f      	add	r7, r3
   860f2:	e6ef      	b.n	85ed4 <_realloc_r+0xc0>
   860f4:	68a1      	ldr	r1, [r4, #8]
   860f6:	2a24      	cmp	r2, #36	; 0x24
   860f8:	f8ca 1010 	str.w	r1, [sl, #16]
   860fc:	68e1      	ldr	r1, [r4, #12]
   860fe:	f8ca 1014 	str.w	r1, [sl, #20]
   86102:	d00d      	beq.n	86120 <_realloc_r+0x30c>
   86104:	f104 0010 	add.w	r0, r4, #16
   86108:	f10a 0218 	add.w	r2, sl, #24
   8610c:	e7bf      	b.n	8608e <_realloc_r+0x27a>
   8610e:	6922      	ldr	r2, [r4, #16]
   86110:	f100 0318 	add.w	r3, r0, #24
   86114:	6102      	str	r2, [r0, #16]
   86116:	6961      	ldr	r1, [r4, #20]
   86118:	f104 0218 	add.w	r2, r4, #24
   8611c:	6141      	str	r1, [r0, #20]
   8611e:	e6c0      	b.n	85ea2 <_realloc_r+0x8e>
   86120:	6922      	ldr	r2, [r4, #16]
   86122:	f104 0018 	add.w	r0, r4, #24
   86126:	f8ca 2018 	str.w	r2, [sl, #24]
   8612a:	6961      	ldr	r1, [r4, #20]
   8612c:	f10a 0220 	add.w	r2, sl, #32
   86130:	f8ca 101c 	str.w	r1, [sl, #28]
   86134:	e7ab      	b.n	8608e <_realloc_r+0x27a>
   86136:	4621      	mov	r1, r4
   86138:	462a      	mov	r2, r5
   8613a:	e782      	b.n	86042 <_realloc_r+0x22e>
   8613c:	4621      	mov	r1, r4
   8613e:	4628      	mov	r0, r5
   86140:	9301      	str	r3, [sp, #4]
   86142:	f7ff fafb 	bl	8573c <memmove>
   86146:	9b01      	ldr	r3, [sp, #4]
   86148:	e781      	b.n	8604e <_realloc_r+0x23a>
   8614a:	68a1      	ldr	r1, [r4, #8]
   8614c:	2a24      	cmp	r2, #36	; 0x24
   8614e:	f8ca 1010 	str.w	r1, [sl, #16]
   86152:	68e1      	ldr	r1, [r4, #12]
   86154:	f8ca 1014 	str.w	r1, [sl, #20]
   86158:	d006      	beq.n	86168 <_realloc_r+0x354>
   8615a:	f104 0110 	add.w	r1, r4, #16
   8615e:	f10a 0218 	add.w	r2, sl, #24
   86162:	e76e      	b.n	86042 <_realloc_r+0x22e>
   86164:	20070780 	.word	0x20070780
   86168:	6922      	ldr	r2, [r4, #16]
   8616a:	f104 0118 	add.w	r1, r4, #24
   8616e:	f8ca 2018 	str.w	r2, [sl, #24]
   86172:	6960      	ldr	r0, [r4, #20]
   86174:	f10a 0220 	add.w	r2, sl, #32
   86178:	f8ca 001c 	str.w	r0, [sl, #28]
   8617c:	e761      	b.n	86042 <_realloc_r+0x22e>
   8617e:	bf00      	nop

00086180 <_sbrk_r>:
   86180:	b538      	push	{r3, r4, r5, lr}
   86182:	2300      	movs	r3, #0
   86184:	4c06      	ldr	r4, [pc, #24]	; (861a0 <_sbrk_r+0x20>)
   86186:	4605      	mov	r5, r0
   86188:	4608      	mov	r0, r1
   8618a:	6023      	str	r3, [r4, #0]
   8618c:	f7fc fa0a 	bl	825a4 <_sbrk>
   86190:	1c43      	adds	r3, r0, #1
   86192:	d000      	beq.n	86196 <_sbrk_r+0x16>
   86194:	bd38      	pop	{r3, r4, r5, pc}
   86196:	6823      	ldr	r3, [r4, #0]
   86198:	2b00      	cmp	r3, #0
   8619a:	d0fb      	beq.n	86194 <_sbrk_r+0x14>
   8619c:	602b      	str	r3, [r5, #0]
   8619e:	bd38      	pop	{r3, r4, r5, pc}
   861a0:	20070e48 	.word	0x20070e48

000861a4 <__ssprint_r>:
   861a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   861a8:	6893      	ldr	r3, [r2, #8]
   861aa:	b083      	sub	sp, #12
   861ac:	4690      	mov	r8, r2
   861ae:	2b00      	cmp	r3, #0
   861b0:	d070      	beq.n	86294 <__ssprint_r+0xf0>
   861b2:	4682      	mov	sl, r0
   861b4:	460c      	mov	r4, r1
   861b6:	6817      	ldr	r7, [r2, #0]
   861b8:	688d      	ldr	r5, [r1, #8]
   861ba:	6808      	ldr	r0, [r1, #0]
   861bc:	e042      	b.n	86244 <__ssprint_r+0xa0>
   861be:	89a3      	ldrh	r3, [r4, #12]
   861c0:	f413 6f90 	tst.w	r3, #1152	; 0x480
   861c4:	d02e      	beq.n	86224 <__ssprint_r+0x80>
   861c6:	6965      	ldr	r5, [r4, #20]
   861c8:	6921      	ldr	r1, [r4, #16]
   861ca:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   861ce:	eba0 0b01 	sub.w	fp, r0, r1
   861d2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   861d6:	f10b 0001 	add.w	r0, fp, #1
   861da:	106d      	asrs	r5, r5, #1
   861dc:	4430      	add	r0, r6
   861de:	42a8      	cmp	r0, r5
   861e0:	462a      	mov	r2, r5
   861e2:	bf84      	itt	hi
   861e4:	4605      	movhi	r5, r0
   861e6:	462a      	movhi	r2, r5
   861e8:	055b      	lsls	r3, r3, #21
   861ea:	d538      	bpl.n	8625e <__ssprint_r+0xba>
   861ec:	4611      	mov	r1, r2
   861ee:	4650      	mov	r0, sl
   861f0:	f7fe ffa6 	bl	85140 <_malloc_r>
   861f4:	2800      	cmp	r0, #0
   861f6:	d03c      	beq.n	86272 <__ssprint_r+0xce>
   861f8:	465a      	mov	r2, fp
   861fa:	6921      	ldr	r1, [r4, #16]
   861fc:	9001      	str	r0, [sp, #4]
   861fe:	f7fc fab9 	bl	82774 <memcpy>
   86202:	89a2      	ldrh	r2, [r4, #12]
   86204:	9b01      	ldr	r3, [sp, #4]
   86206:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8620a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8620e:	81a2      	strh	r2, [r4, #12]
   86210:	eba5 020b 	sub.w	r2, r5, fp
   86214:	eb03 000b 	add.w	r0, r3, fp
   86218:	6165      	str	r5, [r4, #20]
   8621a:	46b3      	mov	fp, r6
   8621c:	4635      	mov	r5, r6
   8621e:	6123      	str	r3, [r4, #16]
   86220:	6020      	str	r0, [r4, #0]
   86222:	60a2      	str	r2, [r4, #8]
   86224:	465a      	mov	r2, fp
   86226:	4649      	mov	r1, r9
   86228:	f7ff fa88 	bl	8573c <memmove>
   8622c:	f8d8 3008 	ldr.w	r3, [r8, #8]
   86230:	68a2      	ldr	r2, [r4, #8]
   86232:	6820      	ldr	r0, [r4, #0]
   86234:	1b55      	subs	r5, r2, r5
   86236:	4458      	add	r0, fp
   86238:	1b9e      	subs	r6, r3, r6
   8623a:	60a5      	str	r5, [r4, #8]
   8623c:	6020      	str	r0, [r4, #0]
   8623e:	f8c8 6008 	str.w	r6, [r8, #8]
   86242:	b33e      	cbz	r6, 86294 <__ssprint_r+0xf0>
   86244:	687e      	ldr	r6, [r7, #4]
   86246:	463b      	mov	r3, r7
   86248:	3708      	adds	r7, #8
   8624a:	2e00      	cmp	r6, #0
   8624c:	d0fa      	beq.n	86244 <__ssprint_r+0xa0>
   8624e:	42ae      	cmp	r6, r5
   86250:	f8d3 9000 	ldr.w	r9, [r3]
   86254:	46ab      	mov	fp, r5
   86256:	d2b2      	bcs.n	861be <__ssprint_r+0x1a>
   86258:	4635      	mov	r5, r6
   8625a:	46b3      	mov	fp, r6
   8625c:	e7e2      	b.n	86224 <__ssprint_r+0x80>
   8625e:	4650      	mov	r0, sl
   86260:	f7ff fdd8 	bl	85e14 <_realloc_r>
   86264:	4603      	mov	r3, r0
   86266:	2800      	cmp	r0, #0
   86268:	d1d2      	bne.n	86210 <__ssprint_r+0x6c>
   8626a:	6921      	ldr	r1, [r4, #16]
   8626c:	4650      	mov	r0, sl
   8626e:	f7fe fe6f 	bl	84f50 <_free_r>
   86272:	230c      	movs	r3, #12
   86274:	2200      	movs	r2, #0
   86276:	f04f 30ff 	mov.w	r0, #4294967295
   8627a:	f8ca 3000 	str.w	r3, [sl]
   8627e:	89a3      	ldrh	r3, [r4, #12]
   86280:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86284:	81a3      	strh	r3, [r4, #12]
   86286:	f8c8 2008 	str.w	r2, [r8, #8]
   8628a:	f8c8 2004 	str.w	r2, [r8, #4]
   8628e:	b003      	add	sp, #12
   86290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86294:	2000      	movs	r0, #0
   86296:	f8c8 0004 	str.w	r0, [r8, #4]
   8629a:	b003      	add	sp, #12
   8629c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000862a0 <__ascii_wctomb>:
   862a0:	b119      	cbz	r1, 862aa <__ascii_wctomb+0xa>
   862a2:	2aff      	cmp	r2, #255	; 0xff
   862a4:	d803      	bhi.n	862ae <__ascii_wctomb+0xe>
   862a6:	700a      	strb	r2, [r1, #0]
   862a8:	2101      	movs	r1, #1
   862aa:	4608      	mov	r0, r1
   862ac:	4770      	bx	lr
   862ae:	238a      	movs	r3, #138	; 0x8a
   862b0:	f04f 31ff 	mov.w	r1, #4294967295
   862b4:	6003      	str	r3, [r0, #0]
   862b6:	e7f8      	b.n	862aa <__ascii_wctomb+0xa>

000862b8 <__register_exitproc>:
   862b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   862bc:	4d2c      	ldr	r5, [pc, #176]	; (86370 <__register_exitproc+0xb8>)
   862be:	4606      	mov	r6, r0
   862c0:	6828      	ldr	r0, [r5, #0]
   862c2:	4698      	mov	r8, r3
   862c4:	460f      	mov	r7, r1
   862c6:	4691      	mov	r9, r2
   862c8:	f7fe ff36 	bl	85138 <__retarget_lock_acquire_recursive>
   862cc:	4b29      	ldr	r3, [pc, #164]	; (86374 <__register_exitproc+0xbc>)
   862ce:	681c      	ldr	r4, [r3, #0]
   862d0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   862d4:	2b00      	cmp	r3, #0
   862d6:	d03e      	beq.n	86356 <__register_exitproc+0x9e>
   862d8:	685a      	ldr	r2, [r3, #4]
   862da:	2a1f      	cmp	r2, #31
   862dc:	dc1c      	bgt.n	86318 <__register_exitproc+0x60>
   862de:	f102 0e01 	add.w	lr, r2, #1
   862e2:	b176      	cbz	r6, 86302 <__register_exitproc+0x4a>
   862e4:	2101      	movs	r1, #1
   862e6:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   862ea:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   862ee:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   862f2:	4091      	lsls	r1, r2
   862f4:	4308      	orrs	r0, r1
   862f6:	2e02      	cmp	r6, #2
   862f8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   862fc:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   86300:	d023      	beq.n	8634a <__register_exitproc+0x92>
   86302:	3202      	adds	r2, #2
   86304:	f8c3 e004 	str.w	lr, [r3, #4]
   86308:	6828      	ldr	r0, [r5, #0]
   8630a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   8630e:	f7fe ff15 	bl	8513c <__retarget_lock_release_recursive>
   86312:	2000      	movs	r0, #0
   86314:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   86318:	4b17      	ldr	r3, [pc, #92]	; (86378 <__register_exitproc+0xc0>)
   8631a:	b30b      	cbz	r3, 86360 <__register_exitproc+0xa8>
   8631c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   86320:	f3af 8000 	nop.w
   86324:	4603      	mov	r3, r0
   86326:	b1d8      	cbz	r0, 86360 <__register_exitproc+0xa8>
   86328:	2000      	movs	r0, #0
   8632a:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8632e:	f04f 0e01 	mov.w	lr, #1
   86332:	6058      	str	r0, [r3, #4]
   86334:	6019      	str	r1, [r3, #0]
   86336:	4602      	mov	r2, r0
   86338:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8633c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   86340:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   86344:	2e00      	cmp	r6, #0
   86346:	d0dc      	beq.n	86302 <__register_exitproc+0x4a>
   86348:	e7cc      	b.n	862e4 <__register_exitproc+0x2c>
   8634a:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   8634e:	4301      	orrs	r1, r0
   86350:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   86354:	e7d5      	b.n	86302 <__register_exitproc+0x4a>
   86356:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8635a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8635e:	e7bb      	b.n	862d8 <__register_exitproc+0x20>
   86360:	6828      	ldr	r0, [r5, #0]
   86362:	f7fe feeb 	bl	8513c <__retarget_lock_release_recursive>
   86366:	f04f 30ff 	mov.w	r0, #4294967295
   8636a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8636e:	bf00      	nop
   86370:	20070610 	.word	0x20070610
   86374:	00087040 	.word	0x00087040
   86378:	00000000 	.word	0x00000000

0008637c <_calloc_r>:
   8637c:	b510      	push	{r4, lr}
   8637e:	fb02 f101 	mul.w	r1, r2, r1
   86382:	f7fe fedd 	bl	85140 <_malloc_r>
   86386:	4604      	mov	r4, r0
   86388:	b1d8      	cbz	r0, 863c2 <_calloc_r+0x46>
   8638a:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8638e:	f022 0203 	bic.w	r2, r2, #3
   86392:	3a04      	subs	r2, #4
   86394:	2a24      	cmp	r2, #36	; 0x24
   86396:	d818      	bhi.n	863ca <_calloc_r+0x4e>
   86398:	2a13      	cmp	r2, #19
   8639a:	d914      	bls.n	863c6 <_calloc_r+0x4a>
   8639c:	2300      	movs	r3, #0
   8639e:	2a1b      	cmp	r2, #27
   863a0:	6003      	str	r3, [r0, #0]
   863a2:	6043      	str	r3, [r0, #4]
   863a4:	d916      	bls.n	863d4 <_calloc_r+0x58>
   863a6:	2a24      	cmp	r2, #36	; 0x24
   863a8:	6083      	str	r3, [r0, #8]
   863aa:	60c3      	str	r3, [r0, #12]
   863ac:	bf11      	iteee	ne
   863ae:	f100 0210 	addne.w	r2, r0, #16
   863b2:	6103      	streq	r3, [r0, #16]
   863b4:	6143      	streq	r3, [r0, #20]
   863b6:	f100 0218 	addeq.w	r2, r0, #24
   863ba:	2300      	movs	r3, #0
   863bc:	6013      	str	r3, [r2, #0]
   863be:	6053      	str	r3, [r2, #4]
   863c0:	6093      	str	r3, [r2, #8]
   863c2:	4620      	mov	r0, r4
   863c4:	bd10      	pop	{r4, pc}
   863c6:	4602      	mov	r2, r0
   863c8:	e7f7      	b.n	863ba <_calloc_r+0x3e>
   863ca:	2100      	movs	r1, #0
   863cc:	f7fc fa48 	bl	82860 <memset>
   863d0:	4620      	mov	r0, r4
   863d2:	bd10      	pop	{r4, pc}
   863d4:	f100 0208 	add.w	r2, r0, #8
   863d8:	e7ef      	b.n	863ba <_calloc_r+0x3e>
   863da:	bf00      	nop

000863dc <__aeabi_drsub>:
   863dc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   863e0:	e002      	b.n	863e8 <__adddf3>
   863e2:	bf00      	nop

000863e4 <__aeabi_dsub>:
   863e4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000863e8 <__adddf3>:
   863e8:	b530      	push	{r4, r5, lr}
   863ea:	ea4f 0441 	mov.w	r4, r1, lsl #1
   863ee:	ea4f 0543 	mov.w	r5, r3, lsl #1
   863f2:	ea94 0f05 	teq	r4, r5
   863f6:	bf08      	it	eq
   863f8:	ea90 0f02 	teqeq	r0, r2
   863fc:	bf1f      	itttt	ne
   863fe:	ea54 0c00 	orrsne.w	ip, r4, r0
   86402:	ea55 0c02 	orrsne.w	ip, r5, r2
   86406:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8640a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8640e:	f000 80e2 	beq.w	865d6 <__adddf3+0x1ee>
   86412:	ea4f 5454 	mov.w	r4, r4, lsr #21
   86416:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8641a:	bfb8      	it	lt
   8641c:	426d      	neglt	r5, r5
   8641e:	dd0c      	ble.n	8643a <__adddf3+0x52>
   86420:	442c      	add	r4, r5
   86422:	ea80 0202 	eor.w	r2, r0, r2
   86426:	ea81 0303 	eor.w	r3, r1, r3
   8642a:	ea82 0000 	eor.w	r0, r2, r0
   8642e:	ea83 0101 	eor.w	r1, r3, r1
   86432:	ea80 0202 	eor.w	r2, r0, r2
   86436:	ea81 0303 	eor.w	r3, r1, r3
   8643a:	2d36      	cmp	r5, #54	; 0x36
   8643c:	bf88      	it	hi
   8643e:	bd30      	pophi	{r4, r5, pc}
   86440:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86444:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86448:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   8644c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   86450:	d002      	beq.n	86458 <__adddf3+0x70>
   86452:	4240      	negs	r0, r0
   86454:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86458:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   8645c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86460:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   86464:	d002      	beq.n	8646c <__adddf3+0x84>
   86466:	4252      	negs	r2, r2
   86468:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8646c:	ea94 0f05 	teq	r4, r5
   86470:	f000 80a7 	beq.w	865c2 <__adddf3+0x1da>
   86474:	f1a4 0401 	sub.w	r4, r4, #1
   86478:	f1d5 0e20 	rsbs	lr, r5, #32
   8647c:	db0d      	blt.n	8649a <__adddf3+0xb2>
   8647e:	fa02 fc0e 	lsl.w	ip, r2, lr
   86482:	fa22 f205 	lsr.w	r2, r2, r5
   86486:	1880      	adds	r0, r0, r2
   86488:	f141 0100 	adc.w	r1, r1, #0
   8648c:	fa03 f20e 	lsl.w	r2, r3, lr
   86490:	1880      	adds	r0, r0, r2
   86492:	fa43 f305 	asr.w	r3, r3, r5
   86496:	4159      	adcs	r1, r3
   86498:	e00e      	b.n	864b8 <__adddf3+0xd0>
   8649a:	f1a5 0520 	sub.w	r5, r5, #32
   8649e:	f10e 0e20 	add.w	lr, lr, #32
   864a2:	2a01      	cmp	r2, #1
   864a4:	fa03 fc0e 	lsl.w	ip, r3, lr
   864a8:	bf28      	it	cs
   864aa:	f04c 0c02 	orrcs.w	ip, ip, #2
   864ae:	fa43 f305 	asr.w	r3, r3, r5
   864b2:	18c0      	adds	r0, r0, r3
   864b4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   864b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   864bc:	d507      	bpl.n	864ce <__adddf3+0xe6>
   864be:	f04f 0e00 	mov.w	lr, #0
   864c2:	f1dc 0c00 	rsbs	ip, ip, #0
   864c6:	eb7e 0000 	sbcs.w	r0, lr, r0
   864ca:	eb6e 0101 	sbc.w	r1, lr, r1
   864ce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   864d2:	d31b      	bcc.n	8650c <__adddf3+0x124>
   864d4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   864d8:	d30c      	bcc.n	864f4 <__adddf3+0x10c>
   864da:	0849      	lsrs	r1, r1, #1
   864dc:	ea5f 0030 	movs.w	r0, r0, rrx
   864e0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   864e4:	f104 0401 	add.w	r4, r4, #1
   864e8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   864ec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   864f0:	f080 809a 	bcs.w	86628 <__adddf3+0x240>
   864f4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   864f8:	bf08      	it	eq
   864fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   864fe:	f150 0000 	adcs.w	r0, r0, #0
   86502:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86506:	ea41 0105 	orr.w	r1, r1, r5
   8650a:	bd30      	pop	{r4, r5, pc}
   8650c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   86510:	4140      	adcs	r0, r0
   86512:	eb41 0101 	adc.w	r1, r1, r1
   86516:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8651a:	f1a4 0401 	sub.w	r4, r4, #1
   8651e:	d1e9      	bne.n	864f4 <__adddf3+0x10c>
   86520:	f091 0f00 	teq	r1, #0
   86524:	bf04      	itt	eq
   86526:	4601      	moveq	r1, r0
   86528:	2000      	moveq	r0, #0
   8652a:	fab1 f381 	clz	r3, r1
   8652e:	bf08      	it	eq
   86530:	3320      	addeq	r3, #32
   86532:	f1a3 030b 	sub.w	r3, r3, #11
   86536:	f1b3 0220 	subs.w	r2, r3, #32
   8653a:	da0c      	bge.n	86556 <__adddf3+0x16e>
   8653c:	320c      	adds	r2, #12
   8653e:	dd08      	ble.n	86552 <__adddf3+0x16a>
   86540:	f102 0c14 	add.w	ip, r2, #20
   86544:	f1c2 020c 	rsb	r2, r2, #12
   86548:	fa01 f00c 	lsl.w	r0, r1, ip
   8654c:	fa21 f102 	lsr.w	r1, r1, r2
   86550:	e00c      	b.n	8656c <__adddf3+0x184>
   86552:	f102 0214 	add.w	r2, r2, #20
   86556:	bfd8      	it	le
   86558:	f1c2 0c20 	rsble	ip, r2, #32
   8655c:	fa01 f102 	lsl.w	r1, r1, r2
   86560:	fa20 fc0c 	lsr.w	ip, r0, ip
   86564:	bfdc      	itt	le
   86566:	ea41 010c 	orrle.w	r1, r1, ip
   8656a:	4090      	lslle	r0, r2
   8656c:	1ae4      	subs	r4, r4, r3
   8656e:	bfa2      	ittt	ge
   86570:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   86574:	4329      	orrge	r1, r5
   86576:	bd30      	popge	{r4, r5, pc}
   86578:	ea6f 0404 	mvn.w	r4, r4
   8657c:	3c1f      	subs	r4, #31
   8657e:	da1c      	bge.n	865ba <__adddf3+0x1d2>
   86580:	340c      	adds	r4, #12
   86582:	dc0e      	bgt.n	865a2 <__adddf3+0x1ba>
   86584:	f104 0414 	add.w	r4, r4, #20
   86588:	f1c4 0220 	rsb	r2, r4, #32
   8658c:	fa20 f004 	lsr.w	r0, r0, r4
   86590:	fa01 f302 	lsl.w	r3, r1, r2
   86594:	ea40 0003 	orr.w	r0, r0, r3
   86598:	fa21 f304 	lsr.w	r3, r1, r4
   8659c:	ea45 0103 	orr.w	r1, r5, r3
   865a0:	bd30      	pop	{r4, r5, pc}
   865a2:	f1c4 040c 	rsb	r4, r4, #12
   865a6:	f1c4 0220 	rsb	r2, r4, #32
   865aa:	fa20 f002 	lsr.w	r0, r0, r2
   865ae:	fa01 f304 	lsl.w	r3, r1, r4
   865b2:	ea40 0003 	orr.w	r0, r0, r3
   865b6:	4629      	mov	r1, r5
   865b8:	bd30      	pop	{r4, r5, pc}
   865ba:	fa21 f004 	lsr.w	r0, r1, r4
   865be:	4629      	mov	r1, r5
   865c0:	bd30      	pop	{r4, r5, pc}
   865c2:	f094 0f00 	teq	r4, #0
   865c6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   865ca:	bf06      	itte	eq
   865cc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   865d0:	3401      	addeq	r4, #1
   865d2:	3d01      	subne	r5, #1
   865d4:	e74e      	b.n	86474 <__adddf3+0x8c>
   865d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   865da:	bf18      	it	ne
   865dc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   865e0:	d029      	beq.n	86636 <__adddf3+0x24e>
   865e2:	ea94 0f05 	teq	r4, r5
   865e6:	bf08      	it	eq
   865e8:	ea90 0f02 	teqeq	r0, r2
   865ec:	d005      	beq.n	865fa <__adddf3+0x212>
   865ee:	ea54 0c00 	orrs.w	ip, r4, r0
   865f2:	bf04      	itt	eq
   865f4:	4619      	moveq	r1, r3
   865f6:	4610      	moveq	r0, r2
   865f8:	bd30      	pop	{r4, r5, pc}
   865fa:	ea91 0f03 	teq	r1, r3
   865fe:	bf1e      	ittt	ne
   86600:	2100      	movne	r1, #0
   86602:	2000      	movne	r0, #0
   86604:	bd30      	popne	{r4, r5, pc}
   86606:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8660a:	d105      	bne.n	86618 <__adddf3+0x230>
   8660c:	0040      	lsls	r0, r0, #1
   8660e:	4149      	adcs	r1, r1
   86610:	bf28      	it	cs
   86612:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   86616:	bd30      	pop	{r4, r5, pc}
   86618:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8661c:	bf3c      	itt	cc
   8661e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   86622:	bd30      	popcc	{r4, r5, pc}
   86624:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86628:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8662c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86630:	f04f 0000 	mov.w	r0, #0
   86634:	bd30      	pop	{r4, r5, pc}
   86636:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8663a:	bf1a      	itte	ne
   8663c:	4619      	movne	r1, r3
   8663e:	4610      	movne	r0, r2
   86640:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   86644:	bf1c      	itt	ne
   86646:	460b      	movne	r3, r1
   86648:	4602      	movne	r2, r0
   8664a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8664e:	bf06      	itte	eq
   86650:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   86654:	ea91 0f03 	teqeq	r1, r3
   86658:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8665c:	bd30      	pop	{r4, r5, pc}
   8665e:	bf00      	nop

00086660 <__aeabi_ui2d>:
   86660:	f090 0f00 	teq	r0, #0
   86664:	bf04      	itt	eq
   86666:	2100      	moveq	r1, #0
   86668:	4770      	bxeq	lr
   8666a:	b530      	push	{r4, r5, lr}
   8666c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86670:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86674:	f04f 0500 	mov.w	r5, #0
   86678:	f04f 0100 	mov.w	r1, #0
   8667c:	e750      	b.n	86520 <__adddf3+0x138>
   8667e:	bf00      	nop

00086680 <__aeabi_i2d>:
   86680:	f090 0f00 	teq	r0, #0
   86684:	bf04      	itt	eq
   86686:	2100      	moveq	r1, #0
   86688:	4770      	bxeq	lr
   8668a:	b530      	push	{r4, r5, lr}
   8668c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86690:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86694:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   86698:	bf48      	it	mi
   8669a:	4240      	negmi	r0, r0
   8669c:	f04f 0100 	mov.w	r1, #0
   866a0:	e73e      	b.n	86520 <__adddf3+0x138>
   866a2:	bf00      	nop

000866a4 <__aeabi_f2d>:
   866a4:	0042      	lsls	r2, r0, #1
   866a6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   866aa:	ea4f 0131 	mov.w	r1, r1, rrx
   866ae:	ea4f 7002 	mov.w	r0, r2, lsl #28
   866b2:	bf1f      	itttt	ne
   866b4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   866b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   866bc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   866c0:	4770      	bxne	lr
   866c2:	f092 0f00 	teq	r2, #0
   866c6:	bf14      	ite	ne
   866c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   866cc:	4770      	bxeq	lr
   866ce:	b530      	push	{r4, r5, lr}
   866d0:	f44f 7460 	mov.w	r4, #896	; 0x380
   866d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   866d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   866dc:	e720      	b.n	86520 <__adddf3+0x138>
   866de:	bf00      	nop

000866e0 <__aeabi_ul2d>:
   866e0:	ea50 0201 	orrs.w	r2, r0, r1
   866e4:	bf08      	it	eq
   866e6:	4770      	bxeq	lr
   866e8:	b530      	push	{r4, r5, lr}
   866ea:	f04f 0500 	mov.w	r5, #0
   866ee:	e00a      	b.n	86706 <__aeabi_l2d+0x16>

000866f0 <__aeabi_l2d>:
   866f0:	ea50 0201 	orrs.w	r2, r0, r1
   866f4:	bf08      	it	eq
   866f6:	4770      	bxeq	lr
   866f8:	b530      	push	{r4, r5, lr}
   866fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   866fe:	d502      	bpl.n	86706 <__aeabi_l2d+0x16>
   86700:	4240      	negs	r0, r0
   86702:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86706:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8670a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8670e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   86712:	f43f aedc 	beq.w	864ce <__adddf3+0xe6>
   86716:	f04f 0203 	mov.w	r2, #3
   8671a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8671e:	bf18      	it	ne
   86720:	3203      	addne	r2, #3
   86722:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86726:	bf18      	it	ne
   86728:	3203      	addne	r2, #3
   8672a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8672e:	f1c2 0320 	rsb	r3, r2, #32
   86732:	fa00 fc03 	lsl.w	ip, r0, r3
   86736:	fa20 f002 	lsr.w	r0, r0, r2
   8673a:	fa01 fe03 	lsl.w	lr, r1, r3
   8673e:	ea40 000e 	orr.w	r0, r0, lr
   86742:	fa21 f102 	lsr.w	r1, r1, r2
   86746:	4414      	add	r4, r2
   86748:	e6c1      	b.n	864ce <__adddf3+0xe6>
   8674a:	bf00      	nop

0008674c <__aeabi_dmul>:
   8674c:	b570      	push	{r4, r5, r6, lr}
   8674e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   86756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8675a:	bf1d      	ittte	ne
   8675c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86760:	ea94 0f0c 	teqne	r4, ip
   86764:	ea95 0f0c 	teqne	r5, ip
   86768:	f000 f8de 	bleq	86928 <__aeabi_dmul+0x1dc>
   8676c:	442c      	add	r4, r5
   8676e:	ea81 0603 	eor.w	r6, r1, r3
   86772:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   86776:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8677a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8677e:	bf18      	it	ne
   86780:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   86784:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86788:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8678c:	d038      	beq.n	86800 <__aeabi_dmul+0xb4>
   8678e:	fba0 ce02 	umull	ip, lr, r0, r2
   86792:	f04f 0500 	mov.w	r5, #0
   86796:	fbe1 e502 	umlal	lr, r5, r1, r2
   8679a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8679e:	fbe0 e503 	umlal	lr, r5, r0, r3
   867a2:	f04f 0600 	mov.w	r6, #0
   867a6:	fbe1 5603 	umlal	r5, r6, r1, r3
   867aa:	f09c 0f00 	teq	ip, #0
   867ae:	bf18      	it	ne
   867b0:	f04e 0e01 	orrne.w	lr, lr, #1
   867b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   867b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   867bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   867c0:	d204      	bcs.n	867cc <__aeabi_dmul+0x80>
   867c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   867c6:	416d      	adcs	r5, r5
   867c8:	eb46 0606 	adc.w	r6, r6, r6
   867cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   867d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   867d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   867d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   867dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   867e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   867e4:	bf88      	it	hi
   867e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   867ea:	d81e      	bhi.n	8682a <__aeabi_dmul+0xde>
   867ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   867f0:	bf08      	it	eq
   867f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   867f6:	f150 0000 	adcs.w	r0, r0, #0
   867fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   867fe:	bd70      	pop	{r4, r5, r6, pc}
   86800:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   86804:	ea46 0101 	orr.w	r1, r6, r1
   86808:	ea40 0002 	orr.w	r0, r0, r2
   8680c:	ea81 0103 	eor.w	r1, r1, r3
   86810:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   86814:	bfc2      	ittt	gt
   86816:	ebd4 050c 	rsbsgt	r5, r4, ip
   8681a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8681e:	bd70      	popgt	{r4, r5, r6, pc}
   86820:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86824:	f04f 0e00 	mov.w	lr, #0
   86828:	3c01      	subs	r4, #1
   8682a:	f300 80ab 	bgt.w	86984 <__aeabi_dmul+0x238>
   8682e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   86832:	bfde      	ittt	le
   86834:	2000      	movle	r0, #0
   86836:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8683a:	bd70      	pople	{r4, r5, r6, pc}
   8683c:	f1c4 0400 	rsb	r4, r4, #0
   86840:	3c20      	subs	r4, #32
   86842:	da35      	bge.n	868b0 <__aeabi_dmul+0x164>
   86844:	340c      	adds	r4, #12
   86846:	dc1b      	bgt.n	86880 <__aeabi_dmul+0x134>
   86848:	f104 0414 	add.w	r4, r4, #20
   8684c:	f1c4 0520 	rsb	r5, r4, #32
   86850:	fa00 f305 	lsl.w	r3, r0, r5
   86854:	fa20 f004 	lsr.w	r0, r0, r4
   86858:	fa01 f205 	lsl.w	r2, r1, r5
   8685c:	ea40 0002 	orr.w	r0, r0, r2
   86860:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   86864:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   86868:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8686c:	fa21 f604 	lsr.w	r6, r1, r4
   86870:	eb42 0106 	adc.w	r1, r2, r6
   86874:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86878:	bf08      	it	eq
   8687a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8687e:	bd70      	pop	{r4, r5, r6, pc}
   86880:	f1c4 040c 	rsb	r4, r4, #12
   86884:	f1c4 0520 	rsb	r5, r4, #32
   86888:	fa00 f304 	lsl.w	r3, r0, r4
   8688c:	fa20 f005 	lsr.w	r0, r0, r5
   86890:	fa01 f204 	lsl.w	r2, r1, r4
   86894:	ea40 0002 	orr.w	r0, r0, r2
   86898:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8689c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   868a0:	f141 0100 	adc.w	r1, r1, #0
   868a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   868a8:	bf08      	it	eq
   868aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   868ae:	bd70      	pop	{r4, r5, r6, pc}
   868b0:	f1c4 0520 	rsb	r5, r4, #32
   868b4:	fa00 f205 	lsl.w	r2, r0, r5
   868b8:	ea4e 0e02 	orr.w	lr, lr, r2
   868bc:	fa20 f304 	lsr.w	r3, r0, r4
   868c0:	fa01 f205 	lsl.w	r2, r1, r5
   868c4:	ea43 0302 	orr.w	r3, r3, r2
   868c8:	fa21 f004 	lsr.w	r0, r1, r4
   868cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   868d0:	fa21 f204 	lsr.w	r2, r1, r4
   868d4:	ea20 0002 	bic.w	r0, r0, r2
   868d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   868dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   868e0:	bf08      	it	eq
   868e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   868e6:	bd70      	pop	{r4, r5, r6, pc}
   868e8:	f094 0f00 	teq	r4, #0
   868ec:	d10f      	bne.n	8690e <__aeabi_dmul+0x1c2>
   868ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   868f2:	0040      	lsls	r0, r0, #1
   868f4:	eb41 0101 	adc.w	r1, r1, r1
   868f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   868fc:	bf08      	it	eq
   868fe:	3c01      	subeq	r4, #1
   86900:	d0f7      	beq.n	868f2 <__aeabi_dmul+0x1a6>
   86902:	ea41 0106 	orr.w	r1, r1, r6
   86906:	f095 0f00 	teq	r5, #0
   8690a:	bf18      	it	ne
   8690c:	4770      	bxne	lr
   8690e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   86912:	0052      	lsls	r2, r2, #1
   86914:	eb43 0303 	adc.w	r3, r3, r3
   86918:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8691c:	bf08      	it	eq
   8691e:	3d01      	subeq	r5, #1
   86920:	d0f7      	beq.n	86912 <__aeabi_dmul+0x1c6>
   86922:	ea43 0306 	orr.w	r3, r3, r6
   86926:	4770      	bx	lr
   86928:	ea94 0f0c 	teq	r4, ip
   8692c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86930:	bf18      	it	ne
   86932:	ea95 0f0c 	teqne	r5, ip
   86936:	d00c      	beq.n	86952 <__aeabi_dmul+0x206>
   86938:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8693c:	bf18      	it	ne
   8693e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86942:	d1d1      	bne.n	868e8 <__aeabi_dmul+0x19c>
   86944:	ea81 0103 	eor.w	r1, r1, r3
   86948:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8694c:	f04f 0000 	mov.w	r0, #0
   86950:	bd70      	pop	{r4, r5, r6, pc}
   86952:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86956:	bf06      	itte	eq
   86958:	4610      	moveq	r0, r2
   8695a:	4619      	moveq	r1, r3
   8695c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86960:	d019      	beq.n	86996 <__aeabi_dmul+0x24a>
   86962:	ea94 0f0c 	teq	r4, ip
   86966:	d102      	bne.n	8696e <__aeabi_dmul+0x222>
   86968:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   8696c:	d113      	bne.n	86996 <__aeabi_dmul+0x24a>
   8696e:	ea95 0f0c 	teq	r5, ip
   86972:	d105      	bne.n	86980 <__aeabi_dmul+0x234>
   86974:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   86978:	bf1c      	itt	ne
   8697a:	4610      	movne	r0, r2
   8697c:	4619      	movne	r1, r3
   8697e:	d10a      	bne.n	86996 <__aeabi_dmul+0x24a>
   86980:	ea81 0103 	eor.w	r1, r1, r3
   86984:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86988:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8698c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86990:	f04f 0000 	mov.w	r0, #0
   86994:	bd70      	pop	{r4, r5, r6, pc}
   86996:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8699a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8699e:	bd70      	pop	{r4, r5, r6, pc}

000869a0 <__aeabi_ddiv>:
   869a0:	b570      	push	{r4, r5, r6, lr}
   869a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   869a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   869aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   869ae:	bf1d      	ittte	ne
   869b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   869b4:	ea94 0f0c 	teqne	r4, ip
   869b8:	ea95 0f0c 	teqne	r5, ip
   869bc:	f000 f8a7 	bleq	86b0e <__aeabi_ddiv+0x16e>
   869c0:	eba4 0405 	sub.w	r4, r4, r5
   869c4:	ea81 0e03 	eor.w	lr, r1, r3
   869c8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   869cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
   869d0:	f000 8088 	beq.w	86ae4 <__aeabi_ddiv+0x144>
   869d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   869d8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   869dc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   869e0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   869e4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   869e8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   869ec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   869f0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   869f4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   869f8:	429d      	cmp	r5, r3
   869fa:	bf08      	it	eq
   869fc:	4296      	cmpeq	r6, r2
   869fe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   86a02:	f504 7440 	add.w	r4, r4, #768	; 0x300
   86a06:	d202      	bcs.n	86a0e <__aeabi_ddiv+0x6e>
   86a08:	085b      	lsrs	r3, r3, #1
   86a0a:	ea4f 0232 	mov.w	r2, r2, rrx
   86a0e:	1ab6      	subs	r6, r6, r2
   86a10:	eb65 0503 	sbc.w	r5, r5, r3
   86a14:	085b      	lsrs	r3, r3, #1
   86a16:	ea4f 0232 	mov.w	r2, r2, rrx
   86a1a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   86a1e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   86a22:	ebb6 0e02 	subs.w	lr, r6, r2
   86a26:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a2a:	bf22      	ittt	cs
   86a2c:	1ab6      	subcs	r6, r6, r2
   86a2e:	4675      	movcs	r5, lr
   86a30:	ea40 000c 	orrcs.w	r0, r0, ip
   86a34:	085b      	lsrs	r3, r3, #1
   86a36:	ea4f 0232 	mov.w	r2, r2, rrx
   86a3a:	ebb6 0e02 	subs.w	lr, r6, r2
   86a3e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a42:	bf22      	ittt	cs
   86a44:	1ab6      	subcs	r6, r6, r2
   86a46:	4675      	movcs	r5, lr
   86a48:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   86a4c:	085b      	lsrs	r3, r3, #1
   86a4e:	ea4f 0232 	mov.w	r2, r2, rrx
   86a52:	ebb6 0e02 	subs.w	lr, r6, r2
   86a56:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a5a:	bf22      	ittt	cs
   86a5c:	1ab6      	subcs	r6, r6, r2
   86a5e:	4675      	movcs	r5, lr
   86a60:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   86a64:	085b      	lsrs	r3, r3, #1
   86a66:	ea4f 0232 	mov.w	r2, r2, rrx
   86a6a:	ebb6 0e02 	subs.w	lr, r6, r2
   86a6e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a72:	bf22      	ittt	cs
   86a74:	1ab6      	subcs	r6, r6, r2
   86a76:	4675      	movcs	r5, lr
   86a78:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   86a7c:	ea55 0e06 	orrs.w	lr, r5, r6
   86a80:	d018      	beq.n	86ab4 <__aeabi_ddiv+0x114>
   86a82:	ea4f 1505 	mov.w	r5, r5, lsl #4
   86a86:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   86a8a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   86a8e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   86a92:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   86a96:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   86a9a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   86a9e:	d1c0      	bne.n	86a22 <__aeabi_ddiv+0x82>
   86aa0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86aa4:	d10b      	bne.n	86abe <__aeabi_ddiv+0x11e>
   86aa6:	ea41 0100 	orr.w	r1, r1, r0
   86aaa:	f04f 0000 	mov.w	r0, #0
   86aae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   86ab2:	e7b6      	b.n	86a22 <__aeabi_ddiv+0x82>
   86ab4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86ab8:	bf04      	itt	eq
   86aba:	4301      	orreq	r1, r0
   86abc:	2000      	moveq	r0, #0
   86abe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86ac2:	bf88      	it	hi
   86ac4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86ac8:	f63f aeaf 	bhi.w	8682a <__aeabi_dmul+0xde>
   86acc:	ebb5 0c03 	subs.w	ip, r5, r3
   86ad0:	bf04      	itt	eq
   86ad2:	ebb6 0c02 	subseq.w	ip, r6, r2
   86ad6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86ada:	f150 0000 	adcs.w	r0, r0, #0
   86ade:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86ae2:	bd70      	pop	{r4, r5, r6, pc}
   86ae4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   86ae8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   86aec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   86af0:	bfc2      	ittt	gt
   86af2:	ebd4 050c 	rsbsgt	r5, r4, ip
   86af6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86afa:	bd70      	popgt	{r4, r5, r6, pc}
   86afc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86b00:	f04f 0e00 	mov.w	lr, #0
   86b04:	3c01      	subs	r4, #1
   86b06:	e690      	b.n	8682a <__aeabi_dmul+0xde>
   86b08:	ea45 0e06 	orr.w	lr, r5, r6
   86b0c:	e68d      	b.n	8682a <__aeabi_dmul+0xde>
   86b0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86b12:	ea94 0f0c 	teq	r4, ip
   86b16:	bf08      	it	eq
   86b18:	ea95 0f0c 	teqeq	r5, ip
   86b1c:	f43f af3b 	beq.w	86996 <__aeabi_dmul+0x24a>
   86b20:	ea94 0f0c 	teq	r4, ip
   86b24:	d10a      	bne.n	86b3c <__aeabi_ddiv+0x19c>
   86b26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86b2a:	f47f af34 	bne.w	86996 <__aeabi_dmul+0x24a>
   86b2e:	ea95 0f0c 	teq	r5, ip
   86b32:	f47f af25 	bne.w	86980 <__aeabi_dmul+0x234>
   86b36:	4610      	mov	r0, r2
   86b38:	4619      	mov	r1, r3
   86b3a:	e72c      	b.n	86996 <__aeabi_dmul+0x24a>
   86b3c:	ea95 0f0c 	teq	r5, ip
   86b40:	d106      	bne.n	86b50 <__aeabi_ddiv+0x1b0>
   86b42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86b46:	f43f aefd 	beq.w	86944 <__aeabi_dmul+0x1f8>
   86b4a:	4610      	mov	r0, r2
   86b4c:	4619      	mov	r1, r3
   86b4e:	e722      	b.n	86996 <__aeabi_dmul+0x24a>
   86b50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86b54:	bf18      	it	ne
   86b56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86b5a:	f47f aec5 	bne.w	868e8 <__aeabi_dmul+0x19c>
   86b5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   86b62:	f47f af0d 	bne.w	86980 <__aeabi_dmul+0x234>
   86b66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   86b6a:	f47f aeeb 	bne.w	86944 <__aeabi_dmul+0x1f8>
   86b6e:	e712      	b.n	86996 <__aeabi_dmul+0x24a>

00086b70 <__gedf2>:
   86b70:	f04f 3cff 	mov.w	ip, #4294967295
   86b74:	e006      	b.n	86b84 <__cmpdf2+0x4>
   86b76:	bf00      	nop

00086b78 <__ledf2>:
   86b78:	f04f 0c01 	mov.w	ip, #1
   86b7c:	e002      	b.n	86b84 <__cmpdf2+0x4>
   86b7e:	bf00      	nop

00086b80 <__cmpdf2>:
   86b80:	f04f 0c01 	mov.w	ip, #1
   86b84:	f84d cd04 	str.w	ip, [sp, #-4]!
   86b88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86b8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86b90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86b94:	bf18      	it	ne
   86b96:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   86b9a:	d01b      	beq.n	86bd4 <__cmpdf2+0x54>
   86b9c:	b001      	add	sp, #4
   86b9e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   86ba2:	bf0c      	ite	eq
   86ba4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   86ba8:	ea91 0f03 	teqne	r1, r3
   86bac:	bf02      	ittt	eq
   86bae:	ea90 0f02 	teqeq	r0, r2
   86bb2:	2000      	moveq	r0, #0
   86bb4:	4770      	bxeq	lr
   86bb6:	f110 0f00 	cmn.w	r0, #0
   86bba:	ea91 0f03 	teq	r1, r3
   86bbe:	bf58      	it	pl
   86bc0:	4299      	cmppl	r1, r3
   86bc2:	bf08      	it	eq
   86bc4:	4290      	cmpeq	r0, r2
   86bc6:	bf2c      	ite	cs
   86bc8:	17d8      	asrcs	r0, r3, #31
   86bca:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   86bce:	f040 0001 	orr.w	r0, r0, #1
   86bd2:	4770      	bx	lr
   86bd4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86bd8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86bdc:	d102      	bne.n	86be4 <__cmpdf2+0x64>
   86bde:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86be2:	d107      	bne.n	86bf4 <__cmpdf2+0x74>
   86be4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86be8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86bec:	d1d6      	bne.n	86b9c <__cmpdf2+0x1c>
   86bee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86bf2:	d0d3      	beq.n	86b9c <__cmpdf2+0x1c>
   86bf4:	f85d 0b04 	ldr.w	r0, [sp], #4
   86bf8:	4770      	bx	lr
   86bfa:	bf00      	nop

00086bfc <__aeabi_cdrcmple>:
   86bfc:	4684      	mov	ip, r0
   86bfe:	4610      	mov	r0, r2
   86c00:	4662      	mov	r2, ip
   86c02:	468c      	mov	ip, r1
   86c04:	4619      	mov	r1, r3
   86c06:	4663      	mov	r3, ip
   86c08:	e000      	b.n	86c0c <__aeabi_cdcmpeq>
   86c0a:	bf00      	nop

00086c0c <__aeabi_cdcmpeq>:
   86c0c:	b501      	push	{r0, lr}
   86c0e:	f7ff ffb7 	bl	86b80 <__cmpdf2>
   86c12:	2800      	cmp	r0, #0
   86c14:	bf48      	it	mi
   86c16:	f110 0f00 	cmnmi.w	r0, #0
   86c1a:	bd01      	pop	{r0, pc}

00086c1c <__aeabi_dcmpeq>:
   86c1c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c20:	f7ff fff4 	bl	86c0c <__aeabi_cdcmpeq>
   86c24:	bf0c      	ite	eq
   86c26:	2001      	moveq	r0, #1
   86c28:	2000      	movne	r0, #0
   86c2a:	f85d fb08 	ldr.w	pc, [sp], #8
   86c2e:	bf00      	nop

00086c30 <__aeabi_dcmplt>:
   86c30:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c34:	f7ff ffea 	bl	86c0c <__aeabi_cdcmpeq>
   86c38:	bf34      	ite	cc
   86c3a:	2001      	movcc	r0, #1
   86c3c:	2000      	movcs	r0, #0
   86c3e:	f85d fb08 	ldr.w	pc, [sp], #8
   86c42:	bf00      	nop

00086c44 <__aeabi_dcmple>:
   86c44:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c48:	f7ff ffe0 	bl	86c0c <__aeabi_cdcmpeq>
   86c4c:	bf94      	ite	ls
   86c4e:	2001      	movls	r0, #1
   86c50:	2000      	movhi	r0, #0
   86c52:	f85d fb08 	ldr.w	pc, [sp], #8
   86c56:	bf00      	nop

00086c58 <__aeabi_dcmpge>:
   86c58:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c5c:	f7ff ffce 	bl	86bfc <__aeabi_cdrcmple>
   86c60:	bf94      	ite	ls
   86c62:	2001      	movls	r0, #1
   86c64:	2000      	movhi	r0, #0
   86c66:	f85d fb08 	ldr.w	pc, [sp], #8
   86c6a:	bf00      	nop

00086c6c <__aeabi_dcmpgt>:
   86c6c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c70:	f7ff ffc4 	bl	86bfc <__aeabi_cdrcmple>
   86c74:	bf34      	ite	cc
   86c76:	2001      	movcc	r0, #1
   86c78:	2000      	movcs	r0, #0
   86c7a:	f85d fb08 	ldr.w	pc, [sp], #8
   86c7e:	bf00      	nop

00086c80 <__aeabi_dcmpun>:
   86c80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86c84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86c88:	d102      	bne.n	86c90 <__aeabi_dcmpun+0x10>
   86c8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86c8e:	d10a      	bne.n	86ca6 <__aeabi_dcmpun+0x26>
   86c90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86c94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86c98:	d102      	bne.n	86ca0 <__aeabi_dcmpun+0x20>
   86c9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86c9e:	d102      	bne.n	86ca6 <__aeabi_dcmpun+0x26>
   86ca0:	f04f 0000 	mov.w	r0, #0
   86ca4:	4770      	bx	lr
   86ca6:	f04f 0001 	mov.w	r0, #1
   86caa:	4770      	bx	lr

00086cac <__aeabi_d2iz>:
   86cac:	ea4f 0241 	mov.w	r2, r1, lsl #1
   86cb0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   86cb4:	d215      	bcs.n	86ce2 <__aeabi_d2iz+0x36>
   86cb6:	d511      	bpl.n	86cdc <__aeabi_d2iz+0x30>
   86cb8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   86cbc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   86cc0:	d912      	bls.n	86ce8 <__aeabi_d2iz+0x3c>
   86cc2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   86cc6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   86cca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   86cce:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86cd2:	fa23 f002 	lsr.w	r0, r3, r2
   86cd6:	bf18      	it	ne
   86cd8:	4240      	negne	r0, r0
   86cda:	4770      	bx	lr
   86cdc:	f04f 0000 	mov.w	r0, #0
   86ce0:	4770      	bx	lr
   86ce2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   86ce6:	d105      	bne.n	86cf4 <__aeabi_d2iz+0x48>
   86ce8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   86cec:	bf08      	it	eq
   86cee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   86cf2:	4770      	bx	lr
   86cf4:	f04f 0000 	mov.w	r0, #0
   86cf8:	4770      	bx	lr
   86cfa:	bf00      	nop

00086cfc <__aeabi_uldivmod>:
   86cfc:	b953      	cbnz	r3, 86d14 <__aeabi_uldivmod+0x18>
   86cfe:	b94a      	cbnz	r2, 86d14 <__aeabi_uldivmod+0x18>
   86d00:	2900      	cmp	r1, #0
   86d02:	bf08      	it	eq
   86d04:	2800      	cmpeq	r0, #0
   86d06:	bf1c      	itt	ne
   86d08:	f04f 31ff 	movne.w	r1, #4294967295
   86d0c:	f04f 30ff 	movne.w	r0, #4294967295
   86d10:	f000 b97a 	b.w	87008 <__aeabi_idiv0>
   86d14:	f1ad 0c08 	sub.w	ip, sp, #8
   86d18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   86d1c:	f000 f806 	bl	86d2c <__udivmoddi4>
   86d20:	f8dd e004 	ldr.w	lr, [sp, #4]
   86d24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86d28:	b004      	add	sp, #16
   86d2a:	4770      	bx	lr

00086d2c <__udivmoddi4>:
   86d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   86d30:	468c      	mov	ip, r1
   86d32:	460e      	mov	r6, r1
   86d34:	4604      	mov	r4, r0
   86d36:	9d08      	ldr	r5, [sp, #32]
   86d38:	2b00      	cmp	r3, #0
   86d3a:	d150      	bne.n	86dde <__udivmoddi4+0xb2>
   86d3c:	428a      	cmp	r2, r1
   86d3e:	4617      	mov	r7, r2
   86d40:	d96c      	bls.n	86e1c <__udivmoddi4+0xf0>
   86d42:	fab2 fe82 	clz	lr, r2
   86d46:	f1be 0f00 	cmp.w	lr, #0
   86d4a:	d00b      	beq.n	86d64 <__udivmoddi4+0x38>
   86d4c:	f1ce 0c20 	rsb	ip, lr, #32
   86d50:	fa01 f60e 	lsl.w	r6, r1, lr
   86d54:	fa20 fc0c 	lsr.w	ip, r0, ip
   86d58:	fa02 f70e 	lsl.w	r7, r2, lr
   86d5c:	ea4c 0c06 	orr.w	ip, ip, r6
   86d60:	fa00 f40e 	lsl.w	r4, r0, lr
   86d64:	0c3a      	lsrs	r2, r7, #16
   86d66:	fbbc f9f2 	udiv	r9, ip, r2
   86d6a:	b2bb      	uxth	r3, r7
   86d6c:	fb02 cc19 	mls	ip, r2, r9, ip
   86d70:	fb09 fa03 	mul.w	sl, r9, r3
   86d74:	ea4f 4814 	mov.w	r8, r4, lsr #16
   86d78:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   86d7c:	45b2      	cmp	sl, r6
   86d7e:	d90a      	bls.n	86d96 <__udivmoddi4+0x6a>
   86d80:	19f6      	adds	r6, r6, r7
   86d82:	f109 31ff 	add.w	r1, r9, #4294967295
   86d86:	f080 8125 	bcs.w	86fd4 <__udivmoddi4+0x2a8>
   86d8a:	45b2      	cmp	sl, r6
   86d8c:	f240 8122 	bls.w	86fd4 <__udivmoddi4+0x2a8>
   86d90:	f1a9 0902 	sub.w	r9, r9, #2
   86d94:	443e      	add	r6, r7
   86d96:	eba6 060a 	sub.w	r6, r6, sl
   86d9a:	fbb6 f0f2 	udiv	r0, r6, r2
   86d9e:	fb02 6610 	mls	r6, r2, r0, r6
   86da2:	fb00 f303 	mul.w	r3, r0, r3
   86da6:	b2a4      	uxth	r4, r4
   86da8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   86dac:	42a3      	cmp	r3, r4
   86dae:	d909      	bls.n	86dc4 <__udivmoddi4+0x98>
   86db0:	19e4      	adds	r4, r4, r7
   86db2:	f100 32ff 	add.w	r2, r0, #4294967295
   86db6:	f080 810b 	bcs.w	86fd0 <__udivmoddi4+0x2a4>
   86dba:	42a3      	cmp	r3, r4
   86dbc:	f240 8108 	bls.w	86fd0 <__udivmoddi4+0x2a4>
   86dc0:	3802      	subs	r0, #2
   86dc2:	443c      	add	r4, r7
   86dc4:	2100      	movs	r1, #0
   86dc6:	1ae4      	subs	r4, r4, r3
   86dc8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86dcc:	2d00      	cmp	r5, #0
   86dce:	d062      	beq.n	86e96 <__udivmoddi4+0x16a>
   86dd0:	2300      	movs	r3, #0
   86dd2:	fa24 f40e 	lsr.w	r4, r4, lr
   86dd6:	602c      	str	r4, [r5, #0]
   86dd8:	606b      	str	r3, [r5, #4]
   86dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86dde:	428b      	cmp	r3, r1
   86de0:	d907      	bls.n	86df2 <__udivmoddi4+0xc6>
   86de2:	2d00      	cmp	r5, #0
   86de4:	d055      	beq.n	86e92 <__udivmoddi4+0x166>
   86de6:	2100      	movs	r1, #0
   86de8:	e885 0041 	stmia.w	r5, {r0, r6}
   86dec:	4608      	mov	r0, r1
   86dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86df2:	fab3 f183 	clz	r1, r3
   86df6:	2900      	cmp	r1, #0
   86df8:	f040 808f 	bne.w	86f1a <__udivmoddi4+0x1ee>
   86dfc:	42b3      	cmp	r3, r6
   86dfe:	d302      	bcc.n	86e06 <__udivmoddi4+0xda>
   86e00:	4282      	cmp	r2, r0
   86e02:	f200 80fc 	bhi.w	86ffe <__udivmoddi4+0x2d2>
   86e06:	1a84      	subs	r4, r0, r2
   86e08:	eb66 0603 	sbc.w	r6, r6, r3
   86e0c:	2001      	movs	r0, #1
   86e0e:	46b4      	mov	ip, r6
   86e10:	2d00      	cmp	r5, #0
   86e12:	d040      	beq.n	86e96 <__udivmoddi4+0x16a>
   86e14:	e885 1010 	stmia.w	r5, {r4, ip}
   86e18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86e1c:	b912      	cbnz	r2, 86e24 <__udivmoddi4+0xf8>
   86e1e:	2701      	movs	r7, #1
   86e20:	fbb7 f7f2 	udiv	r7, r7, r2
   86e24:	fab7 fe87 	clz	lr, r7
   86e28:	f1be 0f00 	cmp.w	lr, #0
   86e2c:	d135      	bne.n	86e9a <__udivmoddi4+0x16e>
   86e2e:	2101      	movs	r1, #1
   86e30:	1bf6      	subs	r6, r6, r7
   86e32:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86e36:	fa1f f887 	uxth.w	r8, r7
   86e3a:	fbb6 f2fc 	udiv	r2, r6, ip
   86e3e:	fb0c 6612 	mls	r6, ip, r2, r6
   86e42:	fb08 f002 	mul.w	r0, r8, r2
   86e46:	0c23      	lsrs	r3, r4, #16
   86e48:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   86e4c:	42b0      	cmp	r0, r6
   86e4e:	d907      	bls.n	86e60 <__udivmoddi4+0x134>
   86e50:	19f6      	adds	r6, r6, r7
   86e52:	f102 33ff 	add.w	r3, r2, #4294967295
   86e56:	d202      	bcs.n	86e5e <__udivmoddi4+0x132>
   86e58:	42b0      	cmp	r0, r6
   86e5a:	f200 80d2 	bhi.w	87002 <__udivmoddi4+0x2d6>
   86e5e:	461a      	mov	r2, r3
   86e60:	1a36      	subs	r6, r6, r0
   86e62:	fbb6 f0fc 	udiv	r0, r6, ip
   86e66:	fb0c 6610 	mls	r6, ip, r0, r6
   86e6a:	fb08 f800 	mul.w	r8, r8, r0
   86e6e:	b2a3      	uxth	r3, r4
   86e70:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   86e74:	45a0      	cmp	r8, r4
   86e76:	d907      	bls.n	86e88 <__udivmoddi4+0x15c>
   86e78:	19e4      	adds	r4, r4, r7
   86e7a:	f100 33ff 	add.w	r3, r0, #4294967295
   86e7e:	d202      	bcs.n	86e86 <__udivmoddi4+0x15a>
   86e80:	45a0      	cmp	r8, r4
   86e82:	f200 80b9 	bhi.w	86ff8 <__udivmoddi4+0x2cc>
   86e86:	4618      	mov	r0, r3
   86e88:	eba4 0408 	sub.w	r4, r4, r8
   86e8c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   86e90:	e79c      	b.n	86dcc <__udivmoddi4+0xa0>
   86e92:	4629      	mov	r1, r5
   86e94:	4628      	mov	r0, r5
   86e96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86e9a:	fa07 f70e 	lsl.w	r7, r7, lr
   86e9e:	f1ce 0320 	rsb	r3, lr, #32
   86ea2:	fa26 f203 	lsr.w	r2, r6, r3
   86ea6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86eaa:	fbb2 f1fc 	udiv	r1, r2, ip
   86eae:	fa1f f887 	uxth.w	r8, r7
   86eb2:	fb0c 2211 	mls	r2, ip, r1, r2
   86eb6:	fa06 f60e 	lsl.w	r6, r6, lr
   86eba:	fa20 f303 	lsr.w	r3, r0, r3
   86ebe:	fb01 f908 	mul.w	r9, r1, r8
   86ec2:	4333      	orrs	r3, r6
   86ec4:	0c1e      	lsrs	r6, r3, #16
   86ec6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86eca:	45b1      	cmp	r9, r6
   86ecc:	fa00 f40e 	lsl.w	r4, r0, lr
   86ed0:	d909      	bls.n	86ee6 <__udivmoddi4+0x1ba>
   86ed2:	19f6      	adds	r6, r6, r7
   86ed4:	f101 32ff 	add.w	r2, r1, #4294967295
   86ed8:	f080 808c 	bcs.w	86ff4 <__udivmoddi4+0x2c8>
   86edc:	45b1      	cmp	r9, r6
   86ede:	f240 8089 	bls.w	86ff4 <__udivmoddi4+0x2c8>
   86ee2:	3902      	subs	r1, #2
   86ee4:	443e      	add	r6, r7
   86ee6:	eba6 0609 	sub.w	r6, r6, r9
   86eea:	fbb6 f0fc 	udiv	r0, r6, ip
   86eee:	fb0c 6210 	mls	r2, ip, r0, r6
   86ef2:	fb00 f908 	mul.w	r9, r0, r8
   86ef6:	b29e      	uxth	r6, r3
   86ef8:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86efc:	45b1      	cmp	r9, r6
   86efe:	d907      	bls.n	86f10 <__udivmoddi4+0x1e4>
   86f00:	19f6      	adds	r6, r6, r7
   86f02:	f100 33ff 	add.w	r3, r0, #4294967295
   86f06:	d271      	bcs.n	86fec <__udivmoddi4+0x2c0>
   86f08:	45b1      	cmp	r9, r6
   86f0a:	d96f      	bls.n	86fec <__udivmoddi4+0x2c0>
   86f0c:	3802      	subs	r0, #2
   86f0e:	443e      	add	r6, r7
   86f10:	eba6 0609 	sub.w	r6, r6, r9
   86f14:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   86f18:	e78f      	b.n	86e3a <__udivmoddi4+0x10e>
   86f1a:	f1c1 0720 	rsb	r7, r1, #32
   86f1e:	fa22 f807 	lsr.w	r8, r2, r7
   86f22:	408b      	lsls	r3, r1
   86f24:	ea48 0303 	orr.w	r3, r8, r3
   86f28:	fa26 f407 	lsr.w	r4, r6, r7
   86f2c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   86f30:	fbb4 f9fe 	udiv	r9, r4, lr
   86f34:	fa1f fc83 	uxth.w	ip, r3
   86f38:	fb0e 4419 	mls	r4, lr, r9, r4
   86f3c:	408e      	lsls	r6, r1
   86f3e:	fa20 f807 	lsr.w	r8, r0, r7
   86f42:	fb09 fa0c 	mul.w	sl, r9, ip
   86f46:	ea48 0806 	orr.w	r8, r8, r6
   86f4a:	ea4f 4618 	mov.w	r6, r8, lsr #16
   86f4e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   86f52:	45a2      	cmp	sl, r4
   86f54:	fa02 f201 	lsl.w	r2, r2, r1
   86f58:	fa00 f601 	lsl.w	r6, r0, r1
   86f5c:	d908      	bls.n	86f70 <__udivmoddi4+0x244>
   86f5e:	18e4      	adds	r4, r4, r3
   86f60:	f109 30ff 	add.w	r0, r9, #4294967295
   86f64:	d244      	bcs.n	86ff0 <__udivmoddi4+0x2c4>
   86f66:	45a2      	cmp	sl, r4
   86f68:	d942      	bls.n	86ff0 <__udivmoddi4+0x2c4>
   86f6a:	f1a9 0902 	sub.w	r9, r9, #2
   86f6e:	441c      	add	r4, r3
   86f70:	eba4 040a 	sub.w	r4, r4, sl
   86f74:	fbb4 f0fe 	udiv	r0, r4, lr
   86f78:	fb0e 4410 	mls	r4, lr, r0, r4
   86f7c:	fb00 fc0c 	mul.w	ip, r0, ip
   86f80:	fa1f f888 	uxth.w	r8, r8
   86f84:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   86f88:	45a4      	cmp	ip, r4
   86f8a:	d907      	bls.n	86f9c <__udivmoddi4+0x270>
   86f8c:	18e4      	adds	r4, r4, r3
   86f8e:	f100 3eff 	add.w	lr, r0, #4294967295
   86f92:	d229      	bcs.n	86fe8 <__udivmoddi4+0x2bc>
   86f94:	45a4      	cmp	ip, r4
   86f96:	d927      	bls.n	86fe8 <__udivmoddi4+0x2bc>
   86f98:	3802      	subs	r0, #2
   86f9a:	441c      	add	r4, r3
   86f9c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86fa0:	fba0 8902 	umull	r8, r9, r0, r2
   86fa4:	eba4 0c0c 	sub.w	ip, r4, ip
   86fa8:	45cc      	cmp	ip, r9
   86faa:	46c2      	mov	sl, r8
   86fac:	46ce      	mov	lr, r9
   86fae:	d315      	bcc.n	86fdc <__udivmoddi4+0x2b0>
   86fb0:	d012      	beq.n	86fd8 <__udivmoddi4+0x2ac>
   86fb2:	b155      	cbz	r5, 86fca <__udivmoddi4+0x29e>
   86fb4:	ebb6 030a 	subs.w	r3, r6, sl
   86fb8:	eb6c 060e 	sbc.w	r6, ip, lr
   86fbc:	fa06 f707 	lsl.w	r7, r6, r7
   86fc0:	40cb      	lsrs	r3, r1
   86fc2:	431f      	orrs	r7, r3
   86fc4:	40ce      	lsrs	r6, r1
   86fc6:	602f      	str	r7, [r5, #0]
   86fc8:	606e      	str	r6, [r5, #4]
   86fca:	2100      	movs	r1, #0
   86fcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86fd0:	4610      	mov	r0, r2
   86fd2:	e6f7      	b.n	86dc4 <__udivmoddi4+0x98>
   86fd4:	4689      	mov	r9, r1
   86fd6:	e6de      	b.n	86d96 <__udivmoddi4+0x6a>
   86fd8:	4546      	cmp	r6, r8
   86fda:	d2ea      	bcs.n	86fb2 <__udivmoddi4+0x286>
   86fdc:	ebb8 0a02 	subs.w	sl, r8, r2
   86fe0:	eb69 0e03 	sbc.w	lr, r9, r3
   86fe4:	3801      	subs	r0, #1
   86fe6:	e7e4      	b.n	86fb2 <__udivmoddi4+0x286>
   86fe8:	4670      	mov	r0, lr
   86fea:	e7d7      	b.n	86f9c <__udivmoddi4+0x270>
   86fec:	4618      	mov	r0, r3
   86fee:	e78f      	b.n	86f10 <__udivmoddi4+0x1e4>
   86ff0:	4681      	mov	r9, r0
   86ff2:	e7bd      	b.n	86f70 <__udivmoddi4+0x244>
   86ff4:	4611      	mov	r1, r2
   86ff6:	e776      	b.n	86ee6 <__udivmoddi4+0x1ba>
   86ff8:	3802      	subs	r0, #2
   86ffa:	443c      	add	r4, r7
   86ffc:	e744      	b.n	86e88 <__udivmoddi4+0x15c>
   86ffe:	4608      	mov	r0, r1
   87000:	e706      	b.n	86e10 <__udivmoddi4+0xe4>
   87002:	3a02      	subs	r2, #2
   87004:	443e      	add	r6, r7
   87006:	e72b      	b.n	86e60 <__udivmoddi4+0x134>

00087008 <__aeabi_idiv0>:
   87008:	4770      	bx	lr
   8700a:	bf00      	nop
   8700c:	20434441 	.word	0x20434441
   87010:	756c6156 	.word	0x756c6156
   87014:	25203a65 	.word	0x25203a65
   87018:	00000a64 	.word	0x00000a64
   8701c:	6d617865 	.word	0x6d617865
   87020:	2c656c70 	.word	0x2c656c70
   87024:	61747320 	.word	0x61747320
   87028:	64657472 	.word	0x64657472
   8702c:	00000a21 	.word	0x00000a21
   87030:	6c6c6548 	.word	0x6c6c6548
   87034:	6f57206f 	.word	0x6f57206f
   87038:	21646c72 	.word	0x21646c72
   8703c:	0000000a 	.word	0x0000000a

00087040 <_global_impure_ptr>:
   87040:	200701e8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   87050:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   87060:	46454443 00000000 33323130 37363534     CDEF....01234567
   87070:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   87080:	0000296c 00000030                       l)..0...

00087088 <blanks.7223>:
   87088:	20202020 20202020 20202020 20202020                     

00087098 <zeroes.7224>:
   87098:	30303030 30303030 30303030 30303030     0000000000000000
   870a8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   870b8:	00000043 49534f50 00000058 0000002e     C...POSIX.......

000870c8 <__mprec_bigtens>:
   870c8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   870d8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   870e8:	7f73bf3c 75154fdd                       <.s..O.u

000870f0 <__mprec_tens>:
   870f0:	00000000 3ff00000 00000000 40240000     .......?......$@
   87100:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   87110:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   87120:	00000000 412e8480 00000000 416312d0     .......A......cA
   87130:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87140:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87150:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87160:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   87170:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   87180:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   87190:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   871a0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   871b0:	79d99db4 44ea7843                       ...yCx.D

000871b8 <p05.6055>:
   871b8:	00000005 00000019 0000007d              ........}...

000871c4 <_ctype_>:
   871c4:	20202000 20202020 28282020 20282828     .         ((((( 
   871d4:	20202020 20202020 20202020 20202020                     
   871e4:	10108820 10101010 10101010 10101010      ...............
   871f4:	04040410 04040404 10040404 10101010     ................
   87204:	41411010 41414141 01010101 01010101     ..AAAAAA........
   87214:	01010101 01010101 01010101 10101010     ................
   87224:	42421010 42424242 02020202 02020202     ..BBBBBB........
   87234:	02020202 02020202 02020202 10101010     ................
   87244:	00000020 00000000 00000000 00000000      ...............
	...

000872c8 <_init>:
   872c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   872ca:	bf00      	nop
   872cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   872ce:	bc08      	pop	{r3}
   872d0:	469e      	mov	lr, r3
   872d2:	4770      	bx	lr

000872d4 <__init_array_start>:
   872d4:	00083eed 	.word	0x00083eed

000872d8 <__frame_dummy_init_array_entry>:
   872d8:	00080119                                ....

000872dc <_fini>:
   872dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   872de:	bf00      	nop
   872e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   872e2:	bc08      	pop	{r3}
   872e4:	469e      	mov	lr, r3
   872e6:	4770      	bx	lr

000872e8 <__fini_array_start>:
   872e8:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	200701dc 	.word	0x200701dc

200700b0 <system_init_flash>:
RAMFUNC
#define CHIP_FREQ_FWS_4                 (90000000UL) /**< \brief Maximum operating frequency when FWS is 4 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0157529f 	.word	0x0157529f
20070124:	0206cc7f 	.word	0x0206cc7f
20070128:	0328b73f 	.word	0x0328b73f
2007012c:	04a62f7f 	.word	0x04a62f7f
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <udi_api_cdc_comm>:
20070138:	00080161 000801ad 000801e1 000801dd     a...............
20070148:	00000000                                ....

2007014c <udi_api_cdc_data>:
2007014c:	00080519 000801bd 000801d9 000801dd     ................
2007015c:	000803e9                                ....

20070160 <udc_string_desc_languageid>:
20070160:	04090304                                ....

20070164 <udc_config>:
20070164:	200701bc 20070170 00000000              ... p.. ....

20070170 <udc_config_fs>:
20070170:	20070178 200701d0                       x.. ... 

20070178 <udc_desc_fs>:
20070178:	00430209 c0000102 00040932 02020100     ..C.....2.......
20070188:	24050001 04011000 05020224 01000624     ...$....$...$...
20070198:	03012405 83050701 10004003 00010409     .$.......@......
200701a8:	00000a02 81050700 00004002 02020507     .........@......
200701b8:	00000040                                @...

200701bc <udc_device_desc>:
200701bc:	02000112 40000002 240403eb 00000100     .......@...$....
200701cc:	00000100                                ....

200701d0 <udi_apis>:
200701d0:	20070138 2007014c                       8.. L.. 

200701d8 <g_interrupt_enabled>:
200701d8:	00000001                                ....

200701dc <SystemCoreClock>:
200701dc:	003d0900                                ..=.

200701e0 <_impure_ptr>:
200701e0:	200701e8 00000000                       ... ....

200701e8 <impure_data>:
200701e8:	00000000 200704d4 2007053c 200705a4     ....... <.. ... 
	...
20070290:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200702a0:	0005deec 0000000b 00000000 00000000     ................
	...

20070610 <__atexit_recursive_mutex>:
20070610:	20070e24                                $.. 

20070614 <__global_locale>:
20070614:	00000043 00000000 00000000 00000000     C...............
	...
20070634:	00000043 00000000 00000000 00000000     C...............
	...
20070654:	00000043 00000000 00000000 00000000     C...............
	...
20070674:	00000043 00000000 00000000 00000000     C...............
	...
20070694:	00000043 00000000 00000000 00000000     C...............
	...
200706b4:	00000043 00000000 00000000 00000000     C...............
	...
200706d4:	00000043 00000000 00000000 00000000     C...............
	...
200706f4:	000862a1 00085685 00000000 000871c4     .b...V.......q..
20070704:	000870c4 00087064 00087064 00087064     .p..dp..dp..dp..
20070714:	00087064 00087064 00087064 00087064     dp..dp..dp..dp..
20070724:	00087064 00087064 ffffffff ffffffff     dp..dp..........
20070734:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
2007075c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070780 <__malloc_av_>:
	...
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 
20070ae8:	20070ae0 20070ae0 20070ae8 20070ae8     ... ... ... ... 
20070af8:	20070af0 20070af0 20070af8 20070af8     ... ... ... ... 
20070b08:	20070b00 20070b00 20070b08 20070b08     ... ... ... ... 
20070b18:	20070b10 20070b10 20070b18 20070b18     ... ... ... ... 
20070b28:	20070b20 20070b20 20070b28 20070b28      ..  .. (.. (.. 
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 
20070b78:	20070b70 20070b70 20070b78 20070b78     p.. p.. x.. x.. 

20070b88 <__malloc_sbrk_base>:
20070b88:	ffffffff                                ....

20070b8c <__malloc_trim_threshold>:
20070b8c:	00020000                                ....
