
GccApplication1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000072c4  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000872c4  000872c4  000172c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000b80  20070000  000872cc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000002c0  20070b80  00087e4c  00020b80  2**2
                  ALLOC
  4 .stack        00002000  20070e40  0008810c  00020b80  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020b80  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020ba9  2**0
                  CONTENTS, READONLY
  7 .debug_info   00017aef  00000000  00000000  00020c02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000339f  00000000  00000000  000386f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000958  00000000  00000000  0003ba90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0001a89e  00000000  00000000  0003c3e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000d3e0  00000000  00000000  00056c86  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00073d77  00000000  00000000  00064066  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00005641  00000000  00000000  000d7ddd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000980  00000000  00000000  000dd41e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000220c  00000000  00000000  000ddda0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	40 2e 07 20 f9 24 08 00 f5 24 08 00 f5 24 08 00     @.. .$...$...$..
   80010:	f5 24 08 00 f5 24 08 00 f5 24 08 00 00 00 00 00     .$...$...$......
	...
   8002c:	f5 24 08 00 f5 24 08 00 00 00 00 00 f5 24 08 00     .$...$.......$..
   8003c:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   8004c:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   8005c:	f5 24 08 00 f5 24 08 00 f5 24 08 00 00 00 00 00     .$...$...$......
   8006c:	29 24 08 00 3d 24 08 00 51 24 08 00 65 24 08 00     )$..=$..Q$..e$..
	...
   80084:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   80094:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   800a4:	00 00 00 00 f5 24 08 00 e5 25 08 00 f5 24 08 00     .....$...%...$..
   800b4:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   800c4:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..
   800d4:	f7 24 08 00 f5 24 08 00 f5 24 08 00 ed 14 08 00     .$...$...$......
   800e4:	f5 24 08 00 f5 24 08 00 f5 24 08 00 f5 24 08 00     .$...$...$...$..

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070b80 	.word	0x20070b80
   80110:	00000000 	.word	0x00000000
   80114:	000872cc 	.word	0x000872cc

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000872cc 	.word	0x000872cc
   80154:	20070b84 	.word	0x20070b84
   80158:	000872cc 	.word	0x000872cc
   8015c:	00000000 	.word	0x00000000

00080160 <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
   80160:	490e      	ldr	r1, [pc, #56]	; (8019c <udi_cdc_comm_enable+0x3c>)
   80162:	2300      	movs	r3, #0
   80164:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
   80166:	4a0e      	ldr	r2, [pc, #56]	; (801a0 <udi_cdc_comm_enable+0x40>)
   80168:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
   8016a:	4a0e      	ldr	r2, [pc, #56]	; (801a4 <udi_cdc_comm_enable+0x44>)
   8016c:	20a1      	movs	r0, #161	; 0xa1
   8016e:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
   80170:	2020      	movs	r0, #32
   80172:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
   80174:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
   80176:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
   80178:	2002      	movs	r0, #2
   8017a:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
   8017c:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
   8017e:	4a0a      	ldr	r2, [pc, #40]	; (801a8 <udi_cdc_comm_enable+0x48>)
   80180:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80184:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
   80186:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
   80188:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
   8018a:	2308      	movs	r3, #8
   8018c:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
   8018e:	780b      	ldrb	r3, [r1, #0]
   80190:	3301      	adds	r3, #1
   80192:	b2db      	uxtb	r3, r3
   80194:	700b      	strb	r3, [r1, #0]
	return true;
}
   80196:	2001      	movs	r0, #1
   80198:	4770      	bx	lr
   8019a:	bf00      	nop
   8019c:	20070ba7 	.word	0x20070ba7
   801a0:	20070c3c 	.word	0x20070c3c
   801a4:	20070cd4 	.word	0x20070cd4
   801a8:	20070ba0 	.word	0x20070ba0

000801ac <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
   801ac:	4a02      	ldr	r2, [pc, #8]	; (801b8 <udi_cdc_comm_disable+0xc>)
   801ae:	7813      	ldrb	r3, [r2, #0]
   801b0:	3b01      	subs	r3, #1
   801b2:	b2db      	uxtb	r3, r3
   801b4:	7013      	strb	r3, [r2, #0]
   801b6:	4770      	bx	lr
   801b8:	20070ba7 	.word	0x20070ba7

000801bc <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
   801bc:	4a04      	ldr	r2, [pc, #16]	; (801d0 <udi_cdc_data_disable+0x14>)
   801be:	7813      	ldrb	r3, [r2, #0]
   801c0:	3b01      	subs	r3, #1
   801c2:	b2db      	uxtb	r3, r3
   801c4:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
   801c6:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
   801c8:	2200      	movs	r2, #0
   801ca:	4b02      	ldr	r3, [pc, #8]	; (801d4 <udi_cdc_data_disable+0x18>)
   801cc:	701a      	strb	r2, [r3, #0]
   801ce:	4770      	bx	lr
   801d0:	20070ba8 	.word	0x20070ba8
   801d4:	20070b9e 	.word	0x20070b9e

000801d8 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
   801d8:	2000      	movs	r0, #0
   801da:	4770      	bx	lr

000801dc <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
   801dc:	2000      	movs	r0, #0
   801de:	4770      	bx	lr

000801e0 <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
   801e0:	4b1d      	ldr	r3, [pc, #116]	; (80258 <udi_cdc_comm_setup+0x78>)
   801e2:	781b      	ldrb	r3, [r3, #0]
   801e4:	f013 0f80 	tst.w	r3, #128	; 0x80
   801e8:	d105      	bne.n	801f6 <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801ee:	2b20      	cmp	r3, #32
   801f0:	d018      	beq.n	80224 <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
   801f2:	2000      	movs	r0, #0
   801f4:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
   801f6:	f003 0360 	and.w	r3, r3, #96	; 0x60
   801fa:	2b20      	cmp	r3, #32
   801fc:	d001      	beq.n	80202 <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
   801fe:	2000      	movs	r0, #0
   80200:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80202:	4b15      	ldr	r3, [pc, #84]	; (80258 <udi_cdc_comm_setup+0x78>)
   80204:	785b      	ldrb	r3, [r3, #1]
   80206:	2b21      	cmp	r3, #33	; 0x21
   80208:	d124      	bne.n	80254 <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
   8020a:	4b13      	ldr	r3, [pc, #76]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   8020c:	88db      	ldrh	r3, [r3, #6]
   8020e:	2b07      	cmp	r3, #7
   80210:	d001      	beq.n	80216 <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
   80212:	2000      	movs	r0, #0
   80214:	4770      	bx	lr
				udd_g_ctrlreq.payload =
   80216:	4b10      	ldr	r3, [pc, #64]	; (80258 <udi_cdc_comm_setup+0x78>)
   80218:	4a10      	ldr	r2, [pc, #64]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8021a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8021c:	2207      	movs	r2, #7
   8021e:	819a      	strh	r2, [r3, #12]
				return true;
   80220:	2001      	movs	r0, #1
   80222:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
   80224:	4b0c      	ldr	r3, [pc, #48]	; (80258 <udi_cdc_comm_setup+0x78>)
   80226:	7858      	ldrb	r0, [r3, #1]
   80228:	2820      	cmp	r0, #32
   8022a:	d004      	beq.n	80236 <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
   8022c:	2822      	cmp	r0, #34	; 0x22
   8022e:	bf14      	ite	ne
   80230:	2000      	movne	r0, #0
   80232:	2001      	moveq	r0, #1
   80234:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
   80236:	4b08      	ldr	r3, [pc, #32]	; (80258 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
   80238:	88db      	ldrh	r3, [r3, #6]
   8023a:	2b07      	cmp	r3, #7
   8023c:	d001      	beq.n	80242 <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
   8023e:	2000      	movs	r0, #0
}
   80240:	4770      	bx	lr
				udd_g_ctrlreq.callback =
   80242:	4b05      	ldr	r3, [pc, #20]	; (80258 <udi_cdc_comm_setup+0x78>)
   80244:	4a06      	ldr	r2, [pc, #24]	; (80260 <udi_cdc_comm_setup+0x80>)
   80246:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
   80248:	4a04      	ldr	r2, [pc, #16]	; (8025c <udi_cdc_comm_setup+0x7c>)
   8024a:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
   8024c:	2207      	movs	r2, #7
   8024e:	819a      	strh	r2, [r3, #12]
				return true;
   80250:	2001      	movs	r0, #1
   80252:	4770      	bx	lr
	return false;  // request Not supported
   80254:	2000      	movs	r0, #0
   80256:	4770      	bx	lr
   80258:	20070e00 	.word	0x20070e00
   8025c:	20070ba0 	.word	0x20070ba0
   80260:	00080265 	.word	0x00080265

00080264 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
   80264:	4770      	bx	lr
	...

00080268 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
   80268:	4b44      	ldr	r3, [pc, #272]	; (8037c <udi_cdc_tx_send+0x114>)
   8026a:	781b      	ldrb	r3, [r3, #0]
   8026c:	b103      	cbz	r3, 80270 <udi_cdc_tx_send+0x8>
   8026e:	4770      	bx	lr
{
   80270:	b570      	push	{r4, r5, r6, lr}
   80272:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
   80274:	4b42      	ldr	r3, [pc, #264]	; (80380 <udi_cdc_tx_send+0x118>)
   80276:	4798      	blx	r3
   80278:	2800      	cmp	r0, #0
   8027a:	d041      	beq.n	80300 <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
   8027c:	4b41      	ldr	r3, [pc, #260]	; (80384 <udi_cdc_tx_send+0x11c>)
   8027e:	881c      	ldrh	r4, [r3, #0]
   80280:	4b41      	ldr	r3, [pc, #260]	; (80388 <udi_cdc_tx_send+0x120>)
   80282:	4798      	blx	r3
   80284:	4284      	cmp	r4, r0
   80286:	d076      	beq.n	80376 <udi_cdc_tx_send+0x10e>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80288:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8028c:	fab3 f383 	clz	r3, r3
   80290:	095b      	lsrs	r3, r3, #5
   80292:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80294:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
   80296:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8029a:	2200      	movs	r2, #0
   8029c:	4b3b      	ldr	r3, [pc, #236]	; (8038c <udi_cdc_tx_send+0x124>)
   8029e:	701a      	strb	r2, [r3, #0]
	return flags;
   802a0:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
   802a2:	4b3b      	ldr	r3, [pc, #236]	; (80390 <udi_cdc_tx_send+0x128>)
   802a4:	781c      	ldrb	r4, [r3, #0]
   802a6:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
   802a8:	4b3a      	ldr	r3, [pc, #232]	; (80394 <udi_cdc_tx_send+0x12c>)
   802aa:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802ae:	2b00      	cmp	r3, #0
   802b0:	d02d      	beq.n	8030e <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
   802b2:	2200      	movs	r2, #0
   802b4:	4b38      	ldr	r3, [pc, #224]	; (80398 <udi_cdc_tx_send+0x130>)
   802b6:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
   802b8:	4b38      	ldr	r3, [pc, #224]	; (8039c <udi_cdc_tx_send+0x134>)
   802ba:	781b      	ldrb	r3, [r3, #0]
   802bc:	2b00      	cmp	r3, #0
   802be:	d142      	bne.n	80346 <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   802c0:	fab4 f384 	clz	r3, r4
   802c4:	095b      	lsrs	r3, r3, #5
   802c6:	4a32      	ldr	r2, [pc, #200]	; (80390 <udi_cdc_tx_send+0x128>)
   802c8:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
   802ca:	2201      	movs	r2, #1
   802cc:	4b2b      	ldr	r3, [pc, #172]	; (8037c <udi_cdc_tx_send+0x114>)
   802ce:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   802d0:	b125      	cbz	r5, 802dc <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
   802d2:	4b2e      	ldr	r3, [pc, #184]	; (8038c <udi_cdc_tx_send+0x124>)
   802d4:	701a      	strb	r2, [r3, #0]
   802d6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   802da:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
   802dc:	4626      	mov	r6, r4
   802de:	4b2d      	ldr	r3, [pc, #180]	; (80394 <udi_cdc_tx_send+0x12c>)
   802e0:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
   802e4:	2b40      	cmp	r3, #64	; 0x40
   802e6:	bf14      	ite	ne
   802e8:	2501      	movne	r5, #1
   802ea:	2500      	moveq	r5, #0
	if (b_short_packet) {
   802ec:	d034      	beq.n	80358 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
   802ee:	4b24      	ldr	r3, [pc, #144]	; (80380 <udi_cdc_tx_send+0x118>)
   802f0:	4798      	blx	r3
   802f2:	2800      	cmp	r0, #0
   802f4:	d02b      	beq.n	8034e <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
   802f6:	4b24      	ldr	r3, [pc, #144]	; (80388 <udi_cdc_tx_send+0x120>)
   802f8:	4798      	blx	r3
   802fa:	4b22      	ldr	r3, [pc, #136]	; (80384 <udi_cdc_tx_send+0x11c>)
   802fc:	8018      	strh	r0, [r3, #0]
   802fe:	e02e      	b.n	8035e <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
   80300:	4b20      	ldr	r3, [pc, #128]	; (80384 <udi_cdc_tx_send+0x11c>)
   80302:	881c      	ldrh	r4, [r3, #0]
   80304:	4b26      	ldr	r3, [pc, #152]	; (803a0 <udi_cdc_tx_send+0x138>)
   80306:	4798      	blx	r3
   80308:	4284      	cmp	r4, r0
   8030a:	d1bd      	bne.n	80288 <udi_cdc_tx_send+0x20>
   8030c:	e033      	b.n	80376 <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
   8030e:	4a22      	ldr	r2, [pc, #136]	; (80398 <udi_cdc_tx_send+0x130>)
   80310:	8813      	ldrh	r3, [r2, #0]
   80312:	3301      	adds	r3, #1
   80314:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
   80316:	4b1a      	ldr	r3, [pc, #104]	; (80380 <udi_cdc_tx_send+0x118>)
   80318:	4798      	blx	r3
   8031a:	b918      	cbnz	r0, 80324 <udi_cdc_tx_send+0xbc>
   8031c:	4b1e      	ldr	r3, [pc, #120]	; (80398 <udi_cdc_tx_send+0x130>)
   8031e:	881b      	ldrh	r3, [r3, #0]
   80320:	2b63      	cmp	r3, #99	; 0x63
   80322:	d908      	bls.n	80336 <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
   80324:	4b16      	ldr	r3, [pc, #88]	; (80380 <udi_cdc_tx_send+0x118>)
   80326:	4798      	blx	r3
   80328:	2800      	cmp	r0, #0
   8032a:	d0c2      	beq.n	802b2 <udi_cdc_tx_send+0x4a>
   8032c:	4b1a      	ldr	r3, [pc, #104]	; (80398 <udi_cdc_tx_send+0x130>)
   8032e:	881b      	ldrh	r3, [r3, #0]
   80330:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
   80334:	d2bd      	bcs.n	802b2 <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
   80336:	b1f5      	cbz	r5, 80376 <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
   80338:	2201      	movs	r2, #1
   8033a:	4b14      	ldr	r3, [pc, #80]	; (8038c <udi_cdc_tx_send+0x124>)
   8033c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   8033e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80342:	b662      	cpsie	i
   80344:	e017      	b.n	80376 <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
   80346:	fab4 f484 	clz	r4, r4
   8034a:	0964      	lsrs	r4, r4, #5
   8034c:	e7bd      	b.n	802ca <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
   8034e:	4b14      	ldr	r3, [pc, #80]	; (803a0 <udi_cdc_tx_send+0x138>)
   80350:	4798      	blx	r3
   80352:	4b0c      	ldr	r3, [pc, #48]	; (80384 <udi_cdc_tx_send+0x11c>)
   80354:	8018      	strh	r0, [r3, #0]
   80356:	e002      	b.n	8035e <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
   80358:	2200      	movs	r2, #0
   8035a:	4b0a      	ldr	r3, [pc, #40]	; (80384 <udi_cdc_tx_send+0x11c>)
   8035c:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
   8035e:	4b0d      	ldr	r3, [pc, #52]	; (80394 <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
   80360:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
   80364:	4a0f      	ldr	r2, [pc, #60]	; (803a4 <udi_cdc_tx_send+0x13c>)
   80366:	9200      	str	r2, [sp, #0]
   80368:	4a0f      	ldr	r2, [pc, #60]	; (803a8 <udi_cdc_tx_send+0x140>)
   8036a:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   8036e:	4629      	mov	r1, r5
   80370:	2081      	movs	r0, #129	; 0x81
   80372:	4c0e      	ldr	r4, [pc, #56]	; (803ac <udi_cdc_tx_send+0x144>)
   80374:	47a0      	blx	r4
			udi_cdc_data_sent);
}
   80376:	b004      	add	sp, #16
   80378:	bd70      	pop	{r4, r5, r6, pc}
   8037a:	bf00      	nop
   8037c:	20070cd0 	.word	0x20070cd0
   80380:	00081b05 	.word	0x00081b05
   80384:	20070ccc 	.word	0x20070ccc
   80388:	00081b51 	.word	0x00081b51
   8038c:	200701cc 	.word	0x200701cc
   80390:	20070cc8 	.word	0x20070cc8
   80394:	20070cc4 	.word	0x20070cc4
   80398:	20070b9c 	.word	0x20070b9c
   8039c:	20070c40 	.word	0x20070c40
   803a0:	00081b41 	.word	0x00081b41
   803a4:	000803b1 	.word	0x000803b1
   803a8:	20070c44 	.word	0x20070c44
   803ac:	00081db9 	.word	0x00081db9

000803b0 <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
   803b0:	b100      	cbz	r0, 803b4 <udi_cdc_data_sent+0x4>
   803b2:	4770      	bx	lr
{
   803b4:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
   803b6:	4b07      	ldr	r3, [pc, #28]	; (803d4 <udi_cdc_data_sent+0x24>)
   803b8:	781b      	ldrb	r3, [r3, #0]
   803ba:	fab3 f383 	clz	r3, r3
   803be:	095b      	lsrs	r3, r3, #5
   803c0:	4a05      	ldr	r2, [pc, #20]	; (803d8 <udi_cdc_data_sent+0x28>)
   803c2:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
   803c6:	4b05      	ldr	r3, [pc, #20]	; (803dc <udi_cdc_data_sent+0x2c>)
   803c8:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   803ca:	4b05      	ldr	r3, [pc, #20]	; (803e0 <udi_cdc_data_sent+0x30>)
   803cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
   803ce:	4b05      	ldr	r3, [pc, #20]	; (803e4 <udi_cdc_data_sent+0x34>)
   803d0:	4798      	blx	r3
   803d2:	bd08      	pop	{r3, pc}
   803d4:	20070cc8 	.word	0x20070cc8
   803d8:	20070cc4 	.word	0x20070cc4
   803dc:	20070c40 	.word	0x20070c40
   803e0:	20070cd0 	.word	0x20070cd0
   803e4:	00080269 	.word	0x00080269

000803e8 <udi_cdc_data_sof_notify>:
{
   803e8:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
   803ea:	2000      	movs	r0, #0
   803ec:	4b01      	ldr	r3, [pc, #4]	; (803f4 <udi_cdc_data_sof_notify+0xc>)
   803ee:	4798      	blx	r3
   803f0:	bd08      	pop	{r3, pc}
   803f2:	bf00      	nop
   803f4:	00080269 	.word	0x00080269

000803f8 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
   803f8:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   803fa:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   803fe:	fab3 f383 	clz	r3, r3
   80402:	095b      	lsrs	r3, r3, #5
   80404:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80406:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80408:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8040c:	2200      	movs	r2, #0
   8040e:	4b0b      	ldr	r3, [pc, #44]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80410:	701a      	strb	r2, [r3, #0]
	return flags;
   80412:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
   80414:	4b0a      	ldr	r3, [pc, #40]	; (80440 <udi_cdc_multi_get_nb_received_data+0x48>)
   80416:	8818      	ldrh	r0, [r3, #0]
   80418:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
   8041a:	4a0a      	ldr	r2, [pc, #40]	; (80444 <udi_cdc_multi_get_nb_received_data+0x4c>)
   8041c:	7812      	ldrb	r2, [r2, #0]
   8041e:	b2d2      	uxtb	r2, r2
   80420:	4809      	ldr	r0, [pc, #36]	; (80448 <udi_cdc_multi_get_nb_received_data+0x50>)
   80422:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
   80426:	b280      	uxth	r0, r0
   80428:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
   8042a:	b129      	cbz	r1, 80438 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
   8042c:	2201      	movs	r2, #1
   8042e:	4b03      	ldr	r3, [pc, #12]	; (8043c <udi_cdc_multi_get_nb_received_data+0x44>)
   80430:	701a      	strb	r2, [r3, #0]
   80432:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80436:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
   80438:	b002      	add	sp, #8
   8043a:	4770      	bx	lr
   8043c:	200701cc 	.word	0x200701cc
   80440:	20070c34 	.word	0x20070c34
   80444:	20070c30 	.word	0x20070c30
   80448:	20070c2c 	.word	0x20070c2c

0008044c <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
   8044c:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
   8044e:	4b03      	ldr	r3, [pc, #12]	; (8045c <udi_cdc_multi_is_rx_ready+0x10>)
   80450:	4798      	blx	r3
}
   80452:	3000      	adds	r0, #0
   80454:	bf18      	it	ne
   80456:	2001      	movne	r0, #1
   80458:	bd08      	pop	{r3, pc}
   8045a:	bf00      	nop
   8045c:	000803f9 	.word	0x000803f9

00080460 <udi_cdc_rx_start>:
{
   80460:	b510      	push	{r4, lr}
   80462:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80464:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80468:	fab3 f383 	clz	r3, r3
   8046c:	095b      	lsrs	r3, r3, #5
   8046e:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80470:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80472:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80476:	2200      	movs	r2, #0
   80478:	4b1e      	ldr	r3, [pc, #120]	; (804f4 <udi_cdc_rx_start+0x94>)
   8047a:	701a      	strb	r2, [r3, #0]
	return flags;
   8047c:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
   8047e:	4a1e      	ldr	r2, [pc, #120]	; (804f8 <udi_cdc_rx_start+0x98>)
   80480:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
   80482:	4a1e      	ldr	r2, [pc, #120]	; (804fc <udi_cdc_rx_start+0x9c>)
   80484:	7812      	ldrb	r2, [r2, #0]
   80486:	b94a      	cbnz	r2, 8049c <udi_cdc_rx_start+0x3c>
   80488:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
   8048a:	4a1d      	ldr	r2, [pc, #116]	; (80500 <udi_cdc_rx_start+0xa0>)
   8048c:	8811      	ldrh	r1, [r2, #0]
   8048e:	b289      	uxth	r1, r1
   80490:	4a1c      	ldr	r2, [pc, #112]	; (80504 <udi_cdc_rx_start+0xa4>)
   80492:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
   80496:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
   80498:	4291      	cmp	r1, r2
   8049a:	d209      	bcs.n	804b0 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
   8049c:	b33b      	cbz	r3, 804ee <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
   8049e:	2201      	movs	r2, #1
   804a0:	4b14      	ldr	r3, [pc, #80]	; (804f4 <udi_cdc_rx_start+0x94>)
   804a2:	701a      	strb	r2, [r3, #0]
   804a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804a8:	b662      	cpsie	i
		return false;
   804aa:	2000      	movs	r0, #0
}
   804ac:	b004      	add	sp, #16
   804ae:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
   804b0:	2100      	movs	r1, #0
   804b2:	4a13      	ldr	r2, [pc, #76]	; (80500 <udi_cdc_rx_start+0xa0>)
   804b4:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
   804b6:	fab4 f284 	clz	r2, r4
   804ba:	0952      	lsrs	r2, r2, #5
   804bc:	490e      	ldr	r1, [pc, #56]	; (804f8 <udi_cdc_rx_start+0x98>)
   804be:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
   804c0:	2101      	movs	r1, #1
   804c2:	4a0e      	ldr	r2, [pc, #56]	; (804fc <udi_cdc_rx_start+0x9c>)
   804c4:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   804c6:	b123      	cbz	r3, 804d2 <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
   804c8:	4b0a      	ldr	r3, [pc, #40]	; (804f4 <udi_cdc_rx_start+0x94>)
   804ca:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   804cc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   804d0:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
   804d2:	2000      	movs	r0, #0
   804d4:	4b0c      	ldr	r3, [pc, #48]	; (80508 <udi_cdc_rx_start+0xa8>)
   804d6:	4798      	blx	r3
	return udd_ep_run(ep,
   804d8:	4b0c      	ldr	r3, [pc, #48]	; (8050c <udi_cdc_rx_start+0xac>)
   804da:	9300      	str	r3, [sp, #0]
   804dc:	2340      	movs	r3, #64	; 0x40
   804de:	4a0c      	ldr	r2, [pc, #48]	; (80510 <udi_cdc_rx_start+0xb0>)
   804e0:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   804e4:	2101      	movs	r1, #1
   804e6:	2002      	movs	r0, #2
   804e8:	4c0a      	ldr	r4, [pc, #40]	; (80514 <udi_cdc_rx_start+0xb4>)
   804ea:	47a0      	blx	r4
   804ec:	e7de      	b.n	804ac <udi_cdc_rx_start+0x4c>
		return false;
   804ee:	2000      	movs	r0, #0
   804f0:	e7dc      	b.n	804ac <udi_cdc_rx_start+0x4c>
   804f2:	bf00      	nop
   804f4:	200701cc 	.word	0x200701cc
   804f8:	20070c30 	.word	0x20070c30
   804fc:	20070c38 	.word	0x20070c38
   80500:	20070c34 	.word	0x20070c34
   80504:	20070c2c 	.word	0x20070c2c
   80508:	0008044d 	.word	0x0008044d
   8050c:	000805ad 	.word	0x000805ad
   80510:	20070bac 	.word	0x20070bac
   80514:	00081db9 	.word	0x00081db9

00080518 <udi_cdc_data_enable>:
{
   80518:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
   8051a:	2400      	movs	r4, #0
   8051c:	4b16      	ldr	r3, [pc, #88]	; (80578 <udi_cdc_data_enable+0x60>)
   8051e:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
   80520:	4b16      	ldr	r3, [pc, #88]	; (8057c <udi_cdc_data_enable+0x64>)
   80522:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
   80524:	4b16      	ldr	r3, [pc, #88]	; (80580 <udi_cdc_data_enable+0x68>)
   80526:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
   80528:	4b16      	ldr	r3, [pc, #88]	; (80584 <udi_cdc_data_enable+0x6c>)
   8052a:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
   8052c:	4b16      	ldr	r3, [pc, #88]	; (80588 <udi_cdc_data_enable+0x70>)
   8052e:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
   80530:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
   80532:	4b16      	ldr	r3, [pc, #88]	; (8058c <udi_cdc_data_enable+0x74>)
   80534:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
   80536:	4620      	mov	r0, r4
   80538:	4b15      	ldr	r3, [pc, #84]	; (80590 <udi_cdc_data_enable+0x78>)
   8053a:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
   8053c:	4b15      	ldr	r3, [pc, #84]	; (80594 <udi_cdc_data_enable+0x7c>)
   8053e:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
   80540:	4b15      	ldr	r3, [pc, #84]	; (80598 <udi_cdc_data_enable+0x80>)
   80542:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
   80544:	4b15      	ldr	r3, [pc, #84]	; (8059c <udi_cdc_data_enable+0x84>)
   80546:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
   80548:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
   8054a:	4b15      	ldr	r3, [pc, #84]	; (805a0 <udi_cdc_data_enable+0x88>)
   8054c:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
   8054e:	4620      	mov	r0, r4
   80550:	4b14      	ldr	r3, [pc, #80]	; (805a4 <udi_cdc_data_enable+0x8c>)
   80552:	4798      	blx	r3
   80554:	4601      	mov	r1, r0
   80556:	b140      	cbz	r0, 8056a <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
   80558:	4a07      	ldr	r2, [pc, #28]	; (80578 <udi_cdc_data_enable+0x60>)
   8055a:	7813      	ldrb	r3, [r2, #0]
   8055c:	3301      	adds	r3, #1
   8055e:	b2db      	uxtb	r3, r3
   80560:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
   80562:	7813      	ldrb	r3, [r2, #0]
   80564:	b2db      	uxtb	r3, r3
   80566:	2b01      	cmp	r3, #1
   80568:	d001      	beq.n	8056e <udi_cdc_data_enable+0x56>
}
   8056a:	4608      	mov	r0, r1
   8056c:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
   8056e:	2201      	movs	r2, #1
   80570:	4b0d      	ldr	r3, [pc, #52]	; (805a8 <udi_cdc_data_enable+0x90>)
   80572:	701a      	strb	r2, [r3, #0]
   80574:	e7f9      	b.n	8056a <udi_cdc_data_enable+0x52>
   80576:	bf00      	nop
   80578:	20070ba8 	.word	0x20070ba8
   8057c:	20070cd0 	.word	0x20070cd0
   80580:	20070c40 	.word	0x20070c40
   80584:	20070cc8 	.word	0x20070cc8
   80588:	20070cc4 	.word	0x20070cc4
   8058c:	20070ccc 	.word	0x20070ccc
   80590:	00080269 	.word	0x00080269
   80594:	20070c38 	.word	0x20070c38
   80598:	20070c30 	.word	0x20070c30
   8059c:	20070c2c 	.word	0x20070c2c
   805a0:	20070c34 	.word	0x20070c34
   805a4:	00080461 	.word	0x00080461
   805a8:	20070b9e 	.word	0x20070b9e

000805ac <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
   805ac:	b9e8      	cbnz	r0, 805ea <udi_cdc_data_received+0x3e>
{
   805ae:	b510      	push	{r4, lr}
   805b0:	b082      	sub	sp, #8
   805b2:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
   805b4:	4b0d      	ldr	r3, [pc, #52]	; (805ec <udi_cdc_data_received+0x40>)
   805b6:	781c      	ldrb	r4, [r3, #0]
   805b8:	fab4 f484 	clz	r4, r4
   805bc:	0964      	lsrs	r4, r4, #5
	if (!n) {
   805be:	b151      	cbz	r1, 805d6 <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
   805c0:	b289      	uxth	r1, r1
   805c2:	4b0b      	ldr	r3, [pc, #44]	; (805f0 <udi_cdc_data_received+0x44>)
   805c4:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
   805c8:	2000      	movs	r0, #0
   805ca:	4b0a      	ldr	r3, [pc, #40]	; (805f4 <udi_cdc_data_received+0x48>)
   805cc:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
   805ce:	4b0a      	ldr	r3, [pc, #40]	; (805f8 <udi_cdc_data_received+0x4c>)
   805d0:	4798      	blx	r3
}
   805d2:	b002      	add	sp, #8
   805d4:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
   805d6:	4b09      	ldr	r3, [pc, #36]	; (805fc <udi_cdc_data_received+0x50>)
   805d8:	9300      	str	r3, [sp, #0]
   805da:	2340      	movs	r3, #64	; 0x40
   805dc:	4a08      	ldr	r2, [pc, #32]	; (80600 <udi_cdc_data_received+0x54>)
   805de:	eb02 1284 	add.w	r2, r2, r4, lsl #6
   805e2:	2101      	movs	r1, #1
   805e4:	4c07      	ldr	r4, [pc, #28]	; (80604 <udi_cdc_data_received+0x58>)
   805e6:	47a0      	blx	r4
		return;
   805e8:	e7f3      	b.n	805d2 <udi_cdc_data_received+0x26>
   805ea:	4770      	bx	lr
   805ec:	20070c30 	.word	0x20070c30
   805f0:	20070c2c 	.word	0x20070c2c
   805f4:	20070c38 	.word	0x20070c38
   805f8:	00080461 	.word	0x00080461
   805fc:	000805ad 	.word	0x000805ad
   80600:	20070bac 	.word	0x20070bac
   80604:	00081db9 	.word	0x00081db9

00080608 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
   80608:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8060a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8060e:	fab3 f383 	clz	r3, r3
   80612:	095b      	lsrs	r3, r3, #5
   80614:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80616:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80618:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8061c:	2200      	movs	r2, #0
   8061e:	4b14      	ldr	r3, [pc, #80]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   80620:	701a      	strb	r2, [r3, #0]
	return flags;
   80622:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   80624:	4b13      	ldr	r3, [pc, #76]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80626:	781b      	ldrb	r3, [r3, #0]
   80628:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
   8062a:	4913      	ldr	r1, [pc, #76]	; (80678 <udi_cdc_multi_get_free_tx_buffer+0x70>)
   8062c:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
   80630:	2840      	cmp	r0, #64	; 0x40
   80632:	d00a      	beq.n	8064a <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
   80634:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
   80638:	b12a      	cbz	r2, 80646 <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
   8063a:	2201      	movs	r2, #1
   8063c:	4b0c      	ldr	r3, [pc, #48]	; (80670 <udi_cdc_multi_get_free_tx_buffer+0x68>)
   8063e:	701a      	strb	r2, [r3, #0]
   80640:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80644:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
   80646:	b002      	add	sp, #8
   80648:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
   8064a:	490c      	ldr	r1, [pc, #48]	; (8067c <udi_cdc_multi_get_free_tx_buffer+0x74>)
   8064c:	7809      	ldrb	r1, [r1, #0]
   8064e:	2900      	cmp	r1, #0
   80650:	d1f0      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
   80652:	490b      	ldr	r1, [pc, #44]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   80654:	7809      	ldrb	r1, [r1, #0]
   80656:	2900      	cmp	r1, #0
   80658:	d1ec      	bne.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
   8065a:	2001      	movs	r0, #1
   8065c:	4908      	ldr	r1, [pc, #32]	; (80680 <udi_cdc_multi_get_free_tx_buffer+0x78>)
   8065e:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
   80660:	fab3 f383 	clz	r3, r3
   80664:	095b      	lsrs	r3, r3, #5
   80666:	4903      	ldr	r1, [pc, #12]	; (80674 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
   80668:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
   8066a:	2000      	movs	r0, #0
   8066c:	e7e2      	b.n	80634 <udi_cdc_multi_get_free_tx_buffer+0x2c>
   8066e:	bf00      	nop
   80670:	200701cc 	.word	0x200701cc
   80674:	20070cc8 	.word	0x20070cc8
   80678:	20070cc4 	.word	0x20070cc4
   8067c:	20070cd0 	.word	0x20070cd0
   80680:	20070c40 	.word	0x20070c40

00080684 <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
   80684:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
   80686:	4b03      	ldr	r3, [pc, #12]	; (80694 <udi_cdc_multi_is_tx_ready+0x10>)
   80688:	4798      	blx	r3
}
   8068a:	3000      	adds	r0, #0
   8068c:	bf18      	it	ne
   8068e:	2001      	movne	r0, #1
   80690:	bd08      	pop	{r3, pc}
   80692:	bf00      	nop
   80694:	00080609 	.word	0x00080609

00080698 <udi_cdc_multi_putc>:
{
	return udi_cdc_multi_is_tx_ready(0);
}

int udi_cdc_multi_putc(uint8_t port, int value)
{
   80698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8069c:	b082      	sub	sp, #8
   8069e:	460c      	mov	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
   806a0:	4b1d      	ldr	r3, [pc, #116]	; (80718 <udi_cdc_multi_putc+0x80>)
   806a2:	799d      	ldrb	r5, [r3, #6]
   806a4:	2d09      	cmp	r5, #9
   806a6:	bf14      	ite	ne
   806a8:	2500      	movne	r5, #0
   806aa:	2501      	moveq	r5, #1

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
   806ac:	4e1b      	ldr	r6, [pc, #108]	; (8071c <udi_cdc_multi_putc+0x84>)
	cpu_irq_disable();
   806ae:	4f1c      	ldr	r7, [pc, #112]	; (80720 <udi_cdc_multi_putc+0x88>)
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
   806b0:	f8df 807c 	ldr.w	r8, [pc, #124]	; 80730 <udi_cdc_multi_putc+0x98>
   806b4:	e022      	b.n	806fc <udi_cdc_multi_putc+0x64>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   806b6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   806ba:	fab3 f383 	clz	r3, r3
   806be:	095b      	lsrs	r3, r3, #5
   806c0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   806c2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   806c4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   806c8:	2300      	movs	r3, #0
   806ca:	703b      	strb	r3, [r7, #0]
	return flags;
   806cc:	9801      	ldr	r0, [sp, #4]
   806ce:	f898 3000 	ldrb.w	r3, [r8]
   806d2:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
   806d4:	4a13      	ldr	r2, [pc, #76]	; (80724 <udi_cdc_multi_putc+0x8c>)
   806d6:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
   806da:	f101 0e01 	add.w	lr, r1, #1
   806de:	f822 e013 	strh.w	lr, [r2, r3, lsl #1]
   806e2:	4a11      	ldr	r2, [pc, #68]	; (80728 <udi_cdc_multi_putc+0x90>)
   806e4:	eb02 1383 	add.w	r3, r2, r3, lsl #6
   806e8:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
   806ea:	b120      	cbz	r0, 806f6 <udi_cdc_multi_putc+0x5e>
		cpu_irq_enable();
   806ec:	2301      	movs	r3, #1
   806ee:	703b      	strb	r3, [r7, #0]
   806f0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   806f4:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
   806f6:	b165      	cbz	r5, 80712 <udi_cdc_multi_putc+0x7a>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
   806f8:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
   806fa:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
   806fc:	2000      	movs	r0, #0
   806fe:	47b0      	blx	r6
   80700:	2800      	cmp	r0, #0
   80702:	d1d8      	bne.n	806b6 <udi_cdc_multi_putc+0x1e>
		if (!udi_cdc_data_running) {
   80704:	4b09      	ldr	r3, [pc, #36]	; (8072c <udi_cdc_multi_putc+0x94>)
   80706:	781b      	ldrb	r3, [r3, #0]
   80708:	2b00      	cmp	r3, #0
   8070a:	d1f7      	bne.n	806fc <udi_cdc_multi_putc+0x64>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
   8070c:	b002      	add	sp, #8
   8070e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	return true;
   80712:	2001      	movs	r0, #1
   80714:	e7fa      	b.n	8070c <udi_cdc_multi_putc+0x74>
   80716:	bf00      	nop
   80718:	20070ba0 	.word	0x20070ba0
   8071c:	00080685 	.word	0x00080685
   80720:	200701cc 	.word	0x200701cc
   80724:	20070cc4 	.word	0x20070cc4
   80728:	20070c44 	.word	0x20070c44
   8072c:	20070b9e 	.word	0x20070b9e
   80730:	20070cc8 	.word	0x20070cc8

00080734 <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
   80734:	b508      	push	{r3, lr}
	return udi_cdc_multi_putc(0, value);
   80736:	4601      	mov	r1, r0
   80738:	2000      	movs	r0, #0
   8073a:	4b01      	ldr	r3, [pc, #4]	; (80740 <udi_cdc_putc+0xc>)
   8073c:	4798      	blx	r3
}
   8073e:	bd08      	pop	{r3, pc}
   80740:	00080699 	.word	0x00080699

00080744 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
   80744:	4b10      	ldr	r3, [pc, #64]	; (80788 <udc_next_desc_in_iface+0x44>)
   80746:	681b      	ldr	r3, [r3, #0]
   80748:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   8074a:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   8074c:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
   8074e:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80750:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
   80752:	4290      	cmp	r0, r2
   80754:	d211      	bcs.n	8077a <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80756:	7843      	ldrb	r3, [r0, #1]
   80758:	2b04      	cmp	r3, #4
   8075a:	d010      	beq.n	8077e <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
   8075c:	428b      	cmp	r3, r1
   8075e:	d009      	beq.n	80774 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
   80760:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80762:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
   80764:	4290      	cmp	r0, r2
   80766:	d206      	bcs.n	80776 <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80768:	7843      	ldrb	r3, [r0, #1]
   8076a:	2b04      	cmp	r3, #4
   8076c:	d009      	beq.n	80782 <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
   8076e:	428b      	cmp	r3, r1
   80770:	d1f6      	bne.n	80760 <udc_next_desc_in_iface+0x1c>
   80772:	e007      	b.n	80784 <udc_next_desc_in_iface+0x40>
   80774:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
   80776:	2000      	movs	r0, #0
   80778:	4770      	bx	lr
   8077a:	2000      	movs	r0, #0
   8077c:	4770      	bx	lr
   8077e:	2000      	movs	r0, #0
   80780:	4770      	bx	lr
   80782:	2000      	movs	r0, #0
}
   80784:	4770      	bx	lr
   80786:	bf00      	nop
   80788:	20070cec 	.word	0x20070cec

0008078c <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
   8078c:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   8078e:	4b03      	ldr	r3, [pc, #12]	; (8079c <udc_valid_address+0x10>)
   80790:	7898      	ldrb	r0, [r3, #2]
   80792:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   80796:	4b02      	ldr	r3, [pc, #8]	; (807a0 <udc_valid_address+0x14>)
   80798:	4798      	blx	r3
   8079a:	bd08      	pop	{r3, pc}
   8079c:	20070e00 	.word	0x20070e00
   807a0:	00081b09 	.word	0x00081b09

000807a4 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
   807a4:	4b19      	ldr	r3, [pc, #100]	; (8080c <udc_update_iface_desc+0x68>)
   807a6:	781b      	ldrb	r3, [r3, #0]
   807a8:	b34b      	cbz	r3, 807fe <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   807aa:	4b19      	ldr	r3, [pc, #100]	; (80810 <udc_update_iface_desc+0x6c>)
   807ac:	681b      	ldr	r3, [r3, #0]
   807ae:	681b      	ldr	r3, [r3, #0]
   807b0:	791a      	ldrb	r2, [r3, #4]
   807b2:	4282      	cmp	r2, r0
   807b4:	d925      	bls.n	80802 <udc_update_iface_desc+0x5e>
{
   807b6:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   807b8:	4a16      	ldr	r2, [pc, #88]	; (80814 <udc_update_iface_desc+0x70>)
   807ba:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   807bc:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   807be:	441c      	add	r4, r3
	while (ptr_end_desc >
   807c0:	42a3      	cmp	r3, r4
   807c2:	d220      	bcs.n	80806 <udc_update_iface_desc+0x62>
   807c4:	2500      	movs	r5, #0
   807c6:	2601      	movs	r6, #1
   807c8:	e007      	b.n	807da <udc_update_iface_desc+0x36>
   807ca:	4a12      	ldr	r2, [pc, #72]	; (80814 <udc_update_iface_desc+0x70>)
   807cc:	6013      	str	r3, [r2, #0]
   807ce:	e00f      	b.n	807f0 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
   807d0:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   807d2:	4413      	add	r3, r2
   807d4:	4635      	mov	r5, r6
	while (ptr_end_desc >
   807d6:	42a3      	cmp	r3, r4
   807d8:	d20c      	bcs.n	807f4 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   807da:	785a      	ldrb	r2, [r3, #1]
   807dc:	2a04      	cmp	r2, #4
   807de:	d1f7      	bne.n	807d0 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   807e0:	789a      	ldrb	r2, [r3, #2]
   807e2:	4282      	cmp	r2, r0
   807e4:	d1f4      	bne.n	807d0 <udc_update_iface_desc+0x2c>
   807e6:	78da      	ldrb	r2, [r3, #3]
   807e8:	428a      	cmp	r2, r1
   807ea:	d1f1      	bne.n	807d0 <udc_update_iface_desc+0x2c>
   807ec:	2d00      	cmp	r5, #0
   807ee:	d1ec      	bne.n	807ca <udc_update_iface_desc+0x26>
				return true; // Interface found
   807f0:	2001      	movs	r0, #1
   807f2:	e002      	b.n	807fa <udc_update_iface_desc+0x56>
   807f4:	4a07      	ldr	r2, [pc, #28]	; (80814 <udc_update_iface_desc+0x70>)
   807f6:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
   807f8:	2000      	movs	r0, #0
}
   807fa:	bc70      	pop	{r4, r5, r6}
   807fc:	4770      	bx	lr
		return false;
   807fe:	2000      	movs	r0, #0
   80800:	4770      	bx	lr
		return false;
   80802:	2000      	movs	r0, #0
   80804:	4770      	bx	lr
	return false; // Interface not found
   80806:	2000      	movs	r0, #0
   80808:	e7f7      	b.n	807fa <udc_update_iface_desc+0x56>
   8080a:	bf00      	nop
   8080c:	20070ce8 	.word	0x20070ce8
   80810:	20070cec 	.word	0x20070cec
   80814:	20070cf0 	.word	0x20070cf0

00080818 <udc_iface_disable>:
{
   80818:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8081c:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
   8081e:	2100      	movs	r1, #0
   80820:	4b13      	ldr	r3, [pc, #76]	; (80870 <udc_iface_disable+0x58>)
   80822:	4798      	blx	r3
   80824:	4680      	mov	r8, r0
   80826:	b910      	cbnz	r0, 8082e <udc_iface_disable+0x16>
}
   80828:	4640      	mov	r0, r8
   8082a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   8082e:	4b11      	ldr	r3, [pc, #68]	; (80874 <udc_iface_disable+0x5c>)
   80830:	681b      	ldr	r3, [r3, #0]
   80832:	685b      	ldr	r3, [r3, #4]
   80834:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80838:	f8d9 300c 	ldr.w	r3, [r9, #12]
   8083c:	4798      	blx	r3
   8083e:	4601      	mov	r1, r0
   80840:	4620      	mov	r0, r4
   80842:	4b0b      	ldr	r3, [pc, #44]	; (80870 <udc_iface_disable+0x58>)
   80844:	4798      	blx	r3
   80846:	4680      	mov	r8, r0
   80848:	2800      	cmp	r0, #0
   8084a:	d0ed      	beq.n	80828 <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   8084c:	4b0a      	ldr	r3, [pc, #40]	; (80878 <udc_iface_disable+0x60>)
   8084e:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80850:	2605      	movs	r6, #5
   80852:	4d0a      	ldr	r5, [pc, #40]	; (8087c <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
   80854:	4f0a      	ldr	r7, [pc, #40]	; (80880 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80856:	4631      	mov	r1, r6
   80858:	4620      	mov	r0, r4
   8085a:	47a8      	blx	r5
			if (NULL == ep_desc) {
   8085c:	4604      	mov	r4, r0
   8085e:	b110      	cbz	r0, 80866 <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
   80860:	7880      	ldrb	r0, [r0, #2]
   80862:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80864:	e7f7      	b.n	80856 <udc_iface_disable+0x3e>
	udi_api->disable();
   80866:	f8d9 3004 	ldr.w	r3, [r9, #4]
   8086a:	4798      	blx	r3
	return true;
   8086c:	e7dc      	b.n	80828 <udc_iface_disable+0x10>
   8086e:	bf00      	nop
   80870:	000807a5 	.word	0x000807a5
   80874:	20070cec 	.word	0x20070cec
   80878:	20070cf0 	.word	0x20070cf0
   8087c:	00080745 	.word	0x00080745
   80880:	00081b6d 	.word	0x00081b6d

00080884 <udc_iface_enable>:
{
   80884:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80888:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   8088a:	4b10      	ldr	r3, [pc, #64]	; (808cc <udc_iface_enable+0x48>)
   8088c:	4798      	blx	r3
   8088e:	4603      	mov	r3, r0
   80890:	b1c8      	cbz	r0, 808c6 <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80892:	4b0f      	ldr	r3, [pc, #60]	; (808d0 <udc_iface_enable+0x4c>)
   80894:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80896:	2605      	movs	r6, #5
   80898:	4d0e      	ldr	r5, [pc, #56]	; (808d4 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   8089a:	4f0f      	ldr	r7, [pc, #60]	; (808d8 <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   8089c:	4631      	mov	r1, r6
   8089e:	4620      	mov	r0, r4
   808a0:	47a8      	blx	r5
		if (NULL == ep_desc)
   808a2:	4604      	mov	r4, r0
   808a4:	b138      	cbz	r0, 808b6 <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   808a6:	8882      	ldrh	r2, [r0, #4]
   808a8:	78c1      	ldrb	r1, [r0, #3]
   808aa:	7880      	ldrb	r0, [r0, #2]
   808ac:	47b8      	blx	r7
   808ae:	4603      	mov	r3, r0
   808b0:	2800      	cmp	r0, #0
   808b2:	d1f3      	bne.n	8089c <udc_iface_enable+0x18>
   808b4:	e007      	b.n	808c6 <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   808b6:	4b09      	ldr	r3, [pc, #36]	; (808dc <udc_iface_enable+0x58>)
   808b8:	681b      	ldr	r3, [r3, #0]
   808ba:	685b      	ldr	r3, [r3, #4]
   808bc:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
   808c0:	681b      	ldr	r3, [r3, #0]
   808c2:	4798      	blx	r3
   808c4:	4603      	mov	r3, r0
}
   808c6:	4618      	mov	r0, r3
   808c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   808cc:	000807a5 	.word	0x000807a5
   808d0:	20070cf0 	.word	0x20070cf0
   808d4:	00080745 	.word	0x00080745
   808d8:	00081eb5 	.word	0x00081eb5
   808dc:	20070cec 	.word	0x20070cec

000808e0 <udc_start>:
{
   808e0:	b508      	push	{r3, lr}
	udd_enable();
   808e2:	4b01      	ldr	r3, [pc, #4]	; (808e8 <udc_start+0x8>)
   808e4:	4798      	blx	r3
   808e6:	bd08      	pop	{r3, pc}
   808e8:	00081295 	.word	0x00081295

000808ec <udc_reset>:
{
   808ec:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
   808ee:	4b0d      	ldr	r3, [pc, #52]	; (80924 <udc_reset+0x38>)
   808f0:	781b      	ldrb	r3, [r3, #0]
   808f2:	b183      	cbz	r3, 80916 <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   808f4:	4b0c      	ldr	r3, [pc, #48]	; (80928 <udc_reset+0x3c>)
   808f6:	681b      	ldr	r3, [r3, #0]
   808f8:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   808fa:	791b      	ldrb	r3, [r3, #4]
   808fc:	b15b      	cbz	r3, 80916 <udc_reset+0x2a>
   808fe:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
   80900:	4e0a      	ldr	r6, [pc, #40]	; (8092c <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80902:	4d09      	ldr	r5, [pc, #36]	; (80928 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
   80904:	4620      	mov	r0, r4
   80906:	47b0      	blx	r6
				iface_num++) {
   80908:	3401      	adds	r4, #1
   8090a:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8090c:	682b      	ldr	r3, [r5, #0]
   8090e:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80910:	791b      	ldrb	r3, [r3, #4]
   80912:	42a3      	cmp	r3, r4
   80914:	d8f6      	bhi.n	80904 <udc_reset+0x18>
	udc_num_configuration = 0;
   80916:	2200      	movs	r2, #0
   80918:	4b02      	ldr	r3, [pc, #8]	; (80924 <udc_reset+0x38>)
   8091a:	701a      	strb	r2, [r3, #0]
	udc_device_status =
   8091c:	2201      	movs	r2, #1
   8091e:	4b04      	ldr	r3, [pc, #16]	; (80930 <udc_reset+0x44>)
   80920:	801a      	strh	r2, [r3, #0]
   80922:	bd70      	pop	{r4, r5, r6, pc}
   80924:	20070ce8 	.word	0x20070ce8
   80928:	20070cec 	.word	0x20070cec
   8092c:	00080819 	.word	0x00080819
   80930:	20070cde 	.word	0x20070cde

00080934 <udc_sof_notify>:
{
   80934:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80936:	4b0d      	ldr	r3, [pc, #52]	; (8096c <udc_sof_notify+0x38>)
   80938:	781b      	ldrb	r3, [r3, #0]
   8093a:	b1b3      	cbz	r3, 8096a <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8093c:	4b0c      	ldr	r3, [pc, #48]	; (80970 <udc_sof_notify+0x3c>)
   8093e:	681b      	ldr	r3, [r3, #0]
   80940:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80942:	7912      	ldrb	r2, [r2, #4]
   80944:	b18a      	cbz	r2, 8096a <udc_sof_notify+0x36>
   80946:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80948:	4d09      	ldr	r5, [pc, #36]	; (80970 <udc_sof_notify+0x3c>)
   8094a:	e006      	b.n	8095a <udc_sof_notify+0x26>
				iface_num++) {
   8094c:	3401      	adds	r4, #1
   8094e:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80950:	682b      	ldr	r3, [r5, #0]
   80952:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80954:	7912      	ldrb	r2, [r2, #4]
   80956:	42a2      	cmp	r2, r4
   80958:	d907      	bls.n	8096a <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   8095a:	685b      	ldr	r3, [r3, #4]
   8095c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80960:	691b      	ldr	r3, [r3, #16]
   80962:	2b00      	cmp	r3, #0
   80964:	d0f2      	beq.n	8094c <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80966:	4798      	blx	r3
   80968:	e7f0      	b.n	8094c <udc_sof_notify+0x18>
   8096a:	bd38      	pop	{r3, r4, r5, pc}
   8096c:	20070ce8 	.word	0x20070ce8
   80970:	20070cec 	.word	0x20070cec

00080974 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
   80974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80976:	4b96      	ldr	r3, [pc, #600]	; (80bd0 <udc_process_setup+0x25c>)
   80978:	2200      	movs	r2, #0
   8097a:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
   8097c:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   8097e:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
   80980:	781b      	ldrb	r3, [r3, #0]
   80982:	f013 0f80 	tst.w	r3, #128	; 0x80
   80986:	d114      	bne.n	809b2 <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80988:	f013 0f60 	tst.w	r3, #96	; 0x60
   8098c:	f000 80b8 	beq.w	80b00 <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
   80990:	4b8f      	ldr	r3, [pc, #572]	; (80bd0 <udc_process_setup+0x25c>)
   80992:	781b      	ldrb	r3, [r3, #0]
   80994:	f003 031f 	and.w	r3, r3, #31
   80998:	2b01      	cmp	r3, #1
   8099a:	f000 818b 	beq.w	80cb4 <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   8099e:	4b8c      	ldr	r3, [pc, #560]	; (80bd0 <udc_process_setup+0x25c>)
   809a0:	781b      	ldrb	r3, [r3, #0]
   809a2:	f003 031f 	and.w	r3, r3, #31
   809a6:	2b02      	cmp	r3, #2
   809a8:	f000 81ac 	beq.w	80d04 <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   809ac:	2300      	movs	r3, #0
#endif
}
   809ae:	4618      	mov	r0, r3
   809b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   809b2:	4a87      	ldr	r2, [pc, #540]	; (80bd0 <udc_process_setup+0x25c>)
   809b4:	88d2      	ldrh	r2, [r2, #6]
   809b6:	2a00      	cmp	r2, #0
   809b8:	f000 81cd 	beq.w	80d56 <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   809bc:	f013 0f60 	tst.w	r3, #96	; 0x60
   809c0:	d1e6      	bne.n	80990 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   809c2:	f013 031f 	ands.w	r3, r3, #31
   809c6:	d106      	bne.n	809d6 <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
   809c8:	4981      	ldr	r1, [pc, #516]	; (80bd0 <udc_process_setup+0x25c>)
   809ca:	7849      	ldrb	r1, [r1, #1]
   809cc:	2906      	cmp	r1, #6
   809ce:	d013      	beq.n	809f8 <udc_process_setup+0x84>
   809d0:	2908      	cmp	r1, #8
   809d2:	d058      	beq.n	80a86 <udc_process_setup+0x112>
   809d4:	b149      	cbz	r1, 809ea <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   809d6:	2b01      	cmp	r3, #1
   809d8:	d05c      	beq.n	80a94 <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   809da:	2b02      	cmp	r3, #2
   809dc:	d1d8      	bne.n	80990 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   809de:	4b7c      	ldr	r3, [pc, #496]	; (80bd0 <udc_process_setup+0x25c>)
   809e0:	785b      	ldrb	r3, [r3, #1]
   809e2:	2b00      	cmp	r3, #0
   809e4:	d07e      	beq.n	80ae4 <udc_process_setup+0x170>
	return false;
   809e6:	2300      	movs	r3, #0
   809e8:	e160      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   809ea:	2a02      	cmp	r2, #2
   809ec:	d1d0      	bne.n	80990 <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   809ee:	2102      	movs	r1, #2
   809f0:	4878      	ldr	r0, [pc, #480]	; (80bd4 <udc_process_setup+0x260>)
   809f2:	4b79      	ldr	r3, [pc, #484]	; (80bd8 <udc_process_setup+0x264>)
   809f4:	4798      	blx	r3
   809f6:	e09f      	b.n	80b38 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   809f8:	4b75      	ldr	r3, [pc, #468]	; (80bd0 <udc_process_setup+0x25c>)
   809fa:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   809fc:	0a13      	lsrs	r3, r2, #8
   809fe:	3b01      	subs	r3, #1
   80a00:	2b0e      	cmp	r3, #14
   80a02:	f200 8150 	bhi.w	80ca6 <udc_process_setup+0x332>
   80a06:	e8df f013 	tbh	[pc, r3, lsl #1]
   80a0a:	000f      	.short	0x000f
   80a0c:	0036001c 	.word	0x0036001c
   80a10:	014e014e 	.word	0x014e014e
   80a14:	014e014e 	.word	0x014e014e
   80a18:	014e014e 	.word	0x014e014e
   80a1c:	014e014e 	.word	0x014e014e
   80a20:	014e014e 	.word	0x014e014e
   80a24:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
   80a28:	4b6c      	ldr	r3, [pc, #432]	; (80bdc <udc_process_setup+0x268>)
   80a2a:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   80a2c:	7801      	ldrb	r1, [r0, #0]
   80a2e:	4b6a      	ldr	r3, [pc, #424]	; (80bd8 <udc_process_setup+0x264>)
   80a30:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   80a32:	4b67      	ldr	r3, [pc, #412]	; (80bd0 <udc_process_setup+0x25c>)
   80a34:	88da      	ldrh	r2, [r3, #6]
   80a36:	899b      	ldrh	r3, [r3, #12]
   80a38:	4293      	cmp	r3, r2
   80a3a:	d97d      	bls.n	80b38 <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   80a3c:	4b64      	ldr	r3, [pc, #400]	; (80bd0 <udc_process_setup+0x25c>)
   80a3e:	819a      	strh	r2, [r3, #12]
   80a40:	e07a      	b.n	80b38 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   80a42:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
   80a44:	4b65      	ldr	r3, [pc, #404]	; (80bdc <udc_process_setup+0x268>)
   80a46:	681b      	ldr	r3, [r3, #0]
   80a48:	7c5b      	ldrb	r3, [r3, #17]
   80a4a:	4293      	cmp	r3, r2
   80a4c:	d9a0      	bls.n	80990 <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   80a4e:	4b63      	ldr	r3, [pc, #396]	; (80bdc <udc_process_setup+0x268>)
   80a50:	685b      	ldr	r3, [r3, #4]
   80a52:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
   80a56:	8841      	ldrh	r1, [r0, #2]
   80a58:	4b5f      	ldr	r3, [pc, #380]	; (80bd8 <udc_process_setup+0x264>)
   80a5a:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   80a5c:	4b5c      	ldr	r3, [pc, #368]	; (80bd0 <udc_process_setup+0x25c>)
   80a5e:	689b      	ldr	r3, [r3, #8]
   80a60:	2202      	movs	r2, #2
   80a62:	705a      	strb	r2, [r3, #1]
   80a64:	e7e5      	b.n	80a32 <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
   80a66:	4b5d      	ldr	r3, [pc, #372]	; (80bdc <udc_process_setup+0x268>)
   80a68:	6898      	ldr	r0, [r3, #8]
   80a6a:	2800      	cmp	r0, #0
   80a6c:	d090      	beq.n	80990 <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
   80a6e:	8841      	ldrh	r1, [r0, #2]
   80a70:	4b59      	ldr	r3, [pc, #356]	; (80bd8 <udc_process_setup+0x264>)
   80a72:	4798      	blx	r3
   80a74:	e7dd      	b.n	80a32 <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   80a76:	f012 0fff 	tst.w	r2, #255	; 0xff
   80a7a:	d189      	bne.n	80990 <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   80a7c:	2104      	movs	r1, #4
   80a7e:	4858      	ldr	r0, [pc, #352]	; (80be0 <udc_process_setup+0x26c>)
   80a80:	4b55      	ldr	r3, [pc, #340]	; (80bd8 <udc_process_setup+0x264>)
   80a82:	4798      	blx	r3
   80a84:	e7d5      	b.n	80a32 <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80a86:	2a01      	cmp	r2, #1
   80a88:	d182      	bne.n	80990 <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
   80a8a:	2101      	movs	r1, #1
   80a8c:	4855      	ldr	r0, [pc, #340]	; (80be4 <udc_process_setup+0x270>)
   80a8e:	4b52      	ldr	r3, [pc, #328]	; (80bd8 <udc_process_setup+0x264>)
   80a90:	4798      	blx	r3
   80a92:	e051      	b.n	80b38 <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
   80a94:	494e      	ldr	r1, [pc, #312]	; (80bd0 <udc_process_setup+0x25c>)
   80a96:	7849      	ldrb	r1, [r1, #1]
   80a98:	290a      	cmp	r1, #10
   80a9a:	d19e      	bne.n	809da <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80a9c:	2a01      	cmp	r2, #1
   80a9e:	f47f af77 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80aa2:	4b50      	ldr	r3, [pc, #320]	; (80be4 <udc_process_setup+0x270>)
   80aa4:	781b      	ldrb	r3, [r3, #0]
   80aa6:	2b00      	cmp	r3, #0
   80aa8:	f43f af72 	beq.w	80990 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80aac:	4b48      	ldr	r3, [pc, #288]	; (80bd0 <udc_process_setup+0x25c>)
   80aae:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80ab0:	4b4d      	ldr	r3, [pc, #308]	; (80be8 <udc_process_setup+0x274>)
   80ab2:	681d      	ldr	r5, [r3, #0]
   80ab4:	682b      	ldr	r3, [r5, #0]
   80ab6:	791b      	ldrb	r3, [r3, #4]
   80ab8:	42a3      	cmp	r3, r4
   80aba:	f67f af69 	bls.w	80990 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80abe:	2100      	movs	r1, #0
   80ac0:	4620      	mov	r0, r4
   80ac2:	4b4a      	ldr	r3, [pc, #296]	; (80bec <udc_process_setup+0x278>)
   80ac4:	4798      	blx	r3
   80ac6:	2800      	cmp	r0, #0
   80ac8:	f43f af62 	beq.w	80990 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80acc:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
   80ace:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   80ad2:	68db      	ldr	r3, [r3, #12]
   80ad4:	4798      	blx	r3
   80ad6:	4b46      	ldr	r3, [pc, #280]	; (80bf0 <udc_process_setup+0x27c>)
   80ad8:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   80ada:	2101      	movs	r1, #1
   80adc:	4618      	mov	r0, r3
   80ade:	4b3e      	ldr	r3, [pc, #248]	; (80bd8 <udc_process_setup+0x264>)
   80ae0:	4798      	blx	r3
   80ae2:	e029      	b.n	80b38 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   80ae4:	2a02      	cmp	r2, #2
   80ae6:	f47f af53 	bne.w	80990 <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   80aea:	4b39      	ldr	r3, [pc, #228]	; (80bd0 <udc_process_setup+0x25c>)
   80aec:	7918      	ldrb	r0, [r3, #4]
   80aee:	4b41      	ldr	r3, [pc, #260]	; (80bf4 <udc_process_setup+0x280>)
   80af0:	4798      	blx	r3
   80af2:	4b41      	ldr	r3, [pc, #260]	; (80bf8 <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   80af4:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   80af6:	2102      	movs	r1, #2
   80af8:	4618      	mov	r0, r3
   80afa:	4b37      	ldr	r3, [pc, #220]	; (80bd8 <udc_process_setup+0x264>)
   80afc:	4798      	blx	r3
   80afe:	e01b      	b.n	80b38 <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80b00:	f013 031f 	ands.w	r3, r3, #31
   80b04:	f040 8082 	bne.w	80c0c <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
   80b08:	4a31      	ldr	r2, [pc, #196]	; (80bd0 <udc_process_setup+0x25c>)
   80b0a:	7852      	ldrb	r2, [r2, #1]
   80b0c:	3a01      	subs	r2, #1
   80b0e:	2a08      	cmp	r2, #8
   80b10:	d87c      	bhi.n	80c0c <udc_process_setup+0x298>
   80b12:	e8df f012 	tbh	[pc, r2, lsl #1]
   80b16:	0013      	.short	0x0013
   80b18:	00ca007b 	.word	0x00ca007b
   80b1c:	0009007b 	.word	0x0009007b
   80b20:	007b007b 	.word	0x007b007b
   80b24:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
   80b28:	4b29      	ldr	r3, [pc, #164]	; (80bd0 <udc_process_setup+0x25c>)
   80b2a:	88db      	ldrh	r3, [r3, #6]
   80b2c:	2b00      	cmp	r3, #0
   80b2e:	f47f af2f 	bne.w	80990 <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
   80b32:	4a32      	ldr	r2, [pc, #200]	; (80bfc <udc_process_setup+0x288>)
   80b34:	4b26      	ldr	r3, [pc, #152]	; (80bd0 <udc_process_setup+0x25c>)
   80b36:	611a      	str	r2, [r3, #16]
			return true;
   80b38:	2301      	movs	r3, #1
   80b3a:	e738      	b.n	809ae <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
   80b3c:	4b24      	ldr	r3, [pc, #144]	; (80bd0 <udc_process_setup+0x25c>)
   80b3e:	88db      	ldrh	r3, [r3, #6]
   80b40:	2b00      	cmp	r3, #0
   80b42:	f47f af25 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   80b46:	4b22      	ldr	r3, [pc, #136]	; (80bd0 <udc_process_setup+0x25c>)
   80b48:	885b      	ldrh	r3, [r3, #2]
   80b4a:	2b01      	cmp	r3, #1
   80b4c:	f47f af20 	bne.w	80990 <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   80b50:	4a20      	ldr	r2, [pc, #128]	; (80bd4 <udc_process_setup+0x260>)
   80b52:	8813      	ldrh	r3, [r2, #0]
   80b54:	f023 0302 	bic.w	r3, r3, #2
   80b58:	8013      	strh	r3, [r2, #0]
   80b5a:	e7ed      	b.n	80b38 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
   80b5c:	4b1c      	ldr	r3, [pc, #112]	; (80bd0 <udc_process_setup+0x25c>)
   80b5e:	88db      	ldrh	r3, [r3, #6]
   80b60:	2b00      	cmp	r3, #0
   80b62:	f47f af15 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
   80b66:	4b26      	ldr	r3, [pc, #152]	; (80c00 <udc_process_setup+0x28c>)
   80b68:	4798      	blx	r3
   80b6a:	2800      	cmp	r0, #0
   80b6c:	f43f af10 	beq.w	80990 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b70:	4b17      	ldr	r3, [pc, #92]	; (80bd0 <udc_process_setup+0x25c>)
   80b72:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
   80b74:	4b19      	ldr	r3, [pc, #100]	; (80bdc <udc_process_setup+0x268>)
   80b76:	681b      	ldr	r3, [r3, #0]
   80b78:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80b7a:	429a      	cmp	r2, r3
   80b7c:	f73f af08 	bgt.w	80990 <udc_process_setup+0x1c>
	udc_reset();
   80b80:	4b20      	ldr	r3, [pc, #128]	; (80c04 <udc_process_setup+0x290>)
   80b82:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   80b84:	4b12      	ldr	r3, [pc, #72]	; (80bd0 <udc_process_setup+0x25c>)
   80b86:	789b      	ldrb	r3, [r3, #2]
   80b88:	4a16      	ldr	r2, [pc, #88]	; (80be4 <udc_process_setup+0x270>)
   80b8a:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
   80b8c:	2b00      	cmp	r3, #0
   80b8e:	d0d3      	beq.n	80b38 <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   80b90:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
   80b94:	3b01      	subs	r3, #1
   80b96:	4a11      	ldr	r2, [pc, #68]	; (80bdc <udc_process_setup+0x268>)
   80b98:	6852      	ldr	r2, [r2, #4]
   80b9a:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
   80b9e:	4912      	ldr	r1, [pc, #72]	; (80be8 <udc_process_setup+0x274>)
   80ba0:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80ba2:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
   80ba6:	791b      	ldrb	r3, [r3, #4]
   80ba8:	2b00      	cmp	r3, #0
   80baa:	d0c5      	beq.n	80b38 <udc_process_setup+0x1c4>
   80bac:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
   80bae:	4626      	mov	r6, r4
   80bb0:	4d15      	ldr	r5, [pc, #84]	; (80c08 <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bb2:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
   80bb4:	4631      	mov	r1, r6
   80bb6:	4620      	mov	r0, r4
   80bb8:	47a8      	blx	r5
   80bba:	2800      	cmp	r0, #0
   80bbc:	f43f aee8 	beq.w	80990 <udc_process_setup+0x1c>
			iface_num++) {
   80bc0:	3401      	adds	r4, #1
   80bc2:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80bc4:	683b      	ldr	r3, [r7, #0]
   80bc6:	681b      	ldr	r3, [r3, #0]
   80bc8:	791b      	ldrb	r3, [r3, #4]
   80bca:	42a3      	cmp	r3, r4
   80bcc:	d8f2      	bhi.n	80bb4 <udc_process_setup+0x240>
   80bce:	e7b3      	b.n	80b38 <udc_process_setup+0x1c4>
   80bd0:	20070e00 	.word	0x20070e00
   80bd4:	20070cde 	.word	0x20070cde
   80bd8:	00081b61 	.word	0x00081b61
   80bdc:	20070158 	.word	0x20070158
   80be0:	20070154 	.word	0x20070154
   80be4:	20070ce8 	.word	0x20070ce8
   80be8:	20070cec 	.word	0x20070cec
   80bec:	000807a5 	.word	0x000807a5
   80bf0:	20070ce4 	.word	0x20070ce4
   80bf4:	00081bc9 	.word	0x00081bc9
   80bf8:	20070ce0 	.word	0x20070ce0
   80bfc:	0008078d 	.word	0x0008078d
   80c00:	00081b31 	.word	0x00081b31
   80c04:	000808ed 	.word	0x000808ed
   80c08:	00080885 	.word	0x00080885
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80c0c:	2b01      	cmp	r3, #1
   80c0e:	d00a      	beq.n	80c26 <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80c10:	2b02      	cmp	r3, #2
   80c12:	f47f aebd 	bne.w	80990 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c16:	4b52      	ldr	r3, [pc, #328]	; (80d60 <udc_process_setup+0x3ec>)
   80c18:	785b      	ldrb	r3, [r3, #1]
   80c1a:	2b01      	cmp	r3, #1
   80c1c:	d020      	beq.n	80c60 <udc_process_setup+0x2ec>
   80c1e:	2b03      	cmp	r3, #3
   80c20:	d02e      	beq.n	80c80 <udc_process_setup+0x30c>
	return false;
   80c22:	2300      	movs	r3, #0
   80c24:	e042      	b.n	80cac <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
   80c26:	4a4e      	ldr	r2, [pc, #312]	; (80d60 <udc_process_setup+0x3ec>)
   80c28:	7852      	ldrb	r2, [r2, #1]
   80c2a:	2a0b      	cmp	r2, #11
   80c2c:	d1f0      	bne.n	80c10 <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
   80c2e:	4b4c      	ldr	r3, [pc, #304]	; (80d60 <udc_process_setup+0x3ec>)
   80c30:	88db      	ldrh	r3, [r3, #6]
   80c32:	2b00      	cmp	r3, #0
   80c34:	f47f aeac 	bne.w	80990 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
   80c38:	4b4a      	ldr	r3, [pc, #296]	; (80d64 <udc_process_setup+0x3f0>)
   80c3a:	781b      	ldrb	r3, [r3, #0]
   80c3c:	2b00      	cmp	r3, #0
   80c3e:	f43f aea7 	beq.w	80990 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80c42:	4b47      	ldr	r3, [pc, #284]	; (80d60 <udc_process_setup+0x3ec>)
   80c44:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   80c46:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
   80c48:	4620      	mov	r0, r4
   80c4a:	4b47      	ldr	r3, [pc, #284]	; (80d68 <udc_process_setup+0x3f4>)
   80c4c:	4798      	blx	r3
   80c4e:	2800      	cmp	r0, #0
   80c50:	f43f ae9e 	beq.w	80990 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
   80c54:	b2e9      	uxtb	r1, r5
   80c56:	4620      	mov	r0, r4
   80c58:	4b44      	ldr	r3, [pc, #272]	; (80d6c <udc_process_setup+0x3f8>)
   80c5a:	4798      	blx	r3
   80c5c:	4603      	mov	r3, r0
   80c5e:	e025      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c60:	4b3f      	ldr	r3, [pc, #252]	; (80d60 <udc_process_setup+0x3ec>)
   80c62:	88db      	ldrh	r3, [r3, #6]
   80c64:	2b00      	cmp	r3, #0
   80c66:	f47f ae93 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80c6a:	4b3d      	ldr	r3, [pc, #244]	; (80d60 <udc_process_setup+0x3ec>)
   80c6c:	885b      	ldrh	r3, [r3, #2]
   80c6e:	2b00      	cmp	r3, #0
   80c70:	f47f ae8e 	bne.w	80990 <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c74:	4b3a      	ldr	r3, [pc, #232]	; (80d60 <udc_process_setup+0x3ec>)
   80c76:	7918      	ldrb	r0, [r3, #4]
   80c78:	4b3d      	ldr	r3, [pc, #244]	; (80d70 <udc_process_setup+0x3fc>)
   80c7a:	4798      	blx	r3
   80c7c:	4603      	mov	r3, r0
   80c7e:	e015      	b.n	80cac <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
   80c80:	4b37      	ldr	r3, [pc, #220]	; (80d60 <udc_process_setup+0x3ec>)
   80c82:	88db      	ldrh	r3, [r3, #6]
   80c84:	2b00      	cmp	r3, #0
   80c86:	f47f ae83 	bne.w	80990 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80c8a:	4b35      	ldr	r3, [pc, #212]	; (80d60 <udc_process_setup+0x3ec>)
   80c8c:	885b      	ldrh	r3, [r3, #2]
   80c8e:	2b00      	cmp	r3, #0
   80c90:	f47f ae7e 	bne.w	80990 <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c94:	4c32      	ldr	r4, [pc, #200]	; (80d60 <udc_process_setup+0x3ec>)
   80c96:	7920      	ldrb	r0, [r4, #4]
   80c98:	4b36      	ldr	r3, [pc, #216]	; (80d74 <udc_process_setup+0x400>)
   80c9a:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   80c9c:	7920      	ldrb	r0, [r4, #4]
   80c9e:	4b36      	ldr	r3, [pc, #216]	; (80d78 <udc_process_setup+0x404>)
   80ca0:	4798      	blx	r3
   80ca2:	4603      	mov	r3, r0
   80ca4:	e002      	b.n	80cac <udc_process_setup+0x338>
		return false;
   80ca6:	2300      	movs	r3, #0
   80ca8:	e000      	b.n	80cac <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
   80caa:	2300      	movs	r3, #0
		if (udc_reqstd()) {
   80cac:	2b00      	cmp	r3, #0
   80cae:	f47f ae7e 	bne.w	809ae <udc_process_setup+0x3a>
   80cb2:	e66d      	b.n	80990 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
   80cb4:	4b2b      	ldr	r3, [pc, #172]	; (80d64 <udc_process_setup+0x3f0>)
   80cb6:	781b      	ldrb	r3, [r3, #0]
   80cb8:	2b00      	cmp	r3, #0
   80cba:	d04e      	beq.n	80d5a <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80cbc:	4b28      	ldr	r3, [pc, #160]	; (80d60 <udc_process_setup+0x3ec>)
   80cbe:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80cc0:	4b2e      	ldr	r3, [pc, #184]	; (80d7c <udc_process_setup+0x408>)
   80cc2:	681d      	ldr	r5, [r3, #0]
   80cc4:	682b      	ldr	r3, [r5, #0]
   80cc6:	791b      	ldrb	r3, [r3, #4]
   80cc8:	42a3      	cmp	r3, r4
   80cca:	d801      	bhi.n	80cd0 <udc_process_setup+0x35c>
	return false;
   80ccc:	2300      	movs	r3, #0
   80cce:	e66e      	b.n	809ae <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
   80cd0:	2100      	movs	r1, #0
   80cd2:	4620      	mov	r0, r4
   80cd4:	4b2a      	ldr	r3, [pc, #168]	; (80d80 <udc_process_setup+0x40c>)
   80cd6:	4798      	blx	r3
   80cd8:	2800      	cmp	r0, #0
   80cda:	f43f ae60 	beq.w	8099e <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80cde:	686b      	ldr	r3, [r5, #4]
   80ce0:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80ce4:	68eb      	ldr	r3, [r5, #12]
   80ce6:	4798      	blx	r3
   80ce8:	4601      	mov	r1, r0
   80cea:	4620      	mov	r0, r4
   80cec:	4b24      	ldr	r3, [pc, #144]	; (80d80 <udc_process_setup+0x40c>)
   80cee:	4798      	blx	r3
   80cf0:	2800      	cmp	r0, #0
   80cf2:	f43f ae54 	beq.w	8099e <udc_process_setup+0x2a>
	return udi_api->setup();
   80cf6:	68ab      	ldr	r3, [r5, #8]
   80cf8:	4798      	blx	r3
		if (udc_req_iface()) {
   80cfa:	4603      	mov	r3, r0
   80cfc:	2800      	cmp	r0, #0
   80cfe:	f47f ae56 	bne.w	809ae <udc_process_setup+0x3a>
   80d02:	e64c      	b.n	8099e <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
   80d04:	4b17      	ldr	r3, [pc, #92]	; (80d64 <udc_process_setup+0x3f0>)
   80d06:	781b      	ldrb	r3, [r3, #0]
   80d08:	b30b      	cbz	r3, 80d4e <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d0a:	4b1c      	ldr	r3, [pc, #112]	; (80d7c <udc_process_setup+0x408>)
   80d0c:	681a      	ldr	r2, [r3, #0]
   80d0e:	6813      	ldr	r3, [r2, #0]
   80d10:	791b      	ldrb	r3, [r3, #4]
   80d12:	b1f3      	cbz	r3, 80d52 <udc_process_setup+0x3de>
   80d14:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d16:	4e1a      	ldr	r6, [pc, #104]	; (80d80 <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d18:	4f18      	ldr	r7, [pc, #96]	; (80d7c <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80d1a:	6853      	ldr	r3, [r2, #4]
   80d1c:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80d20:	68eb      	ldr	r3, [r5, #12]
   80d22:	4798      	blx	r3
   80d24:	4601      	mov	r1, r0
   80d26:	4620      	mov	r0, r4
   80d28:	47b0      	blx	r6
   80d2a:	4603      	mov	r3, r0
   80d2c:	2800      	cmp	r0, #0
   80d2e:	f43f ae3e 	beq.w	809ae <udc_process_setup+0x3a>
		if (udi_api->setup()) {
   80d32:	68ab      	ldr	r3, [r5, #8]
   80d34:	4798      	blx	r3
   80d36:	4603      	mov	r3, r0
   80d38:	2800      	cmp	r0, #0
   80d3a:	f47f ae38 	bne.w	809ae <udc_process_setup+0x3a>
			iface_num++) {
   80d3e:	3401      	adds	r4, #1
   80d40:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d42:	683a      	ldr	r2, [r7, #0]
   80d44:	6811      	ldr	r1, [r2, #0]
   80d46:	7909      	ldrb	r1, [r1, #4]
   80d48:	42a1      	cmp	r1, r4
   80d4a:	d8e6      	bhi.n	80d1a <udc_process_setup+0x3a6>
   80d4c:	e62f      	b.n	809ae <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
   80d4e:	2300      	movs	r3, #0
   80d50:	e62d      	b.n	809ae <udc_process_setup+0x3a>
	return false;
   80d52:	2300      	movs	r3, #0
   80d54:	e62b      	b.n	809ae <udc_process_setup+0x3a>
			return false; // Error from USB host
   80d56:	2300      	movs	r3, #0
   80d58:	e629      	b.n	809ae <udc_process_setup+0x3a>
	return false;
   80d5a:	2300      	movs	r3, #0
   80d5c:	e627      	b.n	809ae <udc_process_setup+0x3a>
   80d5e:	bf00      	nop
   80d60:	20070e00 	.word	0x20070e00
   80d64:	20070ce8 	.word	0x20070ce8
   80d68:	00080819 	.word	0x00080819
   80d6c:	00080885 	.word	0x00080885
   80d70:	00081cdd 	.word	0x00081cdd
   80d74:	000820ad 	.word	0x000820ad
   80d78:	00081bdd 	.word	0x00081bdd
   80d7c:	20070cec 	.word	0x20070cec
   80d80:	000807a5 	.word	0x000807a5

00080d84 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80d84:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80d86:	0189      	lsls	r1, r1, #6
   80d88:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80d8a:	2402      	movs	r4, #2
   80d8c:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80d8e:	f04f 31ff 	mov.w	r1, #4294967295
   80d92:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80d94:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80d96:	605a      	str	r2, [r3, #4]
}
   80d98:	bc10      	pop	{r4}
   80d9a:	4770      	bx	lr

00080d9c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80d9c:	0189      	lsls	r1, r1, #6
   80d9e:	2305      	movs	r3, #5
   80da0:	5043      	str	r3, [r0, r1]
   80da2:	4770      	bx	lr

00080da4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80da4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80da8:	61ca      	str	r2, [r1, #28]
   80daa:	4770      	bx	lr

00080dac <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80dac:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80db0:	624a      	str	r2, [r1, #36]	; 0x24
   80db2:	4770      	bx	lr

00080db4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80db4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80db8:	6a08      	ldr	r0, [r1, #32]
}
   80dba:	4770      	bx	lr

00080dbc <udd_ctrl_init>:
	udd_enable_endpoint_interrupt(0);
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
   80dbc:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80dbe:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80dc2:	fab3 f383 	clz	r3, r3
   80dc6:	095b      	lsrs	r3, r3, #5
   80dc8:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80dca:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80dcc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80dd0:	2200      	movs	r2, #0
   80dd2:	4b0c      	ldr	r3, [pc, #48]	; (80e04 <udd_ctrl_init+0x48>)
   80dd4:	701a      	strb	r2, [r3, #0]
	return flags;
   80dd6:	9b01      	ldr	r3, [sp, #4]
	// In case of abort of IN Data Phase:
	// No need to abort IN transfer (rise TXINI),
	// because it is automatically done by hardware when a Setup packet is received.
	// But the interrupt must be disabled to don't generate interrupt TXINI
	// after SETUP reception.
	udd_disable_in_send_interrupt(0);
   80dd8:	2101      	movs	r1, #1
   80dda:	4a0b      	ldr	r2, [pc, #44]	; (80e08 <udd_ctrl_init+0x4c>)
   80ddc:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80dde:	b123      	cbz	r3, 80dea <udd_ctrl_init+0x2e>
		cpu_irq_enable();
   80de0:	4b08      	ldr	r3, [pc, #32]	; (80e04 <udd_ctrl_init+0x48>)
   80de2:	7019      	strb	r1, [r3, #0]
   80de4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80de8:	b662      	cpsie	i
	cpu_irq_restore(flags);

	// In case of OUT ZLP event is no processed before Setup event occurs
	udd_ack_out_received(0);
   80dea:	2202      	movs	r2, #2
   80dec:	4b07      	ldr	r3, [pc, #28]	; (80e0c <udd_ctrl_init+0x50>)
   80dee:	601a      	str	r2, [r3, #0]

	udd_g_ctrlreq.callback = NULL;
   80df0:	4a07      	ldr	r2, [pc, #28]	; (80e10 <udd_ctrl_init+0x54>)
   80df2:	2300      	movs	r3, #0
   80df4:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   80df6:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
   80df8:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   80dfa:	4a06      	ldr	r2, [pc, #24]	; (80e14 <udd_ctrl_init+0x58>)
   80dfc:	7013      	strb	r3, [r2, #0]
}
   80dfe:	b002      	add	sp, #8
   80e00:	4770      	bx	lr
   80e02:	bf00      	nop
   80e04:	200701cc 	.word	0x200701cc
   80e08:	400ac220 	.word	0x400ac220
   80e0c:	400ac160 	.word	0x400ac160
   80e10:	20070e00 	.word	0x20070e00
   80e14:	20070cfc 	.word	0x20070cfc

00080e18 <udd_ctrl_stall_data>:


static void udd_ctrl_stall_data(void)
{
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   80e18:	2205      	movs	r2, #5
   80e1a:	4b03      	ldr	r3, [pc, #12]	; (80e28 <udd_ctrl_stall_data+0x10>)
   80e1c:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
   80e1e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80e22:	4b02      	ldr	r3, [pc, #8]	; (80e2c <udd_ctrl_stall_data+0x14>)
   80e24:	601a      	str	r2, [r3, #0]
   80e26:	4770      	bx	lr
   80e28:	20070cfc 	.word	0x20070cfc
   80e2c:	400ac1f0 	.word	0x400ac1f0

00080e30 <udd_ctrl_send_zlp_in>:
}


static void udd_ctrl_send_zlp_in(void)
{
   80e30:	b082      	sub	sp, #8
	irqflags_t flags;

	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   80e32:	2203      	movs	r2, #3
   80e34:	4b0f      	ldr	r3, [pc, #60]	; (80e74 <udd_ctrl_send_zlp_in+0x44>)
   80e36:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80e38:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80e3c:	fab3 f383 	clz	r3, r3
   80e40:	095b      	lsrs	r3, r3, #5
   80e42:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80e44:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80e46:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80e4a:	2200      	movs	r2, #0
   80e4c:	4b0a      	ldr	r3, [pc, #40]	; (80e78 <udd_ctrl_send_zlp_in+0x48>)
   80e4e:	701a      	strb	r2, [r3, #0]
	return flags;
   80e50:	9801      	ldr	r0, [sp, #4]

	// Validate and send empty IN packet on control endpoint
	flags = cpu_irq_save();
	// Send ZLP on IN endpoint
	udd_ack_in_send(0);
   80e52:	490a      	ldr	r1, [pc, #40]	; (80e7c <udd_ctrl_send_zlp_in+0x4c>)
   80e54:	2201      	movs	r2, #1
   80e56:	600a      	str	r2, [r1, #0]
	udd_enable_in_send_interrupt(0);
   80e58:	4b09      	ldr	r3, [pc, #36]	; (80e80 <udd_ctrl_send_zlp_in+0x50>)
   80e5a:	601a      	str	r2, [r3, #0]
	// To detect a protocol error, enable nak interrupt on data OUT phase
	udd_ack_nak_out(0);
   80e5c:	2208      	movs	r2, #8
   80e5e:	600a      	str	r2, [r1, #0]
	udd_enable_nak_out_interrupt(0);
   80e60:	601a      	str	r2, [r3, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80e62:	b128      	cbz	r0, 80e70 <udd_ctrl_send_zlp_in+0x40>
		cpu_irq_enable();
   80e64:	2201      	movs	r2, #1
   80e66:	4b04      	ldr	r3, [pc, #16]	; (80e78 <udd_ctrl_send_zlp_in+0x48>)
   80e68:	701a      	strb	r2, [r3, #0]
   80e6a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80e6e:	b662      	cpsie	i
	cpu_irq_restore(flags);
}
   80e70:	b002      	add	sp, #8
   80e72:	4770      	bx	lr
   80e74:	20070cfc 	.word	0x20070cfc
   80e78:	200701cc 	.word	0x200701cc
   80e7c:	400ac160 	.word	0x400ac160
   80e80:	400ac1f0 	.word	0x400ac1f0

00080e84 <udd_ctrl_endofrequest>:
	cpu_irq_restore(flags);
}


static void udd_ctrl_endofrequest(void)
{
   80e84:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
   80e86:	4b02      	ldr	r3, [pc, #8]	; (80e90 <udd_ctrl_endofrequest+0xc>)
   80e88:	691b      	ldr	r3, [r3, #16]
   80e8a:	b103      	cbz	r3, 80e8e <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
   80e8c:	4798      	blx	r3
   80e8e:	bd08      	pop	{r3, pc}
   80e90:	20070e00 	.word	0x20070e00

00080e94 <udd_ctrl_in_sent>:
{
   80e94:	b530      	push	{r4, r5, lr}
   80e96:	b085      	sub	sp, #20
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80e98:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80e9c:	fab3 f383 	clz	r3, r3
   80ea0:	095b      	lsrs	r3, r3, #5
   80ea2:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   80ea4:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80ea6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80eaa:	2200      	movs	r2, #0
   80eac:	4b4c      	ldr	r3, [pc, #304]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80eae:	701a      	strb	r2, [r3, #0]
	return flags;
   80eb0:	9b01      	ldr	r3, [sp, #4]
	udd_disable_in_send_interrupt(0);
   80eb2:	2101      	movs	r1, #1
   80eb4:	4a4b      	ldr	r2, [pc, #300]	; (80fe4 <udd_ctrl_in_sent+0x150>)
   80eb6:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80eb8:	b123      	cbz	r3, 80ec4 <udd_ctrl_in_sent+0x30>
		cpu_irq_enable();
   80eba:	4b49      	ldr	r3, [pc, #292]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80ebc:	7019      	strb	r1, [r3, #0]
   80ebe:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80ec2:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   80ec4:	4b48      	ldr	r3, [pc, #288]	; (80fe8 <udd_ctrl_in_sent+0x154>)
   80ec6:	781b      	ldrb	r3, [r3, #0]
   80ec8:	2b03      	cmp	r3, #3
   80eca:	d057      	beq.n	80f7c <udd_ctrl_in_sent+0xe8>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   80ecc:	4b47      	ldr	r3, [pc, #284]	; (80fec <udd_ctrl_in_sent+0x158>)
   80ece:	881b      	ldrh	r3, [r3, #0]
   80ed0:	4a47      	ldr	r2, [pc, #284]	; (80ff0 <udd_ctrl_in_sent+0x15c>)
   80ed2:	8994      	ldrh	r4, [r2, #12]
   80ed4:	1ae4      	subs	r4, r4, r3
   80ed6:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   80ed8:	b9c4      	cbnz	r4, 80f0c <udd_ctrl_in_sent+0x78>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   80eda:	4a46      	ldr	r2, [pc, #280]	; (80ff4 <udd_ctrl_in_sent+0x160>)
   80edc:	8811      	ldrh	r1, [r2, #0]
   80ede:	440b      	add	r3, r1
   80ee0:	b29b      	uxth	r3, r3
   80ee2:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   80ee4:	4a42      	ldr	r2, [pc, #264]	; (80ff0 <udd_ctrl_in_sent+0x15c>)
   80ee6:	88d2      	ldrh	r2, [r2, #6]
   80ee8:	429a      	cmp	r2, r3
   80eea:	d04c      	beq.n	80f86 <udd_ctrl_in_sent+0xf2>
					|| b_shortpacket) {
   80eec:	4b42      	ldr	r3, [pc, #264]	; (80ff8 <udd_ctrl_in_sent+0x164>)
   80eee:	781b      	ldrb	r3, [r3, #0]
   80ef0:	2b00      	cmp	r3, #0
   80ef2:	d148      	bne.n	80f86 <udd_ctrl_in_sent+0xf2>
		if ((!udd_g_ctrlreq.over_under_run)
   80ef4:	4b3e      	ldr	r3, [pc, #248]	; (80ff0 <udd_ctrl_in_sent+0x15c>)
   80ef6:	695b      	ldr	r3, [r3, #20]
   80ef8:	2b00      	cmp	r3, #0
   80efa:	d061      	beq.n	80fc0 <udd_ctrl_in_sent+0x12c>
				|| (!udd_g_ctrlreq.over_under_run())) {
   80efc:	4798      	blx	r3
   80efe:	2800      	cmp	r0, #0
   80f00:	d05e      	beq.n	80fc0 <udd_ctrl_in_sent+0x12c>
			udd_ctrl_payload_buf_cnt = 0;
   80f02:	2200      	movs	r2, #0
   80f04:	4b39      	ldr	r3, [pc, #228]	; (80fec <udd_ctrl_in_sent+0x158>)
   80f06:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   80f08:	4b39      	ldr	r3, [pc, #228]	; (80ff0 <udd_ctrl_in_sent+0x15c>)
   80f0a:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   80f0c:	2c3f      	cmp	r4, #63	; 0x3f
   80f0e:	d957      	bls.n	80fc0 <udd_ctrl_in_sent+0x12c>
		b_shortpacket = false;
   80f10:	2200      	movs	r2, #0
   80f12:	4b39      	ldr	r3, [pc, #228]	; (80ff8 <udd_ctrl_in_sent+0x164>)
   80f14:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   80f16:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80f18:	4b35      	ldr	r3, [pc, #212]	; (80ff0 <udd_ctrl_in_sent+0x15c>)
   80f1a:	689a      	ldr	r2, [r3, #8]
   80f1c:	4b33      	ldr	r3, [pc, #204]	; (80fec <udd_ctrl_in_sent+0x158>)
   80f1e:	881d      	ldrh	r5, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80f20:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80f24:	fab3 f383 	clz	r3, r3
   80f28:	095b      	lsrs	r3, r3, #5
   80f2a:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   80f2c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80f2e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f32:	2100      	movs	r1, #0
   80f34:	4b2a      	ldr	r3, [pc, #168]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80f36:	7019      	strb	r1, [r3, #0]
	return flags;
   80f38:	9802      	ldr	r0, [sp, #8]
	if (Is_udd_out_received(0)) {
   80f3a:	4b30      	ldr	r3, [pc, #192]	; (80ffc <udd_ctrl_in_sent+0x168>)
   80f3c:	681b      	ldr	r3, [r3, #0]
   80f3e:	f013 0f02 	tst.w	r3, #2
   80f42:	d141      	bne.n	80fc8 <udd_ctrl_in_sent+0x134>
	for (i = 0; i < nb_remain; i++) {
   80f44:	b144      	cbz	r4, 80f58 <udd_ctrl_in_sent+0xc4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   80f46:	442a      	add	r2, r5
   80f48:	4b2d      	ldr	r3, [pc, #180]	; (81000 <udd_ctrl_in_sent+0x16c>)
		*ptr_dest++ = *ptr_src++;
   80f4a:	f812 1b01 	ldrb.w	r1, [r2], #1
   80f4e:	f803 1b01 	strb.w	r1, [r3], #1
	for (i = 0; i < nb_remain; i++) {
   80f52:	b2d9      	uxtb	r1, r3
   80f54:	42a1      	cmp	r1, r4
   80f56:	d3f8      	bcc.n	80f4a <udd_ctrl_in_sent+0xb6>
	udd_ctrl_payload_buf_cnt += nb_remain;
   80f58:	4b24      	ldr	r3, [pc, #144]	; (80fec <udd_ctrl_in_sent+0x158>)
   80f5a:	881a      	ldrh	r2, [r3, #0]
   80f5c:	4414      	add	r4, r2
   80f5e:	801c      	strh	r4, [r3, #0]
	udd_ack_in_send(0);
   80f60:	2301      	movs	r3, #1
   80f62:	4a28      	ldr	r2, [pc, #160]	; (81004 <udd_ctrl_in_sent+0x170>)
   80f64:	6013      	str	r3, [r2, #0]
	udd_enable_in_send_interrupt(0);
   80f66:	3290      	adds	r2, #144	; 0x90
   80f68:	6013      	str	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80f6a:	2800      	cmp	r0, #0
   80f6c:	d036      	beq.n	80fdc <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80f6e:	461a      	mov	r2, r3
   80f70:	4b1b      	ldr	r3, [pc, #108]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80f72:	701a      	strb	r2, [r3, #0]
   80f74:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80f78:	b662      	cpsie	i
   80f7a:	e02f      	b.n	80fdc <udd_ctrl_in_sent+0x148>
		udd_ctrl_endofrequest();
   80f7c:	4b22      	ldr	r3, [pc, #136]	; (81008 <udd_ctrl_in_sent+0x174>)
   80f7e:	4798      	blx	r3
		udd_ctrl_init();
   80f80:	4b22      	ldr	r3, [pc, #136]	; (8100c <udd_ctrl_in_sent+0x178>)
   80f82:	4798      	blx	r3
		return;
   80f84:	e02a      	b.n	80fdc <udd_ctrl_in_sent+0x148>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80f86:	2204      	movs	r2, #4
   80f88:	4b17      	ldr	r3, [pc, #92]	; (80fe8 <udd_ctrl_in_sent+0x154>)
   80f8a:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   80f8c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   80f90:	fab3 f383 	clz	r3, r3
   80f94:	095b      	lsrs	r3, r3, #5
   80f96:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   80f98:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   80f9a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f9e:	2200      	movs	r2, #0
   80fa0:	4b0f      	ldr	r3, [pc, #60]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80fa2:	701a      	strb	r2, [r3, #0]
	return flags;
   80fa4:	9a03      	ldr	r2, [sp, #12]
	udd_ack_nak_in(0);
   80fa6:	2310      	movs	r3, #16
   80fa8:	4916      	ldr	r1, [pc, #88]	; (81004 <udd_ctrl_in_sent+0x170>)
   80faa:	600b      	str	r3, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   80fac:	3190      	adds	r1, #144	; 0x90
   80fae:	600b      	str	r3, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   80fb0:	b1a2      	cbz	r2, 80fdc <udd_ctrl_in_sent+0x148>
		cpu_irq_enable();
   80fb2:	2201      	movs	r2, #1
   80fb4:	4b0a      	ldr	r3, [pc, #40]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80fb6:	701a      	strb	r2, [r3, #0]
   80fb8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fbc:	b662      	cpsie	i
   80fbe:	e00d      	b.n	80fdc <udd_ctrl_in_sent+0x148>
		b_shortpacket = true;
   80fc0:	2201      	movs	r2, #1
   80fc2:	4b0d      	ldr	r3, [pc, #52]	; (80ff8 <udd_ctrl_in_sent+0x164>)
   80fc4:	701a      	strb	r2, [r3, #0]
   80fc6:	e7a7      	b.n	80f18 <udd_ctrl_in_sent+0x84>
	if (cpu_irq_is_enabled_flags(flags))
   80fc8:	b128      	cbz	r0, 80fd6 <udd_ctrl_in_sent+0x142>
		cpu_irq_enable();
   80fca:	2201      	movs	r2, #1
   80fcc:	4b04      	ldr	r3, [pc, #16]	; (80fe0 <udd_ctrl_in_sent+0x14c>)
   80fce:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   80fd0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   80fd4:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   80fd6:	2204      	movs	r2, #4
   80fd8:	4b03      	ldr	r3, [pc, #12]	; (80fe8 <udd_ctrl_in_sent+0x154>)
   80fda:	701a      	strb	r2, [r3, #0]
}
   80fdc:	b005      	add	sp, #20
   80fde:	bd30      	pop	{r4, r5, pc}
   80fe0:	200701cc 	.word	0x200701cc
   80fe4:	400ac220 	.word	0x400ac220
   80fe8:	20070cfc 	.word	0x20070cfc
   80fec:	20070cf8 	.word	0x20070cf8
   80ff0:	20070e00 	.word	0x20070e00
   80ff4:	20070cfa 	.word	0x20070cfa
   80ff8:	20070cf4 	.word	0x20070cf4
   80ffc:	400ac130 	.word	0x400ac130
   81000:	20180000 	.word	0x20180000
   81004:	400ac160 	.word	0x400ac160
   81008:	00080e85 	.word	0x00080e85
   8100c:	00080dbd 	.word	0x00080dbd

00081010 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, bool b_abort, uint8_t ep_num)
{
	if (ptr_job->busy == false) {
   81010:	7d03      	ldrb	r3, [r0, #20]
   81012:	f013 0f01 	tst.w	r3, #1
   81016:	d013      	beq.n	81040 <udd_ep_finish_job+0x30>
{
   81018:	b510      	push	{r4, lr}
   8101a:	460c      	mov	r4, r1
		return; // No on-going job
	}
	dbg_print("(JobE%x:%d) ", (ptr_job-udd_ep_job)+1, b_abort);
	ptr_job->busy = false;
   8101c:	7d03      	ldrb	r3, [r0, #20]
   8101e:	f36f 0300 	bfc	r3, #0, #1
   81022:	7503      	strb	r3, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   81024:	6803      	ldr	r3, [r0, #0]
   81026:	b153      	cbz	r3, 8103e <udd_ep_finish_job+0x2e>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_in(ep_num)) {
   81028:	4906      	ldr	r1, [pc, #24]	; (81044 <udd_ep_finish_job+0x34>)
   8102a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
   8102e:	f411 7f80 	tst.w	r1, #256	; 0x100
		ep_num |= USB_EP_DIR_IN;
   81032:	bf18      	it	ne
   81034:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81038:	6881      	ldr	r1, [r0, #8]
   8103a:	4620      	mov	r0, r4
   8103c:	4798      	blx	r3
   8103e:	bd10      	pop	{r4, pc}
   81040:	4770      	bx	lr
   81042:	bf00      	nop
   81044:	400ac100 	.word	0x400ac100

00081048 <udd_ep_trans_done>:
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   81048:	1e43      	subs	r3, r0, #1

	if (!ptr_job->busy) {
   8104a:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   8104e:	4a5f      	ldr	r2, [pc, #380]	; (811cc <udd_ep_trans_done+0x184>)
   81050:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81054:	7d12      	ldrb	r2, [r2, #20]
   81056:	f012 0f01 	tst.w	r2, #1
   8105a:	f000 80b5 	beq.w	811c8 <udd_ep_trans_done+0x180>
{
   8105e:	b5f0      	push	{r4, r5, r6, r7, lr}
   81060:	b083      	sub	sp, #12
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   81062:	460a      	mov	r2, r1
   81064:	4959      	ldr	r1, [pc, #356]	; (811cc <udd_ep_trans_done+0x184>)
   81066:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8106a:	68d1      	ldr	r1, [r2, #12]
   8106c:	6892      	ldr	r2, [r2, #8]
   8106e:	4291      	cmp	r1, r2
   81070:	d077      	beq.n	81162 <udd_ep_trans_done+0x11a>
		// Need to send or receiv other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   81072:	1a52      	subs	r2, r2, r1

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   81074:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to tranfer the maximum
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(next_trans);
   81078:	bf92      	itee	ls
   8107a:	0417      	lslls	r7, r2, #16
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   8107c:	f44f 3280 	movhi.w	r2, #65536	; 0x10000
			udd_dma_ctrl = UOTGHS_DEVDMACONTROL_BUFF_LENGTH(0);
   81080:	2700      	movhi	r7, #0
		}
		if (Is_udd_endpoint_in(ep)) {
   81082:	4c53      	ldr	r4, [pc, #332]	; (811d0 <udd_ep_trans_done+0x188>)
   81084:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   81088:	f415 7f80 	tst.w	r5, #256	; 0x100
   8108c:	d014      	beq.n	810b8 <udd_ep_trans_done+0x70>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   8108e:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   81092:	f3c5 1502 	ubfx	r5, r5, #4, #3
   81096:	2408      	movs	r4, #8
   81098:	40ac      	lsls	r4, r5
   8109a:	3c01      	subs	r4, #1
   8109c:	4214      	tst	r4, r2
   8109e:	d013      	beq.n	810c8 <udd_ep_trans_done+0x80>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_B_EN;
   810a0:	f047 0708 	orr.w	r7, r7, #8
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   810a4:	eb03 0443 	add.w	r4, r3, r3, lsl #1
   810a8:	4d48      	ldr	r5, [pc, #288]	; (811cc <udd_ep_trans_done+0x184>)
   810aa:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
   810ae:	7d25      	ldrb	r5, [r4, #20]
   810b0:	f36f 0541 	bfc	r5, #1, #1
   810b4:	7525      	strb	r5, [r4, #20]
   810b6:	e007      	b.n	810c8 <udd_ep_trans_done+0x80>
			}
		} else {
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   810b8:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   810bc:	f3c5 25c1 	ubfx	r5, r5, #11, #2
   810c0:	2d01      	cmp	r5, #1
   810c2:	d037      	beq.n	81134 <udd_ep_trans_done+0xec>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {

				// Enable short packet reception
				udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_TR_IT
   810c4:	f047 0714 	orr.w	r7, r7, #20
						| UOTGHS_DEVDMACONTROL_END_TR_EN;
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   810c8:	4c42      	ldr	r4, [pc, #264]	; (811d4 <udd_ep_trans_done+0x18c>)
   810ca:	eb04 1400 	add.w	r4, r4, r0, lsl #4
   810ce:	eb03 0543 	add.w	r5, r3, r3, lsl #1
   810d2:	4e3e      	ldr	r6, [pc, #248]	; (811cc <udd_ep_trans_done+0x184>)
   810d4:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   810d8:	686d      	ldr	r5, [r5, #4]
   810da:	4429      	add	r1, r5
   810dc:	6061      	str	r1, [r4, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   810de:	f3ef 8110 	mrs	r1, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   810e2:	fab1 f181 	clz	r1, r1
   810e6:	0949      	lsrs	r1, r1, #5
   810e8:	9101      	str	r1, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   810ea:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   810ec:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   810f0:	2500      	movs	r5, #0
   810f2:	4939      	ldr	r1, [pc, #228]	; (811d8 <udd_ep_trans_done+0x190>)
   810f4:	700d      	strb	r5, [r1, #0]
	return flags;
   810f6:	9d01      	ldr	r5, [sp, #4]


		// Disable IRQs to have a short sequence
		// between read of EOT_STA and DMA enable
		flags = cpu_irq_save();
		if (!(udd_endpoint_dma_get_status(ep)
   810f8:	68e1      	ldr	r1, [r4, #12]
   810fa:	f011 0f10 	tst.w	r1, #16
   810fe:	d122      	bne.n	81146 <udd_ep_trans_done+0xfe>
		udd_dma_ctrl |= UOTGHS_DEVDMACONTROL_END_BUFFIT |
   81100:	f047 0721 	orr.w	r7, r7, #33	; 0x21
				& UOTGHS_DEVDMASTATUS_END_TR_ST)) {
			dbg_print("dmaS%x ", ep);
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   81104:	60a7      	str	r7, [r4, #8]
			ptr_job->buf_cnt += next_trans;
   81106:	eb03 0043 	add.w	r0, r3, r3, lsl #1
   8110a:	eb06 01c0 	add.w	r1, r6, r0, lsl #3
   8110e:	68c8      	ldr	r0, [r1, #12]
   81110:	4410      	add	r0, r2
   81112:	60c8      	str	r0, [r1, #12]
			ptr_job->buf_load = next_trans;
   81114:	610a      	str	r2, [r1, #16]
			udd_enable_endpoint_dma_interrupt(ep);
   81116:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   8111a:	fa00 f303 	lsl.w	r3, r0, r3
   8111e:	4a2f      	ldr	r2, [pc, #188]	; (811dc <udd_ep_trans_done+0x194>)
   81120:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81122:	2d00      	cmp	r5, #0
   81124:	d04e      	beq.n	811c4 <udd_ep_trans_done+0x17c>
		cpu_irq_enable();
   81126:	2201      	movs	r2, #1
   81128:	4b2b      	ldr	r3, [pc, #172]	; (811d8 <udd_ep_trans_done+0x190>)
   8112a:	701a      	strb	r2, [r3, #0]
   8112c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81130:	b662      	cpsie	i
   81132:	e047      	b.n	811c4 <udd_ep_trans_done+0x17c>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   81134:	f854 5020 	ldr.w	r5, [r4, r0, lsl #2]
   81138:	f3c5 1502 	ubfx	r5, r5, #4, #3
   8113c:	2408      	movs	r4, #8
   8113e:	40ac      	lsls	r4, r5
   81140:	42a2      	cmp	r2, r4
   81142:	d8c1      	bhi.n	810c8 <udd_ep_trans_done+0x80>
   81144:	e7be      	b.n	810c4 <udd_ep_trans_done+0x7c>
	if (cpu_irq_is_enabled_flags(flags))
   81146:	b12d      	cbz	r5, 81154 <udd_ep_trans_done+0x10c>
		cpu_irq_enable();
   81148:	2101      	movs	r1, #1
   8114a:	4a23      	ldr	r2, [pc, #140]	; (811d8 <udd_ep_trans_done+0x190>)
   8114c:	7011      	strb	r1, [r2, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   8114e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81152:	b662      	cpsie	i
		cpu_irq_restore(flags);

		// Here a ZLP has been recieved
		// and the DMA transfer must be not started.
		// It is the end of transfer
		ptr_job->buf_size = ptr_job->buf_cnt;
   81154:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81158:	491c      	ldr	r1, [pc, #112]	; (811cc <udd_ep_trans_done+0x184>)
   8115a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8115e:	68d1      	ldr	r1, [r2, #12]
   81160:	6091      	str	r1, [r2, #8]
	}
	if (Is_udd_endpoint_in(ep)) {
   81162:	4a1b      	ldr	r2, [pc, #108]	; (811d0 <udd_ep_trans_done+0x188>)
   81164:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
   81168:	f412 7f80 	tst.w	r2, #256	; 0x100
   8116c:	d021      	beq.n	811b2 <udd_ep_trans_done+0x16a>
		if (ptr_job->b_shortpacket) {
   8116e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81172:	4916      	ldr	r1, [pc, #88]	; (811cc <udd_ep_trans_done+0x184>)
   81174:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81178:	7d12      	ldrb	r2, [r2, #20]
   8117a:	f012 0f02 	tst.w	r2, #2
   8117e:	d018      	beq.n	811b2 <udd_ep_trans_done+0x16a>
			dbg_print("zlpS%x ", ep);
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_ack_in_send(ep);
   81180:	2201      	movs	r2, #1
   81182:	4b17      	ldr	r3, [pc, #92]	; (811e0 <udd_ep_trans_done+0x198>)
   81184:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			if (Is_udd_write_enabled(ep)) {
   81188:	3b30      	subs	r3, #48	; 0x30
   8118a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   8118e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
				// Force interrupt in case of ep already free
				udd_raise_in_send(ep);
   81192:	bf1c      	itt	ne
   81194:	4b13      	ldrne	r3, [pc, #76]	; (811e4 <udd_ep_trans_done+0x19c>)
   81196:	f843 2020 	strne.w	r2, [r3, r0, lsl #2]
			}
			udd_enable_in_send_interrupt(ep);
   8119a:	2201      	movs	r2, #1
   8119c:	4b12      	ldr	r3, [pc, #72]	; (811e8 <udd_ep_trans_done+0x1a0>)
   8119e:	f843 2020 	str.w	r2, [r3, r0, lsl #2]
			udd_enable_endpoint_interrupt(ep);
   811a2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   811a6:	fa02 f000 	lsl.w	r0, r2, r0
   811aa:	f5a3 73f8 	sub.w	r3, r3, #496	; 0x1f0
   811ae:	6198      	str	r0, [r3, #24]
			return;
   811b0:	e008      	b.n	811c4 <udd_ep_trans_done+0x17c>
   811b2:	4602      	mov	r2, r0
	ptr_job = &udd_ep_job[ep - 1];
   811b4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
		}
	}
	dbg_print("dmaE ");
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
   811b8:	2100      	movs	r1, #0
   811ba:	4804      	ldr	r0, [pc, #16]	; (811cc <udd_ep_trans_done+0x184>)
   811bc:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
   811c0:	4b0a      	ldr	r3, [pc, #40]	; (811ec <udd_ep_trans_done+0x1a4>)
   811c2:	4798      	blx	r3
}
   811c4:	b003      	add	sp, #12
   811c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   811c8:	4770      	bx	lr
   811ca:	bf00      	nop
   811cc:	20070d00 	.word	0x20070d00
   811d0:	400ac100 	.word	0x400ac100
   811d4:	400ac300 	.word	0x400ac300
   811d8:	200701cc 	.word	0x200701cc
   811dc:	400ac000 	.word	0x400ac000
   811e0:	400ac160 	.word	0x400ac160
   811e4:	400ac190 	.word	0x400ac190
   811e8:	400ac1f0 	.word	0x400ac1f0
   811ec:	00081011 	.word	0x00081011

000811f0 <udd_sleep_mode>:
{
   811f0:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
   811f2:	4601      	mov	r1, r0
   811f4:	bb28      	cbnz	r0, 81242 <udd_sleep_mode+0x52>
   811f6:	4b24      	ldr	r3, [pc, #144]	; (81288 <udd_sleep_mode+0x98>)
   811f8:	781b      	ldrb	r3, [r3, #0]
   811fa:	b91b      	cbnz	r3, 81204 <udd_sleep_mode+0x14>
	udd_b_idle = b_idle;
   811fc:	4b22      	ldr	r3, [pc, #136]	; (81288 <udd_sleep_mode+0x98>)
   811fe:	7019      	strb	r1, [r3, #0]
}
   81200:	b002      	add	sp, #8
   81202:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
   81204:	4b21      	ldr	r3, [pc, #132]	; (8128c <udd_sleep_mode+0x9c>)
   81206:	789b      	ldrb	r3, [r3, #2]
   81208:	b903      	cbnz	r3, 8120c <udd_sleep_mode+0x1c>
   8120a:	e7fe      	b.n	8120a <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8120c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81210:	fab3 f383 	clz	r3, r3
   81214:	095b      	lsrs	r3, r3, #5
   81216:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   81218:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8121a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8121e:	2200      	movs	r2, #0
   81220:	4b1b      	ldr	r3, [pc, #108]	; (81290 <udd_sleep_mode+0xa0>)
   81222:	701a      	strb	r2, [r3, #0]
	return flags;
   81224:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
   81226:	4a19      	ldr	r2, [pc, #100]	; (8128c <udd_sleep_mode+0x9c>)
   81228:	7893      	ldrb	r3, [r2, #2]
   8122a:	3b01      	subs	r3, #1
   8122c:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   8122e:	2800      	cmp	r0, #0
   81230:	d0e4      	beq.n	811fc <udd_sleep_mode+0xc>
		cpu_irq_enable();
   81232:	2201      	movs	r2, #1
   81234:	4b16      	ldr	r3, [pc, #88]	; (81290 <udd_sleep_mode+0xa0>)
   81236:	701a      	strb	r2, [r3, #0]
   81238:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8123c:	b662      	cpsie	i
   8123e:	e7dd      	b.n	811fc <udd_sleep_mode+0xc>
   81240:	e7fe      	b.n	81240 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
   81242:	4b11      	ldr	r3, [pc, #68]	; (81288 <udd_sleep_mode+0x98>)
   81244:	781b      	ldrb	r3, [r3, #0]
   81246:	2b00      	cmp	r3, #0
   81248:	d1d8      	bne.n	811fc <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
   8124a:	4b10      	ldr	r3, [pc, #64]	; (8128c <udd_sleep_mode+0x9c>)
   8124c:	789b      	ldrb	r3, [r3, #2]
   8124e:	2bff      	cmp	r3, #255	; 0xff
   81250:	d0f6      	beq.n	81240 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81252:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81256:	fab3 f383 	clz	r3, r3
   8125a:	095b      	lsrs	r3, r3, #5
   8125c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   8125e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81260:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81264:	2200      	movs	r2, #0
   81266:	4b0a      	ldr	r3, [pc, #40]	; (81290 <udd_sleep_mode+0xa0>)
   81268:	701a      	strb	r2, [r3, #0]
	return flags;
   8126a:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
   8126c:	4a07      	ldr	r2, [pc, #28]	; (8128c <udd_sleep_mode+0x9c>)
   8126e:	7893      	ldrb	r3, [r2, #2]
   81270:	3301      	adds	r3, #1
   81272:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81274:	2800      	cmp	r0, #0
   81276:	d0c1      	beq.n	811fc <udd_sleep_mode+0xc>
		cpu_irq_enable();
   81278:	2201      	movs	r2, #1
   8127a:	4b05      	ldr	r3, [pc, #20]	; (81290 <udd_sleep_mode+0xa0>)
   8127c:	701a      	strb	r2, [r3, #0]
   8127e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81282:	b662      	cpsie	i
   81284:	e7ba      	b.n	811fc <udd_sleep_mode+0xc>
   81286:	bf00      	nop
   81288:	20070cf5 	.word	0x20070cf5
   8128c:	20070df8 	.word	0x20070df8
   81290:	200701cc 	.word	0x200701cc

00081294 <udd_enable>:
{
   81294:	b510      	push	{r4, lr}
   81296:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81298:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8129c:	fab3 f383 	clz	r3, r3
   812a0:	095b      	lsrs	r3, r3, #5
   812a2:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
   812a4:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   812a6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   812aa:	2200      	movs	r2, #0
   812ac:	4b54      	ldr	r3, [pc, #336]	; (81400 <udd_enable+0x16c>)
   812ae:	701a      	strb	r2, [r3, #0]
	return flags;
   812b0:	9c00      	ldr	r4, [sp, #0]
	pmc_enable_periph_clk(ID_UOTGHS);
   812b2:	2028      	movs	r0, #40	; 0x28
   812b4:	4b53      	ldr	r3, [pc, #332]	; (81404 <udd_enable+0x170>)
   812b6:	4798      	blx	r3
	sysclk_enable_usb();
   812b8:	4b53      	ldr	r3, [pc, #332]	; (81408 <udd_enable+0x174>)
   812ba:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   812bc:	4b53      	ldr	r3, [pc, #332]	; (8140c <udd_enable+0x178>)
   812be:	2250      	movs	r2, #80	; 0x50
   812c0:	f883 2328 	strb.w	r2, [r3, #808]	; 0x328
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   812c4:	f44f 7280 	mov.w	r2, #256	; 0x100
   812c8:	605a      	str	r2, [r3, #4]
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   812ca:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   812ce:	4b50      	ldr	r3, [pc, #320]	; (81410 <udd_enable+0x17c>)
   812d0:	4798      	blx	r3
	otg_disable_id_pin();
   812d2:	4b50      	ldr	r3, [pc, #320]	; (81414 <udd_enable+0x180>)
   812d4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812d8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   812dc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_force_device_mode();
   812e0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812e4:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   812e8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
   812ec:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812f0:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
   812f4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable_pad();
   812f8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   812fc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
   81300:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_enable();
   81304:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81308:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
   8130c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_low_speed_disable();
   81310:	681a      	ldr	r2, [r3, #0]
   81312:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
   81316:	601a      	str	r2, [r3, #0]
	udd_high_speed_disable();
   81318:	681a      	ldr	r2, [r3, #0]
   8131a:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
   8131e:	601a      	str	r2, [r3, #0]
	otg_unfreeze_clock();
   81320:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81324:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   81328:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   8132c:	461a      	mov	r2, r3
   8132e:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81332:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   81336:	d0fa      	beq.n	8132e <udd_enable+0x9a>
		udd_ep_job[i].busy = false;
   81338:	4b37      	ldr	r3, [pc, #220]	; (81418 <udd_enable+0x184>)
   8133a:	7d1a      	ldrb	r2, [r3, #20]
		udd_ep_job[i].stall_requested = false;
   8133c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81340:	f36f 0282 	bfc	r2, #2, #1
   81344:	751a      	strb	r2, [r3, #20]
		udd_ep_job[i].busy = false;
   81346:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].stall_requested = false;
   8134a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   8134e:	f36f 0282 	bfc	r2, #2, #1
   81352:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		udd_ep_job[i].busy = false;
   81356:	f893 2044 	ldrb.w	r2, [r3, #68]	; 0x44
		udd_ep_job[i].stall_requested = false;
   8135a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   8135e:	f36f 0282 	bfc	r2, #2, #1
   81362:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
	otg_ack_vbus_transition();
   81366:	4b2b      	ldr	r3, [pc, #172]	; (81414 <udd_enable+0x180>)
   81368:	2202      	movs	r2, #2
   8136a:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
	if (Is_otg_vbus_high()) {
   8136e:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81372:	f413 6f00 	tst.w	r3, #2048	; 0x800
		otg_raise_vbus_transition();
   81376:	bf1c      	itt	ne
   81378:	4b26      	ldrne	r3, [pc, #152]	; (81414 <udd_enable+0x180>)
   8137a:	f8c3 280c 	strne.w	r2, [r3, #2060]	; 0x80c
	otg_enable_vbus_interrupt();
   8137e:	4b25      	ldr	r3, [pc, #148]	; (81414 <udd_enable+0x180>)
   81380:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81384:	f042 0202 	orr.w	r2, r2, #2
   81388:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	otg_freeze_clock();
   8138c:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81390:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81394:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (!udd_b_sleep_initialized) {
   81398:	4b20      	ldr	r3, [pc, #128]	; (8141c <udd_enable+0x188>)
   8139a:	781b      	ldrb	r3, [r3, #0]
   8139c:	bb1b      	cbnz	r3, 813e6 <udd_enable+0x152>
		udd_b_sleep_initialized = true;
   8139e:	2201      	movs	r2, #1
   813a0:	4b1e      	ldr	r3, [pc, #120]	; (8141c <udd_enable+0x188>)
   813a2:	701a      	strb	r2, [r3, #0]
		udd_b_idle = false;
   813a4:	2200      	movs	r2, #0
   813a6:	4b1e      	ldr	r3, [pc, #120]	; (81420 <udd_enable+0x18c>)
   813a8:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
   813aa:	4b1e      	ldr	r3, [pc, #120]	; (81424 <udd_enable+0x190>)
   813ac:	78db      	ldrb	r3, [r3, #3]
   813ae:	2bff      	cmp	r3, #255	; 0xff
   813b0:	d018      	beq.n	813e4 <udd_enable+0x150>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   813b2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   813b6:	fab3 f383 	clz	r3, r3
   813ba:	095b      	lsrs	r3, r3, #5
   813bc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   813be:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   813c0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   813c4:	2200      	movs	r2, #0
   813c6:	4b0e      	ldr	r3, [pc, #56]	; (81400 <udd_enable+0x16c>)
   813c8:	701a      	strb	r2, [r3, #0]
	return flags;
   813ca:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
   813cc:	4a15      	ldr	r2, [pc, #84]	; (81424 <udd_enable+0x190>)
   813ce:	78d3      	ldrb	r3, [r2, #3]
   813d0:	3301      	adds	r3, #1
   813d2:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   813d4:	b151      	cbz	r1, 813ec <udd_enable+0x158>
		cpu_irq_enable();
   813d6:	2201      	movs	r2, #1
   813d8:	4b09      	ldr	r3, [pc, #36]	; (81400 <udd_enable+0x16c>)
   813da:	701a      	strb	r2, [r3, #0]
   813dc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813e0:	b662      	cpsie	i
   813e2:	e003      	b.n	813ec <udd_enable+0x158>
   813e4:	e7fe      	b.n	813e4 <udd_enable+0x150>
		udd_sleep_mode(false); // Enter idle mode
   813e6:	2000      	movs	r0, #0
   813e8:	4b0f      	ldr	r3, [pc, #60]	; (81428 <udd_enable+0x194>)
   813ea:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   813ec:	b12c      	cbz	r4, 813fa <udd_enable+0x166>
		cpu_irq_enable();
   813ee:	2201      	movs	r2, #1
   813f0:	4b03      	ldr	r3, [pc, #12]	; (81400 <udd_enable+0x16c>)
   813f2:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   813f4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   813f8:	b662      	cpsie	i
}
   813fa:	b002      	add	sp, #8
   813fc:	bd10      	pop	{r4, pc}
   813fe:	bf00      	nop
   81400:	200701cc 	.word	0x200701cc
   81404:	00082491 	.word	0x00082491
   81408:	0008212d 	.word	0x0008212d
   8140c:	e000e100 	.word	0xe000e100
   81410:	000824d1 	.word	0x000824d1
   81414:	400ac000 	.word	0x400ac000
   81418:	20070d00 	.word	0x20070d00
   8141c:	20070cf6 	.word	0x20070cf6
   81420:	20070cf5 	.word	0x20070cf5
   81424:	20070df8 	.word	0x20070df8
   81428:	000811f1 	.word	0x000811f1

0008142c <udd_attach>:
{
   8142c:	b530      	push	{r4, r5, lr}
   8142e:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81430:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81434:	fab3 f383 	clz	r3, r3
   81438:	095b      	lsrs	r3, r3, #5
   8143a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   8143c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8143e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81442:	2200      	movs	r2, #0
   81444:	4b19      	ldr	r3, [pc, #100]	; (814ac <udd_attach+0x80>)
   81446:	701a      	strb	r2, [r3, #0]
	return flags;
   81448:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
   8144a:	2001      	movs	r0, #1
   8144c:	4b18      	ldr	r3, [pc, #96]	; (814b0 <udd_attach+0x84>)
   8144e:	4798      	blx	r3
	otg_unfreeze_clock();
   81450:	4a18      	ldr	r2, [pc, #96]	; (814b4 <udd_attach+0x88>)
   81452:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   81456:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   8145a:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
	while (!Is_otg_clock_usable());
   8145e:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
   81462:	f413 4f80 	tst.w	r3, #16384	; 0x4000
   81466:	d0fa      	beq.n	8145e <udd_attach+0x32>
	udd_attach_device();
   81468:	4b12      	ldr	r3, [pc, #72]	; (814b4 <udd_attach+0x88>)
   8146a:	681a      	ldr	r2, [r3, #0]
   8146c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   81470:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   81472:	2508      	movs	r5, #8
   81474:	619d      	str	r5, [r3, #24]
	udd_enable_suspend_interrupt();
   81476:	2101      	movs	r1, #1
   81478:	6199      	str	r1, [r3, #24]
	udd_enable_wake_up_interrupt();
   8147a:	2210      	movs	r2, #16
   8147c:	619a      	str	r2, [r3, #24]
	udd_enable_sof_interrupt();
   8147e:	2004      	movs	r0, #4
   81480:	6198      	str	r0, [r3, #24]
	udd_ack_reset();
   81482:	609d      	str	r5, [r3, #8]
	udd_ack_sof();
   81484:	6098      	str	r0, [r3, #8]
	udd_ack_msof();
   81486:	2002      	movs	r0, #2
   81488:	6098      	str	r0, [r3, #8]
	udd_raise_suspend();
   8148a:	60d9      	str	r1, [r3, #12]
	udd_ack_wake_up();
   8148c:	609a      	str	r2, [r3, #8]
	otg_freeze_clock();
   8148e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81492:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81496:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	if (cpu_irq_is_enabled_flags(flags))
   8149a:	b124      	cbz	r4, 814a6 <udd_attach+0x7a>
		cpu_irq_enable();
   8149c:	4b03      	ldr	r3, [pc, #12]	; (814ac <udd_attach+0x80>)
   8149e:	7019      	strb	r1, [r3, #0]
   814a0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   814a4:	b662      	cpsie	i
}
   814a6:	b003      	add	sp, #12
   814a8:	bd30      	pop	{r4, r5, pc}
   814aa:	bf00      	nop
   814ac:	200701cc 	.word	0x200701cc
   814b0:	000811f1 	.word	0x000811f1
   814b4:	400ac000 	.word	0x400ac000

000814b8 <udd_detach>:
{
   814b8:	b508      	push	{r3, lr}
	otg_unfreeze_clock();
   814ba:	4b0a      	ldr	r3, [pc, #40]	; (814e4 <udd_detach+0x2c>)
   814bc:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814c0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   814c4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_detach_device();
   814c8:	681a      	ldr	r2, [r3, #0]
   814ca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   814ce:	601a      	str	r2, [r3, #0]
	otg_freeze_clock();
   814d0:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   814d4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   814d8:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
	udd_sleep_mode(false);
   814dc:	2000      	movs	r0, #0
   814de:	4b02      	ldr	r3, [pc, #8]	; (814e8 <udd_detach+0x30>)
   814e0:	4798      	blx	r3
   814e2:	bd08      	pop	{r3, pc}
   814e4:	400ac000 	.word	0x400ac000
   814e8:	000811f1 	.word	0x000811f1

000814ec <UOTGHS_Handler>:
{
   814ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   814f0:	b085      	sub	sp, #20
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   814f2:	4b9a      	ldr	r3, [pc, #616]	; (8175c <UOTGHS_Handler+0x270>)
   814f4:	4798      	blx	r3
   814f6:	b920      	cbnz	r0, 81502 <UOTGHS_Handler+0x16>
   814f8:	4b99      	ldr	r3, [pc, #612]	; (81760 <UOTGHS_Handler+0x274>)
   814fa:	685b      	ldr	r3, [r3, #4]
   814fc:	f013 0f01 	tst.w	r3, #1
   81500:	d00f      	beq.n	81522 <UOTGHS_Handler+0x36>
	if (Is_udd_sof()) {
   81502:	4b97      	ldr	r3, [pc, #604]	; (81760 <UOTGHS_Handler+0x274>)
   81504:	685b      	ldr	r3, [r3, #4]
   81506:	f013 0f04 	tst.w	r3, #4
   8150a:	d014      	beq.n	81536 <UOTGHS_Handler+0x4a>
		udd_ack_sof();
   8150c:	4b94      	ldr	r3, [pc, #592]	; (81760 <UOTGHS_Handler+0x274>)
   8150e:	2204      	movs	r2, #4
   81510:	609a      	str	r2, [r3, #8]
		if (Is_udd_full_speed_mode()) {
   81512:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81516:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   8151a:	d009      	beq.n	81530 <UOTGHS_Handler+0x44>
}
   8151c:	b005      	add	sp, #20
   8151e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __ASM volatile ("cpsid i" : : : "memory");
   81522:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81524:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   81528:	2200      	movs	r2, #0
   8152a:	4b8e      	ldr	r3, [pc, #568]	; (81764 <UOTGHS_Handler+0x278>)
   8152c:	701a      	strb	r2, [r3, #0]
		return;
   8152e:	e7f5      	b.n	8151c <UOTGHS_Handler+0x30>
			udc_sof_notify();
   81530:	4b8d      	ldr	r3, [pc, #564]	; (81768 <UOTGHS_Handler+0x27c>)
   81532:	4798      	blx	r3
   81534:	e7f2      	b.n	8151c <UOTGHS_Handler+0x30>
	if (Is_udd_msof()) {
   81536:	4b8a      	ldr	r3, [pc, #552]	; (81760 <UOTGHS_Handler+0x274>)
   81538:	685b      	ldr	r3, [r3, #4]
   8153a:	f013 0f02 	tst.w	r3, #2
   8153e:	d133      	bne.n	815a8 <UOTGHS_Handler+0xbc>
	if (!Is_udd_endpoint_interrupt(0)) {
   81540:	4b87      	ldr	r3, [pc, #540]	; (81760 <UOTGHS_Handler+0x274>)
   81542:	685b      	ldr	r3, [r3, #4]
   81544:	f413 5f80 	tst.w	r3, #4096	; 0x1000
   81548:	d026      	beq.n	81598 <UOTGHS_Handler+0xac>
	udd_disable_nak_in_interrupt(0);
   8154a:	4b88      	ldr	r3, [pc, #544]	; (8176c <UOTGHS_Handler+0x280>)
   8154c:	2210      	movs	r2, #16
   8154e:	601a      	str	r2, [r3, #0]
	udd_disable_nak_out_interrupt(0);
   81550:	2208      	movs	r2, #8
   81552:	601a      	str	r2, [r3, #0]
	if (Is_udd_setup_received(0)) {
   81554:	3bf0      	subs	r3, #240	; 0xf0
   81556:	681b      	ldr	r3, [r3, #0]
   81558:	f013 0f04 	tst.w	r3, #4
   8155c:	d12a      	bne.n	815b4 <UOTGHS_Handler+0xc8>
	if (Is_udd_in_send(0) && Is_udd_in_send_interrupt_enabled(0)) {
   8155e:	4b84      	ldr	r3, [pc, #528]	; (81770 <UOTGHS_Handler+0x284>)
   81560:	681b      	ldr	r3, [r3, #0]
   81562:	f013 0f01 	tst.w	r3, #1
   81566:	d005      	beq.n	81574 <UOTGHS_Handler+0x88>
   81568:	4b82      	ldr	r3, [pc, #520]	; (81774 <UOTGHS_Handler+0x288>)
   8156a:	681b      	ldr	r3, [r3, #0]
   8156c:	f013 0f01 	tst.w	r3, #1
   81570:	f040 8085 	bne.w	8167e <UOTGHS_Handler+0x192>
	if (Is_udd_out_received(0)) {
   81574:	4b7e      	ldr	r3, [pc, #504]	; (81770 <UOTGHS_Handler+0x284>)
   81576:	681b      	ldr	r3, [r3, #0]
   81578:	f013 0f02 	tst.w	r3, #2
   8157c:	f040 8082 	bne.w	81684 <UOTGHS_Handler+0x198>
	if (Is_udd_nak_out(0)) {
   81580:	4b7b      	ldr	r3, [pc, #492]	; (81770 <UOTGHS_Handler+0x284>)
   81582:	681b      	ldr	r3, [r3, #0]
   81584:	f013 0f08 	tst.w	r3, #8
   81588:	f040 8130 	bne.w	817ec <UOTGHS_Handler+0x300>
	if (Is_udd_nak_in(0)) {
   8158c:	4b78      	ldr	r3, [pc, #480]	; (81770 <UOTGHS_Handler+0x284>)
   8158e:	681b      	ldr	r3, [r3, #0]
   81590:	f013 0f10 	tst.w	r3, #16
   81594:	f040 813d 	bne.w	81812 <UOTGHS_Handler+0x326>
	for (i = 0; i < nb_data; i++) {
   81598:	4e77      	ldr	r6, [pc, #476]	; (81778 <UOTGHS_Handler+0x28c>)
   8159a:	2301      	movs	r3, #1
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

#ifdef UDD_EP_DMA_SUPPORTED
		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   8159c:	4a70      	ldr	r2, [pc, #448]	; (81760 <UOTGHS_Handler+0x274>)
   8159e:	f04f 7e00 	mov.w	lr, #33554432	; 0x2000000
				return true;
			}
		}
#endif // UDD_EP_FIFO_SUPPORTED
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   815a2:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
   815a6:	e17f      	b.n	818a8 <UOTGHS_Handler+0x3bc>
		udd_ack_msof();
   815a8:	2202      	movs	r2, #2
   815aa:	4b6d      	ldr	r3, [pc, #436]	; (81760 <UOTGHS_Handler+0x274>)
   815ac:	609a      	str	r2, [r3, #8]
		udc_sof_notify();
   815ae:	4b6e      	ldr	r3, [pc, #440]	; (81768 <UOTGHS_Handler+0x27c>)
   815b0:	4798      	blx	r3
		goto udd_interrupt_sof_end;
   815b2:	e7b3      	b.n	8151c <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   815b4:	4b71      	ldr	r3, [pc, #452]	; (8177c <UOTGHS_Handler+0x290>)
   815b6:	781b      	ldrb	r3, [r3, #0]
   815b8:	2b00      	cmp	r3, #0
   815ba:	d141      	bne.n	81640 <UOTGHS_Handler+0x154>
	if (8 != udd_byte_count(0)) {
   815bc:	4b6c      	ldr	r3, [pc, #432]	; (81770 <UOTGHS_Handler+0x284>)
   815be:	681b      	ldr	r3, [r3, #0]
   815c0:	f3c3 530a 	ubfx	r3, r3, #20, #11
   815c4:	2b08      	cmp	r3, #8
   815c6:	d140      	bne.n	8164a <UOTGHS_Handler+0x15e>
   815c8:	4a6d      	ldr	r2, [pc, #436]	; (81780 <UOTGHS_Handler+0x294>)
   815ca:	4b6e      	ldr	r3, [pc, #440]	; (81784 <UOTGHS_Handler+0x298>)
	for (i = 0; i < 8; i++) {
   815cc:	486e      	ldr	r0, [pc, #440]	; (81788 <UOTGHS_Handler+0x29c>)
		((uint8_t*) &udd_g_ctrlreq.req)[i] = *ptr++;
   815ce:	f813 1b01 	ldrb.w	r1, [r3], #1
   815d2:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < 8; i++) {
   815d6:	4283      	cmp	r3, r0
   815d8:	d1f9      	bne.n	815ce <UOTGHS_Handler+0xe2>
	if (udc_process_setup() == false) {
   815da:	4b6c      	ldr	r3, [pc, #432]	; (8178c <UOTGHS_Handler+0x2a0>)
   815dc:	4798      	blx	r3
   815de:	2800      	cmp	r0, #0
   815e0:	d039      	beq.n	81656 <UOTGHS_Handler+0x16a>
	udd_ack_setup_received(0);
   815e2:	2204      	movs	r2, #4
   815e4:	4b6a      	ldr	r3, [pc, #424]	; (81790 <UOTGHS_Handler+0x2a4>)
   815e6:	601a      	str	r2, [r3, #0]
	if (Udd_setup_is_in()) {
   815e8:	4b6a      	ldr	r3, [pc, #424]	; (81794 <UOTGHS_Handler+0x2a8>)
   815ea:	f993 3000 	ldrsb.w	r3, [r3]
   815ee:	2b00      	cmp	r3, #0
   815f0:	db37      	blt.n	81662 <UOTGHS_Handler+0x176>
		if (0 == udd_g_ctrlreq.req.wLength) {
   815f2:	4b68      	ldr	r3, [pc, #416]	; (81794 <UOTGHS_Handler+0x2a8>)
   815f4:	88db      	ldrh	r3, [r3, #6]
   815f6:	2b00      	cmp	r3, #0
   815f8:	d03e      	beq.n	81678 <UOTGHS_Handler+0x18c>
		udd_ctrl_prev_payload_buf_cnt = 0;
   815fa:	2200      	movs	r2, #0
   815fc:	4b66      	ldr	r3, [pc, #408]	; (81798 <UOTGHS_Handler+0x2ac>)
   815fe:	801a      	strh	r2, [r3, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81600:	4b66      	ldr	r3, [pc, #408]	; (8179c <UOTGHS_Handler+0x2b0>)
   81602:	801a      	strh	r2, [r3, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81604:	2101      	movs	r1, #1
   81606:	4b5d      	ldr	r3, [pc, #372]	; (8177c <UOTGHS_Handler+0x290>)
   81608:	7019      	strb	r1, [r3, #0]
		udd_ack_nak_in(0);
   8160a:	2110      	movs	r1, #16
   8160c:	4b60      	ldr	r3, [pc, #384]	; (81790 <UOTGHS_Handler+0x2a4>)
   8160e:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81610:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81614:	fab3 f383 	clz	r3, r3
   81618:	095b      	lsrs	r3, r3, #5
   8161a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   8161c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8161e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81622:	4b50      	ldr	r3, [pc, #320]	; (81764 <UOTGHS_Handler+0x278>)
   81624:	701a      	strb	r2, [r3, #0]
	return flags;
   81626:	9b01      	ldr	r3, [sp, #4]
		udd_enable_nak_in_interrupt(0);
   81628:	4a5d      	ldr	r2, [pc, #372]	; (817a0 <UOTGHS_Handler+0x2b4>)
   8162a:	6011      	str	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
   8162c:	2b00      	cmp	r3, #0
   8162e:	f43f af75 	beq.w	8151c <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81632:	2201      	movs	r2, #1
   81634:	4b4b      	ldr	r3, [pc, #300]	; (81764 <UOTGHS_Handler+0x278>)
   81636:	701a      	strb	r2, [r3, #0]
   81638:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8163c:	b662      	cpsie	i
   8163e:	e76d      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ctrl_endofrequest();
   81640:	4b58      	ldr	r3, [pc, #352]	; (817a4 <UOTGHS_Handler+0x2b8>)
   81642:	4798      	blx	r3
		udd_ctrl_init();
   81644:	4b58      	ldr	r3, [pc, #352]	; (817a8 <UOTGHS_Handler+0x2bc>)
   81646:	4798      	blx	r3
   81648:	e7b8      	b.n	815bc <UOTGHS_Handler+0xd0>
		udd_ctrl_stall_data();
   8164a:	4b58      	ldr	r3, [pc, #352]	; (817ac <UOTGHS_Handler+0x2c0>)
   8164c:	4798      	blx	r3
		udd_ack_setup_received(0);
   8164e:	2204      	movs	r2, #4
   81650:	4b4f      	ldr	r3, [pc, #316]	; (81790 <UOTGHS_Handler+0x2a4>)
   81652:	601a      	str	r2, [r3, #0]
   81654:	e762      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ctrl_stall_data();
   81656:	4b55      	ldr	r3, [pc, #340]	; (817ac <UOTGHS_Handler+0x2c0>)
   81658:	4798      	blx	r3
		udd_ack_setup_received(0);
   8165a:	2204      	movs	r2, #4
   8165c:	4b4c      	ldr	r3, [pc, #304]	; (81790 <UOTGHS_Handler+0x2a4>)
   8165e:	601a      	str	r2, [r3, #0]
   81660:	e75c      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81662:	2300      	movs	r3, #0
   81664:	4a4c      	ldr	r2, [pc, #304]	; (81798 <UOTGHS_Handler+0x2ac>)
   81666:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81668:	4a4c      	ldr	r2, [pc, #304]	; (8179c <UOTGHS_Handler+0x2b0>)
   8166a:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   8166c:	2202      	movs	r2, #2
   8166e:	4b43      	ldr	r3, [pc, #268]	; (8177c <UOTGHS_Handler+0x290>)
   81670:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   81672:	4b4f      	ldr	r3, [pc, #316]	; (817b0 <UOTGHS_Handler+0x2c4>)
   81674:	4798      	blx	r3
   81676:	e751      	b.n	8151c <UOTGHS_Handler+0x30>
			udd_ctrl_send_zlp_in();
   81678:	4b4e      	ldr	r3, [pc, #312]	; (817b4 <UOTGHS_Handler+0x2c8>)
   8167a:	4798      	blx	r3
   8167c:	e74e      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ctrl_in_sent();
   8167e:	4b4c      	ldr	r3, [pc, #304]	; (817b0 <UOTGHS_Handler+0x2c4>)
   81680:	4798      	blx	r3
   81682:	e74b      	b.n	8151c <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81684:	4b3d      	ldr	r3, [pc, #244]	; (8177c <UOTGHS_Handler+0x290>)
   81686:	781b      	ldrb	r3, [r3, #0]
   81688:	2b01      	cmp	r3, #1
   8168a:	d00b      	beq.n	816a4 <UOTGHS_Handler+0x1b8>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   8168c:	2b02      	cmp	r3, #2
   8168e:	d004      	beq.n	8169a <UOTGHS_Handler+0x1ae>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   81690:	2b04      	cmp	r3, #4
   81692:	d002      	beq.n	8169a <UOTGHS_Handler+0x1ae>
			udd_ctrl_stall_data();
   81694:	4b45      	ldr	r3, [pc, #276]	; (817ac <UOTGHS_Handler+0x2c0>)
   81696:	4798      	blx	r3
   81698:	e001      	b.n	8169e <UOTGHS_Handler+0x1b2>
			udd_ctrl_endofrequest();
   8169a:	4b42      	ldr	r3, [pc, #264]	; (817a4 <UOTGHS_Handler+0x2b8>)
   8169c:	4798      	blx	r3
		udd_ctrl_init();
   8169e:	4b42      	ldr	r3, [pc, #264]	; (817a8 <UOTGHS_Handler+0x2bc>)
   816a0:	4798      	blx	r3
   816a2:	e73b      	b.n	8151c <UOTGHS_Handler+0x30>
	nb_data = udd_byte_count(0);
   816a4:	4b32      	ldr	r3, [pc, #200]	; (81770 <UOTGHS_Handler+0x284>)
   816a6:	6818      	ldr	r0, [r3, #0]
   816a8:	f3c0 500a 	ubfx	r0, r0, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   816ac:	4b39      	ldr	r3, [pc, #228]	; (81794 <UOTGHS_Handler+0x2a8>)
   816ae:	899b      	ldrh	r3, [r3, #12]
   816b0:	4a3a      	ldr	r2, [pc, #232]	; (8179c <UOTGHS_Handler+0x2b0>)
   816b2:	8814      	ldrh	r4, [r2, #0]
   816b4:	1822      	adds	r2, r4, r0
   816b6:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   816b8:	bfbc      	itt	lt
   816ba:	1b1b      	sublt	r3, r3, r4
   816bc:	b298      	uxthlt	r0, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   816be:	4b35      	ldr	r3, [pc, #212]	; (81794 <UOTGHS_Handler+0x2a8>)
   816c0:	689a      	ldr	r2, [r3, #8]
	for (i = 0; i < nb_data; i++) {
   816c2:	b178      	cbz	r0, 816e4 <UOTGHS_Handler+0x1f8>
   816c4:	1e63      	subs	r3, r4, #1
   816c6:	441a      	add	r2, r3
   816c8:	4b2e      	ldr	r3, [pc, #184]	; (81784 <UOTGHS_Handler+0x298>)
		*ptr_dest++ = *ptr_src++;
   816ca:	f813 1b01 	ldrb.w	r1, [r3], #1
   816ce:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < nb_data; i++) {
   816d2:	b2d9      	uxtb	r1, r3
   816d4:	4281      	cmp	r1, r0
   816d6:	d3f8      	bcc.n	816ca <UOTGHS_Handler+0x1de>
	udd_ctrl_payload_buf_cnt += nb_data;
   816d8:	4404      	add	r4, r0
   816da:	b2a4      	uxth	r4, r4
   816dc:	4b2f      	ldr	r3, [pc, #188]	; (8179c <UOTGHS_Handler+0x2b0>)
   816de:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   816e0:	2840      	cmp	r0, #64	; 0x40
   816e2:	d00c      	beq.n	816fe <UOTGHS_Handler+0x212>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   816e4:	4b2b      	ldr	r3, [pc, #172]	; (81794 <UOTGHS_Handler+0x2a8>)
   816e6:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   816e8:	695b      	ldr	r3, [r3, #20]
   816ea:	b113      	cbz	r3, 816f2 <UOTGHS_Handler+0x206>
			if (!udd_g_ctrlreq.over_under_run()) {
   816ec:	4798      	blx	r3
   816ee:	2800      	cmp	r0, #0
   816f0:	d02e      	beq.n	81750 <UOTGHS_Handler+0x264>
		udd_ack_out_received(0);
   816f2:	2202      	movs	r2, #2
   816f4:	4b26      	ldr	r3, [pc, #152]	; (81790 <UOTGHS_Handler+0x2a4>)
   816f6:	601a      	str	r2, [r3, #0]
		udd_ctrl_send_zlp_in();
   816f8:	4b2e      	ldr	r3, [pc, #184]	; (817b4 <UOTGHS_Handler+0x2c8>)
   816fa:	4798      	blx	r3
   816fc:	e70e      	b.n	8151c <UOTGHS_Handler+0x30>
			|| (udd_g_ctrlreq.req.wLength <=
   816fe:	4b25      	ldr	r3, [pc, #148]	; (81794 <UOTGHS_Handler+0x2a8>)
   81700:	88da      	ldrh	r2, [r3, #6]
					(udd_ctrl_prev_payload_buf_cnt +
   81702:	4b25      	ldr	r3, [pc, #148]	; (81798 <UOTGHS_Handler+0x2ac>)
   81704:	881b      	ldrh	r3, [r3, #0]
   81706:	4423      	add	r3, r4
			|| (udd_g_ctrlreq.req.wLength <=
   81708:	429a      	cmp	r2, r3
   8170a:	ddeb      	ble.n	816e4 <UOTGHS_Handler+0x1f8>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   8170c:	4b21      	ldr	r3, [pc, #132]	; (81794 <UOTGHS_Handler+0x2a8>)
   8170e:	899b      	ldrh	r3, [r3, #12]
   81710:	42a3      	cmp	r3, r4
   81712:	d051      	beq.n	817b8 <UOTGHS_Handler+0x2cc>
	udd_ack_out_received(0);
   81714:	4b1e      	ldr	r3, [pc, #120]	; (81790 <UOTGHS_Handler+0x2a4>)
   81716:	2202      	movs	r2, #2
   81718:	601a      	str	r2, [r3, #0]
	udd_ack_nak_in(0);
   8171a:	2210      	movs	r2, #16
   8171c:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   8171e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81722:	fab3 f383 	clz	r3, r3
   81726:	095b      	lsrs	r3, r3, #5
   81728:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
   8172a:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   8172c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81730:	2100      	movs	r1, #0
   81732:	4b0c      	ldr	r3, [pc, #48]	; (81764 <UOTGHS_Handler+0x278>)
   81734:	7019      	strb	r1, [r3, #0]
	return flags;
   81736:	9b02      	ldr	r3, [sp, #8]
	udd_enable_nak_in_interrupt(0);
   81738:	4919      	ldr	r1, [pc, #100]	; (817a0 <UOTGHS_Handler+0x2b4>)
   8173a:	600a      	str	r2, [r1, #0]
	if (cpu_irq_is_enabled_flags(flags))
   8173c:	2b00      	cmp	r3, #0
   8173e:	f43f aeed 	beq.w	8151c <UOTGHS_Handler+0x30>
		cpu_irq_enable();
   81742:	2201      	movs	r2, #1
   81744:	4b07      	ldr	r3, [pc, #28]	; (81764 <UOTGHS_Handler+0x278>)
   81746:	701a      	strb	r2, [r3, #0]
   81748:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   8174c:	b662      	cpsie	i
   8174e:	e6e5      	b.n	8151c <UOTGHS_Handler+0x30>
				udd_ctrl_stall_data();
   81750:	4b16      	ldr	r3, [pc, #88]	; (817ac <UOTGHS_Handler+0x2c0>)
   81752:	4798      	blx	r3
				udd_ack_out_received(0);
   81754:	2202      	movs	r2, #2
   81756:	4b0e      	ldr	r3, [pc, #56]	; (81790 <UOTGHS_Handler+0x2a4>)
   81758:	601a      	str	r2, [r3, #0]
   8175a:	e6df      	b.n	8151c <UOTGHS_Handler+0x30>
   8175c:	000824e5 	.word	0x000824e5
   81760:	400ac000 	.word	0x400ac000
   81764:	200701cc 	.word	0x200701cc
   81768:	00080935 	.word	0x00080935
   8176c:	400ac220 	.word	0x400ac220
   81770:	400ac130 	.word	0x400ac130
   81774:	400ac1c0 	.word	0x400ac1c0
   81778:	400ac134 	.word	0x400ac134
   8177c:	20070cfc 	.word	0x20070cfc
   81780:	20070dff 	.word	0x20070dff
   81784:	20180000 	.word	0x20180000
   81788:	20180008 	.word	0x20180008
   8178c:	00080975 	.word	0x00080975
   81790:	400ac160 	.word	0x400ac160
   81794:	20070e00 	.word	0x20070e00
   81798:	20070cfa 	.word	0x20070cfa
   8179c:	20070cf8 	.word	0x20070cf8
   817a0:	400ac1f0 	.word	0x400ac1f0
   817a4:	00080e85 	.word	0x00080e85
   817a8:	00080dbd 	.word	0x00080dbd
   817ac:	00080e19 	.word	0x00080e19
   817b0:	00080e95 	.word	0x00080e95
   817b4:	00080e31 	.word	0x00080e31
		if (!udd_g_ctrlreq.over_under_run) {
   817b8:	4ba1      	ldr	r3, [pc, #644]	; (81a40 <UOTGHS_Handler+0x554>)
   817ba:	695b      	ldr	r3, [r3, #20]
   817bc:	b153      	cbz	r3, 817d4 <UOTGHS_Handler+0x2e8>
		if (!udd_g_ctrlreq.over_under_run()) {
   817be:	4798      	blx	r3
   817c0:	b170      	cbz	r0, 817e0 <UOTGHS_Handler+0x2f4>
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   817c2:	49a0      	ldr	r1, [pc, #640]	; (81a44 <UOTGHS_Handler+0x558>)
   817c4:	4aa0      	ldr	r2, [pc, #640]	; (81a48 <UOTGHS_Handler+0x55c>)
   817c6:	880b      	ldrh	r3, [r1, #0]
   817c8:	8810      	ldrh	r0, [r2, #0]
   817ca:	4403      	add	r3, r0
   817cc:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_buf_cnt = 0;
   817ce:	2300      	movs	r3, #0
   817d0:	8013      	strh	r3, [r2, #0]
   817d2:	e79f      	b.n	81714 <UOTGHS_Handler+0x228>
			udd_ctrl_stall_data();
   817d4:	4b9d      	ldr	r3, [pc, #628]	; (81a4c <UOTGHS_Handler+0x560>)
   817d6:	4798      	blx	r3
			udd_ack_out_received(0);
   817d8:	2202      	movs	r2, #2
   817da:	4b9d      	ldr	r3, [pc, #628]	; (81a50 <UOTGHS_Handler+0x564>)
   817dc:	601a      	str	r2, [r3, #0]
   817de:	e69d      	b.n	8151c <UOTGHS_Handler+0x30>
			udd_ctrl_stall_data();
   817e0:	4b9a      	ldr	r3, [pc, #616]	; (81a4c <UOTGHS_Handler+0x560>)
   817e2:	4798      	blx	r3
			udd_ack_out_received(0);
   817e4:	2202      	movs	r2, #2
   817e6:	4b9a      	ldr	r3, [pc, #616]	; (81a50 <UOTGHS_Handler+0x564>)
   817e8:	601a      	str	r2, [r3, #0]
   817ea:	e697      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ack_nak_out(0);
   817ec:	2208      	movs	r2, #8
   817ee:	4b98      	ldr	r3, [pc, #608]	; (81a50 <UOTGHS_Handler+0x564>)
   817f0:	601a      	str	r2, [r3, #0]
	if (Is_udd_in_send(0))
   817f2:	3b30      	subs	r3, #48	; 0x30
   817f4:	681b      	ldr	r3, [r3, #0]
   817f6:	f013 0f01 	tst.w	r3, #1
   817fa:	f47f ae8f 	bne.w	8151c <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   817fe:	4b95      	ldr	r3, [pc, #596]	; (81a54 <UOTGHS_Handler+0x568>)
   81800:	781b      	ldrb	r3, [r3, #0]
   81802:	2b03      	cmp	r3, #3
   81804:	f47f ae8a 	bne.w	8151c <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   81808:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   8180c:	4b92      	ldr	r3, [pc, #584]	; (81a58 <UOTGHS_Handler+0x56c>)
   8180e:	601a      	str	r2, [r3, #0]
   81810:	e684      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ack_nak_in(0);
   81812:	2210      	movs	r2, #16
   81814:	4b8e      	ldr	r3, [pc, #568]	; (81a50 <UOTGHS_Handler+0x564>)
   81816:	601a      	str	r2, [r3, #0]
	if (Is_udd_out_received(0))
   81818:	3b30      	subs	r3, #48	; 0x30
   8181a:	681b      	ldr	r3, [r3, #0]
   8181c:	f013 0f02 	tst.w	r3, #2
   81820:	f47f ae7c 	bne.w	8151c <UOTGHS_Handler+0x30>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   81824:	4b8b      	ldr	r3, [pc, #556]	; (81a54 <UOTGHS_Handler+0x568>)
   81826:	781b      	ldrb	r3, [r3, #0]
   81828:	2b01      	cmp	r3, #1
   8182a:	d007      	beq.n	8183c <UOTGHS_Handler+0x350>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   8182c:	2b04      	cmp	r3, #4
   8182e:	f47f ae75 	bne.w	8151c <UOTGHS_Handler+0x30>
		udd_enable_stall_handshake(0);
   81832:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   81836:	4b88      	ldr	r3, [pc, #544]	; (81a58 <UOTGHS_Handler+0x56c>)
   81838:	601a      	str	r2, [r3, #0]
   8183a:	e66f      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ctrl_send_zlp_in();
   8183c:	4b87      	ldr	r3, [pc, #540]	; (81a5c <UOTGHS_Handler+0x570>)
   8183e:	4798      	blx	r3
   81840:	e66c      	b.n	8151c <UOTGHS_Handler+0x30>
			if (udd_endpoint_dma_get_status(ep)
   81842:	4b87      	ldr	r3, [pc, #540]	; (81a60 <UOTGHS_Handler+0x574>)
   81844:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   81848:	68da      	ldr	r2, [r3, #12]
   8184a:	f012 0f01 	tst.w	r2, #1
   8184e:	f47f ae65 	bne.w	8151c <UOTGHS_Handler+0x30>
			udd_disable_endpoint_dma_interrupt(ep);
   81852:	4a84      	ldr	r2, [pc, #528]	; (81a64 <UOTGHS_Handler+0x578>)
   81854:	6151      	str	r1, [r2, #20]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   81856:	68dd      	ldr	r5, [r3, #12]
			if (nb_remaining) {
   81858:	0c2d      	lsrs	r5, r5, #16
   8185a:	d008      	beq.n	8186e <UOTGHS_Handler+0x382>
				ptr_job->buf_cnt -= nb_remaining;
   8185c:	4b82      	ldr	r3, [pc, #520]	; (81a68 <UOTGHS_Handler+0x57c>)
   8185e:	0079      	lsls	r1, r7, #1
   81860:	19cc      	adds	r4, r1, r7
   81862:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   81866:	68e2      	ldr	r2, [r4, #12]
   81868:	1b52      	subs	r2, r2, r5
   8186a:	60e2      	str	r2, [r4, #12]
				ptr_job->buf_size = ptr_job->buf_cnt;
   8186c:	60a2      	str	r2, [r4, #8]
			udd_ep_trans_done(ep);
   8186e:	4b7f      	ldr	r3, [pc, #508]	; (81a6c <UOTGHS_Handler+0x580>)
   81870:	4798      	blx	r3
   81872:	e653      	b.n	8151c <UOTGHS_Handler+0x30>
			dbg_print("bg%x: ", ep);
			if (Is_udd_in_send_interrupt_enabled(ep)
					&& Is_udd_in_send(ep)) {
				dbg_print("I ");
				udd_disable_in_send_interrupt(ep);
   81874:	4b7e      	ldr	r3, [pc, #504]	; (81a70 <UOTGHS_Handler+0x584>)
   81876:	2201      	movs	r2, #1
   81878:	f849 2003 	str.w	r2, [r9, r3]
				// One bank is free then send a ZLP
				udd_ack_in_send(ep);
   8187c:	4974      	ldr	r1, [pc, #464]	; (81a50 <UOTGHS_Handler+0x564>)
   8187e:	f849 2001 	str.w	r2, [r9, r1]
				udd_ack_fifocon(ep);
   81882:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   81886:	f849 2003 	str.w	r2, [r9, r3]
		ptr_job = &udd_ep_job[ep - 1];
   8188a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
				udd_ep_finish_job(ptr_job, false, ep);
   8188e:	4602      	mov	r2, r0
   81890:	2100      	movs	r1, #0
   81892:	4875      	ldr	r0, [pc, #468]	; (81a68 <UOTGHS_Handler+0x57c>)
   81894:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
   81898:	4b76      	ldr	r3, [pc, #472]	; (81a74 <UOTGHS_Handler+0x588>)
   8189a:	4798      	blx	r3
   8189c:	e63e      	b.n	8151c <UOTGHS_Handler+0x30>
   8189e:	3301      	adds	r3, #1
   818a0:	3604      	adds	r6, #4
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   818a2:	2b04      	cmp	r3, #4
   818a4:	f000 80f6 	beq.w	81a94 <UOTGHS_Handler+0x5a8>
   818a8:	b2d8      	uxtb	r0, r3
		ptr_job = &udd_ep_job[ep - 1];
   818aa:	461d      	mov	r5, r3
   818ac:	1e5f      	subs	r7, r3, #1
   818ae:	46b8      	mov	r8, r7
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   818b0:	6914      	ldr	r4, [r2, #16]
   818b2:	fa0e f107 	lsl.w	r1, lr, r7
   818b6:	420c      	tst	r4, r1
   818b8:	d002      	beq.n	818c0 <UOTGHS_Handler+0x3d4>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   818ba:	6854      	ldr	r4, [r2, #4]
   818bc:	4221      	tst	r1, r4
   818be:	d1c0      	bne.n	81842 <UOTGHS_Handler+0x356>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   818c0:	6911      	ldr	r1, [r2, #16]
   818c2:	fa0c f505 	lsl.w	r5, ip, r5
   818c6:	4229      	tst	r1, r5
   818c8:	d0e9      	beq.n	8189e <UOTGHS_Handler+0x3b2>
   818ca:	ea4f 0983 	mov.w	r9, r3, lsl #2
   818ce:	f106 0490 	add.w	r4, r6, #144	; 0x90
			if (Is_udd_in_send_interrupt_enabled(ep)
   818d2:	f8d6 1090 	ldr.w	r1, [r6, #144]	; 0x90
   818d6:	f011 0f01 	tst.w	r1, #1
   818da:	d003      	beq.n	818e4 <UOTGHS_Handler+0x3f8>
					&& Is_udd_in_send(ep)) {
   818dc:	6831      	ldr	r1, [r6, #0]
   818de:	f011 0f01 	tst.w	r1, #1
   818e2:	d1c7      	bne.n	81874 <UOTGHS_Handler+0x388>
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   818e4:	6821      	ldr	r1, [r4, #0]
   818e6:	f411 5f80 	tst.w	r1, #4096	; 0x1000
   818ea:	d0d8      	beq.n	8189e <UOTGHS_Handler+0x3b2>
					&& (0 == udd_nb_busy_bank(ep))) {
   818ec:	6831      	ldr	r1, [r6, #0]
   818ee:	f411 5f40 	tst.w	r1, #12288	; 0x3000
   818f2:	d1d4      	bne.n	8189e <UOTGHS_Handler+0x3b2>
				dbg_print("EoT ");
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   818f4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   818f8:	4b5d      	ldr	r3, [pc, #372]	; (81a70 <UOTGHS_Handler+0x584>)
   818fa:	f849 2003 	str.w	r2, [r9, r3]
				udd_disable_endpoint_interrupt(ep);
   818fe:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
   81902:	615d      	str	r5, [r3, #20]

				Assert(ptr_job->stall_requested);
				// A stall has been requested during backgound transfer
				ptr_job->stall_requested = false;
   81904:	eb08 0848 	add.w	r8, r8, r8, lsl #1
   81908:	4b57      	ldr	r3, [pc, #348]	; (81a68 <UOTGHS_Handler+0x57c>)
   8190a:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
   8190e:	f898 2014 	ldrb.w	r2, [r8, #20]
   81912:	f36f 0282 	bfc	r2, #2, #1
   81916:	f888 2014 	strb.w	r2, [r8, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   8191a:	4a57      	ldr	r2, [pc, #348]	; (81a78 <UOTGHS_Handler+0x58c>)
   8191c:	f859 3002 	ldr.w	r3, [r9, r2]
   81920:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   81924:	f849 3002 	str.w	r3, [r9, r2]
				udd_enable_stall_handshake(ep);
   81928:	4b4b      	ldr	r3, [pc, #300]	; (81a58 <UOTGHS_Handler+0x56c>)
   8192a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   8192e:	f849 2003 	str.w	r2, [r9, r3]
				udd_reset_data_toggle(ep);
   81932:	f44f 2280 	mov.w	r2, #262144	; 0x40000
   81936:	f849 2003 	str.w	r2, [r9, r3]
   8193a:	e5ef      	b.n	8151c <UOTGHS_Handler+0x30>
		udd_ack_reset();
   8193c:	4c49      	ldr	r4, [pc, #292]	; (81a64 <UOTGHS_Handler+0x578>)
   8193e:	2308      	movs	r3, #8
   81940:	60a3      	str	r3, [r4, #8]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   81942:	4e49      	ldr	r6, [pc, #292]	; (81a68 <UOTGHS_Handler+0x57c>)
   81944:	2201      	movs	r2, #1
   81946:	4611      	mov	r1, r2
   81948:	4630      	mov	r0, r6
   8194a:	4d4a      	ldr	r5, [pc, #296]	; (81a74 <UOTGHS_Handler+0x588>)
   8194c:	47a8      	blx	r5
   8194e:	2202      	movs	r2, #2
   81950:	2101      	movs	r1, #1
   81952:	f106 0018 	add.w	r0, r6, #24
   81956:	47a8      	blx	r5
   81958:	2203      	movs	r2, #3
   8195a:	2101      	movs	r1, #1
   8195c:	f106 0030 	add.w	r0, r6, #48	; 0x30
   81960:	47a8      	blx	r5
		udc_reset();
   81962:	4b46      	ldr	r3, [pc, #280]	; (81a7c <UOTGHS_Handler+0x590>)
   81964:	4798      	blx	r3
	udd_configure_address(0);
   81966:	6823      	ldr	r3, [r4, #0]
   81968:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8196c:	6023      	str	r3, [r4, #0]
	udd_enable_address();
   8196e:	6823      	ldr	r3, [r4, #0]
   81970:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81974:	6023      	str	r3, [r4, #0]
	udd_configure_endpoint(0,
   81976:	4a40      	ldr	r2, [pc, #256]	; (81a78 <UOTGHS_Handler+0x58c>)
   81978:	6813      	ldr	r3, [r2, #0]
   8197a:	f423 53cb 	bic.w	r3, r3, #6496	; 0x1960
   8197e:	f023 031c 	bic.w	r3, r3, #28
   81982:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   81986:	6013      	str	r3, [r2, #0]
	udd_allocate_memory(0);
   81988:	6813      	ldr	r3, [r2, #0]
   8198a:	f043 0302 	orr.w	r3, r3, #2
   8198e:	6013      	str	r3, [r2, #0]
	udd_enable_endpoint(0);
   81990:	69e3      	ldr	r3, [r4, #28]
   81992:	f043 0301 	orr.w	r3, r3, #1
   81996:	61e3      	str	r3, [r4, #28]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81998:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   8199c:	fab3 f383 	clz	r3, r3
   819a0:	095b      	lsrs	r3, r3, #5
   819a2:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
   819a4:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   819a6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   819aa:	2200      	movs	r2, #0
   819ac:	4b34      	ldr	r3, [pc, #208]	; (81a80 <UOTGHS_Handler+0x594>)
   819ae:	701a      	strb	r2, [r3, #0]
	return flags;
   819b0:	9a03      	ldr	r2, [sp, #12]
	udd_enable_setup_received_interrupt(0);
   819b2:	4b29      	ldr	r3, [pc, #164]	; (81a58 <UOTGHS_Handler+0x56c>)
   819b4:	2104      	movs	r1, #4
   819b6:	6019      	str	r1, [r3, #0]
	udd_enable_out_received_interrupt(0);
   819b8:	2102      	movs	r1, #2
   819ba:	6019      	str	r1, [r3, #0]
	udd_enable_endpoint_interrupt(0);
   819bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   819c0:	61a3      	str	r3, [r4, #24]
	if (cpu_irq_is_enabled_flags(flags))
   819c2:	b12a      	cbz	r2, 819d0 <UOTGHS_Handler+0x4e4>
		cpu_irq_enable();
   819c4:	2201      	movs	r2, #1
   819c6:	4b2e      	ldr	r3, [pc, #184]	; (81a80 <UOTGHS_Handler+0x594>)
   819c8:	701a      	strb	r2, [r3, #0]
   819ca:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   819ce:	b662      	cpsie	i
		udd_ctrl_init();
   819d0:	4b2c      	ldr	r3, [pc, #176]	; (81a84 <UOTGHS_Handler+0x598>)
   819d2:	4798      	blx	r3
		goto udd_interrupt_end;
   819d4:	e5a2      	b.n	8151c <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   819d6:	4b23      	ldr	r3, [pc, #140]	; (81a64 <UOTGHS_Handler+0x578>)
   819d8:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819dc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   819e0:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_disable_suspend_interrupt();
   819e4:	2201      	movs	r2, #1
   819e6:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
   819e8:	2210      	movs	r2, #16
   819ea:	619a      	str	r2, [r3, #24]
		otg_freeze_clock(); // Mandatory to exit of sleep mode after a wakeup event
   819ec:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   819f0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   819f4:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		udd_sleep_mode(false);  // Enter in SUSPEND mode
   819f8:	2000      	movs	r0, #0
   819fa:	4b23      	ldr	r3, [pc, #140]	; (81a88 <UOTGHS_Handler+0x59c>)
   819fc:	4798      	blx	r3
		goto udd_interrupt_end;
   819fe:	e58d      	b.n	8151c <UOTGHS_Handler+0x30>
	if (Is_otg_vbus_transition()) {
   81a00:	4b18      	ldr	r3, [pc, #96]	; (81a64 <UOTGHS_Handler+0x578>)
   81a02:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81a06:	f013 0f02 	tst.w	r3, #2
   81a0a:	f43f ad87 	beq.w	8151c <UOTGHS_Handler+0x30>
		otg_unfreeze_clock();
   81a0e:	4b15      	ldr	r3, [pc, #84]	; (81a64 <UOTGHS_Handler+0x578>)
   81a10:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a14:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
   81a18:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		otg_ack_vbus_transition();
   81a1c:	2202      	movs	r2, #2
   81a1e:	f8c3 2808 	str.w	r2, [r3, #2056]	; 0x808
		otg_freeze_clock();
   81a22:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
   81a26:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   81a2a:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
		if (Is_otg_vbus_high()) {
   81a2e:	f8d3 3804 	ldr.w	r3, [r3, #2052]	; 0x804
   81a32:	f413 6f00 	tst.w	r3, #2048	; 0x800
			udd_attach();
   81a36:	bf14      	ite	ne
   81a38:	4b14      	ldrne	r3, [pc, #80]	; (81a8c <UOTGHS_Handler+0x5a0>)
			udd_detach();
   81a3a:	4b15      	ldreq	r3, [pc, #84]	; (81a90 <UOTGHS_Handler+0x5a4>)
   81a3c:	4798      	blx	r3
   81a3e:	e56d      	b.n	8151c <UOTGHS_Handler+0x30>
   81a40:	20070e00 	.word	0x20070e00
   81a44:	20070cfa 	.word	0x20070cfa
   81a48:	20070cf8 	.word	0x20070cf8
   81a4c:	00080e19 	.word	0x00080e19
   81a50:	400ac160 	.word	0x400ac160
   81a54:	20070cfc 	.word	0x20070cfc
   81a58:	400ac1f0 	.word	0x400ac1f0
   81a5c:	00080e31 	.word	0x00080e31
   81a60:	400ac300 	.word	0x400ac300
   81a64:	400ac000 	.word	0x400ac000
   81a68:	20070d00 	.word	0x20070d00
   81a6c:	00081049 	.word	0x00081049
   81a70:	400ac220 	.word	0x400ac220
   81a74:	00081011 	.word	0x00081011
   81a78:	400ac100 	.word	0x400ac100
   81a7c:	000808ed 	.word	0x000808ed
   81a80:	200701cc 	.word	0x200701cc
   81a84:	00080dbd 	.word	0x00080dbd
   81a88:	000811f1 	.word	0x000811f1
   81a8c:	0008142d 	.word	0x0008142d
   81a90:	000814b9 	.word	0x000814b9
	if (Is_udd_reset()) {
   81a94:	4b19      	ldr	r3, [pc, #100]	; (81afc <UOTGHS_Handler+0x610>)
   81a96:	685b      	ldr	r3, [r3, #4]
   81a98:	f013 0f08 	tst.w	r3, #8
   81a9c:	f47f af4e 	bne.w	8193c <UOTGHS_Handler+0x450>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81aa0:	4b16      	ldr	r3, [pc, #88]	; (81afc <UOTGHS_Handler+0x610>)
   81aa2:	691b      	ldr	r3, [r3, #16]
   81aa4:	f013 0f01 	tst.w	r3, #1
   81aa8:	d004      	beq.n	81ab4 <UOTGHS_Handler+0x5c8>
   81aaa:	4b14      	ldr	r3, [pc, #80]	; (81afc <UOTGHS_Handler+0x610>)
   81aac:	685b      	ldr	r3, [r3, #4]
   81aae:	f013 0f01 	tst.w	r3, #1
   81ab2:	d190      	bne.n	819d6 <UOTGHS_Handler+0x4ea>
	if (Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) {
   81ab4:	4b11      	ldr	r3, [pc, #68]	; (81afc <UOTGHS_Handler+0x610>)
   81ab6:	691b      	ldr	r3, [r3, #16]
   81ab8:	f013 0f10 	tst.w	r3, #16
   81abc:	d0a0      	beq.n	81a00 <UOTGHS_Handler+0x514>
   81abe:	4b0f      	ldr	r3, [pc, #60]	; (81afc <UOTGHS_Handler+0x610>)
   81ac0:	685b      	ldr	r3, [r3, #4]
   81ac2:	f013 0f10 	tst.w	r3, #16
   81ac6:	d09b      	beq.n	81a00 <UOTGHS_Handler+0x514>
		otg_unfreeze_clock();
   81ac8:	4a0c      	ldr	r2, [pc, #48]	; (81afc <UOTGHS_Handler+0x610>)
   81aca:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
   81ace:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
   81ad2:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
		while (!Is_otg_clock_usable()) {
   81ad6:	4613      	mov	r3, r2
   81ad8:	f8d3 2804 	ldr.w	r2, [r3, #2052]	; 0x804
   81adc:	f412 4f80 	tst.w	r2, #16384	; 0x4000
   81ae0:	d103      	bne.n	81aea <UOTGHS_Handler+0x5fe>
			if (Is_udd_suspend()) {
   81ae2:	685a      	ldr	r2, [r3, #4]
   81ae4:	f012 0f01 	tst.w	r2, #1
   81ae8:	d0f6      	beq.n	81ad8 <UOTGHS_Handler+0x5ec>
		udd_disable_wake_up_interrupt();
   81aea:	4b04      	ldr	r3, [pc, #16]	; (81afc <UOTGHS_Handler+0x610>)
   81aec:	2210      	movs	r2, #16
   81aee:	615a      	str	r2, [r3, #20]
		udd_enable_suspend_interrupt();
   81af0:	2001      	movs	r0, #1
   81af2:	6198      	str	r0, [r3, #24]
		udd_sleep_mode(true); // Enter in IDLE mode
   81af4:	4b02      	ldr	r3, [pc, #8]	; (81b00 <UOTGHS_Handler+0x614>)
   81af6:	4798      	blx	r3
		goto udd_interrupt_end;
   81af8:	e510      	b.n	8151c <UOTGHS_Handler+0x30>
   81afa:	bf00      	nop
   81afc:	400ac000 	.word	0x400ac000
   81b00:	000811f1 	.word	0x000811f1

00081b04 <udd_is_high_speed>:
}
   81b04:	2000      	movs	r0, #0
   81b06:	4770      	bx	lr

00081b08 <udd_set_address>:
	udd_disable_address();
   81b08:	4b08      	ldr	r3, [pc, #32]	; (81b2c <udd_set_address+0x24>)
   81b0a:	681a      	ldr	r2, [r3, #0]
   81b0c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   81b10:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   81b12:	681a      	ldr	r2, [r3, #0]
   81b14:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   81b18:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b1c:	4302      	orrs	r2, r0
   81b1e:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   81b20:	681a      	ldr	r2, [r3, #0]
   81b22:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   81b26:	601a      	str	r2, [r3, #0]
   81b28:	4770      	bx	lr
   81b2a:	bf00      	nop
   81b2c:	400ac000 	.word	0x400ac000

00081b30 <udd_getaddress>:
	return udd_get_configured_address();
   81b30:	4b02      	ldr	r3, [pc, #8]	; (81b3c <udd_getaddress+0xc>)
   81b32:	6818      	ldr	r0, [r3, #0]
}
   81b34:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b38:	4770      	bx	lr
   81b3a:	bf00      	nop
   81b3c:	400ac000 	.word	0x400ac000

00081b40 <udd_get_frame_number>:
	return udd_frame_number();
   81b40:	4b02      	ldr	r3, [pc, #8]	; (81b4c <udd_get_frame_number+0xc>)
   81b42:	6a18      	ldr	r0, [r3, #32]
}
   81b44:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   81b48:	4770      	bx	lr
   81b4a:	bf00      	nop
   81b4c:	400ac000 	.word	0x400ac000

00081b50 <udd_get_micro_frame_number>:
	return udd_micro_frame_number();
   81b50:	4b02      	ldr	r3, [pc, #8]	; (81b5c <udd_get_micro_frame_number+0xc>)
   81b52:	6a18      	ldr	r0, [r3, #32]
}
   81b54:	f3c0 000d 	ubfx	r0, r0, #0, #14
   81b58:	4770      	bx	lr
   81b5a:	bf00      	nop
   81b5c:	400ac000 	.word	0x400ac000

00081b60 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   81b60:	4b01      	ldr	r3, [pc, #4]	; (81b68 <udd_set_setup_payload+0x8>)
   81b62:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   81b64:	8199      	strh	r1, [r3, #12]
   81b66:	4770      	bx	lr
   81b68:	20070e00 	.word	0x20070e00

00081b6c <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81b6c:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81b70:	2a03      	cmp	r2, #3
   81b72:	d900      	bls.n	81b76 <udd_ep_free+0xa>
   81b74:	4770      	bx	lr
{
   81b76:	b570      	push	{r4, r5, r6, lr}
	udd_disable_endpoint(ep_index);
   81b78:	4810      	ldr	r0, [pc, #64]	; (81bbc <udd_ep_free+0x50>)
   81b7a:	69c3      	ldr	r3, [r0, #28]
   81b7c:	2101      	movs	r1, #1
   81b7e:	fa01 f402 	lsl.w	r4, r1, r2
   81b82:	ea23 0304 	bic.w	r3, r3, r4
   81b86:	61c3      	str	r3, [r0, #28]
	udd_unallocate_memory(ep_index);
   81b88:	f500 7080 	add.w	r0, r0, #256	; 0x100
   81b8c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
   81b90:	f023 0302 	bic.w	r3, r3, #2
   81b94:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   81b98:	1e56      	subs	r6, r2, #1
   81b9a:	4c09      	ldr	r4, [pc, #36]	; (81bc0 <udd_ep_free+0x54>)
   81b9c:	fa06 f501 	lsl.w	r5, r6, r1
   81ba0:	19a8      	adds	r0, r5, r6
   81ba2:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81ba6:	4b07      	ldr	r3, [pc, #28]	; (81bc4 <udd_ep_free+0x58>)
   81ba8:	4798      	blx	r3
	udd_ep_job[ep_index - 1].stall_requested = false;
   81baa:	4435      	add	r5, r6
   81bac:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   81bb0:	7d23      	ldrb	r3, [r4, #20]
   81bb2:	f36f 0382 	bfc	r3, #2, #1
   81bb6:	7523      	strb	r3, [r4, #20]
   81bb8:	bd70      	pop	{r4, r5, r6, pc}
   81bba:	bf00      	nop
   81bbc:	400ac000 	.word	0x400ac000
   81bc0:	20070d00 	.word	0x20070d00
   81bc4:	00081011 	.word	0x00081011

00081bc8 <udd_ep_is_halted>:
	return Is_udd_endpoint_stall_requested(ep_index);
   81bc8:	f000 000f 	and.w	r0, r0, #15
   81bcc:	4b02      	ldr	r3, [pc, #8]	; (81bd8 <udd_ep_is_halted+0x10>)
   81bce:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
}
   81bd2:	f3c0 40c0 	ubfx	r0, r0, #19, #1
   81bd6:	4770      	bx	lr
   81bd8:	400ac1c0 	.word	0x400ac1c0

00081bdc <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81bdc:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81be0:	2b03      	cmp	r3, #3
   81be2:	d85d      	bhi.n	81ca0 <udd_ep_set_halt+0xc4>
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   81be4:	4a35      	ldr	r2, [pc, #212]	; (81cbc <udd_ep_set_halt+0xe0>)
   81be6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81bea:	f412 2f00 	tst.w	r2, #524288	; 0x80000
   81bee:	d159      	bne.n	81ca4 <udd_ep_set_halt+0xc8>
{
   81bf0:	b410      	push	{r4}
   81bf2:	b083      	sub	sp, #12
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81bf4:	1e59      	subs	r1, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   81bf6:	eb01 0441 	add.w	r4, r1, r1, lsl #1
   81bfa:	4a31      	ldr	r2, [pc, #196]	; (81cc0 <udd_ep_set_halt+0xe4>)
   81bfc:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
   81c00:	7d12      	ldrb	r2, [r2, #20]
   81c02:	f012 0f04 	tst.w	r2, #4
   81c06:	d14f      	bne.n	81ca8 <udd_ep_set_halt+0xcc>
	if (ptr_job->busy == true) {
   81c08:	f012 0f01 	tst.w	r2, #1
   81c0c:	d150      	bne.n	81cb0 <udd_ep_set_halt+0xd4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81c0e:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81c12:	fab2 f282 	clz	r2, r2
   81c16:	0952      	lsrs	r2, r2, #5
   81c18:	9201      	str	r2, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81c1a:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81c1c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81c20:	2400      	movs	r4, #0
   81c22:	4a28      	ldr	r2, [pc, #160]	; (81cc4 <udd_ep_set_halt+0xe8>)
   81c24:	7014      	strb	r4, [r2, #0]
	return flags;
   81c26:	9c01      	ldr	r4, [sp, #4]
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c28:	f010 0f80 	tst.w	r0, #128	; 0x80
   81c2c:	d118      	bne.n	81c60 <udd_ep_set_halt+0x84>
	udd_disable_endpoint_bank_autoswitch(ep_index);
   81c2e:	4926      	ldr	r1, [pc, #152]	; (81cc8 <udd_ep_set_halt+0xec>)
   81c30:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
   81c34:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   81c38:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	udd_ack_stall(ep_index);
   81c3c:	2140      	movs	r1, #64	; 0x40
   81c3e:	4a23      	ldr	r2, [pc, #140]	; (81ccc <udd_ep_set_halt+0xf0>)
   81c40:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	udd_enable_stall_handshake(ep_index);
   81c44:	f44f 2100 	mov.w	r1, #524288	; 0x80000
   81c48:	3290      	adds	r2, #144	; 0x90
   81c4a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	if (cpu_irq_is_enabled_flags(flags))
   81c4e:	2c00      	cmp	r4, #0
   81c50:	d032      	beq.n	81cb8 <udd_ep_set_halt+0xdc>
		cpu_irq_enable();
   81c52:	2001      	movs	r0, #1
   81c54:	4b1b      	ldr	r3, [pc, #108]	; (81cc4 <udd_ep_set_halt+0xe8>)
   81c56:	7018      	strb	r0, [r3, #0]
   81c58:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81c5c:	b662      	cpsie	i
   81c5e:	e024      	b.n	81caa <udd_ep_set_halt+0xce>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   81c60:	4a1b      	ldr	r2, [pc, #108]	; (81cd0 <udd_ep_set_halt+0xf4>)
   81c62:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   81c66:	f412 5f40 	tst.w	r2, #12288	; 0x3000
   81c6a:	d0e0      	beq.n	81c2e <udd_ep_set_halt+0x52>
		ptr_job->stall_requested = true;
   81c6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81c70:	4a13      	ldr	r2, [pc, #76]	; (81cc0 <udd_ep_set_halt+0xe4>)
   81c72:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
   81c76:	7d0a      	ldrb	r2, [r1, #20]
   81c78:	f042 0204 	orr.w	r2, r2, #4
   81c7c:	750a      	strb	r2, [r1, #20]
		udd_enable_bank_interrupt(ep_index);
   81c7e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   81c82:	4914      	ldr	r1, [pc, #80]	; (81cd4 <udd_ep_set_halt+0xf8>)
   81c84:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		udd_enable_endpoint_interrupt(ep_index);
   81c88:	fa02 f303 	lsl.w	r3, r2, r3
   81c8c:	4a12      	ldr	r2, [pc, #72]	; (81cd8 <udd_ep_set_halt+0xfc>)
   81c8e:	6193      	str	r3, [r2, #24]
	if (cpu_irq_is_enabled_flags(flags))
   81c90:	b184      	cbz	r4, 81cb4 <udd_ep_set_halt+0xd8>
		cpu_irq_enable();
   81c92:	2001      	movs	r0, #1
   81c94:	4b0b      	ldr	r3, [pc, #44]	; (81cc4 <udd_ep_set_halt+0xe8>)
   81c96:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81c98:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81c9c:	b662      	cpsie	i
   81c9e:	e004      	b.n	81caa <udd_ep_set_halt+0xce>
		return false;
   81ca0:	2000      	movs	r0, #0
   81ca2:	4770      	bx	lr
		return true; // Already STALL
   81ca4:	2001      	movs	r0, #1
   81ca6:	4770      	bx	lr
   81ca8:	2001      	movs	r0, #1
}
   81caa:	b003      	add	sp, #12
   81cac:	bc10      	pop	{r4}
   81cae:	4770      	bx	lr
		return false; // Job on going, stall impossible
   81cb0:	2000      	movs	r0, #0
   81cb2:	e7fa      	b.n	81caa <udd_ep_set_halt+0xce>
		return true;
   81cb4:	2001      	movs	r0, #1
   81cb6:	e7f8      	b.n	81caa <udd_ep_set_halt+0xce>
	return true;
   81cb8:	2001      	movs	r0, #1
   81cba:	e7f6      	b.n	81caa <udd_ep_set_halt+0xce>
   81cbc:	400ac1c0 	.word	0x400ac1c0
   81cc0:	20070d00 	.word	0x20070d00
   81cc4:	200701cc 	.word	0x200701cc
   81cc8:	400ac100 	.word	0x400ac100
   81ccc:	400ac160 	.word	0x400ac160
   81cd0:	400ac130 	.word	0x400ac130
   81cd4:	400ac1f0 	.word	0x400ac1f0
   81cd8:	400ac000 	.word	0x400ac000

00081cdc <udd_ep_clear_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81cdc:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index)
   81ce0:	2803      	cmp	r0, #3
   81ce2:	d851      	bhi.n	81d88 <udd_ep_clear_halt+0xac>
{
   81ce4:	b510      	push	{r4, lr}
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81ce6:	1e43      	subs	r3, r0, #1
	if (ptr_job->stall_requested) {
   81ce8:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81cec:	4a2c      	ldr	r2, [pc, #176]	; (81da0 <udd_ep_clear_halt+0xc4>)
   81cee:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   81cf2:	7d12      	ldrb	r2, [r2, #20]
   81cf4:	f012 0f04 	tst.w	r2, #4
   81cf8:	d048      	beq.n	81d8c <udd_ep_clear_halt+0xb0>
		ptr_job->stall_requested = false;
   81cfa:	460a      	mov	r2, r1
   81cfc:	4928      	ldr	r1, [pc, #160]	; (81da0 <udd_ep_clear_halt+0xc4>)
   81cfe:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81d02:	7d11      	ldrb	r1, [r2, #20]
   81d04:	f36f 0182 	bfc	r1, #2, #1
   81d08:	7511      	strb	r1, [r2, #20]
		udd_disable_bank_interrupt(ep_index);
   81d0a:	0082      	lsls	r2, r0, #2
   81d0c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   81d10:	4c24      	ldr	r4, [pc, #144]	; (81da4 <udd_ep_clear_halt+0xc8>)
   81d12:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
		udd_disable_endpoint_interrupt(ep_index);
   81d16:	4081      	lsls	r1, r0
   81d18:	f5a4 7408 	sub.w	r4, r4, #544	; 0x220
   81d1c:	6161      	str	r1, [r4, #20]
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81d1e:	4922      	ldr	r1, [pc, #136]	; (81da8 <udd_ep_clear_halt+0xcc>)
   81d20:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81d24:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81d28:	d014      	beq.n	81d54 <udd_ep_clear_halt+0x78>
		if (Is_udd_stall(ep_index)) {
   81d2a:	4920      	ldr	r1, [pc, #128]	; (81dac <udd_ep_clear_halt+0xd0>)
   81d2c:	5851      	ldr	r1, [r2, r1]
   81d2e:	f011 0f40 	tst.w	r1, #64	; 0x40
   81d32:	d006      	beq.n	81d42 <udd_ep_clear_halt+0x66>
			udd_ack_stall(ep_index);
   81d34:	2040      	movs	r0, #64	; 0x40
   81d36:	491e      	ldr	r1, [pc, #120]	; (81db0 <udd_ep_clear_halt+0xd4>)
   81d38:	5050      	str	r0, [r2, r1]
			udd_reset_data_toggle(ep_index);
   81d3a:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   81d3e:	3190      	adds	r1, #144	; 0x90
   81d40:	5050      	str	r0, [r2, r1]
		udd_disable_stall_handshake(ep_index);
   81d42:	f44f 2000 	mov.w	r0, #524288	; 0x80000
   81d46:	4917      	ldr	r1, [pc, #92]	; (81da4 <udd_ep_clear_halt+0xc8>)
   81d48:	5050      	str	r0, [r2, r1]
		udd_enable_endpoint_bank_autoswitch(ep_index);
   81d4a:	481a      	ldr	r0, [pc, #104]	; (81db4 <udd_ep_clear_halt+0xd8>)
   81d4c:	5811      	ldr	r1, [r2, r0]
   81d4e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
   81d52:	5011      	str	r1, [r2, r0]
		if (ptr_job->busy == true) {
   81d54:	eb03 0243 	add.w	r2, r3, r3, lsl #1
   81d58:	4911      	ldr	r1, [pc, #68]	; (81da0 <udd_ep_clear_halt+0xc4>)
   81d5a:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81d5e:	7d12      	ldrb	r2, [r2, #20]
   81d60:	f012 0f01 	tst.w	r2, #1
   81d64:	d101      	bne.n	81d6a <udd_ep_clear_halt+0x8e>
	return true;
   81d66:	2001      	movs	r0, #1
   81d68:	bd10      	pop	{r4, pc}
			ptr_job->busy = false;
   81d6a:	4608      	mov	r0, r1
   81d6c:	0059      	lsls	r1, r3, #1
   81d6e:	18ca      	adds	r2, r1, r3
   81d70:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
   81d74:	7d14      	ldrb	r4, [r2, #20]
   81d76:	f36f 0400 	bfc	r4, #0, #1
   81d7a:	7514      	strb	r4, [r2, #20]
			ptr_job->call_nohalt();
   81d7c:	440b      	add	r3, r1
   81d7e:	f850 3033 	ldr.w	r3, [r0, r3, lsl #3]
   81d82:	4798      	blx	r3
	return true;
   81d84:	2001      	movs	r0, #1
   81d86:	bd10      	pop	{r4, pc}
		return false;
   81d88:	2000      	movs	r0, #0
   81d8a:	4770      	bx	lr
	if (Is_udd_endpoint_stall_requested(ep_index)) {
   81d8c:	0082      	lsls	r2, r0, #2
   81d8e:	4906      	ldr	r1, [pc, #24]	; (81da8 <udd_ep_clear_halt+0xcc>)
   81d90:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
   81d94:	f411 2f00 	tst.w	r1, #524288	; 0x80000
   81d98:	d1c7      	bne.n	81d2a <udd_ep_clear_halt+0x4e>
	return true;
   81d9a:	2001      	movs	r0, #1
}
   81d9c:	bd10      	pop	{r4, pc}
   81d9e:	bf00      	nop
   81da0:	20070d00 	.word	0x20070d00
   81da4:	400ac220 	.word	0x400ac220
   81da8:	400ac1c0 	.word	0x400ac1c0
   81dac:	400ac130 	.word	0x400ac130
   81db0:	400ac160 	.word	0x400ac160
   81db4:	400ac100 	.word	0x400ac100

00081db8 <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   81db8:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   81dbc:	2803      	cmp	r0, #3
   81dbe:	d864      	bhi.n	81e8a <udd_ep_run+0xd2>
{
   81dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
   81dc2:	b083      	sub	sp, #12
	if ((!Is_udd_endpoint_enabled(ep))
   81dc4:	4c36      	ldr	r4, [pc, #216]	; (81ea0 <udd_ep_run+0xe8>)
   81dc6:	69e5      	ldr	r5, [r4, #28]
   81dc8:	2401      	movs	r4, #1
   81dca:	4084      	lsls	r4, r0
   81dcc:	422c      	tst	r4, r5
   81dce:	d05e      	beq.n	81e8e <udd_ep_run+0xd6>
			|| Is_udd_endpoint_stall_requested(ep)
   81dd0:	4c34      	ldr	r4, [pc, #208]	; (81ea4 <udd_ep_run+0xec>)
   81dd2:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
   81dd6:	f414 2f00 	tst.w	r4, #524288	; 0x80000
   81dda:	d15b      	bne.n	81e94 <udd_ep_run+0xdc>
	ptr_job = &udd_ep_job[ep - 1];
   81ddc:	1e44      	subs	r4, r0, #1
			|| ptr_job->stall_requested) {
   81dde:	eb04 0644 	add.w	r6, r4, r4, lsl #1
   81de2:	4d31      	ldr	r5, [pc, #196]	; (81ea8 <udd_ep_run+0xf0>)
   81de4:	eb05 05c6 	add.w	r5, r5, r6, lsl #3
   81de8:	7d2d      	ldrb	r5, [r5, #20]
   81dea:	f015 0f04 	tst.w	r5, #4
   81dee:	d153      	bne.n	81e98 <udd_ep_run+0xe0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   81df0:	f3ef 8510 	mrs	r5, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
   81df4:	fab5 f585 	clz	r5, r5
   81df8:	096d      	lsrs	r5, r5, #5
   81dfa:	9501      	str	r5, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
   81dfc:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
   81dfe:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81e02:	2600      	movs	r6, #0
   81e04:	4d29      	ldr	r5, [pc, #164]	; (81eac <udd_ep_run+0xf4>)
   81e06:	702e      	strb	r6, [r5, #0]
	return flags;
   81e08:	9f01      	ldr	r7, [sp, #4]
	if (ptr_job->busy == true) {
   81e0a:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e0e:	4e26      	ldr	r6, [pc, #152]	; (81ea8 <udd_ep_run+0xf0>)
   81e10:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81e14:	7d2d      	ldrb	r5, [r5, #20]
   81e16:	f015 0f01 	tst.w	r5, #1
   81e1a:	d009      	beq.n	81e30 <udd_ep_run+0x78>
	if (cpu_irq_is_enabled_flags(flags))
   81e1c:	2f00      	cmp	r7, #0
   81e1e:	d03d      	beq.n	81e9c <udd_ep_run+0xe4>
		cpu_irq_enable();
   81e20:	2201      	movs	r2, #1
   81e22:	4b22      	ldr	r3, [pc, #136]	; (81eac <udd_ep_run+0xf4>)
   81e24:	701a      	strb	r2, [r3, #0]
   81e26:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e2a:	b662      	cpsie	i
		return false; // Job already on going
   81e2c:	2000      	movs	r0, #0
   81e2e:	e02f      	b.n	81e90 <udd_ep_run+0xd8>
	ptr_job->busy = true;
   81e30:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e34:	4e1c      	ldr	r6, [pc, #112]	; (81ea8 <udd_ep_run+0xf0>)
   81e36:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   81e3a:	7d2e      	ldrb	r6, [r5, #20]
   81e3c:	f046 0601 	orr.w	r6, r6, #1
   81e40:	752e      	strb	r6, [r5, #20]
	if (cpu_irq_is_enabled_flags(flags))
   81e42:	b12f      	cbz	r7, 81e50 <udd_ep_run+0x98>
		cpu_irq_enable();
   81e44:	2601      	movs	r6, #1
   81e46:	4d19      	ldr	r5, [pc, #100]	; (81eac <udd_ep_run+0xf4>)
   81e48:	702e      	strb	r6, [r5, #0]
  __ASM volatile ("dmb 0xF":::"memory");
   81e4a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
   81e4e:	b662      	cpsie	i
	ptr_job->buf = buf;
   81e50:	4f15      	ldr	r7, [pc, #84]	; (81ea8 <udd_ep_run+0xf0>)
   81e52:	eb04 0544 	add.w	r5, r4, r4, lsl #1
   81e56:	00ed      	lsls	r5, r5, #3
   81e58:	197e      	adds	r6, r7, r5
   81e5a:	6072      	str	r2, [r6, #4]
	ptr_job->buf_size = buf_size;
   81e5c:	60b3      	str	r3, [r6, #8]
	ptr_job->buf_cnt = 0;
   81e5e:	2200      	movs	r2, #0
   81e60:	60f2      	str	r2, [r6, #12]
	ptr_job->buf_load = 0;
   81e62:	6132      	str	r2, [r6, #16]
	ptr_job->call_trans = callback;
   81e64:	9a08      	ldr	r2, [sp, #32]
   81e66:	517a      	str	r2, [r7, r5]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81e68:	b911      	cbnz	r1, 81e70 <udd_ep_run+0xb8>
   81e6a:	fab3 f183 	clz	r1, r3
   81e6e:	0949      	lsrs	r1, r1, #5
   81e70:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   81e74:	4b0c      	ldr	r3, [pc, #48]	; (81ea8 <udd_ep_run+0xf0>)
   81e76:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
   81e7a:	7d23      	ldrb	r3, [r4, #20]
   81e7c:	f361 0341 	bfi	r3, r1, #1, #1
   81e80:	7523      	strb	r3, [r4, #20]
	udd_ep_trans_done(ep);
   81e82:	4b0b      	ldr	r3, [pc, #44]	; (81eb0 <udd_ep_run+0xf8>)
   81e84:	4798      	blx	r3
	return true;
   81e86:	2001      	movs	r0, #1
   81e88:	e002      	b.n	81e90 <udd_ep_run+0xd8>
		return false;
   81e8a:	2000      	movs	r0, #0
   81e8c:	4770      	bx	lr
		return false; // Endpoint is halted
   81e8e:	2000      	movs	r0, #0
}
   81e90:	b003      	add	sp, #12
   81e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
   81e94:	2000      	movs	r0, #0
   81e96:	e7fb      	b.n	81e90 <udd_ep_run+0xd8>
   81e98:	2000      	movs	r0, #0
   81e9a:	e7f9      	b.n	81e90 <udd_ep_run+0xd8>
		return false; // Job already on going
   81e9c:	2000      	movs	r0, #0
   81e9e:	e7f7      	b.n	81e90 <udd_ep_run+0xd8>
   81ea0:	400ac000 	.word	0x400ac000
   81ea4:	400ac1c0 	.word	0x400ac1c0
   81ea8:	20070d00 	.word	0x20070d00
   81eac:	200701cc 	.word	0x200701cc
   81eb0:	00081049 	.word	0x00081049

00081eb4 <udd_ep_alloc>:
{
   81eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81eb8:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
   81eba:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   81ebe:	2c03      	cmp	r4, #3
   81ec0:	f200 80df 	bhi.w	82082 <udd_ep_alloc+0x1ce>
	if (Is_udd_endpoint_enabled(ep)) {
   81ec4:	4b74      	ldr	r3, [pc, #464]	; (82098 <udd_ep_alloc+0x1e4>)
   81ec6:	69dd      	ldr	r5, [r3, #28]
   81ec8:	2301      	movs	r3, #1
   81eca:	40a3      	lsls	r3, r4
   81ecc:	402b      	ands	r3, r5
   81ece:	f040 80dd 	bne.w	8208c <udd_ep_alloc+0x1d8>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   81ed2:	f011 0503 	ands.w	r5, r1, #3
   81ed6:	f000 80db 	beq.w	82090 <udd_ep_alloc+0x1dc>
   81eda:	2d02      	cmp	r5, #2
   81edc:	d920      	bls.n	81f20 <udd_ep_alloc+0x6c>
   81ede:	2d03      	cmp	r5, #3
   81ee0:	f040 80d6 	bne.w	82090 <udd_ep_alloc+0x1dc>
		bank = UOTGHS_DEVEPTCFG_EPBK_1_BANK >>
   81ee4:	f04f 0e00 	mov.w	lr, #0
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81ee8:	4e6c      	ldr	r6, [pc, #432]	; (8209c <udd_ep_alloc+0x1e8>)
   81eea:	eb06 0584 	add.w	r5, r6, r4, lsl #2
   81eee:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
   81ef2:	f427 57cb 	bic.w	r7, r7, #6496	; 0x1960
   81ef6:	f027 071c 	bic.w	r7, r7, #28
   81efa:	02c9      	lsls	r1, r1, #11
   81efc:	f401 51c0 	and.w	r1, r1, #6144	; 0x1800
   81f00:	b240      	sxtb	r0, r0
   81f02:	2800      	cmp	r0, #0
   81f04:	bfb8      	it	lt
   81f06:	f44f 7380 	movlt.w	r3, #256	; 0x100
   81f0a:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
   81f0e:	b280      	uxth	r0, r0
   81f10:	f5b0 4f7c 	cmp.w	r0, #64512	; 0xfc00
   81f14:	d307      	bcc.n	81f26 <udd_ep_alloc+0x72>
   81f16:	2a08      	cmp	r2, #8
   81f18:	d924      	bls.n	81f64 <udd_ep_alloc+0xb0>
   81f1a:	0052      	lsls	r2, r2, #1
   81f1c:	3a01      	subs	r2, #1
   81f1e:	e004      	b.n	81f2a <udd_ep_alloc+0x76>
		bank = UOTGHS_DEVEPTCFG_EPBK_2_BANK >>
   81f20:	f04f 0e01 	mov.w	lr, #1
   81f24:	e7e0      	b.n	81ee8 <udd_ep_alloc+0x34>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f26:	f240 72ff 	movw	r2, #2047	; 0x7ff
   81f2a:	fab2 f282 	clz	r2, r2
   81f2e:	ea41 018e 	orr.w	r1, r1, lr, lsl #2
   81f32:	4319      	orrs	r1, r3
   81f34:	f1c2 031c 	rsb	r3, r2, #28
   81f38:	ea41 1303 	orr.w	r3, r1, r3, lsl #4
   81f3c:	f423 63d0 	bic.w	r3, r3, #1664	; 0x680
   81f40:	f023 0303 	bic.w	r3, r3, #3
   81f44:	04db      	lsls	r3, r3, #19
   81f46:	0cdb      	lsrs	r3, r3, #19
   81f48:	433b      	orrs	r3, r7
   81f4a:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
	ep_allocated = 1 << ep;
   81f4e:	2701      	movs	r7, #1
   81f50:	40a7      	lsls	r7, r4
   81f52:	b2bf      	uxth	r7, r7
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f54:	2c02      	cmp	r4, #2
   81f56:	d81c      	bhi.n	81f92 <udd_ep_alloc+0xde>
   81f58:	4a51      	ldr	r2, [pc, #324]	; (820a0 <udd_ep_alloc+0x1ec>)
   81f5a:	2303      	movs	r3, #3
		if (Is_udd_endpoint_enabled(i)) {
   81f5c:	484e      	ldr	r0, [pc, #312]	; (82098 <udd_ep_alloc+0x1e4>)
   81f5e:	f04f 0e01 	mov.w	lr, #1
   81f62:	e006      	b.n	81f72 <udd_ep_alloc+0xbe>
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81f64:	220f      	movs	r2, #15
   81f66:	e7e0      	b.n	81f2a <udd_ep_alloc+0x76>
   81f68:	3b01      	subs	r3, #1
   81f6a:	3a04      	subs	r2, #4
	for (i = USB_DEVICE_MAX_EP; i > ep; i--) {
   81f6c:	b2d9      	uxtb	r1, r3
   81f6e:	428c      	cmp	r4, r1
   81f70:	d20f      	bcs.n	81f92 <udd_ep_alloc+0xde>
		if (Is_udd_endpoint_enabled(i)) {
   81f72:	69c6      	ldr	r6, [r0, #28]
   81f74:	fa0e f103 	lsl.w	r1, lr, r3
   81f78:	420e      	tst	r6, r1
   81f7a:	d0f5      	beq.n	81f68 <udd_ep_alloc+0xb4>
			ep_allocated |= 1 << i;
   81f7c:	430f      	orrs	r7, r1
   81f7e:	b2bf      	uxth	r7, r7
			udd_disable_endpoint(i);
   81f80:	69c6      	ldr	r6, [r0, #28]
   81f82:	ea26 0101 	bic.w	r1, r6, r1
   81f86:	61c1      	str	r1, [r0, #28]
			udd_unallocate_memory(i);
   81f88:	6811      	ldr	r1, [r2, #0]
   81f8a:	f021 0102 	bic.w	r1, r1, #2
   81f8e:	6011      	str	r1, [r2, #0]
   81f90:	e7ea      	b.n	81f68 <udd_ep_alloc+0xb4>
   81f92:	eb04 0344 	add.w	r3, r4, r4, lsl #1
   81f96:	4e43      	ldr	r6, [pc, #268]	; (820a4 <udd_ep_alloc+0x1f0>)
   81f98:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
			bool b_restart = ptr_job->busy;
   81f9c:	f8df 9104 	ldr.w	r9, [pc, #260]	; 820a4 <udd_ep_alloc+0x1f0>
			udd_enable_endpoint(i);
   81fa0:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 82098 <udd_ep_alloc+0x1e4>
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   81fa4:	f8df a100 	ldr.w	sl, [pc, #256]	; 820a8 <udd_ep_alloc+0x1f4>
   81fa8:	e01d      	b.n	81fe6 <udd_ep_alloc+0x132>
				if (NULL == ptr_job->call_trans) {
   81faa:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81fae:	4a3d      	ldr	r2, [pc, #244]	; (820a4 <udd_ep_alloc+0x1f0>)
   81fb0:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
   81fb4:	2c00      	cmp	r4, #0
   81fb6:	d06d      	beq.n	82094 <udd_ep_alloc+0x1e0>
				if (Is_udd_endpoint_in(i)) {
   81fb8:	682b      	ldr	r3, [r5, #0]
   81fba:	f413 7f80 	tst.w	r3, #256	; 0x100
					i |= USB_EP_DIR_IN;
   81fbe:	bf18      	it	ne
   81fc0:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
				ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   81fc4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   81fc8:	4b36      	ldr	r3, [pc, #216]	; (820a4 <udd_ep_alloc+0x1f0>)
   81fca:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   81fce:	4602      	mov	r2, r0
   81fd0:	68c9      	ldr	r1, [r1, #12]
   81fd2:	2001      	movs	r0, #1
   81fd4:	47a0      	blx	r4
				return false;
   81fd6:	2300      	movs	r3, #0
   81fd8:	e054      	b.n	82084 <udd_ep_alloc+0x1d0>
   81fda:	3401      	adds	r4, #1
   81fdc:	3504      	adds	r5, #4
   81fde:	3618      	adds	r6, #24
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   81fe0:	b2e3      	uxtb	r3, r4
   81fe2:	2b03      	cmp	r3, #3
   81fe4:	d84b      	bhi.n	8207e <udd_ep_alloc+0x1ca>
   81fe6:	b2e0      	uxtb	r0, r4
		if (ep_allocated & (1 << i)) {
   81fe8:	fa47 f304 	asr.w	r3, r7, r4
   81fec:	f013 0f01 	tst.w	r3, #1
   81ff0:	d0f3      	beq.n	81fda <udd_ep_alloc+0x126>
   81ff2:	1e61      	subs	r1, r4, #1
			bool b_restart = ptr_job->busy;
   81ff4:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81ff8:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   81ffc:	f893 e014 	ldrb.w	lr, [r3, #20]
   82000:	f00e 0201 	and.w	r2, lr, #1
			ptr_job->busy = false;
   82004:	f36f 0e00 	bfc	lr, #0, #1
   82008:	f883 e014 	strb.w	lr, [r3, #20]
			udd_allocate_memory(i);
   8200c:	682b      	ldr	r3, [r5, #0]
   8200e:	f043 0302 	orr.w	r3, r3, #2
   82012:	602b      	str	r3, [r5, #0]
			udd_enable_endpoint(i);
   82014:	f8d8 e01c 	ldr.w	lr, [r8, #28]
   82018:	2301      	movs	r3, #1
   8201a:	40a3      	lsls	r3, r4
   8201c:	ea43 030e 	orr.w	r3, r3, lr
   82020:	f8c8 301c 	str.w	r3, [r8, #28]
			if (!Is_udd_endpoint_configured(i)) {
   82024:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   82026:	f413 2f80 	tst.w	r3, #262144	; 0x40000
   8202a:	d0be      	beq.n	81faa <udd_ep_alloc+0xf6>
			udd_enable_endpoint_bank_autoswitch(i);
   8202c:	682b      	ldr	r3, [r5, #0]
   8202e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   82032:	602b      	str	r3, [r5, #0]
			if (b_restart) {
   82034:	2a00      	cmp	r2, #0
   82036:	d0d0      	beq.n	81fda <udd_ep_alloc+0x126>
				ptr_job->buf_cnt -= ptr_job->buf_load;
   82038:	f856 3c0c 	ldr.w	r3, [r6, #-12]
   8203c:	f856 2c08 	ldr.w	r2, [r6, #-8]
   82040:	1a9a      	subs	r2, r3, r2
   82042:	f846 2c0c 	str.w	r2, [r6, #-12]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   82046:	682b      	ldr	r3, [r5, #0]
   82048:	f413 7f80 	tst.w	r3, #256	; 0x100
   8204c:	bf18      	it	ne
   8204e:	f040 0080 	orrne.w	r0, r0, #128	; 0x80
   82052:	f856 bc10 	ldr.w	fp, [r6, #-16]
   82056:	f856 cc14 	ldr.w	ip, [r6, #-20]
						ptr_job->b_shortpacket,
   8205a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
   8205e:	eb09 01c1 	add.w	r1, r9, r1, lsl #3
   82062:	7d09      	ldrb	r1, [r1, #20]
				b_restart = udd_ep_run(Is_udd_endpoint_in(i) ?
   82064:	f856 3c18 	ldr.w	r3, [r6, #-24]
   82068:	9300      	str	r3, [sp, #0]
   8206a:	ebab 0302 	sub.w	r3, fp, r2
   8206e:	4462      	add	r2, ip
   82070:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82074:	47d0      	blx	sl
				if (!b_restart) {
   82076:	4603      	mov	r3, r0
   82078:	2800      	cmp	r0, #0
   8207a:	d1ae      	bne.n	81fda <udd_ep_alloc+0x126>
   8207c:	e002      	b.n	82084 <udd_ep_alloc+0x1d0>
	return true;
   8207e:	2301      	movs	r3, #1
   82080:	e000      	b.n	82084 <udd_ep_alloc+0x1d0>
		return false;
   82082:	2300      	movs	r3, #0
}
   82084:	4618      	mov	r0, r3
   82086:	b003      	add	sp, #12
   82088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return false;
   8208c:	2300      	movs	r3, #0
   8208e:	e7f9      	b.n	82084 <udd_ep_alloc+0x1d0>
		return false;
   82090:	2300      	movs	r3, #0
   82092:	e7f7      	b.n	82084 <udd_ep_alloc+0x1d0>
					return false;
   82094:	2300      	movs	r3, #0
   82096:	e7f5      	b.n	82084 <udd_ep_alloc+0x1d0>
   82098:	400ac000 	.word	0x400ac000
   8209c:	400ac100 	.word	0x400ac100
   820a0:	400ac10c 	.word	0x400ac10c
   820a4:	20070d00 	.word	0x20070d00
   820a8:	00081db9 	.word	0x00081db9

000820ac <udd_ep_abort>:
{
   820ac:	b570      	push	{r4, r5, r6, lr}
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   820ae:	f000 020f 	and.w	r2, r0, #15
		udd_disable_endpoint_dma_interrupt(ep_index);
   820b2:	1e54      	subs	r4, r2, #1
   820b4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   820b8:	40a3      	lsls	r3, r4
   820ba:	4916      	ldr	r1, [pc, #88]	; (82114 <udd_ep_abort+0x68>)
   820bc:	614b      	str	r3, [r1, #20]
		udd_endpoint_dma_set_control(ep_index, 0);
   820be:	4b16      	ldr	r3, [pc, #88]	; (82118 <udd_ep_abort+0x6c>)
   820c0:	eb03 1302 	add.w	r3, r3, r2, lsl #4
   820c4:	2500      	movs	r5, #0
   820c6:	609d      	str	r5, [r3, #8]
	udd_disable_endpoint_interrupt(ep_index);
   820c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   820cc:	4093      	lsls	r3, r2
   820ce:	614b      	str	r3, [r1, #20]
	if (ep & USB_EP_DIR_IN) {
   820d0:	f010 0f80 	tst.w	r0, #128	; 0x80
   820d4:	d108      	bne.n	820e8 <udd_ep_abort+0x3c>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   820d6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
   820da:	2101      	movs	r1, #1
   820dc:	480f      	ldr	r0, [pc, #60]	; (8211c <udd_ep_abort+0x70>)
   820de:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
   820e2:	4b0f      	ldr	r3, [pc, #60]	; (82120 <udd_ep_abort+0x74>)
   820e4:	4798      	blx	r3
   820e6:	bd70      	pop	{r4, r5, r6, pc}
		while(udd_nb_busy_bank(ep_index)) {
   820e8:	0093      	lsls	r3, r2, #2
   820ea:	480e      	ldr	r0, [pc, #56]	; (82124 <udd_ep_abort+0x78>)
   820ec:	4418      	add	r0, r3
			udd_kill_last_in_bank(ep_index);
   820ee:	4d0e      	ldr	r5, [pc, #56]	; (82128 <udd_ep_abort+0x7c>)
   820f0:	441d      	add	r5, r3
   820f2:	f44f 5600 	mov.w	r6, #8192	; 0x2000
			while(Is_udd_kill_last(ep_index));
   820f6:	f501 71e0 	add.w	r1, r1, #448	; 0x1c0
   820fa:	4419      	add	r1, r3
   820fc:	e004      	b.n	82108 <udd_ep_abort+0x5c>
			udd_kill_last_in_bank(ep_index);
   820fe:	602e      	str	r6, [r5, #0]
			while(Is_udd_kill_last(ep_index));
   82100:	680b      	ldr	r3, [r1, #0]
   82102:	f413 5f00 	tst.w	r3, #8192	; 0x2000
   82106:	d1fb      	bne.n	82100 <udd_ep_abort+0x54>
		while(udd_nb_busy_bank(ep_index)) {
   82108:	6803      	ldr	r3, [r0, #0]
   8210a:	f413 5f40 	tst.w	r3, #12288	; 0x3000
   8210e:	d1f6      	bne.n	820fe <udd_ep_abort+0x52>
   82110:	e7e1      	b.n	820d6 <udd_ep_abort+0x2a>
   82112:	bf00      	nop
   82114:	400ac000 	.word	0x400ac000
   82118:	400ac300 	.word	0x400ac300
   8211c:	20070d00 	.word	0x20070d00
   82120:	00081011 	.word	0x00081011
   82124:	400ac130 	.word	0x400ac130
   82128:	400ac1f0 	.word	0x400ac1f0

0008212c <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   8212c:	b508      	push	{r3, lr}
	}
#endif

	if (CONFIG_USBCLK_SOURCE == USBCLK_SRC_UPLL) {

		pmc_enable_upll_clock();
   8212e:	4b04      	ldr	r3, [pc, #16]	; (82140 <sysclk_enable_usb+0x14>)
   82130:	4798      	blx	r3
		pmc_switch_udpck_to_upllck(CONFIG_USBCLK_DIV - 1);
   82132:	2000      	movs	r0, #0
   82134:	4b03      	ldr	r3, [pc, #12]	; (82144 <sysclk_enable_usb+0x18>)
   82136:	4798      	blx	r3
		pmc_enable_udpck();
   82138:	4b03      	ldr	r3, [pc, #12]	; (82148 <sysclk_enable_usb+0x1c>)
   8213a:	4798      	blx	r3
   8213c:	bd08      	pop	{r3, pc}
   8213e:	bf00      	nop
   82140:	00082479 	.word	0x00082479
   82144:	000824b1 	.word	0x000824b1
   82148:	000824c5 	.word	0x000824c5

0008214c <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   8214c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   8214e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   82152:	4b16      	ldr	r3, [pc, #88]	; (821ac <board_init+0x60>)
   82154:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   82156:	200b      	movs	r0, #11
   82158:	4c15      	ldr	r4, [pc, #84]	; (821b0 <board_init+0x64>)
   8215a:	47a0      	blx	r4
   8215c:	200c      	movs	r0, #12
   8215e:	47a0      	blx	r4
   82160:	200d      	movs	r0, #13
   82162:	47a0      	blx	r4
   82164:	200e      	movs	r0, #14
   82166:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   82168:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8216c:	203b      	movs	r0, #59	; 0x3b
   8216e:	4c11      	ldr	r4, [pc, #68]	; (821b4 <board_init+0x68>)
   82170:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   82172:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82176:	2055      	movs	r0, #85	; 0x55
   82178:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8217a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8217e:	2056      	movs	r0, #86	; 0x56
   82180:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   82182:	490d      	ldr	r1, [pc, #52]	; (821b8 <board_init+0x6c>)
   82184:	2068      	movs	r0, #104	; 0x68
   82186:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   82188:	490c      	ldr	r1, [pc, #48]	; (821bc <board_init+0x70>)
   8218a:	205c      	movs	r0, #92	; 0x5c
   8218c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8218e:	4a0c      	ldr	r2, [pc, #48]	; (821c0 <board_init+0x74>)
   82190:	f44f 7140 	mov.w	r1, #768	; 0x300
   82194:	480b      	ldr	r0, [pc, #44]	; (821c4 <board_init+0x78>)
   82196:	4b0c      	ldr	r3, [pc, #48]	; (821c8 <board_init+0x7c>)
   82198:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8219a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8219e:	202b      	movs	r0, #43	; 0x2b
   821a0:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   821a2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   821a6:	202a      	movs	r0, #42	; 0x2a
   821a8:	47a0      	blx	r4
   821aa:	bd10      	pop	{r4, pc}
   821ac:	400e1a50 	.word	0x400e1a50
   821b0:	00082491 	.word	0x00082491
   821b4:	0008226d 	.word	0x0008226d
   821b8:	28000079 	.word	0x28000079
   821bc:	28000001 	.word	0x28000001
   821c0:	08000001 	.word	0x08000001
   821c4:	400e0e00 	.word	0x400e0e00
   821c8:	0008233d 	.word	0x0008233d

000821cc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   821cc:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   821ce:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   821d2:	d016      	beq.n	82202 <pio_set_peripheral+0x36>
   821d4:	d80b      	bhi.n	821ee <pio_set_peripheral+0x22>
   821d6:	b149      	cbz	r1, 821ec <pio_set_peripheral+0x20>
   821d8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   821dc:	d105      	bne.n	821ea <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   821de:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   821e0:	6f01      	ldr	r1, [r0, #112]	; 0x70
   821e2:	400b      	ands	r3, r1
   821e4:	ea23 0302 	bic.w	r3, r3, r2
   821e8:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   821ea:	6042      	str	r2, [r0, #4]
   821ec:	4770      	bx	lr
	switch (ul_type) {
   821ee:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   821f2:	d0fb      	beq.n	821ec <pio_set_peripheral+0x20>
   821f4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   821f8:	d0f8      	beq.n	821ec <pio_set_peripheral+0x20>
   821fa:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   821fe:	d1f4      	bne.n	821ea <pio_set_peripheral+0x1e>
   82200:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   82202:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82204:	4313      	orrs	r3, r2
   82206:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   82208:	e7ef      	b.n	821ea <pio_set_peripheral+0x1e>

0008220a <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8220a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   8220c:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   82210:	bf14      	ite	ne
   82212:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82214:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   82216:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8221a:	bf14      	ite	ne
   8221c:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   8221e:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   82220:	f012 0f02 	tst.w	r2, #2
   82224:	d107      	bne.n	82236 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   82226:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   8222a:	bf18      	it	ne
   8222c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   82230:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   82232:	6001      	str	r1, [r0, #0]
   82234:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   82236:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8223a:	e7f9      	b.n	82230 <pio_set_input+0x26>

0008223c <pio_set_output>:
{
   8223c:	b410      	push	{r4}
   8223e:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   82240:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   82242:	b944      	cbnz	r4, 82256 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   82244:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   82246:	b143      	cbz	r3, 8225a <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   82248:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   8224a:	b942      	cbnz	r2, 8225e <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   8224c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   8224e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   82250:	6001      	str	r1, [r0, #0]
}
   82252:	bc10      	pop	{r4}
   82254:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   82256:	6641      	str	r1, [r0, #100]	; 0x64
   82258:	e7f5      	b.n	82246 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   8225a:	6541      	str	r1, [r0, #84]	; 0x54
   8225c:	e7f5      	b.n	8224a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   8225e:	6301      	str	r1, [r0, #48]	; 0x30
   82260:	e7f5      	b.n	8224e <pio_set_output+0x12>

00082262 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   82262:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   82264:	4770      	bx	lr

00082266 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   82266:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   82268:	4770      	bx	lr
	...

0008226c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   8226c:	b570      	push	{r4, r5, r6, lr}
   8226e:	b082      	sub	sp, #8
   82270:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82272:	0943      	lsrs	r3, r0, #5
   82274:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82278:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8227c:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   8227e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   82282:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   82286:	d031      	beq.n	822ec <pio_configure_pin+0x80>
   82288:	d816      	bhi.n	822b8 <pio_configure_pin+0x4c>
   8228a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8228e:	d01b      	beq.n	822c8 <pio_configure_pin+0x5c>
   82290:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82294:	d116      	bne.n	822c4 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   82296:	f000 001f 	and.w	r0, r0, #31
   8229a:	2601      	movs	r6, #1
   8229c:	4086      	lsls	r6, r0
   8229e:	4632      	mov	r2, r6
   822a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   822a4:	4620      	mov	r0, r4
   822a6:	4b22      	ldr	r3, [pc, #136]	; (82330 <pio_configure_pin+0xc4>)
   822a8:	4798      	blx	r3
	if (ul_pull_up_enable) {
   822aa:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   822ae:	bf14      	ite	ne
   822b0:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   822b2:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   822b4:	2001      	movs	r0, #1
   822b6:	e017      	b.n	822e8 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   822b8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   822bc:	d021      	beq.n	82302 <pio_configure_pin+0x96>
   822be:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   822c2:	d01e      	beq.n	82302 <pio_configure_pin+0x96>
		return 0;
   822c4:	2000      	movs	r0, #0
   822c6:	e00f      	b.n	822e8 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   822c8:	f000 001f 	and.w	r0, r0, #31
   822cc:	2601      	movs	r6, #1
   822ce:	4086      	lsls	r6, r0
   822d0:	4632      	mov	r2, r6
   822d2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   822d6:	4620      	mov	r0, r4
   822d8:	4b15      	ldr	r3, [pc, #84]	; (82330 <pio_configure_pin+0xc4>)
   822da:	4798      	blx	r3
	if (ul_pull_up_enable) {
   822dc:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   822e0:	bf14      	ite	ne
   822e2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   822e4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   822e6:	2001      	movs	r0, #1
}
   822e8:	b002      	add	sp, #8
   822ea:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   822ec:	f000 011f 	and.w	r1, r0, #31
   822f0:	2601      	movs	r6, #1
   822f2:	462a      	mov	r2, r5
   822f4:	fa06 f101 	lsl.w	r1, r6, r1
   822f8:	4620      	mov	r0, r4
   822fa:	4b0e      	ldr	r3, [pc, #56]	; (82334 <pio_configure_pin+0xc8>)
   822fc:	4798      	blx	r3
	return 1;
   822fe:	4630      	mov	r0, r6
		break;
   82300:	e7f2      	b.n	822e8 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   82302:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   82306:	f000 011f 	and.w	r1, r0, #31
   8230a:	2601      	movs	r6, #1
   8230c:	ea05 0306 	and.w	r3, r5, r6
   82310:	9300      	str	r3, [sp, #0]
   82312:	f3c5 0380 	ubfx	r3, r5, #2, #1
   82316:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8231a:	bf14      	ite	ne
   8231c:	2200      	movne	r2, #0
   8231e:	2201      	moveq	r2, #1
   82320:	fa06 f101 	lsl.w	r1, r6, r1
   82324:	4620      	mov	r0, r4
   82326:	4c04      	ldr	r4, [pc, #16]	; (82338 <pio_configure_pin+0xcc>)
   82328:	47a0      	blx	r4
	return 1;
   8232a:	4630      	mov	r0, r6
		break;
   8232c:	e7dc      	b.n	822e8 <pio_configure_pin+0x7c>
   8232e:	bf00      	nop
   82330:	000821cd 	.word	0x000821cd
   82334:	0008220b 	.word	0x0008220b
   82338:	0008223d 	.word	0x0008223d

0008233c <pio_configure_pin_group>:
{
   8233c:	b570      	push	{r4, r5, r6, lr}
   8233e:	b082      	sub	sp, #8
   82340:	4605      	mov	r5, r0
   82342:	460e      	mov	r6, r1
   82344:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   82346:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8234a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8234e:	d027      	beq.n	823a0 <pio_configure_pin_group+0x64>
   82350:	d811      	bhi.n	82376 <pio_configure_pin_group+0x3a>
   82352:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   82356:	d016      	beq.n	82386 <pio_configure_pin_group+0x4a>
   82358:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   8235c:	d111      	bne.n	82382 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   8235e:	460a      	mov	r2, r1
   82360:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82364:	4b19      	ldr	r3, [pc, #100]	; (823cc <pio_configure_pin_group+0x90>)
   82366:	4798      	blx	r3
	if (ul_pull_up_enable) {
   82368:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   8236c:	bf14      	ite	ne
   8236e:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82370:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   82372:	2001      	movs	r0, #1
   82374:	e012      	b.n	8239c <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   82376:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8237a:	d015      	beq.n	823a8 <pio_configure_pin_group+0x6c>
   8237c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   82380:	d012      	beq.n	823a8 <pio_configure_pin_group+0x6c>
		return 0;
   82382:	2000      	movs	r0, #0
   82384:	e00a      	b.n	8239c <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   82386:	460a      	mov	r2, r1
   82388:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8238c:	4b0f      	ldr	r3, [pc, #60]	; (823cc <pio_configure_pin_group+0x90>)
   8238e:	4798      	blx	r3
	if (ul_pull_up_enable) {
   82390:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   82394:	bf14      	ite	ne
   82396:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82398:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8239a:	2001      	movs	r0, #1
}
   8239c:	b002      	add	sp, #8
   8239e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   823a0:	4b0b      	ldr	r3, [pc, #44]	; (823d0 <pio_configure_pin_group+0x94>)
   823a2:	4798      	blx	r3
	return 1;
   823a4:	2001      	movs	r0, #1
		break;
   823a6:	e7f9      	b.n	8239c <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   823a8:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   823ac:	f004 0301 	and.w	r3, r4, #1
   823b0:	9300      	str	r3, [sp, #0]
   823b2:	f3c4 0380 	ubfx	r3, r4, #2, #1
   823b6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   823ba:	bf14      	ite	ne
   823bc:	2200      	movne	r2, #0
   823be:	2201      	moveq	r2, #1
   823c0:	4631      	mov	r1, r6
   823c2:	4628      	mov	r0, r5
   823c4:	4c03      	ldr	r4, [pc, #12]	; (823d4 <pio_configure_pin_group+0x98>)
   823c6:	47a0      	blx	r4
	return 1;
   823c8:	2001      	movs	r0, #1
		break;
   823ca:	e7e7      	b.n	8239c <pio_configure_pin_group+0x60>
   823cc:	000821cd 	.word	0x000821cd
   823d0:	0008220b 	.word	0x0008220b
   823d4:	0008223d 	.word	0x0008223d

000823d8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   823d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823dc:	4604      	mov	r4, r0
   823de:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   823e0:	4b0e      	ldr	r3, [pc, #56]	; (8241c <pio_handler_process+0x44>)
   823e2:	4798      	blx	r3
   823e4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   823e6:	4620      	mov	r0, r4
   823e8:	4b0d      	ldr	r3, [pc, #52]	; (82420 <pio_handler_process+0x48>)
   823ea:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   823ec:	4005      	ands	r5, r0
   823ee:	d013      	beq.n	82418 <pio_handler_process+0x40>
   823f0:	4c0c      	ldr	r4, [pc, #48]	; (82424 <pio_handler_process+0x4c>)
   823f2:	f104 0660 	add.w	r6, r4, #96	; 0x60
   823f6:	e003      	b.n	82400 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   823f8:	42b4      	cmp	r4, r6
   823fa:	d00d      	beq.n	82418 <pio_handler_process+0x40>
   823fc:	3410      	adds	r4, #16
		while (status != 0) {
   823fe:	b15d      	cbz	r5, 82418 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   82400:	6820      	ldr	r0, [r4, #0]
   82402:	4540      	cmp	r0, r8
   82404:	d1f8      	bne.n	823f8 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   82406:	6861      	ldr	r1, [r4, #4]
   82408:	4229      	tst	r1, r5
   8240a:	d0f5      	beq.n	823f8 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8240c:	68e3      	ldr	r3, [r4, #12]
   8240e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   82410:	6863      	ldr	r3, [r4, #4]
   82412:	ea25 0503 	bic.w	r5, r5, r3
   82416:	e7ef      	b.n	823f8 <pio_handler_process+0x20>
   82418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8241c:	00082263 	.word	0x00082263
   82420:	00082267 	.word	0x00082267
   82424:	20070d48 	.word	0x20070d48

00082428 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   82428:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   8242a:	210b      	movs	r1, #11
   8242c:	4801      	ldr	r0, [pc, #4]	; (82434 <PIOA_Handler+0xc>)
   8242e:	4b02      	ldr	r3, [pc, #8]	; (82438 <PIOA_Handler+0x10>)
   82430:	4798      	blx	r3
   82432:	bd08      	pop	{r3, pc}
   82434:	400e0e00 	.word	0x400e0e00
   82438:	000823d9 	.word	0x000823d9

0008243c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   8243c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   8243e:	210c      	movs	r1, #12
   82440:	4801      	ldr	r0, [pc, #4]	; (82448 <PIOB_Handler+0xc>)
   82442:	4b02      	ldr	r3, [pc, #8]	; (8244c <PIOB_Handler+0x10>)
   82444:	4798      	blx	r3
   82446:	bd08      	pop	{r3, pc}
   82448:	400e1000 	.word	0x400e1000
   8244c:	000823d9 	.word	0x000823d9

00082450 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   82450:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   82452:	210d      	movs	r1, #13
   82454:	4801      	ldr	r0, [pc, #4]	; (8245c <PIOC_Handler+0xc>)
   82456:	4b02      	ldr	r3, [pc, #8]	; (82460 <PIOC_Handler+0x10>)
   82458:	4798      	blx	r3
   8245a:	bd08      	pop	{r3, pc}
   8245c:	400e1200 	.word	0x400e1200
   82460:	000823d9 	.word	0x000823d9

00082464 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   82464:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   82466:	210e      	movs	r1, #14
   82468:	4801      	ldr	r0, [pc, #4]	; (82470 <PIOD_Handler+0xc>)
   8246a:	4b02      	ldr	r3, [pc, #8]	; (82474 <PIOD_Handler+0x10>)
   8246c:	4798      	blx	r3
   8246e:	bd08      	pop	{r3, pc}
   82470:	400e1400 	.word	0x400e1400
   82474:	000823d9 	.word	0x000823d9

00082478 <pmc_enable_upll_clock>:
/**
 * \brief Enable UPLL clock.
 */
void pmc_enable_upll_clock(void)
{
	PMC->CKGR_UCKR = CKGR_UCKR_UPLLCOUNT(3) | CKGR_UCKR_UPLLEN;
   82478:	f44f 1244 	mov.w	r2, #3211264	; 0x310000
   8247c:	4b03      	ldr	r3, [pc, #12]	; (8248c <pmc_enable_upll_clock+0x14>)
   8247e:	61da      	str	r2, [r3, #28]

	/* Wait UTMI PLL Lock Status */
	while (!(PMC->PMC_SR & PMC_SR_LOCKU));
   82480:	461a      	mov	r2, r3
   82482:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82484:	f013 0f40 	tst.w	r3, #64	; 0x40
   82488:	d0fb      	beq.n	82482 <pmc_enable_upll_clock+0xa>
}
   8248a:	4770      	bx	lr
   8248c:	400e0600 	.word	0x400e0600

00082490 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
   82490:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82494:	4b05      	ldr	r3, [pc, #20]	; (824ac <pmc_enable_periph_clk+0x1c>)
   82496:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
   8249a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   8249e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
   824a2:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
   824a6:	2000      	movs	r0, #0
   824a8:	4770      	bx	lr
   824aa:	bf00      	nop
   824ac:	400e0600 	.word	0x400e0600

000824b0 <pmc_switch_udpck_to_upllck>:
 *
 * \param ul_usbdiv Clock divisor.
 */
void pmc_switch_udpck_to_upllck(uint32_t ul_usbdiv)
{
	PMC->PMC_USB = PMC_USB_USBS | PMC_USB_USBDIV(ul_usbdiv);
   824b0:	0200      	lsls	r0, r0, #8
   824b2:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
   824b6:	f040 0001 	orr.w	r0, r0, #1
   824ba:	4b01      	ldr	r3, [pc, #4]	; (824c0 <pmc_switch_udpck_to_upllck+0x10>)
   824bc:	6398      	str	r0, [r3, #56]	; 0x38
   824be:	4770      	bx	lr
   824c0:	400e0600 	.word	0x400e0600

000824c4 <pmc_enable_udpck>:
#if (SAM3S || SAM4S || SAM4E || SAMG55)
	PMC->PMC_SCER = PMC_SCER_UDP;
#elif (SAMV71 || SAMV70 || SAME70 || SAMS70)
	PMC->PMC_SCER = PMC_SCER_USBCLK;
#else
	PMC->PMC_SCER = PMC_SCER_UOTGCLK;
   824c4:	2220      	movs	r2, #32
   824c6:	4b01      	ldr	r3, [pc, #4]	; (824cc <pmc_enable_udpck+0x8>)
   824c8:	601a      	str	r2, [r3, #0]
   824ca:	4770      	bx	lr
   824cc:	400e0600 	.word	0x400e0600

000824d0 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   824d0:	4b03      	ldr	r3, [pc, #12]	; (824e0 <pmc_set_fast_startup_input+0x10>)
   824d2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   824d4:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   824d8:	4310      	orrs	r0, r2
   824da:	6718      	str	r0, [r3, #112]	; 0x70
   824dc:	4770      	bx	lr
   824de:	bf00      	nop
   824e0:	400e0600 	.word	0x400e0600

000824e4 <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   824e4:	4b02      	ldr	r3, [pc, #8]	; (824f0 <pmc_is_wakeup_clocks_restored+0xc>)
   824e6:	7818      	ldrb	r0, [r3, #0]
}
   824e8:	f080 0001 	eor.w	r0, r0, #1
   824ec:	4770      	bx	lr
   824ee:	bf00      	nop
   824f0:	20070db8 	.word	0x20070db8

000824f4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   824f4:	e7fe      	b.n	824f4 <Dummy_Handler>

000824f6 <ADCx>:
	while (1) {
	}
}

void ADCx(void)
{
   824f6:	4770      	bx	lr

000824f8 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   824f8:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   824fa:	4b1c      	ldr	r3, [pc, #112]	; (8256c <Reset_Handler+0x74>)
   824fc:	4a1c      	ldr	r2, [pc, #112]	; (82570 <Reset_Handler+0x78>)
   824fe:	429a      	cmp	r2, r3
   82500:	d010      	beq.n	82524 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   82502:	4b1c      	ldr	r3, [pc, #112]	; (82574 <Reset_Handler+0x7c>)
   82504:	4a19      	ldr	r2, [pc, #100]	; (8256c <Reset_Handler+0x74>)
   82506:	429a      	cmp	r2, r3
   82508:	d20c      	bcs.n	82524 <Reset_Handler+0x2c>
   8250a:	3b01      	subs	r3, #1
   8250c:	1a9b      	subs	r3, r3, r2
   8250e:	f023 0303 	bic.w	r3, r3, #3
   82512:	3304      	adds	r3, #4
   82514:	4413      	add	r3, r2
   82516:	4916      	ldr	r1, [pc, #88]	; (82570 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   82518:	f851 0b04 	ldr.w	r0, [r1], #4
   8251c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   82520:	429a      	cmp	r2, r3
   82522:	d1f9      	bne.n	82518 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   82524:	4b14      	ldr	r3, [pc, #80]	; (82578 <Reset_Handler+0x80>)
   82526:	4a15      	ldr	r2, [pc, #84]	; (8257c <Reset_Handler+0x84>)
   82528:	429a      	cmp	r2, r3
   8252a:	d20a      	bcs.n	82542 <Reset_Handler+0x4a>
   8252c:	3b01      	subs	r3, #1
   8252e:	1a9b      	subs	r3, r3, r2
   82530:	f023 0303 	bic.w	r3, r3, #3
   82534:	3304      	adds	r3, #4
   82536:	4413      	add	r3, r2
		*pDest++ = 0;
   82538:	2100      	movs	r1, #0
   8253a:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   8253e:	4293      	cmp	r3, r2
   82540:	d1fb      	bne.n	8253a <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82542:	4b0f      	ldr	r3, [pc, #60]	; (82580 <Reset_Handler+0x88>)
   82544:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   82548:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   8254c:	490d      	ldr	r1, [pc, #52]	; (82584 <Reset_Handler+0x8c>)
   8254e:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   82550:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   82554:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   82558:	d203      	bcs.n	82562 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8255a:	688b      	ldr	r3, [r1, #8]
   8255c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   82560:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   82562:	4b09      	ldr	r3, [pc, #36]	; (82588 <Reset_Handler+0x90>)
   82564:	4798      	blx	r3

	/* Branch to main function */
	main();
   82566:	4b09      	ldr	r3, [pc, #36]	; (8258c <Reset_Handler+0x94>)
   82568:	4798      	blx	r3
   8256a:	e7fe      	b.n	8256a <Reset_Handler+0x72>
   8256c:	20070000 	.word	0x20070000
   82570:	000872cc 	.word	0x000872cc
   82574:	20070b80 	.word	0x20070b80
   82578:	20070e40 	.word	0x20070e40
   8257c:	20070b80 	.word	0x20070b80
   82580:	00080000 	.word	0x00080000
   82584:	e000ed00 	.word	0xe000ed00
   82588:	00082709 	.word	0x00082709
   8258c:	00082695 	.word	0x00082695

00082590 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   82590:	4b0a      	ldr	r3, [pc, #40]	; (825bc <_sbrk+0x2c>)
   82592:	681b      	ldr	r3, [r3, #0]
   82594:	b153      	cbz	r3, 825ac <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   82596:	4b09      	ldr	r3, [pc, #36]	; (825bc <_sbrk+0x2c>)
   82598:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   8259a:	181a      	adds	r2, r3, r0
   8259c:	4908      	ldr	r1, [pc, #32]	; (825c0 <_sbrk+0x30>)
   8259e:	4291      	cmp	r1, r2
   825a0:	db08      	blt.n	825b4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   825a2:	4610      	mov	r0, r2
   825a4:	4a05      	ldr	r2, [pc, #20]	; (825bc <_sbrk+0x2c>)
   825a6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   825a8:	4618      	mov	r0, r3
   825aa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   825ac:	4a05      	ldr	r2, [pc, #20]	; (825c4 <_sbrk+0x34>)
   825ae:	4b03      	ldr	r3, [pc, #12]	; (825bc <_sbrk+0x2c>)
   825b0:	601a      	str	r2, [r3, #0]
   825b2:	e7f0      	b.n	82596 <_sbrk+0x6>
		return (caddr_t) -1;	
   825b4:	f04f 30ff 	mov.w	r0, #4294967295
}
   825b8:	4770      	bx	lr
   825ba:	bf00      	nop
   825bc:	20070dbc 	.word	0x20070dbc
   825c0:	20087ffc 	.word	0x20087ffc
   825c4:	20072e40 	.word	0x20072e40

000825c8 <debug_print>:
	int len = snprintf(buffer, sizeof(buffer), format, ##__VA_ARGS__); \
	debug_print(buffer, len); \
} while (0)

// Function to send the buffer via USB CDC
void debug_print(const char *message, int length) {
   825c8:	b570      	push	{r4, r5, r6, lr}
	for (int i = 0; i < length; i++) {
   825ca:	1e0d      	subs	r5, r1, #0
   825cc:	dd07      	ble.n	825de <debug_print+0x16>
   825ce:	4604      	mov	r4, r0
   825d0:	4405      	add	r5, r0
		udi_cdc_putc(message[i]);
   825d2:	4e03      	ldr	r6, [pc, #12]	; (825e0 <debug_print+0x18>)
   825d4:	f814 0b01 	ldrb.w	r0, [r4], #1
   825d8:	47b0      	blx	r6
	for (int i = 0; i < length; i++) {
   825da:	42ac      	cmp	r4, r5
   825dc:	d1fa      	bne.n	825d4 <debug_print+0xc>
   825de:	bd70      	pop	{r4, r5, r6, pc}
   825e0:	00080735 	.word	0x00080735

000825e4 <TC0_Handler>:
	}
}

// Timer Counter interrupt handler
void TC0_Handler(void) {
   825e4:	b508      	push	{r3, lr}
    // Clear the interrupt status to acknowledge
    uint32_t status = tc_get_status(TC0, 0);
   825e6:	2100      	movs	r1, #0
   825e8:	4805      	ldr	r0, [pc, #20]	; (82600 <TC0_Handler+0x1c>)
   825ea:	4b06      	ldr	r3, [pc, #24]	; (82604 <TC0_Handler+0x20>)
   825ec:	4798      	blx	r3

    if (status & TC_SR_CPCS) { // Check if the RC Compare event occurred
   825ee:	f010 0f10 	tst.w	r0, #16
   825f2:	d003      	beq.n	825fc <TC0_Handler+0x18>
       // pio_toggle_pin(LED_PIN); // Toggle the LED state
		//DEBUG_INFO("TC0 handler\n");
        count++;
   825f4:	4a04      	ldr	r2, [pc, #16]	; (82608 <TC0_Handler+0x24>)
   825f6:	8813      	ldrh	r3, [r2, #0]
   825f8:	3301      	adds	r3, #1
   825fa:	8013      	strh	r3, [r2, #0]
   825fc:	bd08      	pop	{r3, pc}
   825fe:	bf00      	nop
   82600:	40080000 	.word	0x40080000
   82604:	00080db5 	.word	0x00080db5
   82608:	20070dc0 	.word	0x20070dc0

0008260c <configure_timer>:
    }
}

// Configure the Timer Counter to generate periodic interrupts
void configure_timer(void) {
   8260c:	b510      	push	{r4, lr}
    // Enable Timer Counter peripheral clock
    pmc_enable_periph_clk(ID_TC0);
   8260e:	201b      	movs	r0, #27
   82610:	4b0d      	ldr	r3, [pc, #52]	; (82648 <configure_timer+0x3c>)
   82612:	4798      	blx	r3

    // Configure the Timer Counter (TC0 Channel 0)
    tc_init(TC0, 0, TC_CMR_TCCLKS_TIMER_CLOCK2 | // Timer clock = MCK/8
   82614:	4c0d      	ldr	r4, [pc, #52]	; (8264c <configure_timer+0x40>)
   82616:	f24c 0201 	movw	r2, #49153	; 0xc001
   8261a:	2100      	movs	r1, #0
   8261c:	4620      	mov	r0, r4
   8261e:	4b0c      	ldr	r3, [pc, #48]	; (82650 <configure_timer+0x44>)
   82620:	4798      	blx	r3
                      TC_CMR_WAVSEL_UP_RC);      // Count up to RC and reset

    // Set the frequency of the timer (example: 1 Hz for LED blinking)
    uint32_t timer_clock = sysclk_get_peripheral_hz() / 8; // MCK/8
    uint32_t rc_value = timer_clock / 2; // RC value for 0.5 Hz (1 second period)
    tc_write_rc(TC0, 0, rc_value);
   82622:	4a0c      	ldr	r2, [pc, #48]	; (82654 <configure_timer+0x48>)
   82624:	2100      	movs	r1, #0
   82626:	4620      	mov	r0, r4
   82628:	4b0b      	ldr	r3, [pc, #44]	; (82658 <configure_timer+0x4c>)
   8262a:	4798      	blx	r3

    // Enable the RC Compare interrupt
    tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   8262c:	2210      	movs	r2, #16
   8262e:	2100      	movs	r1, #0
   82630:	4620      	mov	r0, r4
   82632:	4b0a      	ldr	r3, [pc, #40]	; (8265c <configure_timer+0x50>)
   82634:	4798      	blx	r3
   82636:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8263a:	4b09      	ldr	r3, [pc, #36]	; (82660 <configure_timer+0x54>)
   8263c:	601a      	str	r2, [r3, #0]

    // Enable the Timer Counter interrupt in the NVIC
    NVIC_EnableIRQ(TC0_IRQn);

    // Start the timer
    tc_start(TC0, 0);
   8263e:	2100      	movs	r1, #0
   82640:	4620      	mov	r0, r4
   82642:	4b08      	ldr	r3, [pc, #32]	; (82664 <configure_timer+0x58>)
   82644:	4798      	blx	r3
   82646:	bd10      	pop	{r4, pc}
   82648:	00082491 	.word	0x00082491
   8264c:	40080000 	.word	0x40080000
   82650:	00080d85 	.word	0x00080d85
   82654:	00501bd0 	.word	0x00501bd0
   82658:	00080da5 	.word	0x00080da5
   8265c:	00080dad 	.word	0x00080dad
   82660:	e000e100 	.word	0xe000e100
   82664:	00080d9d 	.word	0x00080d9d

00082668 <pio_setup>:
}

void pio_setup(void)
{
   82668:	b510      	push	{r4, lr}
   8266a:	b082      	sub	sp, #8
    pmc_enable_periph_clk(ID_PIOD);
   8266c:	200e      	movs	r0, #14
   8266e:	4b06      	ldr	r3, [pc, #24]	; (82688 <pio_setup+0x20>)
   82670:	4798      	blx	r3
    //pio_configure(PIOD, PIO_OUTPUT_0, LED_PIN_MASK, PIO_DEFAULT);
    //pio_clear(PIOD, LED_PIN_MASK);
    pio_set_output(PIOD, PIO_PD8, LOW, DISABLE, ENABLE);
   82672:	2301      	movs	r3, #1
   82674:	9300      	str	r3, [sp, #0]
   82676:	2300      	movs	r3, #0
   82678:	461a      	mov	r2, r3
   8267a:	f44f 7180 	mov.w	r1, #256	; 0x100
   8267e:	4803      	ldr	r0, [pc, #12]	; (8268c <pio_setup+0x24>)
   82680:	4c03      	ldr	r4, [pc, #12]	; (82690 <pio_setup+0x28>)
   82682:	47a0      	blx	r4
}
   82684:	b002      	add	sp, #8
   82686:	bd10      	pop	{r4, pc}
   82688:	00082491 	.word	0x00082491
   8268c:	400e1400 	.word	0x400e1400
   82690:	0008223d 	.word	0x0008223d

00082694 <main>:

int main (void)
{
   82694:	b570      	push	{r4, r5, r6, lr}
   82696:	b0a0      	sub	sp, #128	; 0x80
	/* Insert system clock initialization code here (sysclk_init()). */
	SystemInit();
   82698:	4b11      	ldr	r3, [pc, #68]	; (826e0 <main+0x4c>)
   8269a:	4798      	blx	r3
	board_init();
   8269c:	4b11      	ldr	r3, [pc, #68]	; (826e4 <main+0x50>)
   8269e:	4798      	blx	r3
	udc_start();
   826a0:	4b11      	ldr	r3, [pc, #68]	; (826e8 <main+0x54>)
   826a2:	4798      	blx	r3
    delay_init();
    pio_setup();
   826a4:	4b11      	ldr	r3, [pc, #68]	; (826ec <main+0x58>)
   826a6:	4798      	blx	r3

    DEBUG_INFO("example, started!\n"); // information
   826a8:	466c      	mov	r4, sp
   826aa:	4d11      	ldr	r5, [pc, #68]	; (826f0 <main+0x5c>)
   826ac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   826ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   826b0:	682b      	ldr	r3, [r5, #0]
   826b2:	f824 3b02 	strh.w	r3, [r4], #2
   826b6:	0c1b      	lsrs	r3, r3, #16
   826b8:	7023      	strb	r3, [r4, #0]
   826ba:	2112      	movs	r1, #18
   826bc:	4668      	mov	r0, sp
   826be:	4b0d      	ldr	r3, [pc, #52]	; (826f4 <main+0x60>)
   826c0:	4798      	blx	r3

    configure_timer();
   826c2:	4b0d      	ldr	r3, [pc, #52]	; (826f8 <main+0x64>)
   826c4:	4798      	blx	r3

    while(1)
    {
	
		//DEBUG_INFO("Hello World!\n");
        DEBUG_INFO("timer count value: %d \n", count);
   826c6:	4e0d      	ldr	r6, [pc, #52]	; (826fc <main+0x68>)
   826c8:	4d0d      	ldr	r5, [pc, #52]	; (82700 <main+0x6c>)
   826ca:	4c0e      	ldr	r4, [pc, #56]	; (82704 <main+0x70>)
   826cc:	8833      	ldrh	r3, [r6, #0]
   826ce:	462a      	mov	r2, r5
   826d0:	2180      	movs	r1, #128	; 0x80
   826d2:	4668      	mov	r0, sp
   826d4:	47a0      	blx	r4
   826d6:	4601      	mov	r1, r0
   826d8:	4668      	mov	r0, sp
   826da:	4b06      	ldr	r3, [pc, #24]	; (826f4 <main+0x60>)
   826dc:	4798      	blx	r3
   826de:	e7f5      	b.n	826cc <main+0x38>
   826e0:	20070001 	.word	0x20070001
   826e4:	0008214d 	.word	0x0008214d
   826e8:	000808e1 	.word	0x000808e1
   826ec:	00082669 	.word	0x00082669
   826f0:	00086fec 	.word	0x00086fec
   826f4:	000825c9 	.word	0x000825c9
   826f8:	0008260d 	.word	0x0008260d
   826fc:	20070dc0 	.word	0x20070dc0
   82700:	00087000 	.word	0x00087000
   82704:	000828e1 	.word	0x000828e1

00082708 <__libc_init_array>:
   82708:	b570      	push	{r4, r5, r6, lr}
   8270a:	4e0f      	ldr	r6, [pc, #60]	; (82748 <__libc_init_array+0x40>)
   8270c:	4d0f      	ldr	r5, [pc, #60]	; (8274c <__libc_init_array+0x44>)
   8270e:	1b76      	subs	r6, r6, r5
   82710:	10b6      	asrs	r6, r6, #2
   82712:	bf18      	it	ne
   82714:	2400      	movne	r4, #0
   82716:	d005      	beq.n	82724 <__libc_init_array+0x1c>
   82718:	3401      	adds	r4, #1
   8271a:	f855 3b04 	ldr.w	r3, [r5], #4
   8271e:	4798      	blx	r3
   82720:	42a6      	cmp	r6, r4
   82722:	d1f9      	bne.n	82718 <__libc_init_array+0x10>
   82724:	4e0a      	ldr	r6, [pc, #40]	; (82750 <__libc_init_array+0x48>)
   82726:	4d0b      	ldr	r5, [pc, #44]	; (82754 <__libc_init_array+0x4c>)
   82728:	f004 fdba 	bl	872a0 <_init>
   8272c:	1b76      	subs	r6, r6, r5
   8272e:	10b6      	asrs	r6, r6, #2
   82730:	bf18      	it	ne
   82732:	2400      	movne	r4, #0
   82734:	d006      	beq.n	82744 <__libc_init_array+0x3c>
   82736:	3401      	adds	r4, #1
   82738:	f855 3b04 	ldr.w	r3, [r5], #4
   8273c:	4798      	blx	r3
   8273e:	42a6      	cmp	r6, r4
   82740:	d1f9      	bne.n	82736 <__libc_init_array+0x2e>
   82742:	bd70      	pop	{r4, r5, r6, pc}
   82744:	bd70      	pop	{r4, r5, r6, pc}
   82746:	bf00      	nop
   82748:	000872ac 	.word	0x000872ac
   8274c:	000872ac 	.word	0x000872ac
   82750:	000872b4 	.word	0x000872b4
   82754:	000872ac 	.word	0x000872ac

00082758 <memcpy>:
   82758:	4684      	mov	ip, r0
   8275a:	ea41 0300 	orr.w	r3, r1, r0
   8275e:	f013 0303 	ands.w	r3, r3, #3
   82762:	d149      	bne.n	827f8 <memcpy+0xa0>
   82764:	3a40      	subs	r2, #64	; 0x40
   82766:	d323      	bcc.n	827b0 <memcpy+0x58>
   82768:	680b      	ldr	r3, [r1, #0]
   8276a:	6003      	str	r3, [r0, #0]
   8276c:	684b      	ldr	r3, [r1, #4]
   8276e:	6043      	str	r3, [r0, #4]
   82770:	688b      	ldr	r3, [r1, #8]
   82772:	6083      	str	r3, [r0, #8]
   82774:	68cb      	ldr	r3, [r1, #12]
   82776:	60c3      	str	r3, [r0, #12]
   82778:	690b      	ldr	r3, [r1, #16]
   8277a:	6103      	str	r3, [r0, #16]
   8277c:	694b      	ldr	r3, [r1, #20]
   8277e:	6143      	str	r3, [r0, #20]
   82780:	698b      	ldr	r3, [r1, #24]
   82782:	6183      	str	r3, [r0, #24]
   82784:	69cb      	ldr	r3, [r1, #28]
   82786:	61c3      	str	r3, [r0, #28]
   82788:	6a0b      	ldr	r3, [r1, #32]
   8278a:	6203      	str	r3, [r0, #32]
   8278c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8278e:	6243      	str	r3, [r0, #36]	; 0x24
   82790:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82792:	6283      	str	r3, [r0, #40]	; 0x28
   82794:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82796:	62c3      	str	r3, [r0, #44]	; 0x2c
   82798:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8279a:	6303      	str	r3, [r0, #48]	; 0x30
   8279c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8279e:	6343      	str	r3, [r0, #52]	; 0x34
   827a0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   827a2:	6383      	str	r3, [r0, #56]	; 0x38
   827a4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   827a6:	63c3      	str	r3, [r0, #60]	; 0x3c
   827a8:	3040      	adds	r0, #64	; 0x40
   827aa:	3140      	adds	r1, #64	; 0x40
   827ac:	3a40      	subs	r2, #64	; 0x40
   827ae:	d2db      	bcs.n	82768 <memcpy+0x10>
   827b0:	3230      	adds	r2, #48	; 0x30
   827b2:	d30b      	bcc.n	827cc <memcpy+0x74>
   827b4:	680b      	ldr	r3, [r1, #0]
   827b6:	6003      	str	r3, [r0, #0]
   827b8:	684b      	ldr	r3, [r1, #4]
   827ba:	6043      	str	r3, [r0, #4]
   827bc:	688b      	ldr	r3, [r1, #8]
   827be:	6083      	str	r3, [r0, #8]
   827c0:	68cb      	ldr	r3, [r1, #12]
   827c2:	60c3      	str	r3, [r0, #12]
   827c4:	3010      	adds	r0, #16
   827c6:	3110      	adds	r1, #16
   827c8:	3a10      	subs	r2, #16
   827ca:	d2f3      	bcs.n	827b4 <memcpy+0x5c>
   827cc:	320c      	adds	r2, #12
   827ce:	d305      	bcc.n	827dc <memcpy+0x84>
   827d0:	f851 3b04 	ldr.w	r3, [r1], #4
   827d4:	f840 3b04 	str.w	r3, [r0], #4
   827d8:	3a04      	subs	r2, #4
   827da:	d2f9      	bcs.n	827d0 <memcpy+0x78>
   827dc:	3204      	adds	r2, #4
   827de:	d008      	beq.n	827f2 <memcpy+0x9a>
   827e0:	07d2      	lsls	r2, r2, #31
   827e2:	bf1c      	itt	ne
   827e4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   827e8:	f800 3b01 	strbne.w	r3, [r0], #1
   827ec:	d301      	bcc.n	827f2 <memcpy+0x9a>
   827ee:	880b      	ldrh	r3, [r1, #0]
   827f0:	8003      	strh	r3, [r0, #0]
   827f2:	4660      	mov	r0, ip
   827f4:	4770      	bx	lr
   827f6:	bf00      	nop
   827f8:	2a08      	cmp	r2, #8
   827fa:	d313      	bcc.n	82824 <memcpy+0xcc>
   827fc:	078b      	lsls	r3, r1, #30
   827fe:	d0b1      	beq.n	82764 <memcpy+0xc>
   82800:	f010 0303 	ands.w	r3, r0, #3
   82804:	d0ae      	beq.n	82764 <memcpy+0xc>
   82806:	f1c3 0304 	rsb	r3, r3, #4
   8280a:	1ad2      	subs	r2, r2, r3
   8280c:	07db      	lsls	r3, r3, #31
   8280e:	bf1c      	itt	ne
   82810:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82814:	f800 3b01 	strbne.w	r3, [r0], #1
   82818:	d3a4      	bcc.n	82764 <memcpy+0xc>
   8281a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8281e:	f820 3b02 	strh.w	r3, [r0], #2
   82822:	e79f      	b.n	82764 <memcpy+0xc>
   82824:	3a04      	subs	r2, #4
   82826:	d3d9      	bcc.n	827dc <memcpy+0x84>
   82828:	3a01      	subs	r2, #1
   8282a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8282e:	f800 3b01 	strb.w	r3, [r0], #1
   82832:	d2f9      	bcs.n	82828 <memcpy+0xd0>
   82834:	780b      	ldrb	r3, [r1, #0]
   82836:	7003      	strb	r3, [r0, #0]
   82838:	784b      	ldrb	r3, [r1, #1]
   8283a:	7043      	strb	r3, [r0, #1]
   8283c:	788b      	ldrb	r3, [r1, #2]
   8283e:	7083      	strb	r3, [r0, #2]
   82840:	4660      	mov	r0, ip
   82842:	4770      	bx	lr

00082844 <memset>:
   82844:	b470      	push	{r4, r5, r6}
   82846:	0786      	lsls	r6, r0, #30
   82848:	d046      	beq.n	828d8 <memset+0x94>
   8284a:	1e54      	subs	r4, r2, #1
   8284c:	2a00      	cmp	r2, #0
   8284e:	d041      	beq.n	828d4 <memset+0x90>
   82850:	b2ca      	uxtb	r2, r1
   82852:	4603      	mov	r3, r0
   82854:	e002      	b.n	8285c <memset+0x18>
   82856:	f114 34ff 	adds.w	r4, r4, #4294967295
   8285a:	d33b      	bcc.n	828d4 <memset+0x90>
   8285c:	f803 2b01 	strb.w	r2, [r3], #1
   82860:	079d      	lsls	r5, r3, #30
   82862:	d1f8      	bne.n	82856 <memset+0x12>
   82864:	2c03      	cmp	r4, #3
   82866:	d92e      	bls.n	828c6 <memset+0x82>
   82868:	b2cd      	uxtb	r5, r1
   8286a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8286e:	2c0f      	cmp	r4, #15
   82870:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   82874:	d919      	bls.n	828aa <memset+0x66>
   82876:	4626      	mov	r6, r4
   82878:	f103 0210 	add.w	r2, r3, #16
   8287c:	3e10      	subs	r6, #16
   8287e:	2e0f      	cmp	r6, #15
   82880:	f842 5c10 	str.w	r5, [r2, #-16]
   82884:	f842 5c0c 	str.w	r5, [r2, #-12]
   82888:	f842 5c08 	str.w	r5, [r2, #-8]
   8288c:	f842 5c04 	str.w	r5, [r2, #-4]
   82890:	f102 0210 	add.w	r2, r2, #16
   82894:	d8f2      	bhi.n	8287c <memset+0x38>
   82896:	f1a4 0210 	sub.w	r2, r4, #16
   8289a:	f022 020f 	bic.w	r2, r2, #15
   8289e:	f004 040f 	and.w	r4, r4, #15
   828a2:	3210      	adds	r2, #16
   828a4:	2c03      	cmp	r4, #3
   828a6:	4413      	add	r3, r2
   828a8:	d90d      	bls.n	828c6 <memset+0x82>
   828aa:	461e      	mov	r6, r3
   828ac:	4622      	mov	r2, r4
   828ae:	3a04      	subs	r2, #4
   828b0:	2a03      	cmp	r2, #3
   828b2:	f846 5b04 	str.w	r5, [r6], #4
   828b6:	d8fa      	bhi.n	828ae <memset+0x6a>
   828b8:	1f22      	subs	r2, r4, #4
   828ba:	f022 0203 	bic.w	r2, r2, #3
   828be:	3204      	adds	r2, #4
   828c0:	4413      	add	r3, r2
   828c2:	f004 0403 	and.w	r4, r4, #3
   828c6:	b12c      	cbz	r4, 828d4 <memset+0x90>
   828c8:	b2c9      	uxtb	r1, r1
   828ca:	441c      	add	r4, r3
   828cc:	f803 1b01 	strb.w	r1, [r3], #1
   828d0:	429c      	cmp	r4, r3
   828d2:	d1fb      	bne.n	828cc <memset+0x88>
   828d4:	bc70      	pop	{r4, r5, r6}
   828d6:	4770      	bx	lr
   828d8:	4614      	mov	r4, r2
   828da:	4603      	mov	r3, r0
   828dc:	e7c2      	b.n	82864 <memset+0x20>
   828de:	bf00      	nop

000828e0 <snprintf>:
   828e0:	b40c      	push	{r2, r3}
   828e2:	b5f0      	push	{r4, r5, r6, r7, lr}
   828e4:	4b22      	ldr	r3, [pc, #136]	; (82970 <snprintf+0x90>)
   828e6:	1e0c      	subs	r4, r1, #0
   828e8:	b09d      	sub	sp, #116	; 0x74
   828ea:	681d      	ldr	r5, [r3, #0]
   828ec:	db3b      	blt.n	82966 <snprintf+0x86>
   828ee:	f44f 7302 	mov.w	r3, #520	; 0x208
   828f2:	9002      	str	r0, [sp, #8]
   828f4:	9006      	str	r0, [sp, #24]
   828f6:	f8ad 3014 	strh.w	r3, [sp, #20]
   828fa:	f64f 77ff 	movw	r7, #65535	; 0xffff
   828fe:	ae23      	add	r6, sp, #140	; 0x8c
   82900:	d015      	beq.n	8292e <snprintf+0x4e>
   82902:	3c01      	subs	r4, #1
   82904:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82906:	4633      	mov	r3, r6
   82908:	a902      	add	r1, sp, #8
   8290a:	4628      	mov	r0, r5
   8290c:	9404      	str	r4, [sp, #16]
   8290e:	9407      	str	r4, [sp, #28]
   82910:	f8ad 7016 	strh.w	r7, [sp, #22]
   82914:	9601      	str	r6, [sp, #4]
   82916:	f000 f85b 	bl	829d0 <_svfprintf_r>
   8291a:	1c42      	adds	r2, r0, #1
   8291c:	db19      	blt.n	82952 <snprintf+0x72>
   8291e:	2200      	movs	r2, #0
   82920:	9b02      	ldr	r3, [sp, #8]
   82922:	701a      	strb	r2, [r3, #0]
   82924:	b01d      	add	sp, #116	; 0x74
   82926:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8292a:	b002      	add	sp, #8
   8292c:	4770      	bx	lr
   8292e:	4633      	mov	r3, r6
   82930:	9a22      	ldr	r2, [sp, #136]	; 0x88
   82932:	a902      	add	r1, sp, #8
   82934:	4628      	mov	r0, r5
   82936:	9404      	str	r4, [sp, #16]
   82938:	9407      	str	r4, [sp, #28]
   8293a:	f8ad 7016 	strh.w	r7, [sp, #22]
   8293e:	9601      	str	r6, [sp, #4]
   82940:	f000 f846 	bl	829d0 <_svfprintf_r>
   82944:	1c43      	adds	r3, r0, #1
   82946:	db07      	blt.n	82958 <snprintf+0x78>
   82948:	b01d      	add	sp, #116	; 0x74
   8294a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   8294e:	b002      	add	sp, #8
   82950:	4770      	bx	lr
   82952:	238b      	movs	r3, #139	; 0x8b
   82954:	602b      	str	r3, [r5, #0]
   82956:	e7e2      	b.n	8291e <snprintf+0x3e>
   82958:	238b      	movs	r3, #139	; 0x8b
   8295a:	602b      	str	r3, [r5, #0]
   8295c:	b01d      	add	sp, #116	; 0x74
   8295e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   82962:	b002      	add	sp, #8
   82964:	4770      	bx	lr
   82966:	238b      	movs	r3, #139	; 0x8b
   82968:	f04f 30ff 	mov.w	r0, #4294967295
   8296c:	602b      	str	r3, [r5, #0]
   8296e:	e7eb      	b.n	82948 <snprintf+0x68>
   82970:	200701d4 	.word	0x200701d4

00082974 <strlen>:
   82974:	f020 0103 	bic.w	r1, r0, #3
   82978:	f010 0003 	ands.w	r0, r0, #3
   8297c:	f1c0 0000 	rsb	r0, r0, #0
   82980:	f851 3b04 	ldr.w	r3, [r1], #4
   82984:	f100 0c04 	add.w	ip, r0, #4
   82988:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   8298c:	f06f 0200 	mvn.w	r2, #0
   82990:	bf1c      	itt	ne
   82992:	fa22 f20c 	lsrne.w	r2, r2, ip
   82996:	4313      	orrne	r3, r2
   82998:	f04f 0c01 	mov.w	ip, #1
   8299c:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   829a0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   829a4:	eba3 020c 	sub.w	r2, r3, ip
   829a8:	ea22 0203 	bic.w	r2, r2, r3
   829ac:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   829b0:	bf04      	itt	eq
   829b2:	f851 3b04 	ldreq.w	r3, [r1], #4
   829b6:	3004      	addeq	r0, #4
   829b8:	d0f4      	beq.n	829a4 <strlen+0x30>
   829ba:	f1c2 0100 	rsb	r1, r2, #0
   829be:	ea02 0201 	and.w	r2, r2, r1
   829c2:	fab2 f282 	clz	r2, r2
   829c6:	f1c2 021f 	rsb	r2, r2, #31
   829ca:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   829ce:	4770      	bx	lr

000829d0 <_svfprintf_r>:
   829d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   829d4:	b0c3      	sub	sp, #268	; 0x10c
   829d6:	460c      	mov	r4, r1
   829d8:	910b      	str	r1, [sp, #44]	; 0x2c
   829da:	4692      	mov	sl, r2
   829dc:	930f      	str	r3, [sp, #60]	; 0x3c
   829de:	900c      	str	r0, [sp, #48]	; 0x30
   829e0:	f002 fb8c 	bl	850fc <_localeconv_r>
   829e4:	6803      	ldr	r3, [r0, #0]
   829e6:	4618      	mov	r0, r3
   829e8:	931a      	str	r3, [sp, #104]	; 0x68
   829ea:	f7ff ffc3 	bl	82974 <strlen>
   829ee:	89a3      	ldrh	r3, [r4, #12]
   829f0:	9019      	str	r0, [sp, #100]	; 0x64
   829f2:	0619      	lsls	r1, r3, #24
   829f4:	d503      	bpl.n	829fe <_svfprintf_r+0x2e>
   829f6:	6923      	ldr	r3, [r4, #16]
   829f8:	2b00      	cmp	r3, #0
   829fa:	f001 8035 	beq.w	83a68 <_svfprintf_r+0x1098>
   829fe:	2300      	movs	r3, #0
   82a00:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   82a04:	46c8      	mov	r8, r9
   82a06:	9315      	str	r3, [sp, #84]	; 0x54
   82a08:	9313      	str	r3, [sp, #76]	; 0x4c
   82a0a:	9314      	str	r3, [sp, #80]	; 0x50
   82a0c:	9318      	str	r3, [sp, #96]	; 0x60
   82a0e:	931b      	str	r3, [sp, #108]	; 0x6c
   82a10:	9309      	str	r3, [sp, #36]	; 0x24
   82a12:	9316      	str	r3, [sp, #88]	; 0x58
   82a14:	9317      	str	r3, [sp, #92]	; 0x5c
   82a16:	9327      	str	r3, [sp, #156]	; 0x9c
   82a18:	9326      	str	r3, [sp, #152]	; 0x98
   82a1a:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   82a1e:	f89a 3000 	ldrb.w	r3, [sl]
   82a22:	4654      	mov	r4, sl
   82a24:	b1eb      	cbz	r3, 82a62 <_svfprintf_r+0x92>
   82a26:	2b25      	cmp	r3, #37	; 0x25
   82a28:	d102      	bne.n	82a30 <_svfprintf_r+0x60>
   82a2a:	e01a      	b.n	82a62 <_svfprintf_r+0x92>
   82a2c:	2b25      	cmp	r3, #37	; 0x25
   82a2e:	d003      	beq.n	82a38 <_svfprintf_r+0x68>
   82a30:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   82a34:	2b00      	cmp	r3, #0
   82a36:	d1f9      	bne.n	82a2c <_svfprintf_r+0x5c>
   82a38:	eba4 050a 	sub.w	r5, r4, sl
   82a3c:	b18d      	cbz	r5, 82a62 <_svfprintf_r+0x92>
   82a3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82a40:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82a42:	3301      	adds	r3, #1
   82a44:	442a      	add	r2, r5
   82a46:	2b07      	cmp	r3, #7
   82a48:	f8c8 a000 	str.w	sl, [r8]
   82a4c:	f8c8 5004 	str.w	r5, [r8, #4]
   82a50:	9227      	str	r2, [sp, #156]	; 0x9c
   82a52:	9326      	str	r3, [sp, #152]	; 0x98
   82a54:	f300 808a 	bgt.w	82b6c <_svfprintf_r+0x19c>
   82a58:	f108 0808 	add.w	r8, r8, #8
   82a5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82a5e:	442b      	add	r3, r5
   82a60:	9309      	str	r3, [sp, #36]	; 0x24
   82a62:	7823      	ldrb	r3, [r4, #0]
   82a64:	2b00      	cmp	r3, #0
   82a66:	f000 8089 	beq.w	82b7c <_svfprintf_r+0x1ac>
   82a6a:	2300      	movs	r3, #0
   82a6c:	f04f 30ff 	mov.w	r0, #4294967295
   82a70:	461a      	mov	r2, r3
   82a72:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82a76:	4619      	mov	r1, r3
   82a78:	930d      	str	r3, [sp, #52]	; 0x34
   82a7a:	469b      	mov	fp, r3
   82a7c:	7863      	ldrb	r3, [r4, #1]
   82a7e:	f104 0a01 	add.w	sl, r4, #1
   82a82:	900a      	str	r0, [sp, #40]	; 0x28
   82a84:	f10a 0a01 	add.w	sl, sl, #1
   82a88:	f1a3 0020 	sub.w	r0, r3, #32
   82a8c:	2858      	cmp	r0, #88	; 0x58
   82a8e:	f200 83b7 	bhi.w	83200 <_svfprintf_r+0x830>
   82a92:	e8df f010 	tbh	[pc, r0, lsl #1]
   82a96:	034c      	.short	0x034c
   82a98:	03b503b5 	.word	0x03b503b5
   82a9c:	03b50354 	.word	0x03b50354
   82aa0:	03b503b5 	.word	0x03b503b5
   82aa4:	03b503b5 	.word	0x03b503b5
   82aa8:	005903b5 	.word	0x005903b5
   82aac:	03b50359 	.word	0x03b50359
   82ab0:	02140066 	.word	0x02140066
   82ab4:	022f03b5 	.word	0x022f03b5
   82ab8:	03a503a5 	.word	0x03a503a5
   82abc:	03a503a5 	.word	0x03a503a5
   82ac0:	03a503a5 	.word	0x03a503a5
   82ac4:	03a503a5 	.word	0x03a503a5
   82ac8:	03b503a5 	.word	0x03b503a5
   82acc:	03b503b5 	.word	0x03b503b5
   82ad0:	03b503b5 	.word	0x03b503b5
   82ad4:	03b503b5 	.word	0x03b503b5
   82ad8:	03b503b5 	.word	0x03b503b5
   82adc:	028b03b5 	.word	0x028b03b5
   82ae0:	03b502d3 	.word	0x03b502d3
   82ae4:	03b502d3 	.word	0x03b502d3
   82ae8:	03b503b5 	.word	0x03b503b5
   82aec:	031b03b5 	.word	0x031b03b5
   82af0:	03b503b5 	.word	0x03b503b5
   82af4:	03b50320 	.word	0x03b50320
   82af8:	03b503b5 	.word	0x03b503b5
   82afc:	03b503b5 	.word	0x03b503b5
   82b00:	03b50234 	.word	0x03b50234
   82b04:	024b03b5 	.word	0x024b03b5
   82b08:	03b503b5 	.word	0x03b503b5
   82b0c:	03b503b5 	.word	0x03b503b5
   82b10:	03b503b5 	.word	0x03b503b5
   82b14:	03b503b5 	.word	0x03b503b5
   82b18:	03b503b5 	.word	0x03b503b5
   82b1c:	039e0276 	.word	0x039e0276
   82b20:	02d302d3 	.word	0x02d302d3
   82b24:	036302d3 	.word	0x036302d3
   82b28:	03b5039e 	.word	0x03b5039e
   82b2c:	036803b5 	.word	0x036803b5
   82b30:	037503b5 	.word	0x037503b5
   82b34:	038c01dd 	.word	0x038c01dd
   82b38:	03b5035e 	.word	0x03b5035e
   82b3c:	03b501f2 	.word	0x03b501f2
   82b40:	03b50087 	.word	0x03b50087
   82b44:	033203b5 	.word	0x033203b5
   82b48:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82b4a:	6823      	ldr	r3, [r4, #0]
   82b4c:	4618      	mov	r0, r3
   82b4e:	930d      	str	r3, [sp, #52]	; 0x34
   82b50:	4623      	mov	r3, r4
   82b52:	2800      	cmp	r0, #0
   82b54:	f103 0304 	add.w	r3, r3, #4
   82b58:	930f      	str	r3, [sp, #60]	; 0x3c
   82b5a:	da04      	bge.n	82b66 <_svfprintf_r+0x196>
   82b5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82b5e:	425b      	negs	r3, r3
   82b60:	930d      	str	r3, [sp, #52]	; 0x34
   82b62:	f04b 0b04 	orr.w	fp, fp, #4
   82b66:	f89a 3000 	ldrb.w	r3, [sl]
   82b6a:	e78b      	b.n	82a84 <_svfprintf_r+0xb4>
   82b6c:	aa25      	add	r2, sp, #148	; 0x94
   82b6e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b70:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b72:	f003 fb07 	bl	86184 <__ssprint_r>
   82b76:	b940      	cbnz	r0, 82b8a <_svfprintf_r+0x1ba>
   82b78:	46c8      	mov	r8, r9
   82b7a:	e76f      	b.n	82a5c <_svfprintf_r+0x8c>
   82b7c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82b7e:	b123      	cbz	r3, 82b8a <_svfprintf_r+0x1ba>
   82b80:	980c      	ldr	r0, [sp, #48]	; 0x30
   82b82:	aa25      	add	r2, sp, #148	; 0x94
   82b84:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82b86:	f003 fafd 	bl	86184 <__ssprint_r>
   82b8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82b8c:	899b      	ldrh	r3, [r3, #12]
   82b8e:	f013 0f40 	tst.w	r3, #64	; 0x40
   82b92:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82b94:	bf18      	it	ne
   82b96:	f04f 33ff 	movne.w	r3, #4294967295
   82b9a:	9309      	str	r3, [sp, #36]	; 0x24
   82b9c:	9809      	ldr	r0, [sp, #36]	; 0x24
   82b9e:	b043      	add	sp, #268	; 0x10c
   82ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82ba4:	f01b 0f20 	tst.w	fp, #32
   82ba8:	9311      	str	r3, [sp, #68]	; 0x44
   82baa:	f040 81af 	bne.w	82f0c <_svfprintf_r+0x53c>
   82bae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82bb0:	f01b 0f10 	tst.w	fp, #16
   82bb4:	4613      	mov	r3, r2
   82bb6:	f040 859a 	bne.w	836ee <_svfprintf_r+0xd1e>
   82bba:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82bbe:	f000 8596 	beq.w	836ee <_svfprintf_r+0xd1e>
   82bc2:	2500      	movs	r5, #0
   82bc4:	2301      	movs	r3, #1
   82bc6:	8814      	ldrh	r4, [r2, #0]
   82bc8:	3204      	adds	r2, #4
   82bca:	920f      	str	r2, [sp, #60]	; 0x3c
   82bcc:	2200      	movs	r2, #0
   82bce:	4617      	mov	r7, r2
   82bd0:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   82bd4:	990a      	ldr	r1, [sp, #40]	; 0x28
   82bd6:	1c4a      	adds	r2, r1, #1
   82bd8:	f000 8210 	beq.w	82ffc <_svfprintf_r+0x62c>
   82bdc:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   82be0:	9207      	str	r2, [sp, #28]
   82be2:	ea54 0205 	orrs.w	r2, r4, r5
   82be6:	f040 820f 	bne.w	83008 <_svfprintf_r+0x638>
   82bea:	2900      	cmp	r1, #0
   82bec:	f040 8431 	bne.w	83452 <_svfprintf_r+0xa82>
   82bf0:	2b00      	cmp	r3, #0
   82bf2:	f040 8539 	bne.w	83668 <_svfprintf_r+0xc98>
   82bf6:	f01b 0301 	ands.w	r3, fp, #1
   82bfa:	930e      	str	r3, [sp, #56]	; 0x38
   82bfc:	f000 8662 	beq.w	838c4 <_svfprintf_r+0xef4>
   82c00:	2330      	movs	r3, #48	; 0x30
   82c02:	ae42      	add	r6, sp, #264	; 0x108
   82c04:	f806 3d41 	strb.w	r3, [r6, #-65]!
   82c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82c0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82c0c:	4293      	cmp	r3, r2
   82c0e:	bfb8      	it	lt
   82c10:	4613      	movlt	r3, r2
   82c12:	9308      	str	r3, [sp, #32]
   82c14:	2300      	movs	r3, #0
   82c16:	9312      	str	r3, [sp, #72]	; 0x48
   82c18:	b117      	cbz	r7, 82c20 <_svfprintf_r+0x250>
   82c1a:	9b08      	ldr	r3, [sp, #32]
   82c1c:	3301      	adds	r3, #1
   82c1e:	9308      	str	r3, [sp, #32]
   82c20:	9b07      	ldr	r3, [sp, #28]
   82c22:	f013 0302 	ands.w	r3, r3, #2
   82c26:	9310      	str	r3, [sp, #64]	; 0x40
   82c28:	d002      	beq.n	82c30 <_svfprintf_r+0x260>
   82c2a:	9b08      	ldr	r3, [sp, #32]
   82c2c:	3302      	adds	r3, #2
   82c2e:	9308      	str	r3, [sp, #32]
   82c30:	9b07      	ldr	r3, [sp, #28]
   82c32:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   82c36:	f040 8310 	bne.w	8325a <_svfprintf_r+0x88a>
   82c3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82c3c:	9a08      	ldr	r2, [sp, #32]
   82c3e:	eba3 0b02 	sub.w	fp, r3, r2
   82c42:	f1bb 0f00 	cmp.w	fp, #0
   82c46:	f340 8308 	ble.w	8325a <_svfprintf_r+0x88a>
   82c4a:	f1bb 0f10 	cmp.w	fp, #16
   82c4e:	f340 87b2 	ble.w	83bb6 <_svfprintf_r+0x11e6>
   82c52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82c54:	4643      	mov	r3, r8
   82c56:	4621      	mov	r1, r4
   82c58:	46a8      	mov	r8, r5
   82c5a:	2710      	movs	r7, #16
   82c5c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82c5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82c60:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82c62:	e006      	b.n	82c72 <_svfprintf_r+0x2a2>
   82c64:	f1ab 0b10 	sub.w	fp, fp, #16
   82c68:	f1bb 0f10 	cmp.w	fp, #16
   82c6c:	f103 0308 	add.w	r3, r3, #8
   82c70:	dd18      	ble.n	82ca4 <_svfprintf_r+0x2d4>
   82c72:	3201      	adds	r2, #1
   82c74:	48ab      	ldr	r0, [pc, #684]	; (82f24 <_svfprintf_r+0x554>)
   82c76:	3110      	adds	r1, #16
   82c78:	2a07      	cmp	r2, #7
   82c7a:	9127      	str	r1, [sp, #156]	; 0x9c
   82c7c:	9226      	str	r2, [sp, #152]	; 0x98
   82c7e:	e883 0081 	stmia.w	r3, {r0, r7}
   82c82:	ddef      	ble.n	82c64 <_svfprintf_r+0x294>
   82c84:	aa25      	add	r2, sp, #148	; 0x94
   82c86:	4629      	mov	r1, r5
   82c88:	4620      	mov	r0, r4
   82c8a:	f003 fa7b 	bl	86184 <__ssprint_r>
   82c8e:	2800      	cmp	r0, #0
   82c90:	f47f af7b 	bne.w	82b8a <_svfprintf_r+0x1ba>
   82c94:	f1ab 0b10 	sub.w	fp, fp, #16
   82c98:	f1bb 0f10 	cmp.w	fp, #16
   82c9c:	464b      	mov	r3, r9
   82c9e:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82ca0:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82ca2:	dce6      	bgt.n	82c72 <_svfprintf_r+0x2a2>
   82ca4:	4645      	mov	r5, r8
   82ca6:	460c      	mov	r4, r1
   82ca8:	4698      	mov	r8, r3
   82caa:	3201      	adds	r2, #1
   82cac:	4b9d      	ldr	r3, [pc, #628]	; (82f24 <_svfprintf_r+0x554>)
   82cae:	445c      	add	r4, fp
   82cb0:	2a07      	cmp	r2, #7
   82cb2:	9427      	str	r4, [sp, #156]	; 0x9c
   82cb4:	9226      	str	r2, [sp, #152]	; 0x98
   82cb6:	e888 0808 	stmia.w	r8, {r3, fp}
   82cba:	f300 82c3 	bgt.w	83244 <_svfprintf_r+0x874>
   82cbe:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82cc2:	f108 0808 	add.w	r8, r8, #8
   82cc6:	b187      	cbz	r7, 82cea <_svfprintf_r+0x31a>
   82cc8:	2101      	movs	r1, #1
   82cca:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82ccc:	440c      	add	r4, r1
   82cce:	440b      	add	r3, r1
   82cd0:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   82cd4:	2b07      	cmp	r3, #7
   82cd6:	9427      	str	r4, [sp, #156]	; 0x9c
   82cd8:	9326      	str	r3, [sp, #152]	; 0x98
   82cda:	f8c8 1004 	str.w	r1, [r8, #4]
   82cde:	f8c8 2000 	str.w	r2, [r8]
   82ce2:	f300 83cd 	bgt.w	83480 <_svfprintf_r+0xab0>
   82ce6:	f108 0808 	add.w	r8, r8, #8
   82cea:	9b10      	ldr	r3, [sp, #64]	; 0x40
   82cec:	b17b      	cbz	r3, 82d0e <_svfprintf_r+0x33e>
   82cee:	2102      	movs	r1, #2
   82cf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82cf2:	440c      	add	r4, r1
   82cf4:	3301      	adds	r3, #1
   82cf6:	aa1e      	add	r2, sp, #120	; 0x78
   82cf8:	2b07      	cmp	r3, #7
   82cfa:	9427      	str	r4, [sp, #156]	; 0x9c
   82cfc:	9326      	str	r3, [sp, #152]	; 0x98
   82cfe:	f8c8 1004 	str.w	r1, [r8, #4]
   82d02:	f8c8 2000 	str.w	r2, [r8]
   82d06:	f300 8411 	bgt.w	8352c <_svfprintf_r+0xb5c>
   82d0a:	f108 0808 	add.w	r8, r8, #8
   82d0e:	2d80      	cmp	r5, #128	; 0x80
   82d10:	f000 8304 	beq.w	8331c <_svfprintf_r+0x94c>
   82d14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82d18:	1a9f      	subs	r7, r3, r2
   82d1a:	2f00      	cmp	r7, #0
   82d1c:	dd37      	ble.n	82d8e <_svfprintf_r+0x3be>
   82d1e:	2f10      	cmp	r7, #16
   82d20:	f340 8679 	ble.w	83a16 <_svfprintf_r+0x1046>
   82d24:	4d80      	ldr	r5, [pc, #512]	; (82f28 <_svfprintf_r+0x558>)
   82d26:	4642      	mov	r2, r8
   82d28:	4621      	mov	r1, r4
   82d2a:	46b0      	mov	r8, r6
   82d2c:	f04f 0b10 	mov.w	fp, #16
   82d30:	462e      	mov	r6, r5
   82d32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d34:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   82d36:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82d38:	e004      	b.n	82d44 <_svfprintf_r+0x374>
   82d3a:	3f10      	subs	r7, #16
   82d3c:	2f10      	cmp	r7, #16
   82d3e:	f102 0208 	add.w	r2, r2, #8
   82d42:	dd15      	ble.n	82d70 <_svfprintf_r+0x3a0>
   82d44:	3301      	adds	r3, #1
   82d46:	3110      	adds	r1, #16
   82d48:	2b07      	cmp	r3, #7
   82d4a:	9127      	str	r1, [sp, #156]	; 0x9c
   82d4c:	9326      	str	r3, [sp, #152]	; 0x98
   82d4e:	e882 0840 	stmia.w	r2, {r6, fp}
   82d52:	ddf2      	ble.n	82d3a <_svfprintf_r+0x36a>
   82d54:	aa25      	add	r2, sp, #148	; 0x94
   82d56:	4629      	mov	r1, r5
   82d58:	4620      	mov	r0, r4
   82d5a:	f003 fa13 	bl	86184 <__ssprint_r>
   82d5e:	2800      	cmp	r0, #0
   82d60:	f47f af13 	bne.w	82b8a <_svfprintf_r+0x1ba>
   82d64:	3f10      	subs	r7, #16
   82d66:	2f10      	cmp	r7, #16
   82d68:	464a      	mov	r2, r9
   82d6a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   82d6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d6e:	dce9      	bgt.n	82d44 <_svfprintf_r+0x374>
   82d70:	4635      	mov	r5, r6
   82d72:	460c      	mov	r4, r1
   82d74:	4646      	mov	r6, r8
   82d76:	4690      	mov	r8, r2
   82d78:	3301      	adds	r3, #1
   82d7a:	443c      	add	r4, r7
   82d7c:	2b07      	cmp	r3, #7
   82d7e:	9427      	str	r4, [sp, #156]	; 0x9c
   82d80:	9326      	str	r3, [sp, #152]	; 0x98
   82d82:	e888 00a0 	stmia.w	r8, {r5, r7}
   82d86:	f300 8370 	bgt.w	8346a <_svfprintf_r+0xa9a>
   82d8a:	f108 0808 	add.w	r8, r8, #8
   82d8e:	9b07      	ldr	r3, [sp, #28]
   82d90:	05df      	lsls	r7, r3, #23
   82d92:	f100 8264 	bmi.w	8325e <_svfprintf_r+0x88e>
   82d96:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82d98:	990e      	ldr	r1, [sp, #56]	; 0x38
   82d9a:	3301      	adds	r3, #1
   82d9c:	440c      	add	r4, r1
   82d9e:	2b07      	cmp	r3, #7
   82da0:	9427      	str	r4, [sp, #156]	; 0x9c
   82da2:	f8c8 6000 	str.w	r6, [r8]
   82da6:	f8c8 1004 	str.w	r1, [r8, #4]
   82daa:	9326      	str	r3, [sp, #152]	; 0x98
   82dac:	f300 83b3 	bgt.w	83516 <_svfprintf_r+0xb46>
   82db0:	f108 0808 	add.w	r8, r8, #8
   82db4:	9b07      	ldr	r3, [sp, #28]
   82db6:	075b      	lsls	r3, r3, #29
   82db8:	d53b      	bpl.n	82e32 <_svfprintf_r+0x462>
   82dba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82dbc:	9a08      	ldr	r2, [sp, #32]
   82dbe:	1a9d      	subs	r5, r3, r2
   82dc0:	2d00      	cmp	r5, #0
   82dc2:	dd36      	ble.n	82e32 <_svfprintf_r+0x462>
   82dc4:	2d10      	cmp	r5, #16
   82dc6:	f340 8721 	ble.w	83c0c <_svfprintf_r+0x123c>
   82dca:	2610      	movs	r6, #16
   82dcc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82dce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82dd0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   82dd4:	e004      	b.n	82de0 <_svfprintf_r+0x410>
   82dd6:	3d10      	subs	r5, #16
   82dd8:	2d10      	cmp	r5, #16
   82dda:	f108 0808 	add.w	r8, r8, #8
   82dde:	dd16      	ble.n	82e0e <_svfprintf_r+0x43e>
   82de0:	3301      	adds	r3, #1
   82de2:	4a50      	ldr	r2, [pc, #320]	; (82f24 <_svfprintf_r+0x554>)
   82de4:	3410      	adds	r4, #16
   82de6:	2b07      	cmp	r3, #7
   82de8:	9427      	str	r4, [sp, #156]	; 0x9c
   82dea:	9326      	str	r3, [sp, #152]	; 0x98
   82dec:	e888 0044 	stmia.w	r8, {r2, r6}
   82df0:	ddf1      	ble.n	82dd6 <_svfprintf_r+0x406>
   82df2:	aa25      	add	r2, sp, #148	; 0x94
   82df4:	4659      	mov	r1, fp
   82df6:	4638      	mov	r0, r7
   82df8:	f003 f9c4 	bl	86184 <__ssprint_r>
   82dfc:	2800      	cmp	r0, #0
   82dfe:	f47f aec4 	bne.w	82b8a <_svfprintf_r+0x1ba>
   82e02:	3d10      	subs	r5, #16
   82e04:	2d10      	cmp	r5, #16
   82e06:	46c8      	mov	r8, r9
   82e08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82e0c:	dce8      	bgt.n	82de0 <_svfprintf_r+0x410>
   82e0e:	3301      	adds	r3, #1
   82e10:	4a44      	ldr	r2, [pc, #272]	; (82f24 <_svfprintf_r+0x554>)
   82e12:	442c      	add	r4, r5
   82e14:	2b07      	cmp	r3, #7
   82e16:	9427      	str	r4, [sp, #156]	; 0x9c
   82e18:	9326      	str	r3, [sp, #152]	; 0x98
   82e1a:	e888 0024 	stmia.w	r8, {r2, r5}
   82e1e:	dd08      	ble.n	82e32 <_svfprintf_r+0x462>
   82e20:	aa25      	add	r2, sp, #148	; 0x94
   82e22:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82e24:	980c      	ldr	r0, [sp, #48]	; 0x30
   82e26:	f003 f9ad 	bl	86184 <__ssprint_r>
   82e2a:	2800      	cmp	r0, #0
   82e2c:	f47f aead 	bne.w	82b8a <_svfprintf_r+0x1ba>
   82e30:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82e34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82e36:	9908      	ldr	r1, [sp, #32]
   82e38:	428a      	cmp	r2, r1
   82e3a:	bfac      	ite	ge
   82e3c:	189b      	addge	r3, r3, r2
   82e3e:	185b      	addlt	r3, r3, r1
   82e40:	9309      	str	r3, [sp, #36]	; 0x24
   82e42:	2c00      	cmp	r4, #0
   82e44:	f040 82fb 	bne.w	8343e <_svfprintf_r+0xa6e>
   82e48:	2300      	movs	r3, #0
   82e4a:	46c8      	mov	r8, r9
   82e4c:	9326      	str	r3, [sp, #152]	; 0x98
   82e4e:	e5e6      	b.n	82a1e <_svfprintf_r+0x4e>
   82e50:	9311      	str	r3, [sp, #68]	; 0x44
   82e52:	f01b 0320 	ands.w	r3, fp, #32
   82e56:	f040 8145 	bne.w	830e4 <_svfprintf_r+0x714>
   82e5a:	f01b 0210 	ands.w	r2, fp, #16
   82e5e:	f040 8466 	bne.w	8372e <_svfprintf_r+0xd5e>
   82e62:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   82e66:	f000 8462 	beq.w	8372e <_svfprintf_r+0xd5e>
   82e6a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82e6c:	4613      	mov	r3, r2
   82e6e:	460a      	mov	r2, r1
   82e70:	3204      	adds	r2, #4
   82e72:	880c      	ldrh	r4, [r1, #0]
   82e74:	2500      	movs	r5, #0
   82e76:	920f      	str	r2, [sp, #60]	; 0x3c
   82e78:	e6a8      	b.n	82bcc <_svfprintf_r+0x1fc>
   82e7a:	2500      	movs	r5, #0
   82e7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82e7e:	9311      	str	r3, [sp, #68]	; 0x44
   82e80:	6816      	ldr	r6, [r2, #0]
   82e82:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   82e86:	1d14      	adds	r4, r2, #4
   82e88:	2e00      	cmp	r6, #0
   82e8a:	f000 86cd 	beq.w	83c28 <_svfprintf_r+0x1258>
   82e8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82e90:	1c53      	adds	r3, r2, #1
   82e92:	f000 861b 	beq.w	83acc <_svfprintf_r+0x10fc>
   82e96:	4629      	mov	r1, r5
   82e98:	4630      	mov	r0, r6
   82e9a:	f002 fbf9 	bl	85690 <memchr>
   82e9e:	2800      	cmp	r0, #0
   82ea0:	f000 870d 	beq.w	83cbe <_svfprintf_r+0x12ee>
   82ea4:	1b83      	subs	r3, r0, r6
   82ea6:	950a      	str	r5, [sp, #40]	; 0x28
   82ea8:	930e      	str	r3, [sp, #56]	; 0x38
   82eaa:	940f      	str	r4, [sp, #60]	; 0x3c
   82eac:	f8cd b01c 	str.w	fp, [sp, #28]
   82eb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82eb4:	9308      	str	r3, [sp, #32]
   82eb6:	9512      	str	r5, [sp, #72]	; 0x48
   82eb8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82ebc:	e6ac      	b.n	82c18 <_svfprintf_r+0x248>
   82ebe:	f89a 3000 	ldrb.w	r3, [sl]
   82ec2:	f10a 0401 	add.w	r4, sl, #1
   82ec6:	2b2a      	cmp	r3, #42	; 0x2a
   82ec8:	f000 87c2 	beq.w	83e50 <_svfprintf_r+0x1480>
   82ecc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82ed0:	2809      	cmp	r0, #9
   82ed2:	46a2      	mov	sl, r4
   82ed4:	f200 8718 	bhi.w	83d08 <_svfprintf_r+0x1338>
   82ed8:	2300      	movs	r3, #0
   82eda:	461c      	mov	r4, r3
   82edc:	f81a 3b01 	ldrb.w	r3, [sl], #1
   82ee0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   82ee4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   82ee8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   82eec:	2809      	cmp	r0, #9
   82eee:	d9f5      	bls.n	82edc <_svfprintf_r+0x50c>
   82ef0:	940a      	str	r4, [sp, #40]	; 0x28
   82ef2:	e5c9      	b.n	82a88 <_svfprintf_r+0xb8>
   82ef4:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   82ef8:	f89a 3000 	ldrb.w	r3, [sl]
   82efc:	e5c2      	b.n	82a84 <_svfprintf_r+0xb4>
   82efe:	f04b 0b10 	orr.w	fp, fp, #16
   82f02:	f01b 0f20 	tst.w	fp, #32
   82f06:	9311      	str	r3, [sp, #68]	; 0x44
   82f08:	f43f ae51 	beq.w	82bae <_svfprintf_r+0x1de>
   82f0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82f0e:	3407      	adds	r4, #7
   82f10:	f024 0307 	bic.w	r3, r4, #7
   82f14:	f103 0208 	add.w	r2, r3, #8
   82f18:	e9d3 4500 	ldrd	r4, r5, [r3]
   82f1c:	920f      	str	r2, [sp, #60]	; 0x3c
   82f1e:	2301      	movs	r3, #1
   82f20:	e654      	b.n	82bcc <_svfprintf_r+0x1fc>
   82f22:	bf00      	nop
   82f24:	00087060 	.word	0x00087060
   82f28:	00087070 	.word	0x00087070
   82f2c:	9311      	str	r3, [sp, #68]	; 0x44
   82f2e:	2a00      	cmp	r2, #0
   82f30:	f040 87ad 	bne.w	83e8e <_svfprintf_r+0x14be>
   82f34:	4bbe      	ldr	r3, [pc, #760]	; (83230 <_svfprintf_r+0x860>)
   82f36:	f01b 0f20 	tst.w	fp, #32
   82f3a:	9318      	str	r3, [sp, #96]	; 0x60
   82f3c:	f040 80e7 	bne.w	8310e <_svfprintf_r+0x73e>
   82f40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82f42:	f01b 0f10 	tst.w	fp, #16
   82f46:	4613      	mov	r3, r2
   82f48:	f040 83d8 	bne.w	836fc <_svfprintf_r+0xd2c>
   82f4c:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82f50:	f000 83d4 	beq.w	836fc <_svfprintf_r+0xd2c>
   82f54:	2500      	movs	r5, #0
   82f56:	3304      	adds	r3, #4
   82f58:	8814      	ldrh	r4, [r2, #0]
   82f5a:	930f      	str	r3, [sp, #60]	; 0x3c
   82f5c:	f01b 0f01 	tst.w	fp, #1
   82f60:	f000 80e3 	beq.w	8312a <_svfprintf_r+0x75a>
   82f64:	ea54 0305 	orrs.w	r3, r4, r5
   82f68:	f000 80df 	beq.w	8312a <_svfprintf_r+0x75a>
   82f6c:	2330      	movs	r3, #48	; 0x30
   82f6e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   82f72:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   82f76:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   82f7a:	f04b 0b02 	orr.w	fp, fp, #2
   82f7e:	2302      	movs	r3, #2
   82f80:	e624      	b.n	82bcc <_svfprintf_r+0x1fc>
   82f82:	2201      	movs	r2, #1
   82f84:	9311      	str	r3, [sp, #68]	; 0x44
   82f86:	2300      	movs	r3, #0
   82f88:	4611      	mov	r1, r2
   82f8a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82f8c:	9208      	str	r2, [sp, #32]
   82f8e:	6802      	ldr	r2, [r0, #0]
   82f90:	461f      	mov	r7, r3
   82f92:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82f96:	930a      	str	r3, [sp, #40]	; 0x28
   82f98:	9312      	str	r3, [sp, #72]	; 0x48
   82f9a:	1d03      	adds	r3, r0, #4
   82f9c:	f8cd b01c 	str.w	fp, [sp, #28]
   82fa0:	910e      	str	r1, [sp, #56]	; 0x38
   82fa2:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   82fa6:	930f      	str	r3, [sp, #60]	; 0x3c
   82fa8:	ae28      	add	r6, sp, #160	; 0xa0
   82faa:	e639      	b.n	82c20 <_svfprintf_r+0x250>
   82fac:	9311      	str	r3, [sp, #68]	; 0x44
   82fae:	2a00      	cmp	r2, #0
   82fb0:	f040 8784 	bne.w	83ebc <_svfprintf_r+0x14ec>
   82fb4:	f04b 0b10 	orr.w	fp, fp, #16
   82fb8:	f01b 0f20 	tst.w	fp, #32
   82fbc:	f040 8475 	bne.w	838aa <_svfprintf_r+0xeda>
   82fc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82fc2:	f01b 0f10 	tst.w	fp, #16
   82fc6:	4613      	mov	r3, r2
   82fc8:	f040 839d 	bne.w	83706 <_svfprintf_r+0xd36>
   82fcc:	f01b 0f40 	tst.w	fp, #64	; 0x40
   82fd0:	f000 8399 	beq.w	83706 <_svfprintf_r+0xd36>
   82fd4:	f9b2 4000 	ldrsh.w	r4, [r2]
   82fd8:	3304      	adds	r3, #4
   82fda:	17e5      	asrs	r5, r4, #31
   82fdc:	930f      	str	r3, [sp, #60]	; 0x3c
   82fde:	4622      	mov	r2, r4
   82fe0:	462b      	mov	r3, r5
   82fe2:	2a00      	cmp	r2, #0
   82fe4:	f173 0300 	sbcs.w	r3, r3, #0
   82fe8:	f2c0 8398 	blt.w	8371c <_svfprintf_r+0xd4c>
   82fec:	990a      	ldr	r1, [sp, #40]	; 0x28
   82fee:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   82ff2:	1c4a      	adds	r2, r1, #1
   82ff4:	f04f 0301 	mov.w	r3, #1
   82ff8:	f47f adf0 	bne.w	82bdc <_svfprintf_r+0x20c>
   82ffc:	ea54 0205 	orrs.w	r2, r4, r5
   83000:	f000 8229 	beq.w	83456 <_svfprintf_r+0xa86>
   83004:	f8cd b01c 	str.w	fp, [sp, #28]
   83008:	2b01      	cmp	r3, #1
   8300a:	f000 830e 	beq.w	8362a <_svfprintf_r+0xc5a>
   8300e:	2b02      	cmp	r3, #2
   83010:	f040 829c 	bne.w	8354c <_svfprintf_r+0xb7c>
   83014:	464e      	mov	r6, r9
   83016:	9818      	ldr	r0, [sp, #96]	; 0x60
   83018:	0923      	lsrs	r3, r4, #4
   8301a:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   8301e:	0929      	lsrs	r1, r5, #4
   83020:	f004 020f 	and.w	r2, r4, #15
   83024:	460d      	mov	r5, r1
   83026:	461c      	mov	r4, r3
   83028:	5c83      	ldrb	r3, [r0, r2]
   8302a:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8302e:	ea54 0305 	orrs.w	r3, r4, r5
   83032:	d1f1      	bne.n	83018 <_svfprintf_r+0x648>
   83034:	eba9 0306 	sub.w	r3, r9, r6
   83038:	930e      	str	r3, [sp, #56]	; 0x38
   8303a:	e5e5      	b.n	82c08 <_svfprintf_r+0x238>
   8303c:	9311      	str	r3, [sp, #68]	; 0x44
   8303e:	2a00      	cmp	r2, #0
   83040:	f040 8738 	bne.w	83eb4 <_svfprintf_r+0x14e4>
   83044:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83046:	f01b 0f08 	tst.w	fp, #8
   8304a:	f104 0407 	add.w	r4, r4, #7
   8304e:	f000 84cf 	beq.w	839f0 <_svfprintf_r+0x1020>
   83052:	f024 0307 	bic.w	r3, r4, #7
   83056:	f103 0208 	add.w	r2, r3, #8
   8305a:	920f      	str	r2, [sp, #60]	; 0x3c
   8305c:	681a      	ldr	r2, [r3, #0]
   8305e:	685b      	ldr	r3, [r3, #4]
   83060:	9215      	str	r2, [sp, #84]	; 0x54
   83062:	9314      	str	r3, [sp, #80]	; 0x50
   83064:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83066:	9d15      	ldr	r5, [sp, #84]	; 0x54
   83068:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   8306c:	4628      	mov	r0, r5
   8306e:	4621      	mov	r1, r4
   83070:	f04f 32ff 	mov.w	r2, #4294967295
   83074:	4b6f      	ldr	r3, [pc, #444]	; (83234 <_svfprintf_r+0x864>)
   83076:	f003 fdf3 	bl	86c60 <__aeabi_dcmpun>
   8307a:	2800      	cmp	r0, #0
   8307c:	f040 8434 	bne.w	838e8 <_svfprintf_r+0xf18>
   83080:	4628      	mov	r0, r5
   83082:	4621      	mov	r1, r4
   83084:	f04f 32ff 	mov.w	r2, #4294967295
   83088:	4b6a      	ldr	r3, [pc, #424]	; (83234 <_svfprintf_r+0x864>)
   8308a:	f003 fdcb 	bl	86c24 <__aeabi_dcmple>
   8308e:	2800      	cmp	r0, #0
   83090:	f040 842a 	bne.w	838e8 <_svfprintf_r+0xf18>
   83094:	a815      	add	r0, sp, #84	; 0x54
   83096:	c80d      	ldmia	r0, {r0, r2, r3}
   83098:	9914      	ldr	r1, [sp, #80]	; 0x50
   8309a:	f003 fdb9 	bl	86c10 <__aeabi_dcmplt>
   8309e:	2800      	cmp	r0, #0
   830a0:	f040 85d4 	bne.w	83c4c <_svfprintf_r+0x127c>
   830a4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   830a8:	2303      	movs	r3, #3
   830aa:	461a      	mov	r2, r3
   830ac:	9308      	str	r3, [sp, #32]
   830ae:	2300      	movs	r3, #0
   830b0:	4e61      	ldr	r6, [pc, #388]	; (83238 <_svfprintf_r+0x868>)
   830b2:	4619      	mov	r1, r3
   830b4:	930a      	str	r3, [sp, #40]	; 0x28
   830b6:	4b61      	ldr	r3, [pc, #388]	; (8323c <_svfprintf_r+0x86c>)
   830b8:	920e      	str	r2, [sp, #56]	; 0x38
   830ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
   830bc:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   830c0:	9007      	str	r0, [sp, #28]
   830c2:	9112      	str	r1, [sp, #72]	; 0x48
   830c4:	2a47      	cmp	r2, #71	; 0x47
   830c6:	bfd8      	it	le
   830c8:	461e      	movle	r6, r3
   830ca:	e5a5      	b.n	82c18 <_svfprintf_r+0x248>
   830cc:	f04b 0b08 	orr.w	fp, fp, #8
   830d0:	f89a 3000 	ldrb.w	r3, [sl]
   830d4:	e4d6      	b.n	82a84 <_svfprintf_r+0xb4>
   830d6:	f04b 0b10 	orr.w	fp, fp, #16
   830da:	9311      	str	r3, [sp, #68]	; 0x44
   830dc:	f01b 0320 	ands.w	r3, fp, #32
   830e0:	f43f aebb 	beq.w	82e5a <_svfprintf_r+0x48a>
   830e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   830e6:	3407      	adds	r4, #7
   830e8:	f024 0307 	bic.w	r3, r4, #7
   830ec:	f103 0208 	add.w	r2, r3, #8
   830f0:	e9d3 4500 	ldrd	r4, r5, [r3]
   830f4:	920f      	str	r2, [sp, #60]	; 0x3c
   830f6:	2300      	movs	r3, #0
   830f8:	e568      	b.n	82bcc <_svfprintf_r+0x1fc>
   830fa:	9311      	str	r3, [sp, #68]	; 0x44
   830fc:	2a00      	cmp	r2, #0
   830fe:	f040 86c2 	bne.w	83e86 <_svfprintf_r+0x14b6>
   83102:	4b4f      	ldr	r3, [pc, #316]	; (83240 <_svfprintf_r+0x870>)
   83104:	f01b 0f20 	tst.w	fp, #32
   83108:	9318      	str	r3, [sp, #96]	; 0x60
   8310a:	f43f af19 	beq.w	82f40 <_svfprintf_r+0x570>
   8310e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83110:	f01b 0f01 	tst.w	fp, #1
   83114:	f104 0407 	add.w	r4, r4, #7
   83118:	f024 0307 	bic.w	r3, r4, #7
   8311c:	f103 0208 	add.w	r2, r3, #8
   83120:	920f      	str	r2, [sp, #60]	; 0x3c
   83122:	e9d3 4500 	ldrd	r4, r5, [r3]
   83126:	f47f af1d 	bne.w	82f64 <_svfprintf_r+0x594>
   8312a:	2302      	movs	r3, #2
   8312c:	e54e      	b.n	82bcc <_svfprintf_r+0x1fc>
   8312e:	f89a 3000 	ldrb.w	r3, [sl]
   83132:	2900      	cmp	r1, #0
   83134:	f47f aca6 	bne.w	82a84 <_svfprintf_r+0xb4>
   83138:	2201      	movs	r2, #1
   8313a:	2120      	movs	r1, #32
   8313c:	e4a2      	b.n	82a84 <_svfprintf_r+0xb4>
   8313e:	f04b 0b01 	orr.w	fp, fp, #1
   83142:	f89a 3000 	ldrb.w	r3, [sl]
   83146:	e49d      	b.n	82a84 <_svfprintf_r+0xb4>
   83148:	f89a 3000 	ldrb.w	r3, [sl]
   8314c:	2201      	movs	r2, #1
   8314e:	212b      	movs	r1, #43	; 0x2b
   83150:	e498      	b.n	82a84 <_svfprintf_r+0xb4>
   83152:	f04b 0b20 	orr.w	fp, fp, #32
   83156:	f89a 3000 	ldrb.w	r3, [sl]
   8315a:	e493      	b.n	82a84 <_svfprintf_r+0xb4>
   8315c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   83160:	f89a 3000 	ldrb.w	r3, [sl]
   83164:	e48e      	b.n	82a84 <_svfprintf_r+0xb4>
   83166:	f89a 3000 	ldrb.w	r3, [sl]
   8316a:	2b6c      	cmp	r3, #108	; 0x6c
   8316c:	bf03      	ittte	eq
   8316e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   83172:	f04b 0b20 	orreq.w	fp, fp, #32
   83176:	f10a 0a01 	addeq.w	sl, sl, #1
   8317a:	f04b 0b10 	orrne.w	fp, fp, #16
   8317e:	e481      	b.n	82a84 <_svfprintf_r+0xb4>
   83180:	2a00      	cmp	r2, #0
   83182:	f040 867c 	bne.w	83e7e <_svfprintf_r+0x14ae>
   83186:	f01b 0f20 	tst.w	fp, #32
   8318a:	f040 8452 	bne.w	83a32 <_svfprintf_r+0x1062>
   8318e:	f01b 0f10 	tst.w	fp, #16
   83192:	f040 8438 	bne.w	83a06 <_svfprintf_r+0x1036>
   83196:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8319a:	f000 8434 	beq.w	83a06 <_svfprintf_r+0x1036>
   8319e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   831a0:	6813      	ldr	r3, [r2, #0]
   831a2:	3204      	adds	r2, #4
   831a4:	920f      	str	r2, [sp, #60]	; 0x3c
   831a6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   831aa:	801a      	strh	r2, [r3, #0]
   831ac:	e437      	b.n	82a1e <_svfprintf_r+0x4e>
   831ae:	2378      	movs	r3, #120	; 0x78
   831b0:	2230      	movs	r2, #48	; 0x30
   831b2:	980f      	ldr	r0, [sp, #60]	; 0x3c
   831b4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   831b8:	9311      	str	r3, [sp, #68]	; 0x44
   831ba:	1d03      	adds	r3, r0, #4
   831bc:	930f      	str	r3, [sp, #60]	; 0x3c
   831be:	4b20      	ldr	r3, [pc, #128]	; (83240 <_svfprintf_r+0x870>)
   831c0:	6804      	ldr	r4, [r0, #0]
   831c2:	9318      	str	r3, [sp, #96]	; 0x60
   831c4:	f04b 0b02 	orr.w	fp, fp, #2
   831c8:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   831cc:	2500      	movs	r5, #0
   831ce:	2302      	movs	r3, #2
   831d0:	e4fc      	b.n	82bcc <_svfprintf_r+0x1fc>
   831d2:	9311      	str	r3, [sp, #68]	; 0x44
   831d4:	2a00      	cmp	r2, #0
   831d6:	f43f aeef 	beq.w	82fb8 <_svfprintf_r+0x5e8>
   831da:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   831de:	e6eb      	b.n	82fb8 <_svfprintf_r+0x5e8>
   831e0:	2000      	movs	r0, #0
   831e2:	4604      	mov	r4, r0
   831e4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   831e8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   831ec:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   831f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   831f4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   831f8:	2809      	cmp	r0, #9
   831fa:	d9f5      	bls.n	831e8 <_svfprintf_r+0x818>
   831fc:	940d      	str	r4, [sp, #52]	; 0x34
   831fe:	e443      	b.n	82a88 <_svfprintf_r+0xb8>
   83200:	9311      	str	r3, [sp, #68]	; 0x44
   83202:	2a00      	cmp	r2, #0
   83204:	f040 864a 	bne.w	83e9c <_svfprintf_r+0x14cc>
   83208:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8320a:	2a00      	cmp	r2, #0
   8320c:	f43f acb6 	beq.w	82b7c <_svfprintf_r+0x1ac>
   83210:	2300      	movs	r3, #0
   83212:	2101      	movs	r1, #1
   83214:	461f      	mov	r7, r3
   83216:	9108      	str	r1, [sp, #32]
   83218:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   8321c:	f8cd b01c 	str.w	fp, [sp, #28]
   83220:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83224:	930a      	str	r3, [sp, #40]	; 0x28
   83226:	9312      	str	r3, [sp, #72]	; 0x48
   83228:	910e      	str	r1, [sp, #56]	; 0x38
   8322a:	ae28      	add	r6, sp, #160	; 0xa0
   8322c:	e4f8      	b.n	82c20 <_svfprintf_r+0x250>
   8322e:	bf00      	nop
   83230:	0008702c 	.word	0x0008702c
   83234:	7fefffff 	.word	0x7fefffff
   83238:	00087020 	.word	0x00087020
   8323c:	0008701c 	.word	0x0008701c
   83240:	00087040 	.word	0x00087040
   83244:	aa25      	add	r2, sp, #148	; 0x94
   83246:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83248:	980c      	ldr	r0, [sp, #48]	; 0x30
   8324a:	f002 ff9b 	bl	86184 <__ssprint_r>
   8324e:	2800      	cmp	r0, #0
   83250:	f47f ac9b 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83254:	46c8      	mov	r8, r9
   83256:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8325a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8325c:	e533      	b.n	82cc6 <_svfprintf_r+0x2f6>
   8325e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83260:	2b65      	cmp	r3, #101	; 0x65
   83262:	f340 809a 	ble.w	8339a <_svfprintf_r+0x9ca>
   83266:	a815      	add	r0, sp, #84	; 0x54
   83268:	c80d      	ldmia	r0, {r0, r2, r3}
   8326a:	9914      	ldr	r1, [sp, #80]	; 0x50
   8326c:	f003 fcc6 	bl	86bfc <__aeabi_dcmpeq>
   83270:	2800      	cmp	r0, #0
   83272:	f000 8193 	beq.w	8359c <_svfprintf_r+0xbcc>
   83276:	2101      	movs	r1, #1
   83278:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8327a:	4ab5      	ldr	r2, [pc, #724]	; (83550 <_svfprintf_r+0xb80>)
   8327c:	440b      	add	r3, r1
   8327e:	440c      	add	r4, r1
   83280:	2b07      	cmp	r3, #7
   83282:	9427      	str	r4, [sp, #156]	; 0x9c
   83284:	9326      	str	r3, [sp, #152]	; 0x98
   83286:	f8c8 1004 	str.w	r1, [r8, #4]
   8328a:	f8c8 2000 	str.w	r2, [r8]
   8328e:	f300 83c6 	bgt.w	83a1e <_svfprintf_r+0x104e>
   83292:	f108 0808 	add.w	r8, r8, #8
   83296:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83298:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8329a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8329c:	4293      	cmp	r3, r2
   8329e:	db03      	blt.n	832a8 <_svfprintf_r+0x8d8>
   832a0:	9b07      	ldr	r3, [sp, #28]
   832a2:	07dd      	lsls	r5, r3, #31
   832a4:	f57f ad86 	bpl.w	82db4 <_svfprintf_r+0x3e4>
   832a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   832aa:	9919      	ldr	r1, [sp, #100]	; 0x64
   832ac:	3301      	adds	r3, #1
   832ae:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   832b0:	440c      	add	r4, r1
   832b2:	2b07      	cmp	r3, #7
   832b4:	f8c8 2000 	str.w	r2, [r8]
   832b8:	f8c8 1004 	str.w	r1, [r8, #4]
   832bc:	9427      	str	r4, [sp, #156]	; 0x9c
   832be:	9326      	str	r3, [sp, #152]	; 0x98
   832c0:	f300 83c4 	bgt.w	83a4c <_svfprintf_r+0x107c>
   832c4:	f108 0808 	add.w	r8, r8, #8
   832c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   832ca:	1e5e      	subs	r6, r3, #1
   832cc:	2e00      	cmp	r6, #0
   832ce:	f77f ad71 	ble.w	82db4 <_svfprintf_r+0x3e4>
   832d2:	2e10      	cmp	r6, #16
   832d4:	f340 8575 	ble.w	83dc2 <_svfprintf_r+0x13f2>
   832d8:	4622      	mov	r2, r4
   832da:	2710      	movs	r7, #16
   832dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   832de:	4d9d      	ldr	r5, [pc, #628]	; (83554 <_svfprintf_r+0xb84>)
   832e0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   832e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   832e6:	e005      	b.n	832f4 <_svfprintf_r+0x924>
   832e8:	f108 0808 	add.w	r8, r8, #8
   832ec:	3e10      	subs	r6, #16
   832ee:	2e10      	cmp	r6, #16
   832f0:	f340 8225 	ble.w	8373e <_svfprintf_r+0xd6e>
   832f4:	3301      	adds	r3, #1
   832f6:	3210      	adds	r2, #16
   832f8:	2b07      	cmp	r3, #7
   832fa:	9227      	str	r2, [sp, #156]	; 0x9c
   832fc:	9326      	str	r3, [sp, #152]	; 0x98
   832fe:	e888 00a0 	stmia.w	r8, {r5, r7}
   83302:	ddf1      	ble.n	832e8 <_svfprintf_r+0x918>
   83304:	aa25      	add	r2, sp, #148	; 0x94
   83306:	4621      	mov	r1, r4
   83308:	4658      	mov	r0, fp
   8330a:	f002 ff3b 	bl	86184 <__ssprint_r>
   8330e:	2800      	cmp	r0, #0
   83310:	f47f ac3b 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83314:	46c8      	mov	r8, r9
   83316:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83318:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8331a:	e7e7      	b.n	832ec <_svfprintf_r+0x91c>
   8331c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8331e:	9a08      	ldr	r2, [sp, #32]
   83320:	1a9f      	subs	r7, r3, r2
   83322:	2f00      	cmp	r7, #0
   83324:	f77f acf6 	ble.w	82d14 <_svfprintf_r+0x344>
   83328:	2f10      	cmp	r7, #16
   8332a:	f340 84a8 	ble.w	83c7e <_svfprintf_r+0x12ae>
   8332e:	4d89      	ldr	r5, [pc, #548]	; (83554 <_svfprintf_r+0xb84>)
   83330:	4642      	mov	r2, r8
   83332:	4621      	mov	r1, r4
   83334:	46b0      	mov	r8, r6
   83336:	f04f 0b10 	mov.w	fp, #16
   8333a:	462e      	mov	r6, r5
   8333c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8333e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83340:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83342:	e004      	b.n	8334e <_svfprintf_r+0x97e>
   83344:	3f10      	subs	r7, #16
   83346:	2f10      	cmp	r7, #16
   83348:	f102 0208 	add.w	r2, r2, #8
   8334c:	dd15      	ble.n	8337a <_svfprintf_r+0x9aa>
   8334e:	3301      	adds	r3, #1
   83350:	3110      	adds	r1, #16
   83352:	2b07      	cmp	r3, #7
   83354:	9127      	str	r1, [sp, #156]	; 0x9c
   83356:	9326      	str	r3, [sp, #152]	; 0x98
   83358:	e882 0840 	stmia.w	r2, {r6, fp}
   8335c:	ddf2      	ble.n	83344 <_svfprintf_r+0x974>
   8335e:	aa25      	add	r2, sp, #148	; 0x94
   83360:	4629      	mov	r1, r5
   83362:	4620      	mov	r0, r4
   83364:	f002 ff0e 	bl	86184 <__ssprint_r>
   83368:	2800      	cmp	r0, #0
   8336a:	f47f ac0e 	bne.w	82b8a <_svfprintf_r+0x1ba>
   8336e:	3f10      	subs	r7, #16
   83370:	2f10      	cmp	r7, #16
   83372:	464a      	mov	r2, r9
   83374:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83376:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83378:	dce9      	bgt.n	8334e <_svfprintf_r+0x97e>
   8337a:	4635      	mov	r5, r6
   8337c:	460c      	mov	r4, r1
   8337e:	4646      	mov	r6, r8
   83380:	4690      	mov	r8, r2
   83382:	3301      	adds	r3, #1
   83384:	443c      	add	r4, r7
   83386:	2b07      	cmp	r3, #7
   83388:	9427      	str	r4, [sp, #156]	; 0x9c
   8338a:	9326      	str	r3, [sp, #152]	; 0x98
   8338c:	e888 00a0 	stmia.w	r8, {r5, r7}
   83390:	f300 829e 	bgt.w	838d0 <_svfprintf_r+0xf00>
   83394:	f108 0808 	add.w	r8, r8, #8
   83398:	e4bc      	b.n	82d14 <_svfprintf_r+0x344>
   8339a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8339c:	2b01      	cmp	r3, #1
   8339e:	f340 824f 	ble.w	83840 <_svfprintf_r+0xe70>
   833a2:	2301      	movs	r3, #1
   833a4:	9f26      	ldr	r7, [sp, #152]	; 0x98
   833a6:	441c      	add	r4, r3
   833a8:	441f      	add	r7, r3
   833aa:	2f07      	cmp	r7, #7
   833ac:	9427      	str	r4, [sp, #156]	; 0x9c
   833ae:	f8c8 6000 	str.w	r6, [r8]
   833b2:	9726      	str	r7, [sp, #152]	; 0x98
   833b4:	f8c8 3004 	str.w	r3, [r8, #4]
   833b8:	f300 825f 	bgt.w	8387a <_svfprintf_r+0xeaa>
   833bc:	f108 0808 	add.w	r8, r8, #8
   833c0:	9a19      	ldr	r2, [sp, #100]	; 0x64
   833c2:	3701      	adds	r7, #1
   833c4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   833c6:	4414      	add	r4, r2
   833c8:	2f07      	cmp	r7, #7
   833ca:	9427      	str	r4, [sp, #156]	; 0x9c
   833cc:	9726      	str	r7, [sp, #152]	; 0x98
   833ce:	f8c8 3000 	str.w	r3, [r8]
   833d2:	f8c8 2004 	str.w	r2, [r8, #4]
   833d6:	f300 825c 	bgt.w	83892 <_svfprintf_r+0xec2>
   833da:	f108 0808 	add.w	r8, r8, #8
   833de:	a815      	add	r0, sp, #84	; 0x54
   833e0:	c80d      	ldmia	r0, {r0, r2, r3}
   833e2:	9914      	ldr	r1, [sp, #80]	; 0x50
   833e4:	f003 fc0a 	bl	86bfc <__aeabi_dcmpeq>
   833e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   833ea:	2800      	cmp	r0, #0
   833ec:	f040 8141 	bne.w	83672 <_svfprintf_r+0xca2>
   833f0:	3b01      	subs	r3, #1
   833f2:	3701      	adds	r7, #1
   833f4:	3601      	adds	r6, #1
   833f6:	441c      	add	r4, r3
   833f8:	2f07      	cmp	r7, #7
   833fa:	f8c8 6000 	str.w	r6, [r8]
   833fe:	9726      	str	r7, [sp, #152]	; 0x98
   83400:	9427      	str	r4, [sp, #156]	; 0x9c
   83402:	f8c8 3004 	str.w	r3, [r8, #4]
   83406:	f300 8166 	bgt.w	836d6 <_svfprintf_r+0xd06>
   8340a:	f108 0808 	add.w	r8, r8, #8
   8340e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   83410:	3701      	adds	r7, #1
   83412:	4414      	add	r4, r2
   83414:	ab21      	add	r3, sp, #132	; 0x84
   83416:	2f07      	cmp	r7, #7
   83418:	9427      	str	r4, [sp, #156]	; 0x9c
   8341a:	9726      	str	r7, [sp, #152]	; 0x98
   8341c:	f8c8 2004 	str.w	r2, [r8, #4]
   83420:	f8c8 3000 	str.w	r3, [r8]
   83424:	f77f acc4 	ble.w	82db0 <_svfprintf_r+0x3e0>
   83428:	aa25      	add	r2, sp, #148	; 0x94
   8342a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8342c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8342e:	f002 fea9 	bl	86184 <__ssprint_r>
   83432:	2800      	cmp	r0, #0
   83434:	f47f aba9 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83438:	46c8      	mov	r8, r9
   8343a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8343c:	e4ba      	b.n	82db4 <_svfprintf_r+0x3e4>
   8343e:	aa25      	add	r2, sp, #148	; 0x94
   83440:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83442:	980c      	ldr	r0, [sp, #48]	; 0x30
   83444:	f002 fe9e 	bl	86184 <__ssprint_r>
   83448:	2800      	cmp	r0, #0
   8344a:	f43f acfd 	beq.w	82e48 <_svfprintf_r+0x478>
   8344e:	f7ff bb9c 	b.w	82b8a <_svfprintf_r+0x1ba>
   83452:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83456:	2b01      	cmp	r3, #1
   83458:	f000 817e 	beq.w	83758 <_svfprintf_r+0xd88>
   8345c:	2b02      	cmp	r3, #2
   8345e:	d171      	bne.n	83544 <_svfprintf_r+0xb74>
   83460:	f8cd b01c 	str.w	fp, [sp, #28]
   83464:	2400      	movs	r4, #0
   83466:	2500      	movs	r5, #0
   83468:	e5d4      	b.n	83014 <_svfprintf_r+0x644>
   8346a:	aa25      	add	r2, sp, #148	; 0x94
   8346c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8346e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83470:	f002 fe88 	bl	86184 <__ssprint_r>
   83474:	2800      	cmp	r0, #0
   83476:	f47f ab88 	bne.w	82b8a <_svfprintf_r+0x1ba>
   8347a:	46c8      	mov	r8, r9
   8347c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8347e:	e486      	b.n	82d8e <_svfprintf_r+0x3be>
   83480:	aa25      	add	r2, sp, #148	; 0x94
   83482:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83484:	980c      	ldr	r0, [sp, #48]	; 0x30
   83486:	f002 fe7d 	bl	86184 <__ssprint_r>
   8348a:	2800      	cmp	r0, #0
   8348c:	f47f ab7d 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83490:	46c8      	mov	r8, r9
   83492:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83494:	e429      	b.n	82cea <_svfprintf_r+0x31a>
   83496:	2001      	movs	r0, #1
   83498:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8349a:	4a2d      	ldr	r2, [pc, #180]	; (83550 <_svfprintf_r+0xb80>)
   8349c:	4403      	add	r3, r0
   8349e:	4404      	add	r4, r0
   834a0:	2b07      	cmp	r3, #7
   834a2:	9427      	str	r4, [sp, #156]	; 0x9c
   834a4:	9326      	str	r3, [sp, #152]	; 0x98
   834a6:	f8c8 0004 	str.w	r0, [r8, #4]
   834aa:	f8c8 2000 	str.w	r2, [r8]
   834ae:	f340 82d8 	ble.w	83a62 <_svfprintf_r+0x1092>
   834b2:	aa25      	add	r2, sp, #148	; 0x94
   834b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   834b6:	980c      	ldr	r0, [sp, #48]	; 0x30
   834b8:	f002 fe64 	bl	86184 <__ssprint_r>
   834bc:	2800      	cmp	r0, #0
   834be:	f47f ab64 	bne.w	82b8a <_svfprintf_r+0x1ba>
   834c2:	46c8      	mov	r8, r9
   834c4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   834c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   834c8:	b929      	cbnz	r1, 834d6 <_svfprintf_r+0xb06>
   834ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   834cc:	b91b      	cbnz	r3, 834d6 <_svfprintf_r+0xb06>
   834ce:	9b07      	ldr	r3, [sp, #28]
   834d0:	07d8      	lsls	r0, r3, #31
   834d2:	f57f ac6f 	bpl.w	82db4 <_svfprintf_r+0x3e4>
   834d6:	9819      	ldr	r0, [sp, #100]	; 0x64
   834d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   834da:	4602      	mov	r2, r0
   834dc:	3301      	adds	r3, #1
   834de:	4422      	add	r2, r4
   834e0:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   834e2:	2b07      	cmp	r3, #7
   834e4:	9227      	str	r2, [sp, #156]	; 0x9c
   834e6:	f8c8 4000 	str.w	r4, [r8]
   834ea:	f8c8 0004 	str.w	r0, [r8, #4]
   834ee:	9326      	str	r3, [sp, #152]	; 0x98
   834f0:	f300 8431 	bgt.w	83d56 <_svfprintf_r+0x1386>
   834f4:	f108 0808 	add.w	r8, r8, #8
   834f8:	2900      	cmp	r1, #0
   834fa:	f2c0 8409 	blt.w	83d10 <_svfprintf_r+0x1340>
   834fe:	9913      	ldr	r1, [sp, #76]	; 0x4c
   83500:	3301      	adds	r3, #1
   83502:	188c      	adds	r4, r1, r2
   83504:	2b07      	cmp	r3, #7
   83506:	9427      	str	r4, [sp, #156]	; 0x9c
   83508:	9326      	str	r3, [sp, #152]	; 0x98
   8350a:	f8c8 6000 	str.w	r6, [r8]
   8350e:	f8c8 1004 	str.w	r1, [r8, #4]
   83512:	f77f ac4d 	ble.w	82db0 <_svfprintf_r+0x3e0>
   83516:	aa25      	add	r2, sp, #148	; 0x94
   83518:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8351a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8351c:	f002 fe32 	bl	86184 <__ssprint_r>
   83520:	2800      	cmp	r0, #0
   83522:	f47f ab32 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83526:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83528:	46c8      	mov	r8, r9
   8352a:	e443      	b.n	82db4 <_svfprintf_r+0x3e4>
   8352c:	aa25      	add	r2, sp, #148	; 0x94
   8352e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83530:	980c      	ldr	r0, [sp, #48]	; 0x30
   83532:	f002 fe27 	bl	86184 <__ssprint_r>
   83536:	2800      	cmp	r0, #0
   83538:	f47f ab27 	bne.w	82b8a <_svfprintf_r+0x1ba>
   8353c:	46c8      	mov	r8, r9
   8353e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83540:	f7ff bbe5 	b.w	82d0e <_svfprintf_r+0x33e>
   83544:	2400      	movs	r4, #0
   83546:	2500      	movs	r5, #0
   83548:	f8cd b01c 	str.w	fp, [sp, #28]
   8354c:	4649      	mov	r1, r9
   8354e:	e004      	b.n	8355a <_svfprintf_r+0xb8a>
   83550:	0008705c 	.word	0x0008705c
   83554:	00087070 	.word	0x00087070
   83558:	4631      	mov	r1, r6
   8355a:	08e2      	lsrs	r2, r4, #3
   8355c:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   83560:	08e8      	lsrs	r0, r5, #3
   83562:	f004 0307 	and.w	r3, r4, #7
   83566:	4605      	mov	r5, r0
   83568:	4614      	mov	r4, r2
   8356a:	3330      	adds	r3, #48	; 0x30
   8356c:	ea54 0205 	orrs.w	r2, r4, r5
   83570:	f801 3c01 	strb.w	r3, [r1, #-1]
   83574:	f101 36ff 	add.w	r6, r1, #4294967295
   83578:	d1ee      	bne.n	83558 <_svfprintf_r+0xb88>
   8357a:	9a07      	ldr	r2, [sp, #28]
   8357c:	07d2      	lsls	r2, r2, #31
   8357e:	f57f ad59 	bpl.w	83034 <_svfprintf_r+0x664>
   83582:	2b30      	cmp	r3, #48	; 0x30
   83584:	f43f ad56 	beq.w	83034 <_svfprintf_r+0x664>
   83588:	2330      	movs	r3, #48	; 0x30
   8358a:	3902      	subs	r1, #2
   8358c:	f806 3c01 	strb.w	r3, [r6, #-1]
   83590:	eba9 0301 	sub.w	r3, r9, r1
   83594:	930e      	str	r3, [sp, #56]	; 0x38
   83596:	460e      	mov	r6, r1
   83598:	f7ff bb36 	b.w	82c08 <_svfprintf_r+0x238>
   8359c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8359e:	2900      	cmp	r1, #0
   835a0:	f77f af79 	ble.w	83496 <_svfprintf_r+0xac6>
   835a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   835a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   835a8:	4293      	cmp	r3, r2
   835aa:	bfa8      	it	ge
   835ac:	4613      	movge	r3, r2
   835ae:	2b00      	cmp	r3, #0
   835b0:	461f      	mov	r7, r3
   835b2:	dd0b      	ble.n	835cc <_svfprintf_r+0xbfc>
   835b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   835b6:	443c      	add	r4, r7
   835b8:	3301      	adds	r3, #1
   835ba:	2b07      	cmp	r3, #7
   835bc:	9427      	str	r4, [sp, #156]	; 0x9c
   835be:	e888 00c0 	stmia.w	r8, {r6, r7}
   835c2:	9326      	str	r3, [sp, #152]	; 0x98
   835c4:	f300 82fb 	bgt.w	83bbe <_svfprintf_r+0x11ee>
   835c8:	f108 0808 	add.w	r8, r8, #8
   835cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   835ce:	2f00      	cmp	r7, #0
   835d0:	bfa8      	it	ge
   835d2:	1bdb      	subge	r3, r3, r7
   835d4:	2b00      	cmp	r3, #0
   835d6:	461f      	mov	r7, r3
   835d8:	f340 80d7 	ble.w	8378a <_svfprintf_r+0xdba>
   835dc:	2b10      	cmp	r3, #16
   835de:	f340 8434 	ble.w	83e4a <_svfprintf_r+0x147a>
   835e2:	4dba      	ldr	r5, [pc, #744]	; (838cc <_svfprintf_r+0xefc>)
   835e4:	4642      	mov	r2, r8
   835e6:	4621      	mov	r1, r4
   835e8:	46b0      	mov	r8, r6
   835ea:	f04f 0b10 	mov.w	fp, #16
   835ee:	462e      	mov	r6, r5
   835f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   835f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   835f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   835f6:	e004      	b.n	83602 <_svfprintf_r+0xc32>
   835f8:	3208      	adds	r2, #8
   835fa:	3f10      	subs	r7, #16
   835fc:	2f10      	cmp	r7, #16
   835fe:	f340 80b5 	ble.w	8376c <_svfprintf_r+0xd9c>
   83602:	3301      	adds	r3, #1
   83604:	3110      	adds	r1, #16
   83606:	2b07      	cmp	r3, #7
   83608:	9127      	str	r1, [sp, #156]	; 0x9c
   8360a:	9326      	str	r3, [sp, #152]	; 0x98
   8360c:	e882 0840 	stmia.w	r2, {r6, fp}
   83610:	ddf2      	ble.n	835f8 <_svfprintf_r+0xc28>
   83612:	aa25      	add	r2, sp, #148	; 0x94
   83614:	4629      	mov	r1, r5
   83616:	4620      	mov	r0, r4
   83618:	f002 fdb4 	bl	86184 <__ssprint_r>
   8361c:	2800      	cmp	r0, #0
   8361e:	f47f aab4 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83622:	464a      	mov	r2, r9
   83624:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83626:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83628:	e7e7      	b.n	835fa <_svfprintf_r+0xc2a>
   8362a:	2d00      	cmp	r5, #0
   8362c:	bf08      	it	eq
   8362e:	2c0a      	cmpeq	r4, #10
   83630:	f0c0 8090 	bcc.w	83754 <_svfprintf_r+0xd84>
   83634:	464e      	mov	r6, r9
   83636:	4620      	mov	r0, r4
   83638:	4629      	mov	r1, r5
   8363a:	220a      	movs	r2, #10
   8363c:	2300      	movs	r3, #0
   8363e:	f003 fb4d 	bl	86cdc <__aeabi_uldivmod>
   83642:	3230      	adds	r2, #48	; 0x30
   83644:	f806 2d01 	strb.w	r2, [r6, #-1]!
   83648:	4620      	mov	r0, r4
   8364a:	4629      	mov	r1, r5
   8364c:	2300      	movs	r3, #0
   8364e:	220a      	movs	r2, #10
   83650:	f003 fb44 	bl	86cdc <__aeabi_uldivmod>
   83654:	4604      	mov	r4, r0
   83656:	460d      	mov	r5, r1
   83658:	ea54 0305 	orrs.w	r3, r4, r5
   8365c:	d1eb      	bne.n	83636 <_svfprintf_r+0xc66>
   8365e:	eba9 0306 	sub.w	r3, r9, r6
   83662:	930e      	str	r3, [sp, #56]	; 0x38
   83664:	f7ff bad0 	b.w	82c08 <_svfprintf_r+0x238>
   83668:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8366a:	464e      	mov	r6, r9
   8366c:	930e      	str	r3, [sp, #56]	; 0x38
   8366e:	f7ff bacb 	b.w	82c08 <_svfprintf_r+0x238>
   83672:	1e5e      	subs	r6, r3, #1
   83674:	2e00      	cmp	r6, #0
   83676:	f77f aeca 	ble.w	8340e <_svfprintf_r+0xa3e>
   8367a:	2e10      	cmp	r6, #16
   8367c:	f340 83e3 	ble.w	83e46 <_svfprintf_r+0x1476>
   83680:	4622      	mov	r2, r4
   83682:	f04f 0b10 	mov.w	fp, #16
   83686:	4d91      	ldr	r5, [pc, #580]	; (838cc <_svfprintf_r+0xefc>)
   83688:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8368a:	e004      	b.n	83696 <_svfprintf_r+0xcc6>
   8368c:	3e10      	subs	r6, #16
   8368e:	2e10      	cmp	r6, #16
   83690:	f108 0808 	add.w	r8, r8, #8
   83694:	dd15      	ble.n	836c2 <_svfprintf_r+0xcf2>
   83696:	3701      	adds	r7, #1
   83698:	3210      	adds	r2, #16
   8369a:	2f07      	cmp	r7, #7
   8369c:	9227      	str	r2, [sp, #156]	; 0x9c
   8369e:	9726      	str	r7, [sp, #152]	; 0x98
   836a0:	e888 0820 	stmia.w	r8, {r5, fp}
   836a4:	ddf2      	ble.n	8368c <_svfprintf_r+0xcbc>
   836a6:	aa25      	add	r2, sp, #148	; 0x94
   836a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   836aa:	4620      	mov	r0, r4
   836ac:	f002 fd6a 	bl	86184 <__ssprint_r>
   836b0:	2800      	cmp	r0, #0
   836b2:	f47f aa6a 	bne.w	82b8a <_svfprintf_r+0x1ba>
   836b6:	3e10      	subs	r6, #16
   836b8:	2e10      	cmp	r6, #16
   836ba:	46c8      	mov	r8, r9
   836bc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   836be:	9f26      	ldr	r7, [sp, #152]	; 0x98
   836c0:	dce9      	bgt.n	83696 <_svfprintf_r+0xcc6>
   836c2:	4614      	mov	r4, r2
   836c4:	3701      	adds	r7, #1
   836c6:	4434      	add	r4, r6
   836c8:	2f07      	cmp	r7, #7
   836ca:	9427      	str	r4, [sp, #156]	; 0x9c
   836cc:	9726      	str	r7, [sp, #152]	; 0x98
   836ce:	e888 0060 	stmia.w	r8, {r5, r6}
   836d2:	f77f ae9a 	ble.w	8340a <_svfprintf_r+0xa3a>
   836d6:	aa25      	add	r2, sp, #148	; 0x94
   836d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   836da:	980c      	ldr	r0, [sp, #48]	; 0x30
   836dc:	f002 fd52 	bl	86184 <__ssprint_r>
   836e0:	2800      	cmp	r0, #0
   836e2:	f47f aa52 	bne.w	82b8a <_svfprintf_r+0x1ba>
   836e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   836e8:	9f26      	ldr	r7, [sp, #152]	; 0x98
   836ea:	46c8      	mov	r8, r9
   836ec:	e68f      	b.n	8340e <_svfprintf_r+0xa3e>
   836ee:	3204      	adds	r2, #4
   836f0:	681c      	ldr	r4, [r3, #0]
   836f2:	2500      	movs	r5, #0
   836f4:	2301      	movs	r3, #1
   836f6:	920f      	str	r2, [sp, #60]	; 0x3c
   836f8:	f7ff ba68 	b.w	82bcc <_svfprintf_r+0x1fc>
   836fc:	681c      	ldr	r4, [r3, #0]
   836fe:	3304      	adds	r3, #4
   83700:	930f      	str	r3, [sp, #60]	; 0x3c
   83702:	2500      	movs	r5, #0
   83704:	e42a      	b.n	82f5c <_svfprintf_r+0x58c>
   83706:	681c      	ldr	r4, [r3, #0]
   83708:	3304      	adds	r3, #4
   8370a:	17e5      	asrs	r5, r4, #31
   8370c:	4622      	mov	r2, r4
   8370e:	930f      	str	r3, [sp, #60]	; 0x3c
   83710:	462b      	mov	r3, r5
   83712:	2a00      	cmp	r2, #0
   83714:	f173 0300 	sbcs.w	r3, r3, #0
   83718:	f6bf ac68 	bge.w	82fec <_svfprintf_r+0x61c>
   8371c:	272d      	movs	r7, #45	; 0x2d
   8371e:	4264      	negs	r4, r4
   83720:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   83724:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83728:	2301      	movs	r3, #1
   8372a:	f7ff ba53 	b.w	82bd4 <_svfprintf_r+0x204>
   8372e:	990f      	ldr	r1, [sp, #60]	; 0x3c
   83730:	2500      	movs	r5, #0
   83732:	460a      	mov	r2, r1
   83734:	3204      	adds	r2, #4
   83736:	680c      	ldr	r4, [r1, #0]
   83738:	920f      	str	r2, [sp, #60]	; 0x3c
   8373a:	f7ff ba47 	b.w	82bcc <_svfprintf_r+0x1fc>
   8373e:	4614      	mov	r4, r2
   83740:	3301      	adds	r3, #1
   83742:	4434      	add	r4, r6
   83744:	2b07      	cmp	r3, #7
   83746:	9427      	str	r4, [sp, #156]	; 0x9c
   83748:	9326      	str	r3, [sp, #152]	; 0x98
   8374a:	e888 0060 	stmia.w	r8, {r5, r6}
   8374e:	f77f ab2f 	ble.w	82db0 <_svfprintf_r+0x3e0>
   83752:	e6e0      	b.n	83516 <_svfprintf_r+0xb46>
   83754:	f8dd b01c 	ldr.w	fp, [sp, #28]
   83758:	2301      	movs	r3, #1
   8375a:	ae42      	add	r6, sp, #264	; 0x108
   8375c:	3430      	adds	r4, #48	; 0x30
   8375e:	f8cd b01c 	str.w	fp, [sp, #28]
   83762:	f806 4d41 	strb.w	r4, [r6, #-65]!
   83766:	930e      	str	r3, [sp, #56]	; 0x38
   83768:	f7ff ba4e 	b.w	82c08 <_svfprintf_r+0x238>
   8376c:	4635      	mov	r5, r6
   8376e:	460c      	mov	r4, r1
   83770:	4646      	mov	r6, r8
   83772:	4690      	mov	r8, r2
   83774:	3301      	adds	r3, #1
   83776:	443c      	add	r4, r7
   83778:	2b07      	cmp	r3, #7
   8377a:	9427      	str	r4, [sp, #156]	; 0x9c
   8377c:	9326      	str	r3, [sp, #152]	; 0x98
   8377e:	e888 00a0 	stmia.w	r8, {r5, r7}
   83782:	f300 8246 	bgt.w	83c12 <_svfprintf_r+0x1242>
   83786:	f108 0808 	add.w	r8, r8, #8
   8378a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   8378c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8378e:	429a      	cmp	r2, r3
   83790:	db45      	blt.n	8381e <_svfprintf_r+0xe4e>
   83792:	9b07      	ldr	r3, [sp, #28]
   83794:	07d9      	lsls	r1, r3, #31
   83796:	d442      	bmi.n	8381e <_svfprintf_r+0xe4e>
   83798:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8379a:	9812      	ldr	r0, [sp, #72]	; 0x48
   8379c:	1a9a      	subs	r2, r3, r2
   8379e:	1a1d      	subs	r5, r3, r0
   837a0:	4295      	cmp	r5, r2
   837a2:	bfa8      	it	ge
   837a4:	4615      	movge	r5, r2
   837a6:	2d00      	cmp	r5, #0
   837a8:	dd0e      	ble.n	837c8 <_svfprintf_r+0xdf8>
   837aa:	9926      	ldr	r1, [sp, #152]	; 0x98
   837ac:	4406      	add	r6, r0
   837ae:	3101      	adds	r1, #1
   837b0:	442c      	add	r4, r5
   837b2:	2907      	cmp	r1, #7
   837b4:	f8c8 6000 	str.w	r6, [r8]
   837b8:	9427      	str	r4, [sp, #156]	; 0x9c
   837ba:	f8c8 5004 	str.w	r5, [r8, #4]
   837be:	9126      	str	r1, [sp, #152]	; 0x98
   837c0:	f300 8216 	bgt.w	83bf0 <_svfprintf_r+0x1220>
   837c4:	f108 0808 	add.w	r8, r8, #8
   837c8:	2d00      	cmp	r5, #0
   837ca:	bfb4      	ite	lt
   837cc:	4616      	movlt	r6, r2
   837ce:	1b56      	subge	r6, r2, r5
   837d0:	2e00      	cmp	r6, #0
   837d2:	f77f aaef 	ble.w	82db4 <_svfprintf_r+0x3e4>
   837d6:	2e10      	cmp	r6, #16
   837d8:	f340 82f3 	ble.w	83dc2 <_svfprintf_r+0x13f2>
   837dc:	4622      	mov	r2, r4
   837de:	2710      	movs	r7, #16
   837e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   837e2:	4d3a      	ldr	r5, [pc, #232]	; (838cc <_svfprintf_r+0xefc>)
   837e4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   837e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   837ea:	e004      	b.n	837f6 <_svfprintf_r+0xe26>
   837ec:	f108 0808 	add.w	r8, r8, #8
   837f0:	3e10      	subs	r6, #16
   837f2:	2e10      	cmp	r6, #16
   837f4:	dda3      	ble.n	8373e <_svfprintf_r+0xd6e>
   837f6:	3301      	adds	r3, #1
   837f8:	3210      	adds	r2, #16
   837fa:	2b07      	cmp	r3, #7
   837fc:	9227      	str	r2, [sp, #156]	; 0x9c
   837fe:	9326      	str	r3, [sp, #152]	; 0x98
   83800:	e888 00a0 	stmia.w	r8, {r5, r7}
   83804:	ddf2      	ble.n	837ec <_svfprintf_r+0xe1c>
   83806:	aa25      	add	r2, sp, #148	; 0x94
   83808:	4621      	mov	r1, r4
   8380a:	4658      	mov	r0, fp
   8380c:	f002 fcba 	bl	86184 <__ssprint_r>
   83810:	2800      	cmp	r0, #0
   83812:	f47f a9ba 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83816:	46c8      	mov	r8, r9
   83818:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8381a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8381c:	e7e8      	b.n	837f0 <_svfprintf_r+0xe20>
   8381e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83820:	9819      	ldr	r0, [sp, #100]	; 0x64
   83822:	3301      	adds	r3, #1
   83824:	991a      	ldr	r1, [sp, #104]	; 0x68
   83826:	4404      	add	r4, r0
   83828:	2b07      	cmp	r3, #7
   8382a:	9427      	str	r4, [sp, #156]	; 0x9c
   8382c:	f8c8 1000 	str.w	r1, [r8]
   83830:	f8c8 0004 	str.w	r0, [r8, #4]
   83834:	9326      	str	r3, [sp, #152]	; 0x98
   83836:	f300 81cf 	bgt.w	83bd8 <_svfprintf_r+0x1208>
   8383a:	f108 0808 	add.w	r8, r8, #8
   8383e:	e7ab      	b.n	83798 <_svfprintf_r+0xdc8>
   83840:	9b07      	ldr	r3, [sp, #28]
   83842:	07da      	lsls	r2, r3, #31
   83844:	f53f adad 	bmi.w	833a2 <_svfprintf_r+0x9d2>
   83848:	2301      	movs	r3, #1
   8384a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8384c:	441c      	add	r4, r3
   8384e:	441f      	add	r7, r3
   83850:	2f07      	cmp	r7, #7
   83852:	9427      	str	r4, [sp, #156]	; 0x9c
   83854:	f8c8 6000 	str.w	r6, [r8]
   83858:	9726      	str	r7, [sp, #152]	; 0x98
   8385a:	f8c8 3004 	str.w	r3, [r8, #4]
   8385e:	f77f add4 	ble.w	8340a <_svfprintf_r+0xa3a>
   83862:	aa25      	add	r2, sp, #148	; 0x94
   83864:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83866:	980c      	ldr	r0, [sp, #48]	; 0x30
   83868:	f002 fc8c 	bl	86184 <__ssprint_r>
   8386c:	2800      	cmp	r0, #0
   8386e:	f47f a98c 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83872:	46c8      	mov	r8, r9
   83874:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83876:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83878:	e5c9      	b.n	8340e <_svfprintf_r+0xa3e>
   8387a:	aa25      	add	r2, sp, #148	; 0x94
   8387c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8387e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83880:	f002 fc80 	bl	86184 <__ssprint_r>
   83884:	2800      	cmp	r0, #0
   83886:	f47f a980 	bne.w	82b8a <_svfprintf_r+0x1ba>
   8388a:	46c8      	mov	r8, r9
   8388c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8388e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   83890:	e596      	b.n	833c0 <_svfprintf_r+0x9f0>
   83892:	aa25      	add	r2, sp, #148	; 0x94
   83894:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83896:	980c      	ldr	r0, [sp, #48]	; 0x30
   83898:	f002 fc74 	bl	86184 <__ssprint_r>
   8389c:	2800      	cmp	r0, #0
   8389e:	f47f a974 	bne.w	82b8a <_svfprintf_r+0x1ba>
   838a2:	46c8      	mov	r8, r9
   838a4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   838a6:	9f26      	ldr	r7, [sp, #152]	; 0x98
   838a8:	e599      	b.n	833de <_svfprintf_r+0xa0e>
   838aa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   838ac:	3407      	adds	r4, #7
   838ae:	f024 0407 	bic.w	r4, r4, #7
   838b2:	f104 0108 	add.w	r1, r4, #8
   838b6:	e9d4 2300 	ldrd	r2, r3, [r4]
   838ba:	910f      	str	r1, [sp, #60]	; 0x3c
   838bc:	4614      	mov	r4, r2
   838be:	461d      	mov	r5, r3
   838c0:	f7ff bb8f 	b.w	82fe2 <_svfprintf_r+0x612>
   838c4:	464e      	mov	r6, r9
   838c6:	f7ff b99f 	b.w	82c08 <_svfprintf_r+0x238>
   838ca:	bf00      	nop
   838cc:	00087070 	.word	0x00087070
   838d0:	aa25      	add	r2, sp, #148	; 0x94
   838d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   838d4:	980c      	ldr	r0, [sp, #48]	; 0x30
   838d6:	f002 fc55 	bl	86184 <__ssprint_r>
   838da:	2800      	cmp	r0, #0
   838dc:	f47f a955 	bne.w	82b8a <_svfprintf_r+0x1ba>
   838e0:	46c8      	mov	r8, r9
   838e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   838e4:	f7ff ba16 	b.w	82d14 <_svfprintf_r+0x344>
   838e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
   838ea:	4622      	mov	r2, r4
   838ec:	4620      	mov	r0, r4
   838ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
   838f0:	4623      	mov	r3, r4
   838f2:	4621      	mov	r1, r4
   838f4:	f003 f9b4 	bl	86c60 <__aeabi_dcmpun>
   838f8:	2800      	cmp	r0, #0
   838fa:	f040 8273 	bne.w	83de4 <_svfprintf_r+0x1414>
   838fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83900:	3301      	adds	r3, #1
   83902:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83904:	f023 0320 	bic.w	r3, r3, #32
   83908:	930e      	str	r3, [sp, #56]	; 0x38
   8390a:	f000 819c 	beq.w	83c46 <_svfprintf_r+0x1276>
   8390e:	2b47      	cmp	r3, #71	; 0x47
   83910:	f000 80d6 	beq.w	83ac0 <_svfprintf_r+0x10f0>
   83914:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   83918:	9307      	str	r3, [sp, #28]
   8391a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   8391c:	1e1f      	subs	r7, r3, #0
   8391e:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83920:	9308      	str	r3, [sp, #32]
   83922:	bfb7      	itett	lt
   83924:	463b      	movlt	r3, r7
   83926:	2300      	movge	r3, #0
   83928:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   8392c:	232d      	movlt	r3, #45	; 0x2d
   8392e:	9310      	str	r3, [sp, #64]	; 0x40
   83930:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83932:	2b66      	cmp	r3, #102	; 0x66
   83934:	f000 8190 	beq.w	83c58 <_svfprintf_r+0x1288>
   83938:	2b46      	cmp	r3, #70	; 0x46
   8393a:	f000 80a4 	beq.w	83a86 <_svfprintf_r+0x10b6>
   8393e:	2002      	movs	r0, #2
   83940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83942:	a923      	add	r1, sp, #140	; 0x8c
   83944:	2b45      	cmp	r3, #69	; 0x45
   83946:	bf0a      	itet	eq
   83948:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   8394a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   8394c:	1c5d      	addeq	r5, r3, #1
   8394e:	e88d 0021 	stmia.w	sp, {r0, r5}
   83952:	9104      	str	r1, [sp, #16]
   83954:	a820      	add	r0, sp, #128	; 0x80
   83956:	a91f      	add	r1, sp, #124	; 0x7c
   83958:	463b      	mov	r3, r7
   8395a:	9003      	str	r0, [sp, #12]
   8395c:	9a08      	ldr	r2, [sp, #32]
   8395e:	9102      	str	r1, [sp, #8]
   83960:	980c      	ldr	r0, [sp, #48]	; 0x30
   83962:	f000 fb59 	bl	84018 <_dtoa_r>
   83966:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83968:	4606      	mov	r6, r0
   8396a:	2b67      	cmp	r3, #103	; 0x67
   8396c:	f040 81ba 	bne.w	83ce4 <_svfprintf_r+0x1314>
   83970:	f01b 0f01 	tst.w	fp, #1
   83974:	f000 8223 	beq.w	83dbe <_svfprintf_r+0x13ee>
   83978:	1974      	adds	r4, r6, r5
   8397a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8397c:	9808      	ldr	r0, [sp, #32]
   8397e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   83980:	4639      	mov	r1, r7
   83982:	f003 f93b 	bl	86bfc <__aeabi_dcmpeq>
   83986:	2800      	cmp	r0, #0
   83988:	f040 8124 	bne.w	83bd4 <_svfprintf_r+0x1204>
   8398c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8398e:	42a3      	cmp	r3, r4
   83990:	d206      	bcs.n	839a0 <_svfprintf_r+0xfd0>
   83992:	2130      	movs	r1, #48	; 0x30
   83994:	1c5a      	adds	r2, r3, #1
   83996:	9223      	str	r2, [sp, #140]	; 0x8c
   83998:	7019      	strb	r1, [r3, #0]
   8399a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8399c:	429c      	cmp	r4, r3
   8399e:	d8f9      	bhi.n	83994 <_svfprintf_r+0xfc4>
   839a0:	1b9b      	subs	r3, r3, r6
   839a2:	9313      	str	r3, [sp, #76]	; 0x4c
   839a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   839a6:	2b47      	cmp	r3, #71	; 0x47
   839a8:	f000 80a2 	beq.w	83af0 <_svfprintf_r+0x1120>
   839ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
   839ae:	2b65      	cmp	r3, #101	; 0x65
   839b0:	f340 81a7 	ble.w	83d02 <_svfprintf_r+0x1332>
   839b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   839b6:	2b66      	cmp	r3, #102	; 0x66
   839b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   839ba:	9312      	str	r3, [sp, #72]	; 0x48
   839bc:	f000 8171 	beq.w	83ca2 <_svfprintf_r+0x12d2>
   839c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   839c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
   839c4:	4619      	mov	r1, r3
   839c6:	4291      	cmp	r1, r2
   839c8:	f300 815d 	bgt.w	83c86 <_svfprintf_r+0x12b6>
   839cc:	f01b 0f01 	tst.w	fp, #1
   839d0:	f040 81f0 	bne.w	83db4 <_svfprintf_r+0x13e4>
   839d4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   839d8:	9308      	str	r3, [sp, #32]
   839da:	2367      	movs	r3, #103	; 0x67
   839dc:	920e      	str	r2, [sp, #56]	; 0x38
   839de:	9311      	str	r3, [sp, #68]	; 0x44
   839e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   839e2:	2b00      	cmp	r3, #0
   839e4:	d17d      	bne.n	83ae2 <_svfprintf_r+0x1112>
   839e6:	930a      	str	r3, [sp, #40]	; 0x28
   839e8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   839ec:	f7ff b914 	b.w	82c18 <_svfprintf_r+0x248>
   839f0:	f024 0407 	bic.w	r4, r4, #7
   839f4:	6823      	ldr	r3, [r4, #0]
   839f6:	9315      	str	r3, [sp, #84]	; 0x54
   839f8:	6863      	ldr	r3, [r4, #4]
   839fa:	9314      	str	r3, [sp, #80]	; 0x50
   839fc:	f104 0308 	add.w	r3, r4, #8
   83a00:	930f      	str	r3, [sp, #60]	; 0x3c
   83a02:	f7ff bb2f 	b.w	83064 <_svfprintf_r+0x694>
   83a06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83a08:	6813      	ldr	r3, [r2, #0]
   83a0a:	3204      	adds	r2, #4
   83a0c:	920f      	str	r2, [sp, #60]	; 0x3c
   83a0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83a10:	601a      	str	r2, [r3, #0]
   83a12:	f7ff b804 	b.w	82a1e <_svfprintf_r+0x4e>
   83a16:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83a18:	4daf      	ldr	r5, [pc, #700]	; (83cd8 <_svfprintf_r+0x1308>)
   83a1a:	f7ff b9ad 	b.w	82d78 <_svfprintf_r+0x3a8>
   83a1e:	aa25      	add	r2, sp, #148	; 0x94
   83a20:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a22:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a24:	f002 fbae 	bl	86184 <__ssprint_r>
   83a28:	2800      	cmp	r0, #0
   83a2a:	f47f a8ae 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83a2e:	46c8      	mov	r8, r9
   83a30:	e431      	b.n	83296 <_svfprintf_r+0x8c6>
   83a32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83a34:	4613      	mov	r3, r2
   83a36:	3304      	adds	r3, #4
   83a38:	930f      	str	r3, [sp, #60]	; 0x3c
   83a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83a3c:	6811      	ldr	r1, [r2, #0]
   83a3e:	17dd      	asrs	r5, r3, #31
   83a40:	461a      	mov	r2, r3
   83a42:	462b      	mov	r3, r5
   83a44:	e9c1 2300 	strd	r2, r3, [r1]
   83a48:	f7fe bfe9 	b.w	82a1e <_svfprintf_r+0x4e>
   83a4c:	aa25      	add	r2, sp, #148	; 0x94
   83a4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a50:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a52:	f002 fb97 	bl	86184 <__ssprint_r>
   83a56:	2800      	cmp	r0, #0
   83a58:	f47f a897 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83a5c:	46c8      	mov	r8, r9
   83a5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83a60:	e432      	b.n	832c8 <_svfprintf_r+0x8f8>
   83a62:	f108 0808 	add.w	r8, r8, #8
   83a66:	e52f      	b.n	834c8 <_svfprintf_r+0xaf8>
   83a68:	2140      	movs	r1, #64	; 0x40
   83a6a:	980c      	ldr	r0, [sp, #48]	; 0x30
   83a6c:	f001 fb58 	bl	85120 <_malloc_r>
   83a70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a72:	6010      	str	r0, [r2, #0]
   83a74:	6110      	str	r0, [r2, #16]
   83a76:	2800      	cmp	r0, #0
   83a78:	f000 8214 	beq.w	83ea4 <_svfprintf_r+0x14d4>
   83a7c:	2340      	movs	r3, #64	; 0x40
   83a7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83a80:	6153      	str	r3, [r2, #20]
   83a82:	f7fe bfbc 	b.w	829fe <_svfprintf_r+0x2e>
   83a86:	2003      	movs	r0, #3
   83a88:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83a8a:	a923      	add	r1, sp, #140	; 0x8c
   83a8c:	e88d 0011 	stmia.w	sp, {r0, r4}
   83a90:	9104      	str	r1, [sp, #16]
   83a92:	a820      	add	r0, sp, #128	; 0x80
   83a94:	a91f      	add	r1, sp, #124	; 0x7c
   83a96:	9003      	str	r0, [sp, #12]
   83a98:	9a08      	ldr	r2, [sp, #32]
   83a9a:	463b      	mov	r3, r7
   83a9c:	9102      	str	r1, [sp, #8]
   83a9e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83aa0:	f000 faba 	bl	84018 <_dtoa_r>
   83aa4:	4625      	mov	r5, r4
   83aa6:	4606      	mov	r6, r0
   83aa8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83aaa:	1974      	adds	r4, r6, r5
   83aac:	2b46      	cmp	r3, #70	; 0x46
   83aae:	f47f af64 	bne.w	8397a <_svfprintf_r+0xfaa>
   83ab2:	7833      	ldrb	r3, [r6, #0]
   83ab4:	2b30      	cmp	r3, #48	; 0x30
   83ab6:	f000 8187 	beq.w	83dc8 <_svfprintf_r+0x13f8>
   83aba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   83abc:	442c      	add	r4, r5
   83abe:	e75c      	b.n	8397a <_svfprintf_r+0xfaa>
   83ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ac2:	2b00      	cmp	r3, #0
   83ac4:	bf08      	it	eq
   83ac6:	2301      	moveq	r3, #1
   83ac8:	930a      	str	r3, [sp, #40]	; 0x28
   83aca:	e723      	b.n	83914 <_svfprintf_r+0xf44>
   83acc:	4630      	mov	r0, r6
   83ace:	950a      	str	r5, [sp, #40]	; 0x28
   83ad0:	f7fe ff50 	bl	82974 <strlen>
   83ad4:	940f      	str	r4, [sp, #60]	; 0x3c
   83ad6:	900e      	str	r0, [sp, #56]	; 0x38
   83ad8:	f8cd b01c 	str.w	fp, [sp, #28]
   83adc:	4603      	mov	r3, r0
   83ade:	f7ff b9e7 	b.w	82eb0 <_svfprintf_r+0x4e0>
   83ae2:	272d      	movs	r7, #45	; 0x2d
   83ae4:	2300      	movs	r3, #0
   83ae6:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   83aea:	930a      	str	r3, [sp, #40]	; 0x28
   83aec:	f7ff b895 	b.w	82c1a <_svfprintf_r+0x24a>
   83af0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83af2:	461a      	mov	r2, r3
   83af4:	9312      	str	r3, [sp, #72]	; 0x48
   83af6:	3303      	adds	r3, #3
   83af8:	db04      	blt.n	83b04 <_svfprintf_r+0x1134>
   83afa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83afc:	4619      	mov	r1, r3
   83afe:	4291      	cmp	r1, r2
   83b00:	f6bf af5e 	bge.w	839c0 <_svfprintf_r+0xff0>
   83b04:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83b06:	3b02      	subs	r3, #2
   83b08:	9311      	str	r3, [sp, #68]	; 0x44
   83b0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83b0c:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   83b10:	3b01      	subs	r3, #1
   83b12:	2b00      	cmp	r3, #0
   83b14:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   83b18:	bfb4      	ite	lt
   83b1a:	222d      	movlt	r2, #45	; 0x2d
   83b1c:	222b      	movge	r2, #43	; 0x2b
   83b1e:	931f      	str	r3, [sp, #124]	; 0x7c
   83b20:	bfb8      	it	lt
   83b22:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   83b24:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   83b28:	bfb8      	it	lt
   83b2a:	f1c3 0301 	rsblt	r3, r3, #1
   83b2e:	2b09      	cmp	r3, #9
   83b30:	f340 811f 	ble.w	83d72 <_svfprintf_r+0x13a2>
   83b34:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   83b38:	4601      	mov	r1, r0
   83b3a:	4c68      	ldr	r4, [pc, #416]	; (83cdc <_svfprintf_r+0x130c>)
   83b3c:	e000      	b.n	83b40 <_svfprintf_r+0x1170>
   83b3e:	4611      	mov	r1, r2
   83b40:	fb84 5203 	smull	r5, r2, r4, r3
   83b44:	17dd      	asrs	r5, r3, #31
   83b46:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   83b4a:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   83b4e:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   83b52:	3230      	adds	r2, #48	; 0x30
   83b54:	2d09      	cmp	r5, #9
   83b56:	f801 2c01 	strb.w	r2, [r1, #-1]
   83b5a:	462b      	mov	r3, r5
   83b5c:	f101 32ff 	add.w	r2, r1, #4294967295
   83b60:	dced      	bgt.n	83b3e <_svfprintf_r+0x116e>
   83b62:	3330      	adds	r3, #48	; 0x30
   83b64:	3902      	subs	r1, #2
   83b66:	b2dc      	uxtb	r4, r3
   83b68:	4288      	cmp	r0, r1
   83b6a:	f802 4c01 	strb.w	r4, [r2, #-1]
   83b6e:	f240 8192 	bls.w	83e96 <_svfprintf_r+0x14c6>
   83b72:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   83b76:	4613      	mov	r3, r2
   83b78:	e001      	b.n	83b7e <_svfprintf_r+0x11ae>
   83b7a:	f813 4b01 	ldrb.w	r4, [r3], #1
   83b7e:	4283      	cmp	r3, r0
   83b80:	f801 4b01 	strb.w	r4, [r1], #1
   83b84:	d1f9      	bne.n	83b7a <_svfprintf_r+0x11aa>
   83b86:	3301      	adds	r3, #1
   83b88:	1a9b      	subs	r3, r3, r2
   83b8a:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   83b8e:	4413      	add	r3, r2
   83b90:	aa21      	add	r2, sp, #132	; 0x84
   83b92:	1a9b      	subs	r3, r3, r2
   83b94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   83b96:	931b      	str	r3, [sp, #108]	; 0x6c
   83b98:	2a01      	cmp	r2, #1
   83b9a:	4413      	add	r3, r2
   83b9c:	930e      	str	r3, [sp, #56]	; 0x38
   83b9e:	f340 8148 	ble.w	83e32 <_svfprintf_r+0x1462>
   83ba2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83ba4:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83ba6:	4413      	add	r3, r2
   83ba8:	930e      	str	r3, [sp, #56]	; 0x38
   83baa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83bae:	9308      	str	r3, [sp, #32]
   83bb0:	2300      	movs	r3, #0
   83bb2:	9312      	str	r3, [sp, #72]	; 0x48
   83bb4:	e714      	b.n	839e0 <_svfprintf_r+0x1010>
   83bb6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bb8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83bba:	f7ff b876 	b.w	82caa <_svfprintf_r+0x2da>
   83bbe:	aa25      	add	r2, sp, #148	; 0x94
   83bc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bc2:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bc4:	f002 fade 	bl	86184 <__ssprint_r>
   83bc8:	2800      	cmp	r0, #0
   83bca:	f47e afde 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83bce:	46c8      	mov	r8, r9
   83bd0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bd2:	e4fb      	b.n	835cc <_svfprintf_r+0xbfc>
   83bd4:	4623      	mov	r3, r4
   83bd6:	e6e3      	b.n	839a0 <_svfprintf_r+0xfd0>
   83bd8:	aa25      	add	r2, sp, #148	; 0x94
   83bda:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bdc:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bde:	f002 fad1 	bl	86184 <__ssprint_r>
   83be2:	2800      	cmp	r0, #0
   83be4:	f47e afd1 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83be8:	46c8      	mov	r8, r9
   83bea:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83bec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83bee:	e5d3      	b.n	83798 <_svfprintf_r+0xdc8>
   83bf0:	aa25      	add	r2, sp, #148	; 0x94
   83bf2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83bf4:	980c      	ldr	r0, [sp, #48]	; 0x30
   83bf6:	f002 fac5 	bl	86184 <__ssprint_r>
   83bfa:	2800      	cmp	r0, #0
   83bfc:	f47e afc5 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83c00:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   83c02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83c04:	46c8      	mov	r8, r9
   83c06:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c08:	1a9a      	subs	r2, r3, r2
   83c0a:	e5dd      	b.n	837c8 <_svfprintf_r+0xdf8>
   83c0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83c0e:	f7ff b8fe 	b.w	82e0e <_svfprintf_r+0x43e>
   83c12:	aa25      	add	r2, sp, #148	; 0x94
   83c14:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83c16:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c18:	f002 fab4 	bl	86184 <__ssprint_r>
   83c1c:	2800      	cmp	r0, #0
   83c1e:	f47e afb4 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83c22:	46c8      	mov	r8, r9
   83c24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83c26:	e5b0      	b.n	8378a <_svfprintf_r+0xdba>
   83c28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83c2a:	4637      	mov	r7, r6
   83c2c:	2b06      	cmp	r3, #6
   83c2e:	bf28      	it	cs
   83c30:	2306      	movcs	r3, #6
   83c32:	960a      	str	r6, [sp, #40]	; 0x28
   83c34:	9612      	str	r6, [sp, #72]	; 0x48
   83c36:	9308      	str	r3, [sp, #32]
   83c38:	940f      	str	r4, [sp, #60]	; 0x3c
   83c3a:	f8cd b01c 	str.w	fp, [sp, #28]
   83c3e:	930e      	str	r3, [sp, #56]	; 0x38
   83c40:	4e27      	ldr	r6, [pc, #156]	; (83ce0 <_svfprintf_r+0x1310>)
   83c42:	f7fe bfe9 	b.w	82c18 <_svfprintf_r+0x248>
   83c46:	2306      	movs	r3, #6
   83c48:	930a      	str	r3, [sp, #40]	; 0x28
   83c4a:	e663      	b.n	83914 <_svfprintf_r+0xf44>
   83c4c:	232d      	movs	r3, #45	; 0x2d
   83c4e:	461f      	mov	r7, r3
   83c50:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83c54:	f7ff ba28 	b.w	830a8 <_svfprintf_r+0x6d8>
   83c58:	2003      	movs	r0, #3
   83c5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   83c5c:	a923      	add	r1, sp, #140	; 0x8c
   83c5e:	e88d 0011 	stmia.w	sp, {r0, r4}
   83c62:	9104      	str	r1, [sp, #16]
   83c64:	a820      	add	r0, sp, #128	; 0x80
   83c66:	a91f      	add	r1, sp, #124	; 0x7c
   83c68:	9003      	str	r0, [sp, #12]
   83c6a:	9a08      	ldr	r2, [sp, #32]
   83c6c:	463b      	mov	r3, r7
   83c6e:	9102      	str	r1, [sp, #8]
   83c70:	980c      	ldr	r0, [sp, #48]	; 0x30
   83c72:	f000 f9d1 	bl	84018 <_dtoa_r>
   83c76:	4625      	mov	r5, r4
   83c78:	4606      	mov	r6, r0
   83c7a:	1904      	adds	r4, r0, r4
   83c7c:	e719      	b.n	83ab2 <_svfprintf_r+0x10e2>
   83c7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83c80:	4d15      	ldr	r5, [pc, #84]	; (83cd8 <_svfprintf_r+0x1308>)
   83c82:	f7ff bb7e 	b.w	83382 <_svfprintf_r+0x9b2>
   83c86:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83c88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   83c8a:	4413      	add	r3, r2
   83c8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83c8e:	930e      	str	r3, [sp, #56]	; 0x38
   83c90:	2a00      	cmp	r2, #0
   83c92:	f340 80c7 	ble.w	83e24 <_svfprintf_r+0x1454>
   83c96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83c9a:	9308      	str	r3, [sp, #32]
   83c9c:	2367      	movs	r3, #103	; 0x67
   83c9e:	9311      	str	r3, [sp, #68]	; 0x44
   83ca0:	e69e      	b.n	839e0 <_svfprintf_r+0x1010>
   83ca2:	2b00      	cmp	r3, #0
   83ca4:	f340 80e1 	ble.w	83e6a <_svfprintf_r+0x149a>
   83ca8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83caa:	2a00      	cmp	r2, #0
   83cac:	f040 80b0 	bne.w	83e10 <_svfprintf_r+0x1440>
   83cb0:	f01b 0f01 	tst.w	fp, #1
   83cb4:	f040 80ac 	bne.w	83e10 <_svfprintf_r+0x1440>
   83cb8:	9308      	str	r3, [sp, #32]
   83cba:	930e      	str	r3, [sp, #56]	; 0x38
   83cbc:	e690      	b.n	839e0 <_svfprintf_r+0x1010>
   83cbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83cc0:	940f      	str	r4, [sp, #60]	; 0x3c
   83cc2:	9308      	str	r3, [sp, #32]
   83cc4:	930e      	str	r3, [sp, #56]	; 0x38
   83cc6:	900a      	str	r0, [sp, #40]	; 0x28
   83cc8:	f8cd b01c 	str.w	fp, [sp, #28]
   83ccc:	9012      	str	r0, [sp, #72]	; 0x48
   83cce:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83cd2:	f7fe bfa1 	b.w	82c18 <_svfprintf_r+0x248>
   83cd6:	bf00      	nop
   83cd8:	00087070 	.word	0x00087070
   83cdc:	66666667 	.word	0x66666667
   83ce0:	00087054 	.word	0x00087054
   83ce4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   83ce6:	2b47      	cmp	r3, #71	; 0x47
   83ce8:	f47f ae46 	bne.w	83978 <_svfprintf_r+0xfa8>
   83cec:	f01b 0f01 	tst.w	fp, #1
   83cf0:	f47f aeda 	bne.w	83aa8 <_svfprintf_r+0x10d8>
   83cf4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83cf6:	1b9b      	subs	r3, r3, r6
   83cf8:	9313      	str	r3, [sp, #76]	; 0x4c
   83cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83cfc:	2b47      	cmp	r3, #71	; 0x47
   83cfe:	f43f aef7 	beq.w	83af0 <_svfprintf_r+0x1120>
   83d02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   83d04:	9312      	str	r3, [sp, #72]	; 0x48
   83d06:	e700      	b.n	83b0a <_svfprintf_r+0x113a>
   83d08:	2000      	movs	r0, #0
   83d0a:	900a      	str	r0, [sp, #40]	; 0x28
   83d0c:	f7fe bebc 	b.w	82a88 <_svfprintf_r+0xb8>
   83d10:	424f      	negs	r7, r1
   83d12:	3110      	adds	r1, #16
   83d14:	da35      	bge.n	83d82 <_svfprintf_r+0x13b2>
   83d16:	2410      	movs	r4, #16
   83d18:	4d6a      	ldr	r5, [pc, #424]	; (83ec4 <_svfprintf_r+0x14f4>)
   83d1a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   83d1e:	e004      	b.n	83d2a <_svfprintf_r+0x135a>
   83d20:	f108 0808 	add.w	r8, r8, #8
   83d24:	3f10      	subs	r7, #16
   83d26:	2f10      	cmp	r7, #16
   83d28:	dd2c      	ble.n	83d84 <_svfprintf_r+0x13b4>
   83d2a:	3301      	adds	r3, #1
   83d2c:	3210      	adds	r2, #16
   83d2e:	2b07      	cmp	r3, #7
   83d30:	9227      	str	r2, [sp, #156]	; 0x9c
   83d32:	9326      	str	r3, [sp, #152]	; 0x98
   83d34:	f8c8 5000 	str.w	r5, [r8]
   83d38:	f8c8 4004 	str.w	r4, [r8, #4]
   83d3c:	ddf0      	ble.n	83d20 <_svfprintf_r+0x1350>
   83d3e:	aa25      	add	r2, sp, #148	; 0x94
   83d40:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d42:	4658      	mov	r0, fp
   83d44:	f002 fa1e 	bl	86184 <__ssprint_r>
   83d48:	2800      	cmp	r0, #0
   83d4a:	f47e af1e 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83d4e:	46c8      	mov	r8, r9
   83d50:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83d52:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d54:	e7e6      	b.n	83d24 <_svfprintf_r+0x1354>
   83d56:	aa25      	add	r2, sp, #148	; 0x94
   83d58:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d5a:	980c      	ldr	r0, [sp, #48]	; 0x30
   83d5c:	f002 fa12 	bl	86184 <__ssprint_r>
   83d60:	2800      	cmp	r0, #0
   83d62:	f47e af12 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83d66:	46c8      	mov	r8, r9
   83d68:	991f      	ldr	r1, [sp, #124]	; 0x7c
   83d6a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83d6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d6e:	f7ff bbc3 	b.w	834f8 <_svfprintf_r+0xb28>
   83d72:	2230      	movs	r2, #48	; 0x30
   83d74:	4413      	add	r3, r2
   83d76:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   83d7a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   83d7e:	ab22      	add	r3, sp, #136	; 0x88
   83d80:	e706      	b.n	83b90 <_svfprintf_r+0x11c0>
   83d82:	4d50      	ldr	r5, [pc, #320]	; (83ec4 <_svfprintf_r+0x14f4>)
   83d84:	3301      	adds	r3, #1
   83d86:	443a      	add	r2, r7
   83d88:	2b07      	cmp	r3, #7
   83d8a:	e888 00a0 	stmia.w	r8, {r5, r7}
   83d8e:	9227      	str	r2, [sp, #156]	; 0x9c
   83d90:	9326      	str	r3, [sp, #152]	; 0x98
   83d92:	f108 0808 	add.w	r8, r8, #8
   83d96:	f77f abb2 	ble.w	834fe <_svfprintf_r+0xb2e>
   83d9a:	aa25      	add	r2, sp, #148	; 0x94
   83d9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83d9e:	980c      	ldr	r0, [sp, #48]	; 0x30
   83da0:	f002 f9f0 	bl	86184 <__ssprint_r>
   83da4:	2800      	cmp	r0, #0
   83da6:	f47e aef0 	bne.w	82b8a <_svfprintf_r+0x1ba>
   83daa:	46c8      	mov	r8, r9
   83dac:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83dae:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83db0:	f7ff bba5 	b.w	834fe <_svfprintf_r+0xb2e>
   83db4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83db6:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83db8:	4413      	add	r3, r2
   83dba:	930e      	str	r3, [sp, #56]	; 0x38
   83dbc:	e76b      	b.n	83c96 <_svfprintf_r+0x12c6>
   83dbe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   83dc0:	e5ee      	b.n	839a0 <_svfprintf_r+0xfd0>
   83dc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83dc4:	4d3f      	ldr	r5, [pc, #252]	; (83ec4 <_svfprintf_r+0x14f4>)
   83dc6:	e4bb      	b.n	83740 <_svfprintf_r+0xd70>
   83dc8:	9a16      	ldr	r2, [sp, #88]	; 0x58
   83dca:	9808      	ldr	r0, [sp, #32]
   83dcc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   83dce:	4639      	mov	r1, r7
   83dd0:	f002 ff14 	bl	86bfc <__aeabi_dcmpeq>
   83dd4:	2800      	cmp	r0, #0
   83dd6:	f47f ae70 	bne.w	83aba <_svfprintf_r+0x10ea>
   83dda:	f1c5 0501 	rsb	r5, r5, #1
   83dde:	951f      	str	r5, [sp, #124]	; 0x7c
   83de0:	442c      	add	r4, r5
   83de2:	e5ca      	b.n	8397a <_svfprintf_r+0xfaa>
   83de4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   83de6:	4e38      	ldr	r6, [pc, #224]	; (83ec8 <_svfprintf_r+0x14f8>)
   83de8:	2b00      	cmp	r3, #0
   83dea:	bfbe      	ittt	lt
   83dec:	232d      	movlt	r3, #45	; 0x2d
   83dee:	461f      	movlt	r7, r3
   83df0:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   83df4:	f04f 0303 	mov.w	r3, #3
   83df8:	461a      	mov	r2, r3
   83dfa:	9308      	str	r3, [sp, #32]
   83dfc:	f04f 0300 	mov.w	r3, #0
   83e00:	bfa8      	it	ge
   83e02:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   83e06:	4619      	mov	r1, r3
   83e08:	930a      	str	r3, [sp, #40]	; 0x28
   83e0a:	4b30      	ldr	r3, [pc, #192]	; (83ecc <_svfprintf_r+0x14fc>)
   83e0c:	f7ff b954 	b.w	830b8 <_svfprintf_r+0x6e8>
   83e10:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e12:	9a19      	ldr	r2, [sp, #100]	; 0x64
   83e14:	4413      	add	r3, r2
   83e16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83e18:	441a      	add	r2, r3
   83e1a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   83e1e:	920e      	str	r2, [sp, #56]	; 0x38
   83e20:	9308      	str	r3, [sp, #32]
   83e22:	e5dd      	b.n	839e0 <_svfprintf_r+0x1010>
   83e24:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83e26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83e28:	f1c3 0301 	rsb	r3, r3, #1
   83e2c:	441a      	add	r2, r3
   83e2e:	4613      	mov	r3, r2
   83e30:	e7c3      	b.n	83dba <_svfprintf_r+0x13ea>
   83e32:	f01b 0301 	ands.w	r3, fp, #1
   83e36:	9312      	str	r3, [sp, #72]	; 0x48
   83e38:	f47f aeb3 	bne.w	83ba2 <_svfprintf_r+0x11d2>
   83e3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83e3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83e42:	9308      	str	r3, [sp, #32]
   83e44:	e5cc      	b.n	839e0 <_svfprintf_r+0x1010>
   83e46:	4d1f      	ldr	r5, [pc, #124]	; (83ec4 <_svfprintf_r+0x14f4>)
   83e48:	e43c      	b.n	836c4 <_svfprintf_r+0xcf4>
   83e4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83e4c:	4d1d      	ldr	r5, [pc, #116]	; (83ec4 <_svfprintf_r+0x14f4>)
   83e4e:	e491      	b.n	83774 <_svfprintf_r+0xda4>
   83e50:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   83e52:	f89a 3001 	ldrb.w	r3, [sl, #1]
   83e56:	6828      	ldr	r0, [r5, #0]
   83e58:	46a2      	mov	sl, r4
   83e5a:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   83e5e:	900a      	str	r0, [sp, #40]	; 0x28
   83e60:	4628      	mov	r0, r5
   83e62:	3004      	adds	r0, #4
   83e64:	900f      	str	r0, [sp, #60]	; 0x3c
   83e66:	f7fe be0d 	b.w	82a84 <_svfprintf_r+0xb4>
   83e6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83e6c:	b913      	cbnz	r3, 83e74 <_svfprintf_r+0x14a4>
   83e6e:	f01b 0f01 	tst.w	fp, #1
   83e72:	d002      	beq.n	83e7a <_svfprintf_r+0x14aa>
   83e74:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83e76:	3301      	adds	r3, #1
   83e78:	e7cd      	b.n	83e16 <_svfprintf_r+0x1446>
   83e7a:	2301      	movs	r3, #1
   83e7c:	e71c      	b.n	83cb8 <_svfprintf_r+0x12e8>
   83e7e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83e82:	f7ff b980 	b.w	83186 <_svfprintf_r+0x7b6>
   83e86:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83e8a:	f7ff b93a 	b.w	83102 <_svfprintf_r+0x732>
   83e8e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83e92:	f7ff b84f 	b.w	82f34 <_svfprintf_r+0x564>
   83e96:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   83e9a:	e679      	b.n	83b90 <_svfprintf_r+0x11c0>
   83e9c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83ea0:	f7ff b9b2 	b.w	83208 <_svfprintf_r+0x838>
   83ea4:	f04f 32ff 	mov.w	r2, #4294967295
   83ea8:	230c      	movs	r3, #12
   83eaa:	9209      	str	r2, [sp, #36]	; 0x24
   83eac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   83eae:	6013      	str	r3, [r2, #0]
   83eb0:	f7fe be74 	b.w	82b9c <_svfprintf_r+0x1cc>
   83eb4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83eb8:	f7ff b8c4 	b.w	83044 <_svfprintf_r+0x674>
   83ebc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   83ec0:	f7ff b878 	b.w	82fb4 <_svfprintf_r+0x5e4>
   83ec4:	00087070 	.word	0x00087070
   83ec8:	00087028 	.word	0x00087028
   83ecc:	00087024 	.word	0x00087024

00083ed0 <register_fini>:
   83ed0:	4b02      	ldr	r3, [pc, #8]	; (83edc <register_fini+0xc>)
   83ed2:	b113      	cbz	r3, 83eda <register_fini+0xa>
   83ed4:	4802      	ldr	r0, [pc, #8]	; (83ee0 <register_fini+0x10>)
   83ed6:	f000 b805 	b.w	83ee4 <atexit>
   83eda:	4770      	bx	lr
   83edc:	00000000 	.word	0x00000000
   83ee0:	00084e5d 	.word	0x00084e5d

00083ee4 <atexit>:
   83ee4:	2300      	movs	r3, #0
   83ee6:	4601      	mov	r1, r0
   83ee8:	461a      	mov	r2, r3
   83eea:	4618      	mov	r0, r3
   83eec:	f002 b9d4 	b.w	86298 <__register_exitproc>

00083ef0 <quorem>:
   83ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83ef4:	6903      	ldr	r3, [r0, #16]
   83ef6:	690f      	ldr	r7, [r1, #16]
   83ef8:	b083      	sub	sp, #12
   83efa:	429f      	cmp	r7, r3
   83efc:	f300 8088 	bgt.w	84010 <quorem+0x120>
   83f00:	3f01      	subs	r7, #1
   83f02:	f101 0614 	add.w	r6, r1, #20
   83f06:	f100 0a14 	add.w	sl, r0, #20
   83f0a:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   83f0e:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   83f12:	3301      	adds	r3, #1
   83f14:	fbb2 f8f3 	udiv	r8, r2, r3
   83f18:	00bb      	lsls	r3, r7, #2
   83f1a:	9300      	str	r3, [sp, #0]
   83f1c:	eb06 0903 	add.w	r9, r6, r3
   83f20:	4453      	add	r3, sl
   83f22:	9301      	str	r3, [sp, #4]
   83f24:	f1b8 0f00 	cmp.w	r8, #0
   83f28:	d03b      	beq.n	83fa2 <quorem+0xb2>
   83f2a:	2300      	movs	r3, #0
   83f2c:	46b4      	mov	ip, r6
   83f2e:	461c      	mov	r4, r3
   83f30:	46d6      	mov	lr, sl
   83f32:	f85c 2b04 	ldr.w	r2, [ip], #4
   83f36:	f8de 5000 	ldr.w	r5, [lr]
   83f3a:	fa1f fb82 	uxth.w	fp, r2
   83f3e:	fb08 330b 	mla	r3, r8, fp, r3
   83f42:	0c12      	lsrs	r2, r2, #16
   83f44:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   83f48:	fb08 bb02 	mla	fp, r8, r2, fp
   83f4c:	b29a      	uxth	r2, r3
   83f4e:	1aa2      	subs	r2, r4, r2
   83f50:	b2ab      	uxth	r3, r5
   83f52:	fa1f f48b 	uxth.w	r4, fp
   83f56:	441a      	add	r2, r3
   83f58:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   83f5c:	eb04 4422 	add.w	r4, r4, r2, asr #16
   83f60:	b292      	uxth	r2, r2
   83f62:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   83f66:	45e1      	cmp	r9, ip
   83f68:	f84e 2b04 	str.w	r2, [lr], #4
   83f6c:	ea4f 4424 	mov.w	r4, r4, asr #16
   83f70:	ea4f 431b 	mov.w	r3, fp, lsr #16
   83f74:	d2dd      	bcs.n	83f32 <quorem+0x42>
   83f76:	9b00      	ldr	r3, [sp, #0]
   83f78:	f85a 3003 	ldr.w	r3, [sl, r3]
   83f7c:	b98b      	cbnz	r3, 83fa2 <quorem+0xb2>
   83f7e:	9c01      	ldr	r4, [sp, #4]
   83f80:	1f23      	subs	r3, r4, #4
   83f82:	459a      	cmp	sl, r3
   83f84:	d20c      	bcs.n	83fa0 <quorem+0xb0>
   83f86:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83f8a:	b94b      	cbnz	r3, 83fa0 <quorem+0xb0>
   83f8c:	f1a4 0308 	sub.w	r3, r4, #8
   83f90:	e002      	b.n	83f98 <quorem+0xa8>
   83f92:	681a      	ldr	r2, [r3, #0]
   83f94:	3b04      	subs	r3, #4
   83f96:	b91a      	cbnz	r2, 83fa0 <quorem+0xb0>
   83f98:	459a      	cmp	sl, r3
   83f9a:	f107 37ff 	add.w	r7, r7, #4294967295
   83f9e:	d3f8      	bcc.n	83f92 <quorem+0xa2>
   83fa0:	6107      	str	r7, [r0, #16]
   83fa2:	4604      	mov	r4, r0
   83fa4:	f001 fe28 	bl	85bf8 <__mcmp>
   83fa8:	2800      	cmp	r0, #0
   83faa:	db2d      	blt.n	84008 <quorem+0x118>
   83fac:	4655      	mov	r5, sl
   83fae:	2300      	movs	r3, #0
   83fb0:	f108 0801 	add.w	r8, r8, #1
   83fb4:	f856 1b04 	ldr.w	r1, [r6], #4
   83fb8:	6828      	ldr	r0, [r5, #0]
   83fba:	b28a      	uxth	r2, r1
   83fbc:	1a9a      	subs	r2, r3, r2
   83fbe:	0c0b      	lsrs	r3, r1, #16
   83fc0:	b281      	uxth	r1, r0
   83fc2:	440a      	add	r2, r1
   83fc4:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   83fc8:	eb03 4322 	add.w	r3, r3, r2, asr #16
   83fcc:	b292      	uxth	r2, r2
   83fce:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   83fd2:	45b1      	cmp	r9, r6
   83fd4:	f845 2b04 	str.w	r2, [r5], #4
   83fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
   83fdc:	d2ea      	bcs.n	83fb4 <quorem+0xc4>
   83fde:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   83fe2:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   83fe6:	b97a      	cbnz	r2, 84008 <quorem+0x118>
   83fe8:	1f1a      	subs	r2, r3, #4
   83fea:	4592      	cmp	sl, r2
   83fec:	d20b      	bcs.n	84006 <quorem+0x116>
   83fee:	f853 2c04 	ldr.w	r2, [r3, #-4]
   83ff2:	b942      	cbnz	r2, 84006 <quorem+0x116>
   83ff4:	3b08      	subs	r3, #8
   83ff6:	e002      	b.n	83ffe <quorem+0x10e>
   83ff8:	681a      	ldr	r2, [r3, #0]
   83ffa:	3b04      	subs	r3, #4
   83ffc:	b91a      	cbnz	r2, 84006 <quorem+0x116>
   83ffe:	459a      	cmp	sl, r3
   84000:	f107 37ff 	add.w	r7, r7, #4294967295
   84004:	d3f8      	bcc.n	83ff8 <quorem+0x108>
   84006:	6127      	str	r7, [r4, #16]
   84008:	4640      	mov	r0, r8
   8400a:	b003      	add	sp, #12
   8400c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84010:	2000      	movs	r0, #0
   84012:	b003      	add	sp, #12
   84014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084018 <_dtoa_r>:
   84018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8401c:	6c05      	ldr	r5, [r0, #64]	; 0x40
   8401e:	b09b      	sub	sp, #108	; 0x6c
   84020:	4604      	mov	r4, r0
   84022:	4692      	mov	sl, r2
   84024:	469b      	mov	fp, r3
   84026:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   84028:	b14d      	cbz	r5, 8403e <_dtoa_r+0x26>
   8402a:	2301      	movs	r3, #1
   8402c:	6c42      	ldr	r2, [r0, #68]	; 0x44
   8402e:	4629      	mov	r1, r5
   84030:	4093      	lsls	r3, r2
   84032:	60ab      	str	r3, [r5, #8]
   84034:	606a      	str	r2, [r5, #4]
   84036:	f001 fc07 	bl	85848 <_Bfree>
   8403a:	2300      	movs	r3, #0
   8403c:	6423      	str	r3, [r4, #64]	; 0x40
   8403e:	f1bb 0f00 	cmp.w	fp, #0
   84042:	465d      	mov	r5, fp
   84044:	db35      	blt.n	840b2 <_dtoa_r+0x9a>
   84046:	2300      	movs	r3, #0
   84048:	6033      	str	r3, [r6, #0]
   8404a:	4b9d      	ldr	r3, [pc, #628]	; (842c0 <_dtoa_r+0x2a8>)
   8404c:	43ab      	bics	r3, r5
   8404e:	d015      	beq.n	8407c <_dtoa_r+0x64>
   84050:	2200      	movs	r2, #0
   84052:	2300      	movs	r3, #0
   84054:	4650      	mov	r0, sl
   84056:	4659      	mov	r1, fp
   84058:	f002 fdd0 	bl	86bfc <__aeabi_dcmpeq>
   8405c:	4680      	mov	r8, r0
   8405e:	2800      	cmp	r0, #0
   84060:	d02d      	beq.n	840be <_dtoa_r+0xa6>
   84062:	2301      	movs	r3, #1
   84064:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84066:	6013      	str	r3, [r2, #0]
   84068:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8406a:	2b00      	cmp	r3, #0
   8406c:	f000 80bd 	beq.w	841ea <_dtoa_r+0x1d2>
   84070:	4894      	ldr	r0, [pc, #592]	; (842c4 <_dtoa_r+0x2ac>)
   84072:	6018      	str	r0, [r3, #0]
   84074:	3801      	subs	r0, #1
   84076:	b01b      	add	sp, #108	; 0x6c
   84078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8407c:	f242 730f 	movw	r3, #9999	; 0x270f
   84080:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84082:	6013      	str	r3, [r2, #0]
   84084:	f1ba 0f00 	cmp.w	sl, #0
   84088:	d10d      	bne.n	840a6 <_dtoa_r+0x8e>
   8408a:	f3c5 0513 	ubfx	r5, r5, #0, #20
   8408e:	b955      	cbnz	r5, 840a6 <_dtoa_r+0x8e>
   84090:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   84092:	488d      	ldr	r0, [pc, #564]	; (842c8 <_dtoa_r+0x2b0>)
   84094:	2b00      	cmp	r3, #0
   84096:	d0ee      	beq.n	84076 <_dtoa_r+0x5e>
   84098:	f100 0308 	add.w	r3, r0, #8
   8409c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   8409e:	6013      	str	r3, [r2, #0]
   840a0:	b01b      	add	sp, #108	; 0x6c
   840a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   840a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   840a8:	4888      	ldr	r0, [pc, #544]	; (842cc <_dtoa_r+0x2b4>)
   840aa:	2b00      	cmp	r3, #0
   840ac:	d0e3      	beq.n	84076 <_dtoa_r+0x5e>
   840ae:	1cc3      	adds	r3, r0, #3
   840b0:	e7f4      	b.n	8409c <_dtoa_r+0x84>
   840b2:	2301      	movs	r3, #1
   840b4:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   840b8:	6033      	str	r3, [r6, #0]
   840ba:	46ab      	mov	fp, r5
   840bc:	e7c5      	b.n	8404a <_dtoa_r+0x32>
   840be:	aa18      	add	r2, sp, #96	; 0x60
   840c0:	ab19      	add	r3, sp, #100	; 0x64
   840c2:	9201      	str	r2, [sp, #4]
   840c4:	9300      	str	r3, [sp, #0]
   840c6:	4652      	mov	r2, sl
   840c8:	465b      	mov	r3, fp
   840ca:	4620      	mov	r0, r4
   840cc:	f001 fe3e 	bl	85d4c <__d2b>
   840d0:	0d2b      	lsrs	r3, r5, #20
   840d2:	4681      	mov	r9, r0
   840d4:	d071      	beq.n	841ba <_dtoa_r+0x1a2>
   840d6:	4650      	mov	r0, sl
   840d8:	f3cb 0213 	ubfx	r2, fp, #0, #20
   840dc:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   840e0:	9f18      	ldr	r7, [sp, #96]	; 0x60
   840e2:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   840e6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   840ea:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   840ee:	2200      	movs	r2, #0
   840f0:	4b77      	ldr	r3, [pc, #476]	; (842d0 <_dtoa_r+0x2b8>)
   840f2:	f002 f967 	bl	863c4 <__aeabi_dsub>
   840f6:	a36c      	add	r3, pc, #432	; (adr r3, 842a8 <_dtoa_r+0x290>)
   840f8:	e9d3 2300 	ldrd	r2, r3, [r3]
   840fc:	f002 fb16 	bl	8672c <__aeabi_dmul>
   84100:	a36b      	add	r3, pc, #428	; (adr r3, 842b0 <_dtoa_r+0x298>)
   84102:	e9d3 2300 	ldrd	r2, r3, [r3]
   84106:	f002 f95f 	bl	863c8 <__adddf3>
   8410a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8410e:	4630      	mov	r0, r6
   84110:	f002 faa6 	bl	86660 <__aeabi_i2d>
   84114:	a368      	add	r3, pc, #416	; (adr r3, 842b8 <_dtoa_r+0x2a0>)
   84116:	e9d3 2300 	ldrd	r2, r3, [r3]
   8411a:	f002 fb07 	bl	8672c <__aeabi_dmul>
   8411e:	4602      	mov	r2, r0
   84120:	460b      	mov	r3, r1
   84122:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   84126:	f002 f94f 	bl	863c8 <__adddf3>
   8412a:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8412e:	f002 fdad 	bl	86c8c <__aeabi_d2iz>
   84132:	2200      	movs	r2, #0
   84134:	9002      	str	r0, [sp, #8]
   84136:	2300      	movs	r3, #0
   84138:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   8413c:	f002 fd68 	bl	86c10 <__aeabi_dcmplt>
   84140:	2800      	cmp	r0, #0
   84142:	f040 816d 	bne.w	84420 <_dtoa_r+0x408>
   84146:	9d02      	ldr	r5, [sp, #8]
   84148:	2d16      	cmp	r5, #22
   8414a:	f200 8157 	bhi.w	843fc <_dtoa_r+0x3e4>
   8414e:	4961      	ldr	r1, [pc, #388]	; (842d4 <_dtoa_r+0x2bc>)
   84150:	4652      	mov	r2, sl
   84152:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   84156:	465b      	mov	r3, fp
   84158:	e9d1 0100 	ldrd	r0, r1, [r1]
   8415c:	f002 fd76 	bl	86c4c <__aeabi_dcmpgt>
   84160:	2800      	cmp	r0, #0
   84162:	f000 81be 	beq.w	844e2 <_dtoa_r+0x4ca>
   84166:	1e6b      	subs	r3, r5, #1
   84168:	9302      	str	r3, [sp, #8]
   8416a:	2300      	movs	r3, #0
   8416c:	930e      	str	r3, [sp, #56]	; 0x38
   8416e:	1bbf      	subs	r7, r7, r6
   84170:	1e7b      	subs	r3, r7, #1
   84172:	9308      	str	r3, [sp, #32]
   84174:	f100 814e 	bmi.w	84414 <_dtoa_r+0x3fc>
   84178:	2300      	movs	r3, #0
   8417a:	930a      	str	r3, [sp, #40]	; 0x28
   8417c:	9b02      	ldr	r3, [sp, #8]
   8417e:	2b00      	cmp	r3, #0
   84180:	f2c0 813f 	blt.w	84402 <_dtoa_r+0x3ea>
   84184:	9a08      	ldr	r2, [sp, #32]
   84186:	930d      	str	r3, [sp, #52]	; 0x34
   84188:	4611      	mov	r1, r2
   8418a:	4419      	add	r1, r3
   8418c:	2300      	movs	r3, #0
   8418e:	9108      	str	r1, [sp, #32]
   84190:	930c      	str	r3, [sp, #48]	; 0x30
   84192:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84194:	2b09      	cmp	r3, #9
   84196:	d82a      	bhi.n	841ee <_dtoa_r+0x1d6>
   84198:	2b05      	cmp	r3, #5
   8419a:	f340 8658 	ble.w	84e4e <_dtoa_r+0xe36>
   8419e:	2500      	movs	r5, #0
   841a0:	3b04      	subs	r3, #4
   841a2:	9324      	str	r3, [sp, #144]	; 0x90
   841a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   841a6:	3b02      	subs	r3, #2
   841a8:	2b03      	cmp	r3, #3
   841aa:	f200 863f 	bhi.w	84e2c <_dtoa_r+0xe14>
   841ae:	e8df f013 	tbh	[pc, r3, lsl #1]
   841b2:	03ce      	.short	0x03ce
   841b4:	03d902c3 	.word	0x03d902c3
   841b8:	045b      	.short	0x045b
   841ba:	9f18      	ldr	r7, [sp, #96]	; 0x60
   841bc:	9e19      	ldr	r6, [sp, #100]	; 0x64
   841be:	443e      	add	r6, r7
   841c0:	f206 4332 	addw	r3, r6, #1074	; 0x432
   841c4:	2b20      	cmp	r3, #32
   841c6:	f340 8187 	ble.w	844d8 <_dtoa_r+0x4c0>
   841ca:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   841ce:	f206 4012 	addw	r0, r6, #1042	; 0x412
   841d2:	409d      	lsls	r5, r3
   841d4:	fa2a f000 	lsr.w	r0, sl, r0
   841d8:	4328      	orrs	r0, r5
   841da:	f002 fa31 	bl	86640 <__aeabi_ui2d>
   841de:	2301      	movs	r3, #1
   841e0:	3e01      	subs	r6, #1
   841e2:	9314      	str	r3, [sp, #80]	; 0x50
   841e4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   841e8:	e781      	b.n	840ee <_dtoa_r+0xd6>
   841ea:	483b      	ldr	r0, [pc, #236]	; (842d8 <_dtoa_r+0x2c0>)
   841ec:	e743      	b.n	84076 <_dtoa_r+0x5e>
   841ee:	2100      	movs	r1, #0
   841f0:	4620      	mov	r0, r4
   841f2:	6461      	str	r1, [r4, #68]	; 0x44
   841f4:	9125      	str	r1, [sp, #148]	; 0x94
   841f6:	f001 fb01 	bl	857fc <_Balloc>
   841fa:	f04f 33ff 	mov.w	r3, #4294967295
   841fe:	9307      	str	r3, [sp, #28]
   84200:	930f      	str	r3, [sp, #60]	; 0x3c
   84202:	2301      	movs	r3, #1
   84204:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84206:	9004      	str	r0, [sp, #16]
   84208:	6420      	str	r0, [r4, #64]	; 0x40
   8420a:	9224      	str	r2, [sp, #144]	; 0x90
   8420c:	930b      	str	r3, [sp, #44]	; 0x2c
   8420e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84210:	2b00      	cmp	r3, #0
   84212:	f2c0 80d3 	blt.w	843bc <_dtoa_r+0x3a4>
   84216:	9a02      	ldr	r2, [sp, #8]
   84218:	2a0e      	cmp	r2, #14
   8421a:	f300 80cf 	bgt.w	843bc <_dtoa_r+0x3a4>
   8421e:	4b2d      	ldr	r3, [pc, #180]	; (842d4 <_dtoa_r+0x2bc>)
   84220:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84224:	e9d3 2300 	ldrd	r2, r3, [r3]
   84228:	e9cd 2308 	strd	r2, r3, [sp, #32]
   8422c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8422e:	2b00      	cmp	r3, #0
   84230:	f2c0 83b4 	blt.w	8499c <_dtoa_r+0x984>
   84234:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   84238:	4650      	mov	r0, sl
   8423a:	462a      	mov	r2, r5
   8423c:	4633      	mov	r3, r6
   8423e:	4659      	mov	r1, fp
   84240:	f002 fb9e 	bl	86980 <__aeabi_ddiv>
   84244:	f002 fd22 	bl	86c8c <__aeabi_d2iz>
   84248:	4680      	mov	r8, r0
   8424a:	f002 fa09 	bl	86660 <__aeabi_i2d>
   8424e:	462a      	mov	r2, r5
   84250:	4633      	mov	r3, r6
   84252:	f002 fa6b 	bl	8672c <__aeabi_dmul>
   84256:	4602      	mov	r2, r0
   84258:	460b      	mov	r3, r1
   8425a:	4650      	mov	r0, sl
   8425c:	4659      	mov	r1, fp
   8425e:	f002 f8b1 	bl	863c4 <__aeabi_dsub>
   84262:	9e07      	ldr	r6, [sp, #28]
   84264:	9f04      	ldr	r7, [sp, #16]
   84266:	f108 0530 	add.w	r5, r8, #48	; 0x30
   8426a:	2e01      	cmp	r6, #1
   8426c:	703d      	strb	r5, [r7, #0]
   8426e:	4602      	mov	r2, r0
   84270:	460b      	mov	r3, r1
   84272:	f107 0501 	add.w	r5, r7, #1
   84276:	d064      	beq.n	84342 <_dtoa_r+0x32a>
   84278:	2200      	movs	r2, #0
   8427a:	4b18      	ldr	r3, [pc, #96]	; (842dc <_dtoa_r+0x2c4>)
   8427c:	f002 fa56 	bl	8672c <__aeabi_dmul>
   84280:	2200      	movs	r2, #0
   84282:	2300      	movs	r3, #0
   84284:	4606      	mov	r6, r0
   84286:	460f      	mov	r7, r1
   84288:	f002 fcb8 	bl	86bfc <__aeabi_dcmpeq>
   8428c:	2800      	cmp	r0, #0
   8428e:	f040 8082 	bne.w	84396 <_dtoa_r+0x37e>
   84292:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   84296:	f04f 0a00 	mov.w	sl, #0
   8429a:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   8429e:	f04f 0b00 	mov.w	fp, #0
   842a2:	940b      	str	r4, [sp, #44]	; 0x2c
   842a4:	e029      	b.n	842fa <_dtoa_r+0x2e2>
   842a6:	bf00      	nop
   842a8:	636f4361 	.word	0x636f4361
   842ac:	3fd287a7 	.word	0x3fd287a7
   842b0:	8b60c8b3 	.word	0x8b60c8b3
   842b4:	3fc68a28 	.word	0x3fc68a28
   842b8:	509f79fb 	.word	0x509f79fb
   842bc:	3fd34413 	.word	0x3fd34413
   842c0:	7ff00000 	.word	0x7ff00000
   842c4:	0008705d 	.word	0x0008705d
   842c8:	00087080 	.word	0x00087080
   842cc:	0008708c 	.word	0x0008708c
   842d0:	3ff80000 	.word	0x3ff80000
   842d4:	000870c8 	.word	0x000870c8
   842d8:	0008705c 	.word	0x0008705c
   842dc:	40240000 	.word	0x40240000
   842e0:	2200      	movs	r2, #0
   842e2:	4b81      	ldr	r3, [pc, #516]	; (844e8 <_dtoa_r+0x4d0>)
   842e4:	f002 fa22 	bl	8672c <__aeabi_dmul>
   842e8:	4652      	mov	r2, sl
   842ea:	465b      	mov	r3, fp
   842ec:	4606      	mov	r6, r0
   842ee:	460f      	mov	r7, r1
   842f0:	f002 fc84 	bl	86bfc <__aeabi_dcmpeq>
   842f4:	2800      	cmp	r0, #0
   842f6:	f040 83ba 	bne.w	84a6e <_dtoa_r+0xa56>
   842fa:	4642      	mov	r2, r8
   842fc:	464b      	mov	r3, r9
   842fe:	4630      	mov	r0, r6
   84300:	4639      	mov	r1, r7
   84302:	f002 fb3d 	bl	86980 <__aeabi_ddiv>
   84306:	f002 fcc1 	bl	86c8c <__aeabi_d2iz>
   8430a:	4604      	mov	r4, r0
   8430c:	f002 f9a8 	bl	86660 <__aeabi_i2d>
   84310:	4642      	mov	r2, r8
   84312:	464b      	mov	r3, r9
   84314:	f002 fa0a 	bl	8672c <__aeabi_dmul>
   84318:	4602      	mov	r2, r0
   8431a:	460b      	mov	r3, r1
   8431c:	4630      	mov	r0, r6
   8431e:	4639      	mov	r1, r7
   84320:	f002 f850 	bl	863c4 <__aeabi_dsub>
   84324:	f104 0630 	add.w	r6, r4, #48	; 0x30
   84328:	f805 6b01 	strb.w	r6, [r5], #1
   8432c:	9e04      	ldr	r6, [sp, #16]
   8432e:	9f07      	ldr	r7, [sp, #28]
   84330:	1bae      	subs	r6, r5, r6
   84332:	42be      	cmp	r6, r7
   84334:	4602      	mov	r2, r0
   84336:	460b      	mov	r3, r1
   84338:	d1d2      	bne.n	842e0 <_dtoa_r+0x2c8>
   8433a:	46a0      	mov	r8, r4
   8433c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84340:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84342:	4610      	mov	r0, r2
   84344:	4619      	mov	r1, r3
   84346:	f002 f83f 	bl	863c8 <__adddf3>
   8434a:	4606      	mov	r6, r0
   8434c:	460f      	mov	r7, r1
   8434e:	4602      	mov	r2, r0
   84350:	460b      	mov	r3, r1
   84352:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84356:	f002 fc5b 	bl	86c10 <__aeabi_dcmplt>
   8435a:	b948      	cbnz	r0, 84370 <_dtoa_r+0x358>
   8435c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   84360:	4632      	mov	r2, r6
   84362:	463b      	mov	r3, r7
   84364:	f002 fc4a 	bl	86bfc <__aeabi_dcmpeq>
   84368:	b1a8      	cbz	r0, 84396 <_dtoa_r+0x37e>
   8436a:	f018 0f01 	tst.w	r8, #1
   8436e:	d012      	beq.n	84396 <_dtoa_r+0x37e>
   84370:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84374:	1e6b      	subs	r3, r5, #1
   84376:	9a04      	ldr	r2, [sp, #16]
   84378:	e004      	b.n	84384 <_dtoa_r+0x36c>
   8437a:	429a      	cmp	r2, r3
   8437c:	f000 8402 	beq.w	84b84 <_dtoa_r+0xb6c>
   84380:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   84384:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   84388:	f103 0501 	add.w	r5, r3, #1
   8438c:	d0f5      	beq.n	8437a <_dtoa_r+0x362>
   8438e:	f108 0801 	add.w	r8, r8, #1
   84392:	f883 8000 	strb.w	r8, [r3]
   84396:	4649      	mov	r1, r9
   84398:	4620      	mov	r0, r4
   8439a:	f001 fa55 	bl	85848 <_Bfree>
   8439e:	2200      	movs	r2, #0
   843a0:	9b02      	ldr	r3, [sp, #8]
   843a2:	702a      	strb	r2, [r5, #0]
   843a4:	9a26      	ldr	r2, [sp, #152]	; 0x98
   843a6:	3301      	adds	r3, #1
   843a8:	6013      	str	r3, [r2, #0]
   843aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   843ac:	2b00      	cmp	r3, #0
   843ae:	f000 839f 	beq.w	84af0 <_dtoa_r+0xad8>
   843b2:	9804      	ldr	r0, [sp, #16]
   843b4:	601d      	str	r5, [r3, #0]
   843b6:	b01b      	add	sp, #108	; 0x6c
   843b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   843bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   843be:	2a00      	cmp	r2, #0
   843c0:	d03e      	beq.n	84440 <_dtoa_r+0x428>
   843c2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   843c4:	2a01      	cmp	r2, #1
   843c6:	f340 8311 	ble.w	849ec <_dtoa_r+0x9d4>
   843ca:	9b07      	ldr	r3, [sp, #28]
   843cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   843ce:	1e5f      	subs	r7, r3, #1
   843d0:	42ba      	cmp	r2, r7
   843d2:	f2c0 8390 	blt.w	84af6 <_dtoa_r+0xade>
   843d6:	1bd7      	subs	r7, r2, r7
   843d8:	9b07      	ldr	r3, [sp, #28]
   843da:	2b00      	cmp	r3, #0
   843dc:	f2c0 848c 	blt.w	84cf8 <_dtoa_r+0xce0>
   843e0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   843e2:	9b07      	ldr	r3, [sp, #28]
   843e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   843e6:	2101      	movs	r1, #1
   843e8:	441a      	add	r2, r3
   843ea:	920a      	str	r2, [sp, #40]	; 0x28
   843ec:	9a08      	ldr	r2, [sp, #32]
   843ee:	4620      	mov	r0, r4
   843f0:	441a      	add	r2, r3
   843f2:	9208      	str	r2, [sp, #32]
   843f4:	f001 fac4 	bl	85980 <__i2b>
   843f8:	4606      	mov	r6, r0
   843fa:	e023      	b.n	84444 <_dtoa_r+0x42c>
   843fc:	2301      	movs	r3, #1
   843fe:	930e      	str	r3, [sp, #56]	; 0x38
   84400:	e6b5      	b.n	8416e <_dtoa_r+0x156>
   84402:	2300      	movs	r3, #0
   84404:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84406:	930d      	str	r3, [sp, #52]	; 0x34
   84408:	9b02      	ldr	r3, [sp, #8]
   8440a:	1ad2      	subs	r2, r2, r3
   8440c:	425b      	negs	r3, r3
   8440e:	920a      	str	r2, [sp, #40]	; 0x28
   84410:	930c      	str	r3, [sp, #48]	; 0x30
   84412:	e6be      	b.n	84192 <_dtoa_r+0x17a>
   84414:	f1c7 0301 	rsb	r3, r7, #1
   84418:	930a      	str	r3, [sp, #40]	; 0x28
   8441a:	2300      	movs	r3, #0
   8441c:	9308      	str	r3, [sp, #32]
   8441e:	e6ad      	b.n	8417c <_dtoa_r+0x164>
   84420:	9d02      	ldr	r5, [sp, #8]
   84422:	4628      	mov	r0, r5
   84424:	f002 f91c 	bl	86660 <__aeabi_i2d>
   84428:	4602      	mov	r2, r0
   8442a:	460b      	mov	r3, r1
   8442c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   84430:	f002 fbe4 	bl	86bfc <__aeabi_dcmpeq>
   84434:	2800      	cmp	r0, #0
   84436:	f47f ae86 	bne.w	84146 <_dtoa_r+0x12e>
   8443a:	1e6b      	subs	r3, r5, #1
   8443c:	9302      	str	r3, [sp, #8]
   8443e:	e682      	b.n	84146 <_dtoa_r+0x12e>
   84440:	ad0a      	add	r5, sp, #40	; 0x28
   84442:	cde0      	ldmia	r5, {r5, r6, r7}
   84444:	2d00      	cmp	r5, #0
   84446:	dd0c      	ble.n	84462 <_dtoa_r+0x44a>
   84448:	9908      	ldr	r1, [sp, #32]
   8444a:	2900      	cmp	r1, #0
   8444c:	460b      	mov	r3, r1
   8444e:	dd08      	ble.n	84462 <_dtoa_r+0x44a>
   84450:	42a9      	cmp	r1, r5
   84452:	bfa8      	it	ge
   84454:	462b      	movge	r3, r5
   84456:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84458:	1aed      	subs	r5, r5, r3
   8445a:	1ad2      	subs	r2, r2, r3
   8445c:	1acb      	subs	r3, r1, r3
   8445e:	920a      	str	r2, [sp, #40]	; 0x28
   84460:	9308      	str	r3, [sp, #32]
   84462:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84464:	b1d3      	cbz	r3, 8449c <_dtoa_r+0x484>
   84466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84468:	2b00      	cmp	r3, #0
   8446a:	f000 82b8 	beq.w	849de <_dtoa_r+0x9c6>
   8446e:	2f00      	cmp	r7, #0
   84470:	dd10      	ble.n	84494 <_dtoa_r+0x47c>
   84472:	4631      	mov	r1, r6
   84474:	463a      	mov	r2, r7
   84476:	4620      	mov	r0, r4
   84478:	f001 fb1e 	bl	85ab8 <__pow5mult>
   8447c:	464a      	mov	r2, r9
   8447e:	4601      	mov	r1, r0
   84480:	4606      	mov	r6, r0
   84482:	4620      	mov	r0, r4
   84484:	f001 fa86 	bl	85994 <__multiply>
   84488:	4603      	mov	r3, r0
   8448a:	4649      	mov	r1, r9
   8448c:	4620      	mov	r0, r4
   8448e:	4699      	mov	r9, r3
   84490:	f001 f9da 	bl	85848 <_Bfree>
   84494:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84496:	1bda      	subs	r2, r3, r7
   84498:	f040 82a2 	bne.w	849e0 <_dtoa_r+0x9c8>
   8449c:	2101      	movs	r1, #1
   8449e:	4620      	mov	r0, r4
   844a0:	f001 fa6e 	bl	85980 <__i2b>
   844a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   844a6:	4680      	mov	r8, r0
   844a8:	2b00      	cmp	r3, #0
   844aa:	dd1f      	ble.n	844ec <_dtoa_r+0x4d4>
   844ac:	4601      	mov	r1, r0
   844ae:	461a      	mov	r2, r3
   844b0:	4620      	mov	r0, r4
   844b2:	f001 fb01 	bl	85ab8 <__pow5mult>
   844b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   844b8:	4680      	mov	r8, r0
   844ba:	2b01      	cmp	r3, #1
   844bc:	f340 8255 	ble.w	8496a <_dtoa_r+0x952>
   844c0:	2300      	movs	r3, #0
   844c2:	930c      	str	r3, [sp, #48]	; 0x30
   844c4:	f8d8 3010 	ldr.w	r3, [r8, #16]
   844c8:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   844cc:	6918      	ldr	r0, [r3, #16]
   844ce:	f001 fa07 	bl	858e0 <__hi0bits>
   844d2:	f1c0 0020 	rsb	r0, r0, #32
   844d6:	e013      	b.n	84500 <_dtoa_r+0x4e8>
   844d8:	f1c3 0520 	rsb	r5, r3, #32
   844dc:	fa0a f005 	lsl.w	r0, sl, r5
   844e0:	e67b      	b.n	841da <_dtoa_r+0x1c2>
   844e2:	900e      	str	r0, [sp, #56]	; 0x38
   844e4:	e643      	b.n	8416e <_dtoa_r+0x156>
   844e6:	bf00      	nop
   844e8:	40240000 	.word	0x40240000
   844ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
   844ee:	2b01      	cmp	r3, #1
   844f0:	f340 8285 	ble.w	849fe <_dtoa_r+0x9e6>
   844f4:	2300      	movs	r3, #0
   844f6:	930c      	str	r3, [sp, #48]	; 0x30
   844f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   844fa:	2001      	movs	r0, #1
   844fc:	2b00      	cmp	r3, #0
   844fe:	d1e1      	bne.n	844c4 <_dtoa_r+0x4ac>
   84500:	9a08      	ldr	r2, [sp, #32]
   84502:	4410      	add	r0, r2
   84504:	f010 001f 	ands.w	r0, r0, #31
   84508:	f000 80a1 	beq.w	8464e <_dtoa_r+0x636>
   8450c:	f1c0 0320 	rsb	r3, r0, #32
   84510:	2b04      	cmp	r3, #4
   84512:	f340 8486 	ble.w	84e22 <_dtoa_r+0xe0a>
   84516:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84518:	f1c0 001c 	rsb	r0, r0, #28
   8451c:	4403      	add	r3, r0
   8451e:	930a      	str	r3, [sp, #40]	; 0x28
   84520:	4613      	mov	r3, r2
   84522:	4403      	add	r3, r0
   84524:	4405      	add	r5, r0
   84526:	9308      	str	r3, [sp, #32]
   84528:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8452a:	2b00      	cmp	r3, #0
   8452c:	dd05      	ble.n	8453a <_dtoa_r+0x522>
   8452e:	4649      	mov	r1, r9
   84530:	461a      	mov	r2, r3
   84532:	4620      	mov	r0, r4
   84534:	f001 fb10 	bl	85b58 <__lshift>
   84538:	4681      	mov	r9, r0
   8453a:	9b08      	ldr	r3, [sp, #32]
   8453c:	2b00      	cmp	r3, #0
   8453e:	dd05      	ble.n	8454c <_dtoa_r+0x534>
   84540:	4641      	mov	r1, r8
   84542:	461a      	mov	r2, r3
   84544:	4620      	mov	r0, r4
   84546:	f001 fb07 	bl	85b58 <__lshift>
   8454a:	4680      	mov	r8, r0
   8454c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8454e:	2b00      	cmp	r3, #0
   84550:	f040 8086 	bne.w	84660 <_dtoa_r+0x648>
   84554:	9b07      	ldr	r3, [sp, #28]
   84556:	2b00      	cmp	r3, #0
   84558:	f340 8264 	ble.w	84a24 <_dtoa_r+0xa0c>
   8455c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8455e:	2b00      	cmp	r3, #0
   84560:	f000 8098 	beq.w	84694 <_dtoa_r+0x67c>
   84564:	2d00      	cmp	r5, #0
   84566:	dd05      	ble.n	84574 <_dtoa_r+0x55c>
   84568:	4631      	mov	r1, r6
   8456a:	462a      	mov	r2, r5
   8456c:	4620      	mov	r0, r4
   8456e:	f001 faf3 	bl	85b58 <__lshift>
   84572:	4606      	mov	r6, r0
   84574:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84576:	2b00      	cmp	r3, #0
   84578:	f040 8336 	bne.w	84be8 <_dtoa_r+0xbd0>
   8457c:	9608      	str	r6, [sp, #32]
   8457e:	9b07      	ldr	r3, [sp, #28]
   84580:	9a04      	ldr	r2, [sp, #16]
   84582:	3b01      	subs	r3, #1
   84584:	18d3      	adds	r3, r2, r3
   84586:	930b      	str	r3, [sp, #44]	; 0x2c
   84588:	4617      	mov	r7, r2
   8458a:	f00a 0301 	and.w	r3, sl, #1
   8458e:	46c2      	mov	sl, r8
   84590:	f8dd b020 	ldr.w	fp, [sp, #32]
   84594:	930c      	str	r3, [sp, #48]	; 0x30
   84596:	4651      	mov	r1, sl
   84598:	4648      	mov	r0, r9
   8459a:	f7ff fca9 	bl	83ef0 <quorem>
   8459e:	4631      	mov	r1, r6
   845a0:	4605      	mov	r5, r0
   845a2:	4648      	mov	r0, r9
   845a4:	f001 fb28 	bl	85bf8 <__mcmp>
   845a8:	465a      	mov	r2, fp
   845aa:	9007      	str	r0, [sp, #28]
   845ac:	4651      	mov	r1, sl
   845ae:	4620      	mov	r0, r4
   845b0:	f001 fb3e 	bl	85c30 <__mdiff>
   845b4:	68c2      	ldr	r2, [r0, #12]
   845b6:	4680      	mov	r8, r0
   845b8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   845bc:	2a00      	cmp	r2, #0
   845be:	f040 8229 	bne.w	84a14 <_dtoa_r+0x9fc>
   845c2:	4601      	mov	r1, r0
   845c4:	4648      	mov	r0, r9
   845c6:	930a      	str	r3, [sp, #40]	; 0x28
   845c8:	f001 fb16 	bl	85bf8 <__mcmp>
   845cc:	4641      	mov	r1, r8
   845ce:	9008      	str	r0, [sp, #32]
   845d0:	4620      	mov	r0, r4
   845d2:	f001 f939 	bl	85848 <_Bfree>
   845d6:	9a08      	ldr	r2, [sp, #32]
   845d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   845da:	b932      	cbnz	r2, 845ea <_dtoa_r+0x5d2>
   845dc:	9924      	ldr	r1, [sp, #144]	; 0x90
   845de:	b921      	cbnz	r1, 845ea <_dtoa_r+0x5d2>
   845e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   845e2:	2a00      	cmp	r2, #0
   845e4:	f000 83ee 	beq.w	84dc4 <_dtoa_r+0xdac>
   845e8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   845ea:	9907      	ldr	r1, [sp, #28]
   845ec:	2900      	cmp	r1, #0
   845ee:	f2c0 829f 	blt.w	84b30 <_dtoa_r+0xb18>
   845f2:	d105      	bne.n	84600 <_dtoa_r+0x5e8>
   845f4:	9924      	ldr	r1, [sp, #144]	; 0x90
   845f6:	b919      	cbnz	r1, 84600 <_dtoa_r+0x5e8>
   845f8:	990c      	ldr	r1, [sp, #48]	; 0x30
   845fa:	2900      	cmp	r1, #0
   845fc:	f000 8298 	beq.w	84b30 <_dtoa_r+0xb18>
   84600:	2a00      	cmp	r2, #0
   84602:	f300 8305 	bgt.w	84c10 <_dtoa_r+0xbf8>
   84606:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84608:	f107 0801 	add.w	r8, r7, #1
   8460c:	4297      	cmp	r7, r2
   8460e:	703b      	strb	r3, [r7, #0]
   84610:	4645      	mov	r5, r8
   84612:	f000 830b 	beq.w	84c2c <_dtoa_r+0xc14>
   84616:	4649      	mov	r1, r9
   84618:	2300      	movs	r3, #0
   8461a:	220a      	movs	r2, #10
   8461c:	4620      	mov	r0, r4
   8461e:	f001 f91d 	bl	8585c <__multadd>
   84622:	455e      	cmp	r6, fp
   84624:	4681      	mov	r9, r0
   84626:	4631      	mov	r1, r6
   84628:	f04f 0300 	mov.w	r3, #0
   8462c:	f04f 020a 	mov.w	r2, #10
   84630:	4620      	mov	r0, r4
   84632:	f000 81e9 	beq.w	84a08 <_dtoa_r+0x9f0>
   84636:	f001 f911 	bl	8585c <__multadd>
   8463a:	4659      	mov	r1, fp
   8463c:	4606      	mov	r6, r0
   8463e:	2300      	movs	r3, #0
   84640:	220a      	movs	r2, #10
   84642:	4620      	mov	r0, r4
   84644:	f001 f90a 	bl	8585c <__multadd>
   84648:	4647      	mov	r7, r8
   8464a:	4683      	mov	fp, r0
   8464c:	e7a3      	b.n	84596 <_dtoa_r+0x57e>
   8464e:	201c      	movs	r0, #28
   84650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84652:	4405      	add	r5, r0
   84654:	4403      	add	r3, r0
   84656:	930a      	str	r3, [sp, #40]	; 0x28
   84658:	9b08      	ldr	r3, [sp, #32]
   8465a:	4403      	add	r3, r0
   8465c:	9308      	str	r3, [sp, #32]
   8465e:	e763      	b.n	84528 <_dtoa_r+0x510>
   84660:	4641      	mov	r1, r8
   84662:	4648      	mov	r0, r9
   84664:	f001 fac8 	bl	85bf8 <__mcmp>
   84668:	2800      	cmp	r0, #0
   8466a:	f6bf af73 	bge.w	84554 <_dtoa_r+0x53c>
   8466e:	9f02      	ldr	r7, [sp, #8]
   84670:	4649      	mov	r1, r9
   84672:	2300      	movs	r3, #0
   84674:	220a      	movs	r2, #10
   84676:	4620      	mov	r0, r4
   84678:	3f01      	subs	r7, #1
   8467a:	9702      	str	r7, [sp, #8]
   8467c:	f001 f8ee 	bl	8585c <__multadd>
   84680:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84682:	4681      	mov	r9, r0
   84684:	2b00      	cmp	r3, #0
   84686:	f040 83b5 	bne.w	84df4 <_dtoa_r+0xddc>
   8468a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8468c:	2b00      	cmp	r3, #0
   8468e:	f340 83be 	ble.w	84e0e <_dtoa_r+0xdf6>
   84692:	9307      	str	r3, [sp, #28]
   84694:	f8dd a010 	ldr.w	sl, [sp, #16]
   84698:	9f07      	ldr	r7, [sp, #28]
   8469a:	4655      	mov	r5, sl
   8469c:	e006      	b.n	846ac <_dtoa_r+0x694>
   8469e:	4649      	mov	r1, r9
   846a0:	2300      	movs	r3, #0
   846a2:	220a      	movs	r2, #10
   846a4:	4620      	mov	r0, r4
   846a6:	f001 f8d9 	bl	8585c <__multadd>
   846aa:	4681      	mov	r9, r0
   846ac:	4641      	mov	r1, r8
   846ae:	4648      	mov	r0, r9
   846b0:	f7ff fc1e 	bl	83ef0 <quorem>
   846b4:	3030      	adds	r0, #48	; 0x30
   846b6:	f805 0b01 	strb.w	r0, [r5], #1
   846ba:	eba5 030a 	sub.w	r3, r5, sl
   846be:	42bb      	cmp	r3, r7
   846c0:	dbed      	blt.n	8469e <_dtoa_r+0x686>
   846c2:	9b04      	ldr	r3, [sp, #16]
   846c4:	9a07      	ldr	r2, [sp, #28]
   846c6:	4682      	mov	sl, r0
   846c8:	2a01      	cmp	r2, #1
   846ca:	bfac      	ite	ge
   846cc:	189b      	addge	r3, r3, r2
   846ce:	3301      	addlt	r3, #1
   846d0:	f04f 0b00 	mov.w	fp, #0
   846d4:	461d      	mov	r5, r3
   846d6:	4649      	mov	r1, r9
   846d8:	2201      	movs	r2, #1
   846da:	4620      	mov	r0, r4
   846dc:	f001 fa3c 	bl	85b58 <__lshift>
   846e0:	4641      	mov	r1, r8
   846e2:	4681      	mov	r9, r0
   846e4:	f001 fa88 	bl	85bf8 <__mcmp>
   846e8:	2800      	cmp	r0, #0
   846ea:	f340 823f 	ble.w	84b6c <_dtoa_r+0xb54>
   846ee:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   846f2:	1e6b      	subs	r3, r5, #1
   846f4:	9904      	ldr	r1, [sp, #16]
   846f6:	e004      	b.n	84702 <_dtoa_r+0x6ea>
   846f8:	428b      	cmp	r3, r1
   846fa:	f000 81ae 	beq.w	84a5a <_dtoa_r+0xa42>
   846fe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   84702:	2a39      	cmp	r2, #57	; 0x39
   84704:	f103 0501 	add.w	r5, r3, #1
   84708:	d0f6      	beq.n	846f8 <_dtoa_r+0x6e0>
   8470a:	3201      	adds	r2, #1
   8470c:	701a      	strb	r2, [r3, #0]
   8470e:	4641      	mov	r1, r8
   84710:	4620      	mov	r0, r4
   84712:	f001 f899 	bl	85848 <_Bfree>
   84716:	2e00      	cmp	r6, #0
   84718:	f43f ae3d 	beq.w	84396 <_dtoa_r+0x37e>
   8471c:	f1bb 0f00 	cmp.w	fp, #0
   84720:	d005      	beq.n	8472e <_dtoa_r+0x716>
   84722:	45b3      	cmp	fp, r6
   84724:	d003      	beq.n	8472e <_dtoa_r+0x716>
   84726:	4659      	mov	r1, fp
   84728:	4620      	mov	r0, r4
   8472a:	f001 f88d 	bl	85848 <_Bfree>
   8472e:	4631      	mov	r1, r6
   84730:	4620      	mov	r0, r4
   84732:	f001 f889 	bl	85848 <_Bfree>
   84736:	e62e      	b.n	84396 <_dtoa_r+0x37e>
   84738:	2300      	movs	r3, #0
   8473a:	930b      	str	r3, [sp, #44]	; 0x2c
   8473c:	9b02      	ldr	r3, [sp, #8]
   8473e:	9a25      	ldr	r2, [sp, #148]	; 0x94
   84740:	4413      	add	r3, r2
   84742:	930f      	str	r3, [sp, #60]	; 0x3c
   84744:	3301      	adds	r3, #1
   84746:	2b01      	cmp	r3, #1
   84748:	461f      	mov	r7, r3
   8474a:	461e      	mov	r6, r3
   8474c:	bfb8      	it	lt
   8474e:	2701      	movlt	r7, #1
   84750:	9307      	str	r3, [sp, #28]
   84752:	2100      	movs	r1, #0
   84754:	2f17      	cmp	r7, #23
   84756:	6461      	str	r1, [r4, #68]	; 0x44
   84758:	d90a      	bls.n	84770 <_dtoa_r+0x758>
   8475a:	2201      	movs	r2, #1
   8475c:	2304      	movs	r3, #4
   8475e:	005b      	lsls	r3, r3, #1
   84760:	f103 0014 	add.w	r0, r3, #20
   84764:	4287      	cmp	r7, r0
   84766:	4611      	mov	r1, r2
   84768:	f102 0201 	add.w	r2, r2, #1
   8476c:	d2f7      	bcs.n	8475e <_dtoa_r+0x746>
   8476e:	6461      	str	r1, [r4, #68]	; 0x44
   84770:	4620      	mov	r0, r4
   84772:	f001 f843 	bl	857fc <_Balloc>
   84776:	2e0e      	cmp	r6, #14
   84778:	9004      	str	r0, [sp, #16]
   8477a:	6420      	str	r0, [r4, #64]	; 0x40
   8477c:	f63f ad47 	bhi.w	8420e <_dtoa_r+0x1f6>
   84780:	2d00      	cmp	r5, #0
   84782:	f43f ad44 	beq.w	8420e <_dtoa_r+0x1f6>
   84786:	9902      	ldr	r1, [sp, #8]
   84788:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   8478c:	2900      	cmp	r1, #0
   8478e:	f340 8203 	ble.w	84b98 <_dtoa_r+0xb80>
   84792:	4bb9      	ldr	r3, [pc, #740]	; (84a78 <_dtoa_r+0xa60>)
   84794:	f001 020f 	and.w	r2, r1, #15
   84798:	110d      	asrs	r5, r1, #4
   8479a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8479e:	06e9      	lsls	r1, r5, #27
   847a0:	e9d3 6700 	ldrd	r6, r7, [r3]
   847a4:	f140 81af 	bpl.w	84b06 <_dtoa_r+0xaee>
   847a8:	4bb4      	ldr	r3, [pc, #720]	; (84a7c <_dtoa_r+0xa64>)
   847aa:	4650      	mov	r0, sl
   847ac:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   847b0:	4659      	mov	r1, fp
   847b2:	f002 f8e5 	bl	86980 <__aeabi_ddiv>
   847b6:	f04f 0a03 	mov.w	sl, #3
   847ba:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   847be:	f005 050f 	and.w	r5, r5, #15
   847c2:	b18d      	cbz	r5, 847e8 <_dtoa_r+0x7d0>
   847c4:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 84a7c <_dtoa_r+0xa64>
   847c8:	07ea      	lsls	r2, r5, #31
   847ca:	d509      	bpl.n	847e0 <_dtoa_r+0x7c8>
   847cc:	e9d8 2300 	ldrd	r2, r3, [r8]
   847d0:	4630      	mov	r0, r6
   847d2:	4639      	mov	r1, r7
   847d4:	f001 ffaa 	bl	8672c <__aeabi_dmul>
   847d8:	4606      	mov	r6, r0
   847da:	460f      	mov	r7, r1
   847dc:	f10a 0a01 	add.w	sl, sl, #1
   847e0:	106d      	asrs	r5, r5, #1
   847e2:	f108 0808 	add.w	r8, r8, #8
   847e6:	d1ef      	bne.n	847c8 <_dtoa_r+0x7b0>
   847e8:	463b      	mov	r3, r7
   847ea:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   847ee:	4632      	mov	r2, r6
   847f0:	f002 f8c6 	bl	86980 <__aeabi_ddiv>
   847f4:	4607      	mov	r7, r0
   847f6:	4688      	mov	r8, r1
   847f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   847fa:	b143      	cbz	r3, 8480e <_dtoa_r+0x7f6>
   847fc:	2200      	movs	r2, #0
   847fe:	4ba0      	ldr	r3, [pc, #640]	; (84a80 <_dtoa_r+0xa68>)
   84800:	4638      	mov	r0, r7
   84802:	4641      	mov	r1, r8
   84804:	f002 fa04 	bl	86c10 <__aeabi_dcmplt>
   84808:	2800      	cmp	r0, #0
   8480a:	f040 8287 	bne.w	84d1c <_dtoa_r+0xd04>
   8480e:	4650      	mov	r0, sl
   84810:	f001 ff26 	bl	86660 <__aeabi_i2d>
   84814:	463a      	mov	r2, r7
   84816:	4643      	mov	r3, r8
   84818:	f001 ff88 	bl	8672c <__aeabi_dmul>
   8481c:	4b99      	ldr	r3, [pc, #612]	; (84a84 <_dtoa_r+0xa6c>)
   8481e:	2200      	movs	r2, #0
   84820:	f001 fdd2 	bl	863c8 <__adddf3>
   84824:	9b07      	ldr	r3, [sp, #28]
   84826:	4605      	mov	r5, r0
   84828:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8482c:	2b00      	cmp	r3, #0
   8482e:	f000 813f 	beq.w	84ab0 <_dtoa_r+0xa98>
   84832:	9b02      	ldr	r3, [sp, #8]
   84834:	9315      	str	r3, [sp, #84]	; 0x54
   84836:	9b07      	ldr	r3, [sp, #28]
   84838:	9312      	str	r3, [sp, #72]	; 0x48
   8483a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8483c:	2b00      	cmp	r3, #0
   8483e:	f000 81fb 	beq.w	84c38 <_dtoa_r+0xc20>
   84842:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84844:	4b8c      	ldr	r3, [pc, #560]	; (84a78 <_dtoa_r+0xa60>)
   84846:	2000      	movs	r0, #0
   84848:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8484c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   84850:	498d      	ldr	r1, [pc, #564]	; (84a88 <_dtoa_r+0xa70>)
   84852:	f002 f895 	bl	86980 <__aeabi_ddiv>
   84856:	462a      	mov	r2, r5
   84858:	4633      	mov	r3, r6
   8485a:	f001 fdb3 	bl	863c4 <__aeabi_dsub>
   8485e:	4682      	mov	sl, r0
   84860:	468b      	mov	fp, r1
   84862:	4638      	mov	r0, r7
   84864:	4641      	mov	r1, r8
   84866:	f002 fa11 	bl	86c8c <__aeabi_d2iz>
   8486a:	4605      	mov	r5, r0
   8486c:	f001 fef8 	bl	86660 <__aeabi_i2d>
   84870:	4602      	mov	r2, r0
   84872:	460b      	mov	r3, r1
   84874:	4638      	mov	r0, r7
   84876:	4641      	mov	r1, r8
   84878:	f001 fda4 	bl	863c4 <__aeabi_dsub>
   8487c:	3530      	adds	r5, #48	; 0x30
   8487e:	fa5f f885 	uxtb.w	r8, r5
   84882:	9d04      	ldr	r5, [sp, #16]
   84884:	4606      	mov	r6, r0
   84886:	460f      	mov	r7, r1
   84888:	f885 8000 	strb.w	r8, [r5]
   8488c:	4602      	mov	r2, r0
   8488e:	460b      	mov	r3, r1
   84890:	4650      	mov	r0, sl
   84892:	4659      	mov	r1, fp
   84894:	3501      	adds	r5, #1
   84896:	f002 f9d9 	bl	86c4c <__aeabi_dcmpgt>
   8489a:	2800      	cmp	r0, #0
   8489c:	d154      	bne.n	84948 <_dtoa_r+0x930>
   8489e:	4632      	mov	r2, r6
   848a0:	463b      	mov	r3, r7
   848a2:	2000      	movs	r0, #0
   848a4:	4976      	ldr	r1, [pc, #472]	; (84a80 <_dtoa_r+0xa68>)
   848a6:	f001 fd8d 	bl	863c4 <__aeabi_dsub>
   848aa:	4602      	mov	r2, r0
   848ac:	460b      	mov	r3, r1
   848ae:	4650      	mov	r0, sl
   848b0:	4659      	mov	r1, fp
   848b2:	f002 f9cb 	bl	86c4c <__aeabi_dcmpgt>
   848b6:	2800      	cmp	r0, #0
   848b8:	f040 8270 	bne.w	84d9c <_dtoa_r+0xd84>
   848bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
   848be:	2a01      	cmp	r2, #1
   848c0:	f000 8112 	beq.w	84ae8 <_dtoa_r+0xad0>
   848c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   848c6:	9a04      	ldr	r2, [sp, #16]
   848c8:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   848cc:	4413      	add	r3, r2
   848ce:	4699      	mov	r9, r3
   848d0:	e00f      	b.n	848f2 <_dtoa_r+0x8da>
   848d2:	4632      	mov	r2, r6
   848d4:	463b      	mov	r3, r7
   848d6:	2000      	movs	r0, #0
   848d8:	4969      	ldr	r1, [pc, #420]	; (84a80 <_dtoa_r+0xa68>)
   848da:	f001 fd73 	bl	863c4 <__aeabi_dsub>
   848de:	4652      	mov	r2, sl
   848e0:	465b      	mov	r3, fp
   848e2:	f002 f995 	bl	86c10 <__aeabi_dcmplt>
   848e6:	2800      	cmp	r0, #0
   848e8:	f040 8256 	bne.w	84d98 <_dtoa_r+0xd80>
   848ec:	454d      	cmp	r5, r9
   848ee:	f000 80f9 	beq.w	84ae4 <_dtoa_r+0xacc>
   848f2:	4650      	mov	r0, sl
   848f4:	4659      	mov	r1, fp
   848f6:	2200      	movs	r2, #0
   848f8:	4b64      	ldr	r3, [pc, #400]	; (84a8c <_dtoa_r+0xa74>)
   848fa:	f001 ff17 	bl	8672c <__aeabi_dmul>
   848fe:	2200      	movs	r2, #0
   84900:	4b62      	ldr	r3, [pc, #392]	; (84a8c <_dtoa_r+0xa74>)
   84902:	4682      	mov	sl, r0
   84904:	468b      	mov	fp, r1
   84906:	4630      	mov	r0, r6
   84908:	4639      	mov	r1, r7
   8490a:	f001 ff0f 	bl	8672c <__aeabi_dmul>
   8490e:	460f      	mov	r7, r1
   84910:	4606      	mov	r6, r0
   84912:	f002 f9bb 	bl	86c8c <__aeabi_d2iz>
   84916:	4680      	mov	r8, r0
   84918:	f001 fea2 	bl	86660 <__aeabi_i2d>
   8491c:	4602      	mov	r2, r0
   8491e:	460b      	mov	r3, r1
   84920:	4630      	mov	r0, r6
   84922:	4639      	mov	r1, r7
   84924:	f001 fd4e 	bl	863c4 <__aeabi_dsub>
   84928:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8492c:	fa5f f888 	uxtb.w	r8, r8
   84930:	f805 8b01 	strb.w	r8, [r5], #1
   84934:	4652      	mov	r2, sl
   84936:	465b      	mov	r3, fp
   84938:	4606      	mov	r6, r0
   8493a:	460f      	mov	r7, r1
   8493c:	f002 f968 	bl	86c10 <__aeabi_dcmplt>
   84940:	2800      	cmp	r0, #0
   84942:	d0c6      	beq.n	848d2 <_dtoa_r+0x8ba>
   84944:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84948:	9b15      	ldr	r3, [sp, #84]	; 0x54
   8494a:	9302      	str	r3, [sp, #8]
   8494c:	e523      	b.n	84396 <_dtoa_r+0x37e>
   8494e:	2300      	movs	r3, #0
   84950:	930b      	str	r3, [sp, #44]	; 0x2c
   84952:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84954:	2b00      	cmp	r3, #0
   84956:	f340 80dd 	ble.w	84b14 <_dtoa_r+0xafc>
   8495a:	461f      	mov	r7, r3
   8495c:	461e      	mov	r6, r3
   8495e:	930f      	str	r3, [sp, #60]	; 0x3c
   84960:	9307      	str	r3, [sp, #28]
   84962:	e6f6      	b.n	84752 <_dtoa_r+0x73a>
   84964:	2301      	movs	r3, #1
   84966:	930b      	str	r3, [sp, #44]	; 0x2c
   84968:	e7f3      	b.n	84952 <_dtoa_r+0x93a>
   8496a:	f1ba 0f00 	cmp.w	sl, #0
   8496e:	f47f ada7 	bne.w	844c0 <_dtoa_r+0x4a8>
   84972:	f3cb 0313 	ubfx	r3, fp, #0, #20
   84976:	2b00      	cmp	r3, #0
   84978:	f47f adbc 	bne.w	844f4 <_dtoa_r+0x4dc>
   8497c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   84980:	0d3f      	lsrs	r7, r7, #20
   84982:	053f      	lsls	r7, r7, #20
   84984:	2f00      	cmp	r7, #0
   84986:	f000 820d 	beq.w	84da4 <_dtoa_r+0xd8c>
   8498a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8498c:	3301      	adds	r3, #1
   8498e:	930a      	str	r3, [sp, #40]	; 0x28
   84990:	9b08      	ldr	r3, [sp, #32]
   84992:	3301      	adds	r3, #1
   84994:	9308      	str	r3, [sp, #32]
   84996:	2301      	movs	r3, #1
   84998:	930c      	str	r3, [sp, #48]	; 0x30
   8499a:	e5ad      	b.n	844f8 <_dtoa_r+0x4e0>
   8499c:	9b07      	ldr	r3, [sp, #28]
   8499e:	2b00      	cmp	r3, #0
   849a0:	f73f ac48 	bgt.w	84234 <_dtoa_r+0x21c>
   849a4:	f040 8222 	bne.w	84dec <_dtoa_r+0xdd4>
   849a8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   849ac:	2200      	movs	r2, #0
   849ae:	4b38      	ldr	r3, [pc, #224]	; (84a90 <_dtoa_r+0xa78>)
   849b0:	f001 febc 	bl	8672c <__aeabi_dmul>
   849b4:	4652      	mov	r2, sl
   849b6:	465b      	mov	r3, fp
   849b8:	f002 f93e 	bl	86c38 <__aeabi_dcmpge>
   849bc:	f8dd 801c 	ldr.w	r8, [sp, #28]
   849c0:	4646      	mov	r6, r8
   849c2:	2800      	cmp	r0, #0
   849c4:	d041      	beq.n	84a4a <_dtoa_r+0xa32>
   849c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
   849c8:	9d04      	ldr	r5, [sp, #16]
   849ca:	43db      	mvns	r3, r3
   849cc:	9302      	str	r3, [sp, #8]
   849ce:	4641      	mov	r1, r8
   849d0:	4620      	mov	r0, r4
   849d2:	f000 ff39 	bl	85848 <_Bfree>
   849d6:	2e00      	cmp	r6, #0
   849d8:	f43f acdd 	beq.w	84396 <_dtoa_r+0x37e>
   849dc:	e6a7      	b.n	8472e <_dtoa_r+0x716>
   849de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   849e0:	4649      	mov	r1, r9
   849e2:	4620      	mov	r0, r4
   849e4:	f001 f868 	bl	85ab8 <__pow5mult>
   849e8:	4681      	mov	r9, r0
   849ea:	e557      	b.n	8449c <_dtoa_r+0x484>
   849ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
   849ee:	2a00      	cmp	r2, #0
   849f0:	f000 8188 	beq.w	84d04 <_dtoa_r+0xcec>
   849f4:	f203 4333 	addw	r3, r3, #1075	; 0x433
   849f8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   849fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   849fc:	e4f2      	b.n	843e4 <_dtoa_r+0x3cc>
   849fe:	f1ba 0f00 	cmp.w	sl, #0
   84a02:	f47f ad77 	bne.w	844f4 <_dtoa_r+0x4dc>
   84a06:	e7b4      	b.n	84972 <_dtoa_r+0x95a>
   84a08:	f000 ff28 	bl	8585c <__multadd>
   84a0c:	4647      	mov	r7, r8
   84a0e:	4606      	mov	r6, r0
   84a10:	4683      	mov	fp, r0
   84a12:	e5c0      	b.n	84596 <_dtoa_r+0x57e>
   84a14:	4601      	mov	r1, r0
   84a16:	4620      	mov	r0, r4
   84a18:	9308      	str	r3, [sp, #32]
   84a1a:	f000 ff15 	bl	85848 <_Bfree>
   84a1e:	2201      	movs	r2, #1
   84a20:	9b08      	ldr	r3, [sp, #32]
   84a22:	e5e2      	b.n	845ea <_dtoa_r+0x5d2>
   84a24:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84a26:	2b02      	cmp	r3, #2
   84a28:	f77f ad98 	ble.w	8455c <_dtoa_r+0x544>
   84a2c:	9b07      	ldr	r3, [sp, #28]
   84a2e:	2b00      	cmp	r3, #0
   84a30:	d1c9      	bne.n	849c6 <_dtoa_r+0x9ae>
   84a32:	4641      	mov	r1, r8
   84a34:	2205      	movs	r2, #5
   84a36:	4620      	mov	r0, r4
   84a38:	f000 ff10 	bl	8585c <__multadd>
   84a3c:	4601      	mov	r1, r0
   84a3e:	4680      	mov	r8, r0
   84a40:	4648      	mov	r0, r9
   84a42:	f001 f8d9 	bl	85bf8 <__mcmp>
   84a46:	2800      	cmp	r0, #0
   84a48:	ddbd      	ble.n	849c6 <_dtoa_r+0x9ae>
   84a4a:	2331      	movs	r3, #49	; 0x31
   84a4c:	9a02      	ldr	r2, [sp, #8]
   84a4e:	9904      	ldr	r1, [sp, #16]
   84a50:	3201      	adds	r2, #1
   84a52:	9202      	str	r2, [sp, #8]
   84a54:	700b      	strb	r3, [r1, #0]
   84a56:	1c4d      	adds	r5, r1, #1
   84a58:	e7b9      	b.n	849ce <_dtoa_r+0x9b6>
   84a5a:	2331      	movs	r3, #49	; 0x31
   84a5c:	9a02      	ldr	r2, [sp, #8]
   84a5e:	3201      	adds	r2, #1
   84a60:	9202      	str	r2, [sp, #8]
   84a62:	9a04      	ldr	r2, [sp, #16]
   84a64:	7013      	strb	r3, [r2, #0]
   84a66:	e652      	b.n	8470e <_dtoa_r+0x6f6>
   84a68:	2301      	movs	r3, #1
   84a6a:	930b      	str	r3, [sp, #44]	; 0x2c
   84a6c:	e666      	b.n	8473c <_dtoa_r+0x724>
   84a6e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   84a72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84a74:	e48f      	b.n	84396 <_dtoa_r+0x37e>
   84a76:	bf00      	nop
   84a78:	000870c8 	.word	0x000870c8
   84a7c:	000870a0 	.word	0x000870a0
   84a80:	3ff00000 	.word	0x3ff00000
   84a84:	401c0000 	.word	0x401c0000
   84a88:	3fe00000 	.word	0x3fe00000
   84a8c:	40240000 	.word	0x40240000
   84a90:	40140000 	.word	0x40140000
   84a94:	4650      	mov	r0, sl
   84a96:	f001 fde3 	bl	86660 <__aeabi_i2d>
   84a9a:	463a      	mov	r2, r7
   84a9c:	4643      	mov	r3, r8
   84a9e:	f001 fe45 	bl	8672c <__aeabi_dmul>
   84aa2:	2200      	movs	r2, #0
   84aa4:	4bc1      	ldr	r3, [pc, #772]	; (84dac <_dtoa_r+0xd94>)
   84aa6:	f001 fc8f 	bl	863c8 <__adddf3>
   84aaa:	4605      	mov	r5, r0
   84aac:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84ab0:	4641      	mov	r1, r8
   84ab2:	2200      	movs	r2, #0
   84ab4:	4bbe      	ldr	r3, [pc, #760]	; (84db0 <_dtoa_r+0xd98>)
   84ab6:	4638      	mov	r0, r7
   84ab8:	f001 fc84 	bl	863c4 <__aeabi_dsub>
   84abc:	462a      	mov	r2, r5
   84abe:	4633      	mov	r3, r6
   84ac0:	4682      	mov	sl, r0
   84ac2:	468b      	mov	fp, r1
   84ac4:	f002 f8c2 	bl	86c4c <__aeabi_dcmpgt>
   84ac8:	4680      	mov	r8, r0
   84aca:	2800      	cmp	r0, #0
   84acc:	f040 8110 	bne.w	84cf0 <_dtoa_r+0xcd8>
   84ad0:	462a      	mov	r2, r5
   84ad2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   84ad6:	4650      	mov	r0, sl
   84ad8:	4659      	mov	r1, fp
   84ada:	f002 f899 	bl	86c10 <__aeabi_dcmplt>
   84ade:	b118      	cbz	r0, 84ae8 <_dtoa_r+0xad0>
   84ae0:	4646      	mov	r6, r8
   84ae2:	e770      	b.n	849c6 <_dtoa_r+0x9ae>
   84ae4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84ae8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   84aec:	f7ff bb8f 	b.w	8420e <_dtoa_r+0x1f6>
   84af0:	9804      	ldr	r0, [sp, #16]
   84af2:	f7ff bac0 	b.w	84076 <_dtoa_r+0x5e>
   84af6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84af8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84afa:	1afb      	subs	r3, r7, r3
   84afc:	441a      	add	r2, r3
   84afe:	970c      	str	r7, [sp, #48]	; 0x30
   84b00:	920d      	str	r2, [sp, #52]	; 0x34
   84b02:	2700      	movs	r7, #0
   84b04:	e468      	b.n	843d8 <_dtoa_r+0x3c0>
   84b06:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   84b0a:	f04f 0a02 	mov.w	sl, #2
   84b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   84b12:	e656      	b.n	847c2 <_dtoa_r+0x7aa>
   84b14:	2100      	movs	r1, #0
   84b16:	2301      	movs	r3, #1
   84b18:	4620      	mov	r0, r4
   84b1a:	6461      	str	r1, [r4, #68]	; 0x44
   84b1c:	9325      	str	r3, [sp, #148]	; 0x94
   84b1e:	f000 fe6d 	bl	857fc <_Balloc>
   84b22:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84b24:	9004      	str	r0, [sp, #16]
   84b26:	9307      	str	r3, [sp, #28]
   84b28:	9b25      	ldr	r3, [sp, #148]	; 0x94
   84b2a:	6420      	str	r0, [r4, #64]	; 0x40
   84b2c:	930f      	str	r3, [sp, #60]	; 0x3c
   84b2e:	e627      	b.n	84780 <_dtoa_r+0x768>
   84b30:	2a00      	cmp	r2, #0
   84b32:	46d0      	mov	r8, sl
   84b34:	f8cd b020 	str.w	fp, [sp, #32]
   84b38:	469a      	mov	sl, r3
   84b3a:	dd11      	ble.n	84b60 <_dtoa_r+0xb48>
   84b3c:	4649      	mov	r1, r9
   84b3e:	2201      	movs	r2, #1
   84b40:	4620      	mov	r0, r4
   84b42:	f001 f809 	bl	85b58 <__lshift>
   84b46:	4641      	mov	r1, r8
   84b48:	4681      	mov	r9, r0
   84b4a:	f001 f855 	bl	85bf8 <__mcmp>
   84b4e:	2800      	cmp	r0, #0
   84b50:	f340 8145 	ble.w	84dde <_dtoa_r+0xdc6>
   84b54:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   84b58:	f000 8105 	beq.w	84d66 <_dtoa_r+0xd4e>
   84b5c:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   84b60:	46b3      	mov	fp, r6
   84b62:	f887 a000 	strb.w	sl, [r7]
   84b66:	1c7d      	adds	r5, r7, #1
   84b68:	9e08      	ldr	r6, [sp, #32]
   84b6a:	e5d0      	b.n	8470e <_dtoa_r+0x6f6>
   84b6c:	d104      	bne.n	84b78 <_dtoa_r+0xb60>
   84b6e:	f01a 0f01 	tst.w	sl, #1
   84b72:	d001      	beq.n	84b78 <_dtoa_r+0xb60>
   84b74:	e5bb      	b.n	846ee <_dtoa_r+0x6d6>
   84b76:	4615      	mov	r5, r2
   84b78:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84b7c:	1e6a      	subs	r2, r5, #1
   84b7e:	2b30      	cmp	r3, #48	; 0x30
   84b80:	d0f9      	beq.n	84b76 <_dtoa_r+0xb5e>
   84b82:	e5c4      	b.n	8470e <_dtoa_r+0x6f6>
   84b84:	2230      	movs	r2, #48	; 0x30
   84b86:	9904      	ldr	r1, [sp, #16]
   84b88:	700a      	strb	r2, [r1, #0]
   84b8a:	9a02      	ldr	r2, [sp, #8]
   84b8c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84b90:	3201      	adds	r2, #1
   84b92:	9202      	str	r2, [sp, #8]
   84b94:	f7ff bbfb 	b.w	8438e <_dtoa_r+0x376>
   84b98:	f000 80bb 	beq.w	84d12 <_dtoa_r+0xcfa>
   84b9c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84ba0:	9b02      	ldr	r3, [sp, #8]
   84ba2:	f04f 0a02 	mov.w	sl, #2
   84ba6:	425d      	negs	r5, r3
   84ba8:	4b82      	ldr	r3, [pc, #520]	; (84db4 <_dtoa_r+0xd9c>)
   84baa:	f005 020f 	and.w	r2, r5, #15
   84bae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   84bb2:	e9d3 2300 	ldrd	r2, r3, [r3]
   84bb6:	f001 fdb9 	bl	8672c <__aeabi_dmul>
   84bba:	112d      	asrs	r5, r5, #4
   84bbc:	4607      	mov	r7, r0
   84bbe:	4688      	mov	r8, r1
   84bc0:	f43f ae1a 	beq.w	847f8 <_dtoa_r+0x7e0>
   84bc4:	4e7c      	ldr	r6, [pc, #496]	; (84db8 <_dtoa_r+0xda0>)
   84bc6:	07eb      	lsls	r3, r5, #31
   84bc8:	d509      	bpl.n	84bde <_dtoa_r+0xbc6>
   84bca:	e9d6 2300 	ldrd	r2, r3, [r6]
   84bce:	4638      	mov	r0, r7
   84bd0:	4641      	mov	r1, r8
   84bd2:	f001 fdab 	bl	8672c <__aeabi_dmul>
   84bd6:	4607      	mov	r7, r0
   84bd8:	4688      	mov	r8, r1
   84bda:	f10a 0a01 	add.w	sl, sl, #1
   84bde:	106d      	asrs	r5, r5, #1
   84be0:	f106 0608 	add.w	r6, r6, #8
   84be4:	d1ef      	bne.n	84bc6 <_dtoa_r+0xbae>
   84be6:	e607      	b.n	847f8 <_dtoa_r+0x7e0>
   84be8:	6871      	ldr	r1, [r6, #4]
   84bea:	4620      	mov	r0, r4
   84bec:	f000 fe06 	bl	857fc <_Balloc>
   84bf0:	4605      	mov	r5, r0
   84bf2:	6933      	ldr	r3, [r6, #16]
   84bf4:	f106 010c 	add.w	r1, r6, #12
   84bf8:	3302      	adds	r3, #2
   84bfa:	009a      	lsls	r2, r3, #2
   84bfc:	300c      	adds	r0, #12
   84bfe:	f7fd fdab 	bl	82758 <memcpy>
   84c02:	4629      	mov	r1, r5
   84c04:	2201      	movs	r2, #1
   84c06:	4620      	mov	r0, r4
   84c08:	f000 ffa6 	bl	85b58 <__lshift>
   84c0c:	9008      	str	r0, [sp, #32]
   84c0e:	e4b6      	b.n	8457e <_dtoa_r+0x566>
   84c10:	2b39      	cmp	r3, #57	; 0x39
   84c12:	f8cd b020 	str.w	fp, [sp, #32]
   84c16:	46d0      	mov	r8, sl
   84c18:	f000 80a5 	beq.w	84d66 <_dtoa_r+0xd4e>
   84c1c:	f103 0a01 	add.w	sl, r3, #1
   84c20:	46b3      	mov	fp, r6
   84c22:	f887 a000 	strb.w	sl, [r7]
   84c26:	1c7d      	adds	r5, r7, #1
   84c28:	9e08      	ldr	r6, [sp, #32]
   84c2a:	e570      	b.n	8470e <_dtoa_r+0x6f6>
   84c2c:	465a      	mov	r2, fp
   84c2e:	46d0      	mov	r8, sl
   84c30:	46b3      	mov	fp, r6
   84c32:	469a      	mov	sl, r3
   84c34:	4616      	mov	r6, r2
   84c36:	e54e      	b.n	846d6 <_dtoa_r+0x6be>
   84c38:	9812      	ldr	r0, [sp, #72]	; 0x48
   84c3a:	495e      	ldr	r1, [pc, #376]	; (84db4 <_dtoa_r+0xd9c>)
   84c3c:	462a      	mov	r2, r5
   84c3e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   84c42:	4633      	mov	r3, r6
   84c44:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   84c48:	f001 fd70 	bl	8672c <__aeabi_dmul>
   84c4c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   84c50:	4638      	mov	r0, r7
   84c52:	4641      	mov	r1, r8
   84c54:	f002 f81a 	bl	86c8c <__aeabi_d2iz>
   84c58:	4605      	mov	r5, r0
   84c5a:	f001 fd01 	bl	86660 <__aeabi_i2d>
   84c5e:	4602      	mov	r2, r0
   84c60:	460b      	mov	r3, r1
   84c62:	4638      	mov	r0, r7
   84c64:	4641      	mov	r1, r8
   84c66:	f001 fbad 	bl	863c4 <__aeabi_dsub>
   84c6a:	4606      	mov	r6, r0
   84c6c:	9812      	ldr	r0, [sp, #72]	; 0x48
   84c6e:	9a04      	ldr	r2, [sp, #16]
   84c70:	3530      	adds	r5, #48	; 0x30
   84c72:	2801      	cmp	r0, #1
   84c74:	7015      	strb	r5, [r2, #0]
   84c76:	460f      	mov	r7, r1
   84c78:	f102 0501 	add.w	r5, r2, #1
   84c7c:	d026      	beq.n	84ccc <_dtoa_r+0xcb4>
   84c7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84c80:	9a04      	ldr	r2, [sp, #16]
   84c82:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   84c86:	4413      	add	r3, r2
   84c88:	f04f 0a00 	mov.w	sl, #0
   84c8c:	4699      	mov	r9, r3
   84c8e:	f8df b130 	ldr.w	fp, [pc, #304]	; 84dc0 <_dtoa_r+0xda8>
   84c92:	4652      	mov	r2, sl
   84c94:	465b      	mov	r3, fp
   84c96:	4630      	mov	r0, r6
   84c98:	4639      	mov	r1, r7
   84c9a:	f001 fd47 	bl	8672c <__aeabi_dmul>
   84c9e:	460f      	mov	r7, r1
   84ca0:	4606      	mov	r6, r0
   84ca2:	f001 fff3 	bl	86c8c <__aeabi_d2iz>
   84ca6:	4680      	mov	r8, r0
   84ca8:	f001 fcda 	bl	86660 <__aeabi_i2d>
   84cac:	4602      	mov	r2, r0
   84cae:	460b      	mov	r3, r1
   84cb0:	4630      	mov	r0, r6
   84cb2:	4639      	mov	r1, r7
   84cb4:	f001 fb86 	bl	863c4 <__aeabi_dsub>
   84cb8:	f108 0830 	add.w	r8, r8, #48	; 0x30
   84cbc:	f805 8b01 	strb.w	r8, [r5], #1
   84cc0:	454d      	cmp	r5, r9
   84cc2:	4606      	mov	r6, r0
   84cc4:	460f      	mov	r7, r1
   84cc6:	d1e4      	bne.n	84c92 <_dtoa_r+0xc7a>
   84cc8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84ccc:	2200      	movs	r2, #0
   84cce:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   84cd2:	4b3a      	ldr	r3, [pc, #232]	; (84dbc <_dtoa_r+0xda4>)
   84cd4:	f001 fb78 	bl	863c8 <__adddf3>
   84cd8:	4632      	mov	r2, r6
   84cda:	463b      	mov	r3, r7
   84cdc:	f001 ff98 	bl	86c10 <__aeabi_dcmplt>
   84ce0:	2800      	cmp	r0, #0
   84ce2:	d046      	beq.n	84d72 <_dtoa_r+0xd5a>
   84ce4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84ce6:	9302      	str	r3, [sp, #8]
   84ce8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   84cec:	f7ff bb42 	b.w	84374 <_dtoa_r+0x35c>
   84cf0:	f04f 0800 	mov.w	r8, #0
   84cf4:	4646      	mov	r6, r8
   84cf6:	e6a8      	b.n	84a4a <_dtoa_r+0xa32>
   84cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84cfa:	9a07      	ldr	r2, [sp, #28]
   84cfc:	1a9d      	subs	r5, r3, r2
   84cfe:	2300      	movs	r3, #0
   84d00:	f7ff bb70 	b.w	843e4 <_dtoa_r+0x3cc>
   84d04:	9b18      	ldr	r3, [sp, #96]	; 0x60
   84d06:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84d08:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   84d0c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   84d0e:	f7ff bb69 	b.w	843e4 <_dtoa_r+0x3cc>
   84d12:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   84d16:	f04f 0a02 	mov.w	sl, #2
   84d1a:	e56d      	b.n	847f8 <_dtoa_r+0x7e0>
   84d1c:	9b07      	ldr	r3, [sp, #28]
   84d1e:	2b00      	cmp	r3, #0
   84d20:	f43f aeb8 	beq.w	84a94 <_dtoa_r+0xa7c>
   84d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d26:	2b00      	cmp	r3, #0
   84d28:	f77f aede 	ble.w	84ae8 <_dtoa_r+0xad0>
   84d2c:	2200      	movs	r2, #0
   84d2e:	4b24      	ldr	r3, [pc, #144]	; (84dc0 <_dtoa_r+0xda8>)
   84d30:	4638      	mov	r0, r7
   84d32:	4641      	mov	r1, r8
   84d34:	f001 fcfa 	bl	8672c <__aeabi_dmul>
   84d38:	4607      	mov	r7, r0
   84d3a:	4688      	mov	r8, r1
   84d3c:	f10a 0001 	add.w	r0, sl, #1
   84d40:	f001 fc8e 	bl	86660 <__aeabi_i2d>
   84d44:	463a      	mov	r2, r7
   84d46:	4643      	mov	r3, r8
   84d48:	f001 fcf0 	bl	8672c <__aeabi_dmul>
   84d4c:	2200      	movs	r2, #0
   84d4e:	4b17      	ldr	r3, [pc, #92]	; (84dac <_dtoa_r+0xd94>)
   84d50:	f001 fb3a 	bl	863c8 <__adddf3>
   84d54:	9a02      	ldr	r2, [sp, #8]
   84d56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d58:	3a01      	subs	r2, #1
   84d5a:	4605      	mov	r5, r0
   84d5c:	9215      	str	r2, [sp, #84]	; 0x54
   84d5e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   84d62:	9312      	str	r3, [sp, #72]	; 0x48
   84d64:	e569      	b.n	8483a <_dtoa_r+0x822>
   84d66:	2239      	movs	r2, #57	; 0x39
   84d68:	46b3      	mov	fp, r6
   84d6a:	703a      	strb	r2, [r7, #0]
   84d6c:	9e08      	ldr	r6, [sp, #32]
   84d6e:	1c7d      	adds	r5, r7, #1
   84d70:	e4bf      	b.n	846f2 <_dtoa_r+0x6da>
   84d72:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   84d76:	2000      	movs	r0, #0
   84d78:	4910      	ldr	r1, [pc, #64]	; (84dbc <_dtoa_r+0xda4>)
   84d7a:	f001 fb23 	bl	863c4 <__aeabi_dsub>
   84d7e:	4632      	mov	r2, r6
   84d80:	463b      	mov	r3, r7
   84d82:	f001 ff63 	bl	86c4c <__aeabi_dcmpgt>
   84d86:	b908      	cbnz	r0, 84d8c <_dtoa_r+0xd74>
   84d88:	e6ae      	b.n	84ae8 <_dtoa_r+0xad0>
   84d8a:	4615      	mov	r5, r2
   84d8c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   84d90:	1e6a      	subs	r2, r5, #1
   84d92:	2b30      	cmp	r3, #48	; 0x30
   84d94:	d0f9      	beq.n	84d8a <_dtoa_r+0xd72>
   84d96:	e5d7      	b.n	84948 <_dtoa_r+0x930>
   84d98:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   84d9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84d9e:	9302      	str	r3, [sp, #8]
   84da0:	f7ff bae8 	b.w	84374 <_dtoa_r+0x35c>
   84da4:	970c      	str	r7, [sp, #48]	; 0x30
   84da6:	f7ff bba7 	b.w	844f8 <_dtoa_r+0x4e0>
   84daa:	bf00      	nop
   84dac:	401c0000 	.word	0x401c0000
   84db0:	40140000 	.word	0x40140000
   84db4:	000870c8 	.word	0x000870c8
   84db8:	000870a0 	.word	0x000870a0
   84dbc:	3fe00000 	.word	0x3fe00000
   84dc0:	40240000 	.word	0x40240000
   84dc4:	2b39      	cmp	r3, #57	; 0x39
   84dc6:	f8cd b020 	str.w	fp, [sp, #32]
   84dca:	46d0      	mov	r8, sl
   84dcc:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84dd0:	469a      	mov	sl, r3
   84dd2:	d0c8      	beq.n	84d66 <_dtoa_r+0xd4e>
   84dd4:	f1bb 0f00 	cmp.w	fp, #0
   84dd8:	f73f aec0 	bgt.w	84b5c <_dtoa_r+0xb44>
   84ddc:	e6c0      	b.n	84b60 <_dtoa_r+0xb48>
   84dde:	f47f aebf 	bne.w	84b60 <_dtoa_r+0xb48>
   84de2:	f01a 0f01 	tst.w	sl, #1
   84de6:	f43f aebb 	beq.w	84b60 <_dtoa_r+0xb48>
   84dea:	e6b3      	b.n	84b54 <_dtoa_r+0xb3c>
   84dec:	f04f 0800 	mov.w	r8, #0
   84df0:	4646      	mov	r6, r8
   84df2:	e5e8      	b.n	849c6 <_dtoa_r+0x9ae>
   84df4:	4631      	mov	r1, r6
   84df6:	2300      	movs	r3, #0
   84df8:	220a      	movs	r2, #10
   84dfa:	4620      	mov	r0, r4
   84dfc:	f000 fd2e 	bl	8585c <__multadd>
   84e00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e02:	4606      	mov	r6, r0
   84e04:	2b00      	cmp	r3, #0
   84e06:	dd07      	ble.n	84e18 <_dtoa_r+0xe00>
   84e08:	9307      	str	r3, [sp, #28]
   84e0a:	f7ff bbab 	b.w	84564 <_dtoa_r+0x54c>
   84e0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84e10:	2b02      	cmp	r3, #2
   84e12:	dc1f      	bgt.n	84e54 <_dtoa_r+0xe3c>
   84e14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e16:	e43c      	b.n	84692 <_dtoa_r+0x67a>
   84e18:	9b24      	ldr	r3, [sp, #144]	; 0x90
   84e1a:	2b02      	cmp	r3, #2
   84e1c:	dc1a      	bgt.n	84e54 <_dtoa_r+0xe3c>
   84e1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e20:	e7f2      	b.n	84e08 <_dtoa_r+0xdf0>
   84e22:	f43f ab81 	beq.w	84528 <_dtoa_r+0x510>
   84e26:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   84e2a:	e411      	b.n	84650 <_dtoa_r+0x638>
   84e2c:	2500      	movs	r5, #0
   84e2e:	4620      	mov	r0, r4
   84e30:	6465      	str	r5, [r4, #68]	; 0x44
   84e32:	4629      	mov	r1, r5
   84e34:	f000 fce2 	bl	857fc <_Balloc>
   84e38:	f04f 33ff 	mov.w	r3, #4294967295
   84e3c:	9307      	str	r3, [sp, #28]
   84e3e:	930f      	str	r3, [sp, #60]	; 0x3c
   84e40:	2301      	movs	r3, #1
   84e42:	9004      	str	r0, [sp, #16]
   84e44:	9525      	str	r5, [sp, #148]	; 0x94
   84e46:	6420      	str	r0, [r4, #64]	; 0x40
   84e48:	930b      	str	r3, [sp, #44]	; 0x2c
   84e4a:	f7ff b9e0 	b.w	8420e <_dtoa_r+0x1f6>
   84e4e:	2501      	movs	r5, #1
   84e50:	f7ff b9a8 	b.w	841a4 <_dtoa_r+0x18c>
   84e54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84e56:	9307      	str	r3, [sp, #28]
   84e58:	e5e8      	b.n	84a2c <_dtoa_r+0xa14>
   84e5a:	bf00      	nop

00084e5c <__libc_fini_array>:
   84e5c:	b538      	push	{r3, r4, r5, lr}
   84e5e:	4c0a      	ldr	r4, [pc, #40]	; (84e88 <__libc_fini_array+0x2c>)
   84e60:	4d0a      	ldr	r5, [pc, #40]	; (84e8c <__libc_fini_array+0x30>)
   84e62:	1b64      	subs	r4, r4, r5
   84e64:	10a4      	asrs	r4, r4, #2
   84e66:	d00a      	beq.n	84e7e <__libc_fini_array+0x22>
   84e68:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   84e6c:	3b01      	subs	r3, #1
   84e6e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   84e72:	3c01      	subs	r4, #1
   84e74:	f855 3904 	ldr.w	r3, [r5], #-4
   84e78:	4798      	blx	r3
   84e7a:	2c00      	cmp	r4, #0
   84e7c:	d1f9      	bne.n	84e72 <__libc_fini_array+0x16>
   84e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   84e82:	f002 ba17 	b.w	872b4 <_fini>
   84e86:	bf00      	nop
   84e88:	000872c4 	.word	0x000872c4
   84e8c:	000872c0 	.word	0x000872c0

00084e90 <_malloc_trim_r>:
   84e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   84e92:	460c      	mov	r4, r1
   84e94:	4f23      	ldr	r7, [pc, #140]	; (84f24 <_malloc_trim_r+0x94>)
   84e96:	4606      	mov	r6, r0
   84e98:	f000 fca4 	bl	857e4 <__malloc_lock>
   84e9c:	68bb      	ldr	r3, [r7, #8]
   84e9e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   84ea2:	685d      	ldr	r5, [r3, #4]
   84ea4:	310f      	adds	r1, #15
   84ea6:	f025 0503 	bic.w	r5, r5, #3
   84eaa:	4429      	add	r1, r5
   84eac:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   84eb0:	f021 010f 	bic.w	r1, r1, #15
   84eb4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   84eb8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   84ebc:	db07      	blt.n	84ece <_malloc_trim_r+0x3e>
   84ebe:	2100      	movs	r1, #0
   84ec0:	4630      	mov	r0, r6
   84ec2:	f001 f94d 	bl	86160 <_sbrk_r>
   84ec6:	68bb      	ldr	r3, [r7, #8]
   84ec8:	442b      	add	r3, r5
   84eca:	4298      	cmp	r0, r3
   84ecc:	d004      	beq.n	84ed8 <_malloc_trim_r+0x48>
   84ece:	4630      	mov	r0, r6
   84ed0:	f000 fc8e 	bl	857f0 <__malloc_unlock>
   84ed4:	2000      	movs	r0, #0
   84ed6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84ed8:	4261      	negs	r1, r4
   84eda:	4630      	mov	r0, r6
   84edc:	f001 f940 	bl	86160 <_sbrk_r>
   84ee0:	3001      	adds	r0, #1
   84ee2:	d00d      	beq.n	84f00 <_malloc_trim_r+0x70>
   84ee4:	4b10      	ldr	r3, [pc, #64]	; (84f28 <_malloc_trim_r+0x98>)
   84ee6:	68ba      	ldr	r2, [r7, #8]
   84ee8:	6819      	ldr	r1, [r3, #0]
   84eea:	1b2d      	subs	r5, r5, r4
   84eec:	f045 0501 	orr.w	r5, r5, #1
   84ef0:	4630      	mov	r0, r6
   84ef2:	1b09      	subs	r1, r1, r4
   84ef4:	6055      	str	r5, [r2, #4]
   84ef6:	6019      	str	r1, [r3, #0]
   84ef8:	f000 fc7a 	bl	857f0 <__malloc_unlock>
   84efc:	2001      	movs	r0, #1
   84efe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84f00:	2100      	movs	r1, #0
   84f02:	4630      	mov	r0, r6
   84f04:	f001 f92c 	bl	86160 <_sbrk_r>
   84f08:	68ba      	ldr	r2, [r7, #8]
   84f0a:	1a83      	subs	r3, r0, r2
   84f0c:	2b0f      	cmp	r3, #15
   84f0e:	ddde      	ble.n	84ece <_malloc_trim_r+0x3e>
   84f10:	4c06      	ldr	r4, [pc, #24]	; (84f2c <_malloc_trim_r+0x9c>)
   84f12:	4905      	ldr	r1, [pc, #20]	; (84f28 <_malloc_trim_r+0x98>)
   84f14:	6824      	ldr	r4, [r4, #0]
   84f16:	f043 0301 	orr.w	r3, r3, #1
   84f1a:	1b00      	subs	r0, r0, r4
   84f1c:	6053      	str	r3, [r2, #4]
   84f1e:	6008      	str	r0, [r1, #0]
   84f20:	e7d5      	b.n	84ece <_malloc_trim_r+0x3e>
   84f22:	bf00      	nop
   84f24:	20070770 	.word	0x20070770
   84f28:	20070dc4 	.word	0x20070dc4
   84f2c:	20070b78 	.word	0x20070b78

00084f30 <_free_r>:
   84f30:	2900      	cmp	r1, #0
   84f32:	d044      	beq.n	84fbe <_free_r+0x8e>
   84f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   84f38:	460d      	mov	r5, r1
   84f3a:	4680      	mov	r8, r0
   84f3c:	f000 fc52 	bl	857e4 <__malloc_lock>
   84f40:	f855 7c04 	ldr.w	r7, [r5, #-4]
   84f44:	4969      	ldr	r1, [pc, #420]	; (850ec <_free_r+0x1bc>)
   84f46:	f1a5 0408 	sub.w	r4, r5, #8
   84f4a:	f027 0301 	bic.w	r3, r7, #1
   84f4e:	18e2      	adds	r2, r4, r3
   84f50:	688e      	ldr	r6, [r1, #8]
   84f52:	6850      	ldr	r0, [r2, #4]
   84f54:	42b2      	cmp	r2, r6
   84f56:	f020 0003 	bic.w	r0, r0, #3
   84f5a:	d05e      	beq.n	8501a <_free_r+0xea>
   84f5c:	07fe      	lsls	r6, r7, #31
   84f5e:	6050      	str	r0, [r2, #4]
   84f60:	d40b      	bmi.n	84f7a <_free_r+0x4a>
   84f62:	f855 7c08 	ldr.w	r7, [r5, #-8]
   84f66:	f101 0e08 	add.w	lr, r1, #8
   84f6a:	1be4      	subs	r4, r4, r7
   84f6c:	68a5      	ldr	r5, [r4, #8]
   84f6e:	443b      	add	r3, r7
   84f70:	4575      	cmp	r5, lr
   84f72:	d06d      	beq.n	85050 <_free_r+0x120>
   84f74:	68e7      	ldr	r7, [r4, #12]
   84f76:	60ef      	str	r7, [r5, #12]
   84f78:	60bd      	str	r5, [r7, #8]
   84f7a:	1815      	adds	r5, r2, r0
   84f7c:	686d      	ldr	r5, [r5, #4]
   84f7e:	07ed      	lsls	r5, r5, #31
   84f80:	d53e      	bpl.n	85000 <_free_r+0xd0>
   84f82:	f043 0201 	orr.w	r2, r3, #1
   84f86:	6062      	str	r2, [r4, #4]
   84f88:	50e3      	str	r3, [r4, r3]
   84f8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   84f8e:	d217      	bcs.n	84fc0 <_free_r+0x90>
   84f90:	2201      	movs	r2, #1
   84f92:	08db      	lsrs	r3, r3, #3
   84f94:	1098      	asrs	r0, r3, #2
   84f96:	684d      	ldr	r5, [r1, #4]
   84f98:	4413      	add	r3, r2
   84f9a:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   84f9e:	4082      	lsls	r2, r0
   84fa0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   84fa4:	432a      	orrs	r2, r5
   84fa6:	3808      	subs	r0, #8
   84fa8:	60e0      	str	r0, [r4, #12]
   84faa:	60a7      	str	r7, [r4, #8]
   84fac:	604a      	str	r2, [r1, #4]
   84fae:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   84fb2:	60fc      	str	r4, [r7, #12]
   84fb4:	4640      	mov	r0, r8
   84fb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84fba:	f000 bc19 	b.w	857f0 <__malloc_unlock>
   84fbe:	4770      	bx	lr
   84fc0:	0a5a      	lsrs	r2, r3, #9
   84fc2:	2a04      	cmp	r2, #4
   84fc4:	d852      	bhi.n	8506c <_free_r+0x13c>
   84fc6:	099a      	lsrs	r2, r3, #6
   84fc8:	f102 0739 	add.w	r7, r2, #57	; 0x39
   84fcc:	00ff      	lsls	r7, r7, #3
   84fce:	f102 0538 	add.w	r5, r2, #56	; 0x38
   84fd2:	19c8      	adds	r0, r1, r7
   84fd4:	59ca      	ldr	r2, [r1, r7]
   84fd6:	3808      	subs	r0, #8
   84fd8:	4290      	cmp	r0, r2
   84fda:	d04f      	beq.n	8507c <_free_r+0x14c>
   84fdc:	6851      	ldr	r1, [r2, #4]
   84fde:	f021 0103 	bic.w	r1, r1, #3
   84fe2:	428b      	cmp	r3, r1
   84fe4:	d232      	bcs.n	8504c <_free_r+0x11c>
   84fe6:	6892      	ldr	r2, [r2, #8]
   84fe8:	4290      	cmp	r0, r2
   84fea:	d1f7      	bne.n	84fdc <_free_r+0xac>
   84fec:	68c3      	ldr	r3, [r0, #12]
   84fee:	60a0      	str	r0, [r4, #8]
   84ff0:	60e3      	str	r3, [r4, #12]
   84ff2:	609c      	str	r4, [r3, #8]
   84ff4:	60c4      	str	r4, [r0, #12]
   84ff6:	4640      	mov	r0, r8
   84ff8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   84ffc:	f000 bbf8 	b.w	857f0 <__malloc_unlock>
   85000:	6895      	ldr	r5, [r2, #8]
   85002:	4f3b      	ldr	r7, [pc, #236]	; (850f0 <_free_r+0x1c0>)
   85004:	4403      	add	r3, r0
   85006:	42bd      	cmp	r5, r7
   85008:	d040      	beq.n	8508c <_free_r+0x15c>
   8500a:	68d0      	ldr	r0, [r2, #12]
   8500c:	f043 0201 	orr.w	r2, r3, #1
   85010:	60e8      	str	r0, [r5, #12]
   85012:	6085      	str	r5, [r0, #8]
   85014:	6062      	str	r2, [r4, #4]
   85016:	50e3      	str	r3, [r4, r3]
   85018:	e7b7      	b.n	84f8a <_free_r+0x5a>
   8501a:	07ff      	lsls	r7, r7, #31
   8501c:	4403      	add	r3, r0
   8501e:	d407      	bmi.n	85030 <_free_r+0x100>
   85020:	f855 5c08 	ldr.w	r5, [r5, #-8]
   85024:	1b64      	subs	r4, r4, r5
   85026:	68e2      	ldr	r2, [r4, #12]
   85028:	68a0      	ldr	r0, [r4, #8]
   8502a:	442b      	add	r3, r5
   8502c:	60c2      	str	r2, [r0, #12]
   8502e:	6090      	str	r0, [r2, #8]
   85030:	4a30      	ldr	r2, [pc, #192]	; (850f4 <_free_r+0x1c4>)
   85032:	f043 0001 	orr.w	r0, r3, #1
   85036:	6812      	ldr	r2, [r2, #0]
   85038:	6060      	str	r0, [r4, #4]
   8503a:	4293      	cmp	r3, r2
   8503c:	608c      	str	r4, [r1, #8]
   8503e:	d3b9      	bcc.n	84fb4 <_free_r+0x84>
   85040:	4b2d      	ldr	r3, [pc, #180]	; (850f8 <_free_r+0x1c8>)
   85042:	4640      	mov	r0, r8
   85044:	6819      	ldr	r1, [r3, #0]
   85046:	f7ff ff23 	bl	84e90 <_malloc_trim_r>
   8504a:	e7b3      	b.n	84fb4 <_free_r+0x84>
   8504c:	4610      	mov	r0, r2
   8504e:	e7cd      	b.n	84fec <_free_r+0xbc>
   85050:	1811      	adds	r1, r2, r0
   85052:	6849      	ldr	r1, [r1, #4]
   85054:	07c9      	lsls	r1, r1, #31
   85056:	d444      	bmi.n	850e2 <_free_r+0x1b2>
   85058:	6891      	ldr	r1, [r2, #8]
   8505a:	4403      	add	r3, r0
   8505c:	68d2      	ldr	r2, [r2, #12]
   8505e:	f043 0001 	orr.w	r0, r3, #1
   85062:	60ca      	str	r2, [r1, #12]
   85064:	6091      	str	r1, [r2, #8]
   85066:	6060      	str	r0, [r4, #4]
   85068:	50e3      	str	r3, [r4, r3]
   8506a:	e7a3      	b.n	84fb4 <_free_r+0x84>
   8506c:	2a14      	cmp	r2, #20
   8506e:	d816      	bhi.n	8509e <_free_r+0x16e>
   85070:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   85074:	00ff      	lsls	r7, r7, #3
   85076:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8507a:	e7aa      	b.n	84fd2 <_free_r+0xa2>
   8507c:	2301      	movs	r3, #1
   8507e:	10aa      	asrs	r2, r5, #2
   85080:	684d      	ldr	r5, [r1, #4]
   85082:	4093      	lsls	r3, r2
   85084:	432b      	orrs	r3, r5
   85086:	604b      	str	r3, [r1, #4]
   85088:	4603      	mov	r3, r0
   8508a:	e7b0      	b.n	84fee <_free_r+0xbe>
   8508c:	f043 0201 	orr.w	r2, r3, #1
   85090:	614c      	str	r4, [r1, #20]
   85092:	610c      	str	r4, [r1, #16]
   85094:	60e5      	str	r5, [r4, #12]
   85096:	60a5      	str	r5, [r4, #8]
   85098:	6062      	str	r2, [r4, #4]
   8509a:	50e3      	str	r3, [r4, r3]
   8509c:	e78a      	b.n	84fb4 <_free_r+0x84>
   8509e:	2a54      	cmp	r2, #84	; 0x54
   850a0:	d806      	bhi.n	850b0 <_free_r+0x180>
   850a2:	0b1a      	lsrs	r2, r3, #12
   850a4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   850a8:	00ff      	lsls	r7, r7, #3
   850aa:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   850ae:	e790      	b.n	84fd2 <_free_r+0xa2>
   850b0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   850b4:	d806      	bhi.n	850c4 <_free_r+0x194>
   850b6:	0bda      	lsrs	r2, r3, #15
   850b8:	f102 0778 	add.w	r7, r2, #120	; 0x78
   850bc:	00ff      	lsls	r7, r7, #3
   850be:	f102 0577 	add.w	r5, r2, #119	; 0x77
   850c2:	e786      	b.n	84fd2 <_free_r+0xa2>
   850c4:	f240 5054 	movw	r0, #1364	; 0x554
   850c8:	4282      	cmp	r2, r0
   850ca:	d806      	bhi.n	850da <_free_r+0x1aa>
   850cc:	0c9a      	lsrs	r2, r3, #18
   850ce:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   850d2:	00ff      	lsls	r7, r7, #3
   850d4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   850d8:	e77b      	b.n	84fd2 <_free_r+0xa2>
   850da:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   850de:	257e      	movs	r5, #126	; 0x7e
   850e0:	e777      	b.n	84fd2 <_free_r+0xa2>
   850e2:	f043 0101 	orr.w	r1, r3, #1
   850e6:	6061      	str	r1, [r4, #4]
   850e8:	6013      	str	r3, [r2, #0]
   850ea:	e763      	b.n	84fb4 <_free_r+0x84>
   850ec:	20070770 	.word	0x20070770
   850f0:	20070778 	.word	0x20070778
   850f4:	20070b7c 	.word	0x20070b7c
   850f8:	20070df4 	.word	0x20070df4

000850fc <_localeconv_r>:
   850fc:	4a04      	ldr	r2, [pc, #16]	; (85110 <_localeconv_r+0x14>)
   850fe:	4b05      	ldr	r3, [pc, #20]	; (85114 <_localeconv_r+0x18>)
   85100:	6812      	ldr	r2, [r2, #0]
   85102:	6b50      	ldr	r0, [r2, #52]	; 0x34
   85104:	2800      	cmp	r0, #0
   85106:	bf08      	it	eq
   85108:	4618      	moveq	r0, r3
   8510a:	30f0      	adds	r0, #240	; 0xf0
   8510c:	4770      	bx	lr
   8510e:	bf00      	nop
   85110:	200701d4 	.word	0x200701d4
   85114:	20070604 	.word	0x20070604

00085118 <__retarget_lock_acquire_recursive>:
   85118:	4770      	bx	lr
   8511a:	bf00      	nop

0008511c <__retarget_lock_release_recursive>:
   8511c:	4770      	bx	lr
   8511e:	bf00      	nop

00085120 <_malloc_r>:
   85120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85124:	f101 060b 	add.w	r6, r1, #11
   85128:	2e16      	cmp	r6, #22
   8512a:	b083      	sub	sp, #12
   8512c:	4605      	mov	r5, r0
   8512e:	f240 809e 	bls.w	8526e <_malloc_r+0x14e>
   85132:	f036 0607 	bics.w	r6, r6, #7
   85136:	f100 80bd 	bmi.w	852b4 <_malloc_r+0x194>
   8513a:	42b1      	cmp	r1, r6
   8513c:	f200 80ba 	bhi.w	852b4 <_malloc_r+0x194>
   85140:	f000 fb50 	bl	857e4 <__malloc_lock>
   85144:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   85148:	f0c0 8285 	bcc.w	85656 <_malloc_r+0x536>
   8514c:	0a73      	lsrs	r3, r6, #9
   8514e:	f000 80b8 	beq.w	852c2 <_malloc_r+0x1a2>
   85152:	2b04      	cmp	r3, #4
   85154:	f200 816c 	bhi.w	85430 <_malloc_r+0x310>
   85158:	09b3      	lsrs	r3, r6, #6
   8515a:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8515e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   85162:	00c1      	lsls	r1, r0, #3
   85164:	4fb8      	ldr	r7, [pc, #736]	; (85448 <_malloc_r+0x328>)
   85166:	4439      	add	r1, r7
   85168:	684c      	ldr	r4, [r1, #4]
   8516a:	3908      	subs	r1, #8
   8516c:	42a1      	cmp	r1, r4
   8516e:	d106      	bne.n	8517e <_malloc_r+0x5e>
   85170:	e00c      	b.n	8518c <_malloc_r+0x6c>
   85172:	2a00      	cmp	r2, #0
   85174:	f280 80ab 	bge.w	852ce <_malloc_r+0x1ae>
   85178:	68e4      	ldr	r4, [r4, #12]
   8517a:	42a1      	cmp	r1, r4
   8517c:	d006      	beq.n	8518c <_malloc_r+0x6c>
   8517e:	6863      	ldr	r3, [r4, #4]
   85180:	f023 0303 	bic.w	r3, r3, #3
   85184:	1b9a      	subs	r2, r3, r6
   85186:	2a0f      	cmp	r2, #15
   85188:	ddf3      	ble.n	85172 <_malloc_r+0x52>
   8518a:	4670      	mov	r0, lr
   8518c:	693c      	ldr	r4, [r7, #16]
   8518e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 8545c <_malloc_r+0x33c>
   85192:	4574      	cmp	r4, lr
   85194:	f000 819e 	beq.w	854d4 <_malloc_r+0x3b4>
   85198:	6863      	ldr	r3, [r4, #4]
   8519a:	f023 0303 	bic.w	r3, r3, #3
   8519e:	1b9a      	subs	r2, r3, r6
   851a0:	2a0f      	cmp	r2, #15
   851a2:	f300 8183 	bgt.w	854ac <_malloc_r+0x38c>
   851a6:	2a00      	cmp	r2, #0
   851a8:	f8c7 e014 	str.w	lr, [r7, #20]
   851ac:	f8c7 e010 	str.w	lr, [r7, #16]
   851b0:	f280 8091 	bge.w	852d6 <_malloc_r+0x1b6>
   851b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   851b8:	f080 8154 	bcs.w	85464 <_malloc_r+0x344>
   851bc:	2201      	movs	r2, #1
   851be:	08db      	lsrs	r3, r3, #3
   851c0:	6879      	ldr	r1, [r7, #4]
   851c2:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   851c6:	4413      	add	r3, r2
   851c8:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   851cc:	fa02 f20c 	lsl.w	r2, r2, ip
   851d0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   851d4:	430a      	orrs	r2, r1
   851d6:	f1ac 0108 	sub.w	r1, ip, #8
   851da:	60e1      	str	r1, [r4, #12]
   851dc:	f8c4 8008 	str.w	r8, [r4, #8]
   851e0:	607a      	str	r2, [r7, #4]
   851e2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   851e6:	f8c8 400c 	str.w	r4, [r8, #12]
   851ea:	2401      	movs	r4, #1
   851ec:	1083      	asrs	r3, r0, #2
   851ee:	409c      	lsls	r4, r3
   851f0:	4294      	cmp	r4, r2
   851f2:	d87d      	bhi.n	852f0 <_malloc_r+0x1d0>
   851f4:	4214      	tst	r4, r2
   851f6:	d106      	bne.n	85206 <_malloc_r+0xe6>
   851f8:	f020 0003 	bic.w	r0, r0, #3
   851fc:	0064      	lsls	r4, r4, #1
   851fe:	4214      	tst	r4, r2
   85200:	f100 0004 	add.w	r0, r0, #4
   85204:	d0fa      	beq.n	851fc <_malloc_r+0xdc>
   85206:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   8520a:	46cc      	mov	ip, r9
   8520c:	4680      	mov	r8, r0
   8520e:	f8dc 300c 	ldr.w	r3, [ip, #12]
   85212:	459c      	cmp	ip, r3
   85214:	d107      	bne.n	85226 <_malloc_r+0x106>
   85216:	e15f      	b.n	854d8 <_malloc_r+0x3b8>
   85218:	2a00      	cmp	r2, #0
   8521a:	f280 816d 	bge.w	854f8 <_malloc_r+0x3d8>
   8521e:	68db      	ldr	r3, [r3, #12]
   85220:	459c      	cmp	ip, r3
   85222:	f000 8159 	beq.w	854d8 <_malloc_r+0x3b8>
   85226:	6859      	ldr	r1, [r3, #4]
   85228:	f021 0103 	bic.w	r1, r1, #3
   8522c:	1b8a      	subs	r2, r1, r6
   8522e:	2a0f      	cmp	r2, #15
   85230:	ddf2      	ble.n	85218 <_malloc_r+0xf8>
   85232:	68dc      	ldr	r4, [r3, #12]
   85234:	f8d3 c008 	ldr.w	ip, [r3, #8]
   85238:	f046 0801 	orr.w	r8, r6, #1
   8523c:	4628      	mov	r0, r5
   8523e:	441e      	add	r6, r3
   85240:	f042 0501 	orr.w	r5, r2, #1
   85244:	f8c3 8004 	str.w	r8, [r3, #4]
   85248:	f8cc 400c 	str.w	r4, [ip, #12]
   8524c:	f8c4 c008 	str.w	ip, [r4, #8]
   85250:	617e      	str	r6, [r7, #20]
   85252:	613e      	str	r6, [r7, #16]
   85254:	f8c6 e00c 	str.w	lr, [r6, #12]
   85258:	f8c6 e008 	str.w	lr, [r6, #8]
   8525c:	6075      	str	r5, [r6, #4]
   8525e:	505a      	str	r2, [r3, r1]
   85260:	9300      	str	r3, [sp, #0]
   85262:	f000 fac5 	bl	857f0 <__malloc_unlock>
   85266:	9b00      	ldr	r3, [sp, #0]
   85268:	f103 0408 	add.w	r4, r3, #8
   8526c:	e01e      	b.n	852ac <_malloc_r+0x18c>
   8526e:	2910      	cmp	r1, #16
   85270:	d820      	bhi.n	852b4 <_malloc_r+0x194>
   85272:	f000 fab7 	bl	857e4 <__malloc_lock>
   85276:	2610      	movs	r6, #16
   85278:	2318      	movs	r3, #24
   8527a:	2002      	movs	r0, #2
   8527c:	4f72      	ldr	r7, [pc, #456]	; (85448 <_malloc_r+0x328>)
   8527e:	443b      	add	r3, r7
   85280:	685c      	ldr	r4, [r3, #4]
   85282:	f1a3 0208 	sub.w	r2, r3, #8
   85286:	4294      	cmp	r4, r2
   85288:	f000 812f 	beq.w	854ea <_malloc_r+0x3ca>
   8528c:	6863      	ldr	r3, [r4, #4]
   8528e:	68e1      	ldr	r1, [r4, #12]
   85290:	f023 0303 	bic.w	r3, r3, #3
   85294:	4423      	add	r3, r4
   85296:	685a      	ldr	r2, [r3, #4]
   85298:	68a6      	ldr	r6, [r4, #8]
   8529a:	f042 0201 	orr.w	r2, r2, #1
   8529e:	60f1      	str	r1, [r6, #12]
   852a0:	4628      	mov	r0, r5
   852a2:	608e      	str	r6, [r1, #8]
   852a4:	605a      	str	r2, [r3, #4]
   852a6:	f000 faa3 	bl	857f0 <__malloc_unlock>
   852aa:	3408      	adds	r4, #8
   852ac:	4620      	mov	r0, r4
   852ae:	b003      	add	sp, #12
   852b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   852b4:	2400      	movs	r4, #0
   852b6:	230c      	movs	r3, #12
   852b8:	4620      	mov	r0, r4
   852ba:	602b      	str	r3, [r5, #0]
   852bc:	b003      	add	sp, #12
   852be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   852c2:	2040      	movs	r0, #64	; 0x40
   852c4:	f44f 7100 	mov.w	r1, #512	; 0x200
   852c8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   852cc:	e74a      	b.n	85164 <_malloc_r+0x44>
   852ce:	4423      	add	r3, r4
   852d0:	685a      	ldr	r2, [r3, #4]
   852d2:	68e1      	ldr	r1, [r4, #12]
   852d4:	e7e0      	b.n	85298 <_malloc_r+0x178>
   852d6:	4423      	add	r3, r4
   852d8:	685a      	ldr	r2, [r3, #4]
   852da:	4628      	mov	r0, r5
   852dc:	f042 0201 	orr.w	r2, r2, #1
   852e0:	605a      	str	r2, [r3, #4]
   852e2:	3408      	adds	r4, #8
   852e4:	f000 fa84 	bl	857f0 <__malloc_unlock>
   852e8:	4620      	mov	r0, r4
   852ea:	b003      	add	sp, #12
   852ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   852f0:	68bc      	ldr	r4, [r7, #8]
   852f2:	6863      	ldr	r3, [r4, #4]
   852f4:	f023 0803 	bic.w	r8, r3, #3
   852f8:	45b0      	cmp	r8, r6
   852fa:	d304      	bcc.n	85306 <_malloc_r+0x1e6>
   852fc:	eba8 0306 	sub.w	r3, r8, r6
   85300:	2b0f      	cmp	r3, #15
   85302:	f300 8085 	bgt.w	85410 <_malloc_r+0x2f0>
   85306:	f8df 9158 	ldr.w	r9, [pc, #344]	; 85460 <_malloc_r+0x340>
   8530a:	4b50      	ldr	r3, [pc, #320]	; (8544c <_malloc_r+0x32c>)
   8530c:	f8d9 2000 	ldr.w	r2, [r9]
   85310:	681b      	ldr	r3, [r3, #0]
   85312:	3201      	adds	r2, #1
   85314:	4433      	add	r3, r6
   85316:	eb04 0a08 	add.w	sl, r4, r8
   8531a:	f000 8154 	beq.w	855c6 <_malloc_r+0x4a6>
   8531e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   85322:	330f      	adds	r3, #15
   85324:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   85328:	f02b 0b0f 	bic.w	fp, fp, #15
   8532c:	4659      	mov	r1, fp
   8532e:	4628      	mov	r0, r5
   85330:	f000 ff16 	bl	86160 <_sbrk_r>
   85334:	1c41      	adds	r1, r0, #1
   85336:	4602      	mov	r2, r0
   85338:	f000 80fb 	beq.w	85532 <_malloc_r+0x412>
   8533c:	4582      	cmp	sl, r0
   8533e:	f200 80f6 	bhi.w	8552e <_malloc_r+0x40e>
   85342:	4b43      	ldr	r3, [pc, #268]	; (85450 <_malloc_r+0x330>)
   85344:	6819      	ldr	r1, [r3, #0]
   85346:	4459      	add	r1, fp
   85348:	6019      	str	r1, [r3, #0]
   8534a:	f000 814c 	beq.w	855e6 <_malloc_r+0x4c6>
   8534e:	f8d9 0000 	ldr.w	r0, [r9]
   85352:	3001      	adds	r0, #1
   85354:	bf1b      	ittet	ne
   85356:	eba2 0a0a 	subne.w	sl, r2, sl
   8535a:	4451      	addne	r1, sl
   8535c:	f8c9 2000 	streq.w	r2, [r9]
   85360:	6019      	strne	r1, [r3, #0]
   85362:	f012 0107 	ands.w	r1, r2, #7
   85366:	f000 8114 	beq.w	85592 <_malloc_r+0x472>
   8536a:	f1c1 0008 	rsb	r0, r1, #8
   8536e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   85372:	4402      	add	r2, r0
   85374:	3108      	adds	r1, #8
   85376:	eb02 090b 	add.w	r9, r2, fp
   8537a:	f3c9 090b 	ubfx	r9, r9, #0, #12
   8537e:	eba1 0909 	sub.w	r9, r1, r9
   85382:	4649      	mov	r1, r9
   85384:	4628      	mov	r0, r5
   85386:	9301      	str	r3, [sp, #4]
   85388:	9200      	str	r2, [sp, #0]
   8538a:	f000 fee9 	bl	86160 <_sbrk_r>
   8538e:	1c43      	adds	r3, r0, #1
   85390:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85394:	f000 8142 	beq.w	8561c <_malloc_r+0x4fc>
   85398:	1a80      	subs	r0, r0, r2
   8539a:	4448      	add	r0, r9
   8539c:	f040 0001 	orr.w	r0, r0, #1
   853a0:	6819      	ldr	r1, [r3, #0]
   853a2:	42bc      	cmp	r4, r7
   853a4:	4449      	add	r1, r9
   853a6:	60ba      	str	r2, [r7, #8]
   853a8:	6019      	str	r1, [r3, #0]
   853aa:	6050      	str	r0, [r2, #4]
   853ac:	d017      	beq.n	853de <_malloc_r+0x2be>
   853ae:	f1b8 0f0f 	cmp.w	r8, #15
   853b2:	f240 80fa 	bls.w	855aa <_malloc_r+0x48a>
   853b6:	f04f 0c05 	mov.w	ip, #5
   853ba:	6862      	ldr	r2, [r4, #4]
   853bc:	f1a8 000c 	sub.w	r0, r8, #12
   853c0:	f020 0007 	bic.w	r0, r0, #7
   853c4:	f002 0201 	and.w	r2, r2, #1
   853c8:	eb04 0e00 	add.w	lr, r4, r0
   853cc:	4302      	orrs	r2, r0
   853ce:	280f      	cmp	r0, #15
   853d0:	6062      	str	r2, [r4, #4]
   853d2:	f8ce c004 	str.w	ip, [lr, #4]
   853d6:	f8ce c008 	str.w	ip, [lr, #8]
   853da:	f200 8116 	bhi.w	8560a <_malloc_r+0x4ea>
   853de:	4b1d      	ldr	r3, [pc, #116]	; (85454 <_malloc_r+0x334>)
   853e0:	68bc      	ldr	r4, [r7, #8]
   853e2:	681a      	ldr	r2, [r3, #0]
   853e4:	4291      	cmp	r1, r2
   853e6:	bf88      	it	hi
   853e8:	6019      	strhi	r1, [r3, #0]
   853ea:	4b1b      	ldr	r3, [pc, #108]	; (85458 <_malloc_r+0x338>)
   853ec:	681a      	ldr	r2, [r3, #0]
   853ee:	4291      	cmp	r1, r2
   853f0:	6862      	ldr	r2, [r4, #4]
   853f2:	bf88      	it	hi
   853f4:	6019      	strhi	r1, [r3, #0]
   853f6:	f022 0203 	bic.w	r2, r2, #3
   853fa:	4296      	cmp	r6, r2
   853fc:	eba2 0306 	sub.w	r3, r2, r6
   85400:	d801      	bhi.n	85406 <_malloc_r+0x2e6>
   85402:	2b0f      	cmp	r3, #15
   85404:	dc04      	bgt.n	85410 <_malloc_r+0x2f0>
   85406:	4628      	mov	r0, r5
   85408:	f000 f9f2 	bl	857f0 <__malloc_unlock>
   8540c:	2400      	movs	r4, #0
   8540e:	e74d      	b.n	852ac <_malloc_r+0x18c>
   85410:	f046 0201 	orr.w	r2, r6, #1
   85414:	f043 0301 	orr.w	r3, r3, #1
   85418:	4426      	add	r6, r4
   8541a:	6062      	str	r2, [r4, #4]
   8541c:	4628      	mov	r0, r5
   8541e:	60be      	str	r6, [r7, #8]
   85420:	3408      	adds	r4, #8
   85422:	6073      	str	r3, [r6, #4]
   85424:	f000 f9e4 	bl	857f0 <__malloc_unlock>
   85428:	4620      	mov	r0, r4
   8542a:	b003      	add	sp, #12
   8542c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85430:	2b14      	cmp	r3, #20
   85432:	d970      	bls.n	85516 <_malloc_r+0x3f6>
   85434:	2b54      	cmp	r3, #84	; 0x54
   85436:	f200 80a2 	bhi.w	8557e <_malloc_r+0x45e>
   8543a:	0b33      	lsrs	r3, r6, #12
   8543c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   85440:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   85444:	00c1      	lsls	r1, r0, #3
   85446:	e68d      	b.n	85164 <_malloc_r+0x44>
   85448:	20070770 	.word	0x20070770
   8544c:	20070df4 	.word	0x20070df4
   85450:	20070dc4 	.word	0x20070dc4
   85454:	20070dec 	.word	0x20070dec
   85458:	20070df0 	.word	0x20070df0
   8545c:	20070778 	.word	0x20070778
   85460:	20070b78 	.word	0x20070b78
   85464:	0a5a      	lsrs	r2, r3, #9
   85466:	2a04      	cmp	r2, #4
   85468:	d95b      	bls.n	85522 <_malloc_r+0x402>
   8546a:	2a14      	cmp	r2, #20
   8546c:	f200 80ae 	bhi.w	855cc <_malloc_r+0x4ac>
   85470:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   85474:	00c9      	lsls	r1, r1, #3
   85476:	325b      	adds	r2, #91	; 0x5b
   85478:	eb07 0c01 	add.w	ip, r7, r1
   8547c:	5879      	ldr	r1, [r7, r1]
   8547e:	f1ac 0c08 	sub.w	ip, ip, #8
   85482:	458c      	cmp	ip, r1
   85484:	f000 8088 	beq.w	85598 <_malloc_r+0x478>
   85488:	684a      	ldr	r2, [r1, #4]
   8548a:	f022 0203 	bic.w	r2, r2, #3
   8548e:	4293      	cmp	r3, r2
   85490:	d273      	bcs.n	8557a <_malloc_r+0x45a>
   85492:	6889      	ldr	r1, [r1, #8]
   85494:	458c      	cmp	ip, r1
   85496:	d1f7      	bne.n	85488 <_malloc_r+0x368>
   85498:	f8dc 300c 	ldr.w	r3, [ip, #12]
   8549c:	687a      	ldr	r2, [r7, #4]
   8549e:	60e3      	str	r3, [r4, #12]
   854a0:	f8c4 c008 	str.w	ip, [r4, #8]
   854a4:	609c      	str	r4, [r3, #8]
   854a6:	f8cc 400c 	str.w	r4, [ip, #12]
   854aa:	e69e      	b.n	851ea <_malloc_r+0xca>
   854ac:	f046 0c01 	orr.w	ip, r6, #1
   854b0:	f042 0101 	orr.w	r1, r2, #1
   854b4:	4426      	add	r6, r4
   854b6:	f8c4 c004 	str.w	ip, [r4, #4]
   854ba:	4628      	mov	r0, r5
   854bc:	617e      	str	r6, [r7, #20]
   854be:	613e      	str	r6, [r7, #16]
   854c0:	f8c6 e00c 	str.w	lr, [r6, #12]
   854c4:	f8c6 e008 	str.w	lr, [r6, #8]
   854c8:	6071      	str	r1, [r6, #4]
   854ca:	50e2      	str	r2, [r4, r3]
   854cc:	f000 f990 	bl	857f0 <__malloc_unlock>
   854d0:	3408      	adds	r4, #8
   854d2:	e6eb      	b.n	852ac <_malloc_r+0x18c>
   854d4:	687a      	ldr	r2, [r7, #4]
   854d6:	e688      	b.n	851ea <_malloc_r+0xca>
   854d8:	f108 0801 	add.w	r8, r8, #1
   854dc:	f018 0f03 	tst.w	r8, #3
   854e0:	f10c 0c08 	add.w	ip, ip, #8
   854e4:	f47f ae93 	bne.w	8520e <_malloc_r+0xee>
   854e8:	e02d      	b.n	85546 <_malloc_r+0x426>
   854ea:	68dc      	ldr	r4, [r3, #12]
   854ec:	42a3      	cmp	r3, r4
   854ee:	bf08      	it	eq
   854f0:	3002      	addeq	r0, #2
   854f2:	f43f ae4b 	beq.w	8518c <_malloc_r+0x6c>
   854f6:	e6c9      	b.n	8528c <_malloc_r+0x16c>
   854f8:	461c      	mov	r4, r3
   854fa:	4419      	add	r1, r3
   854fc:	684a      	ldr	r2, [r1, #4]
   854fe:	68db      	ldr	r3, [r3, #12]
   85500:	f854 6f08 	ldr.w	r6, [r4, #8]!
   85504:	f042 0201 	orr.w	r2, r2, #1
   85508:	604a      	str	r2, [r1, #4]
   8550a:	4628      	mov	r0, r5
   8550c:	60f3      	str	r3, [r6, #12]
   8550e:	609e      	str	r6, [r3, #8]
   85510:	f000 f96e 	bl	857f0 <__malloc_unlock>
   85514:	e6ca      	b.n	852ac <_malloc_r+0x18c>
   85516:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8551a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   8551e:	00c1      	lsls	r1, r0, #3
   85520:	e620      	b.n	85164 <_malloc_r+0x44>
   85522:	099a      	lsrs	r2, r3, #6
   85524:	f102 0139 	add.w	r1, r2, #57	; 0x39
   85528:	00c9      	lsls	r1, r1, #3
   8552a:	3238      	adds	r2, #56	; 0x38
   8552c:	e7a4      	b.n	85478 <_malloc_r+0x358>
   8552e:	42bc      	cmp	r4, r7
   85530:	d054      	beq.n	855dc <_malloc_r+0x4bc>
   85532:	68bc      	ldr	r4, [r7, #8]
   85534:	6862      	ldr	r2, [r4, #4]
   85536:	f022 0203 	bic.w	r2, r2, #3
   8553a:	e75e      	b.n	853fa <_malloc_r+0x2da>
   8553c:	f859 3908 	ldr.w	r3, [r9], #-8
   85540:	4599      	cmp	r9, r3
   85542:	f040 8086 	bne.w	85652 <_malloc_r+0x532>
   85546:	f010 0f03 	tst.w	r0, #3
   8554a:	f100 30ff 	add.w	r0, r0, #4294967295
   8554e:	d1f5      	bne.n	8553c <_malloc_r+0x41c>
   85550:	687b      	ldr	r3, [r7, #4]
   85552:	ea23 0304 	bic.w	r3, r3, r4
   85556:	607b      	str	r3, [r7, #4]
   85558:	0064      	lsls	r4, r4, #1
   8555a:	429c      	cmp	r4, r3
   8555c:	f63f aec8 	bhi.w	852f0 <_malloc_r+0x1d0>
   85560:	2c00      	cmp	r4, #0
   85562:	f43f aec5 	beq.w	852f0 <_malloc_r+0x1d0>
   85566:	421c      	tst	r4, r3
   85568:	4640      	mov	r0, r8
   8556a:	f47f ae4c 	bne.w	85206 <_malloc_r+0xe6>
   8556e:	0064      	lsls	r4, r4, #1
   85570:	421c      	tst	r4, r3
   85572:	f100 0004 	add.w	r0, r0, #4
   85576:	d0fa      	beq.n	8556e <_malloc_r+0x44e>
   85578:	e645      	b.n	85206 <_malloc_r+0xe6>
   8557a:	468c      	mov	ip, r1
   8557c:	e78c      	b.n	85498 <_malloc_r+0x378>
   8557e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   85582:	d815      	bhi.n	855b0 <_malloc_r+0x490>
   85584:	0bf3      	lsrs	r3, r6, #15
   85586:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8558a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   8558e:	00c1      	lsls	r1, r0, #3
   85590:	e5e8      	b.n	85164 <_malloc_r+0x44>
   85592:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   85596:	e6ee      	b.n	85376 <_malloc_r+0x256>
   85598:	2101      	movs	r1, #1
   8559a:	687b      	ldr	r3, [r7, #4]
   8559c:	1092      	asrs	r2, r2, #2
   8559e:	fa01 f202 	lsl.w	r2, r1, r2
   855a2:	431a      	orrs	r2, r3
   855a4:	607a      	str	r2, [r7, #4]
   855a6:	4663      	mov	r3, ip
   855a8:	e779      	b.n	8549e <_malloc_r+0x37e>
   855aa:	2301      	movs	r3, #1
   855ac:	6053      	str	r3, [r2, #4]
   855ae:	e72a      	b.n	85406 <_malloc_r+0x2e6>
   855b0:	f240 5254 	movw	r2, #1364	; 0x554
   855b4:	4293      	cmp	r3, r2
   855b6:	d822      	bhi.n	855fe <_malloc_r+0x4de>
   855b8:	0cb3      	lsrs	r3, r6, #18
   855ba:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   855be:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   855c2:	00c1      	lsls	r1, r0, #3
   855c4:	e5ce      	b.n	85164 <_malloc_r+0x44>
   855c6:	f103 0b10 	add.w	fp, r3, #16
   855ca:	e6af      	b.n	8532c <_malloc_r+0x20c>
   855cc:	2a54      	cmp	r2, #84	; 0x54
   855ce:	d829      	bhi.n	85624 <_malloc_r+0x504>
   855d0:	0b1a      	lsrs	r2, r3, #12
   855d2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   855d6:	00c9      	lsls	r1, r1, #3
   855d8:	326e      	adds	r2, #110	; 0x6e
   855da:	e74d      	b.n	85478 <_malloc_r+0x358>
   855dc:	4b20      	ldr	r3, [pc, #128]	; (85660 <_malloc_r+0x540>)
   855de:	6819      	ldr	r1, [r3, #0]
   855e0:	4459      	add	r1, fp
   855e2:	6019      	str	r1, [r3, #0]
   855e4:	e6b3      	b.n	8534e <_malloc_r+0x22e>
   855e6:	f3ca 000b 	ubfx	r0, sl, #0, #12
   855ea:	2800      	cmp	r0, #0
   855ec:	f47f aeaf 	bne.w	8534e <_malloc_r+0x22e>
   855f0:	eb08 030b 	add.w	r3, r8, fp
   855f4:	68ba      	ldr	r2, [r7, #8]
   855f6:	f043 0301 	orr.w	r3, r3, #1
   855fa:	6053      	str	r3, [r2, #4]
   855fc:	e6ef      	b.n	853de <_malloc_r+0x2be>
   855fe:	207f      	movs	r0, #127	; 0x7f
   85600:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   85604:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   85608:	e5ac      	b.n	85164 <_malloc_r+0x44>
   8560a:	f104 0108 	add.w	r1, r4, #8
   8560e:	4628      	mov	r0, r5
   85610:	9300      	str	r3, [sp, #0]
   85612:	f7ff fc8d 	bl	84f30 <_free_r>
   85616:	9b00      	ldr	r3, [sp, #0]
   85618:	6819      	ldr	r1, [r3, #0]
   8561a:	e6e0      	b.n	853de <_malloc_r+0x2be>
   8561c:	2001      	movs	r0, #1
   8561e:	f04f 0900 	mov.w	r9, #0
   85622:	e6bd      	b.n	853a0 <_malloc_r+0x280>
   85624:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   85628:	d805      	bhi.n	85636 <_malloc_r+0x516>
   8562a:	0bda      	lsrs	r2, r3, #15
   8562c:	f102 0178 	add.w	r1, r2, #120	; 0x78
   85630:	00c9      	lsls	r1, r1, #3
   85632:	3277      	adds	r2, #119	; 0x77
   85634:	e720      	b.n	85478 <_malloc_r+0x358>
   85636:	f240 5154 	movw	r1, #1364	; 0x554
   8563a:	428a      	cmp	r2, r1
   8563c:	d805      	bhi.n	8564a <_malloc_r+0x52a>
   8563e:	0c9a      	lsrs	r2, r3, #18
   85640:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   85644:	00c9      	lsls	r1, r1, #3
   85646:	327c      	adds	r2, #124	; 0x7c
   85648:	e716      	b.n	85478 <_malloc_r+0x358>
   8564a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   8564e:	227e      	movs	r2, #126	; 0x7e
   85650:	e712      	b.n	85478 <_malloc_r+0x358>
   85652:	687b      	ldr	r3, [r7, #4]
   85654:	e780      	b.n	85558 <_malloc_r+0x438>
   85656:	08f0      	lsrs	r0, r6, #3
   85658:	f106 0308 	add.w	r3, r6, #8
   8565c:	e60e      	b.n	8527c <_malloc_r+0x15c>
   8565e:	bf00      	nop
   85660:	20070dc4 	.word	0x20070dc4

00085664 <__ascii_mbtowc>:
   85664:	b082      	sub	sp, #8
   85666:	b149      	cbz	r1, 8567c <__ascii_mbtowc+0x18>
   85668:	b15a      	cbz	r2, 85682 <__ascii_mbtowc+0x1e>
   8566a:	b16b      	cbz	r3, 85688 <__ascii_mbtowc+0x24>
   8566c:	7813      	ldrb	r3, [r2, #0]
   8566e:	600b      	str	r3, [r1, #0]
   85670:	7812      	ldrb	r2, [r2, #0]
   85672:	1c10      	adds	r0, r2, #0
   85674:	bf18      	it	ne
   85676:	2001      	movne	r0, #1
   85678:	b002      	add	sp, #8
   8567a:	4770      	bx	lr
   8567c:	a901      	add	r1, sp, #4
   8567e:	2a00      	cmp	r2, #0
   85680:	d1f3      	bne.n	8566a <__ascii_mbtowc+0x6>
   85682:	4610      	mov	r0, r2
   85684:	b002      	add	sp, #8
   85686:	4770      	bx	lr
   85688:	f06f 0001 	mvn.w	r0, #1
   8568c:	e7f4      	b.n	85678 <__ascii_mbtowc+0x14>
   8568e:	bf00      	nop

00085690 <memchr>:
   85690:	0783      	lsls	r3, r0, #30
   85692:	b470      	push	{r4, r5, r6}
   85694:	b2cd      	uxtb	r5, r1
   85696:	d03d      	beq.n	85714 <memchr+0x84>
   85698:	1e54      	subs	r4, r2, #1
   8569a:	b30a      	cbz	r2, 856e0 <memchr+0x50>
   8569c:	7803      	ldrb	r3, [r0, #0]
   8569e:	42ab      	cmp	r3, r5
   856a0:	d01f      	beq.n	856e2 <memchr+0x52>
   856a2:	1c43      	adds	r3, r0, #1
   856a4:	e005      	b.n	856b2 <memchr+0x22>
   856a6:	f114 34ff 	adds.w	r4, r4, #4294967295
   856aa:	d319      	bcc.n	856e0 <memchr+0x50>
   856ac:	7802      	ldrb	r2, [r0, #0]
   856ae:	42aa      	cmp	r2, r5
   856b0:	d017      	beq.n	856e2 <memchr+0x52>
   856b2:	f013 0f03 	tst.w	r3, #3
   856b6:	4618      	mov	r0, r3
   856b8:	f103 0301 	add.w	r3, r3, #1
   856bc:	d1f3      	bne.n	856a6 <memchr+0x16>
   856be:	2c03      	cmp	r4, #3
   856c0:	d811      	bhi.n	856e6 <memchr+0x56>
   856c2:	b34c      	cbz	r4, 85718 <memchr+0x88>
   856c4:	7803      	ldrb	r3, [r0, #0]
   856c6:	42ab      	cmp	r3, r5
   856c8:	d00b      	beq.n	856e2 <memchr+0x52>
   856ca:	4404      	add	r4, r0
   856cc:	1c43      	adds	r3, r0, #1
   856ce:	e002      	b.n	856d6 <memchr+0x46>
   856d0:	7802      	ldrb	r2, [r0, #0]
   856d2:	42aa      	cmp	r2, r5
   856d4:	d005      	beq.n	856e2 <memchr+0x52>
   856d6:	429c      	cmp	r4, r3
   856d8:	4618      	mov	r0, r3
   856da:	f103 0301 	add.w	r3, r3, #1
   856de:	d1f7      	bne.n	856d0 <memchr+0x40>
   856e0:	2000      	movs	r0, #0
   856e2:	bc70      	pop	{r4, r5, r6}
   856e4:	4770      	bx	lr
   856e6:	0209      	lsls	r1, r1, #8
   856e8:	b289      	uxth	r1, r1
   856ea:	4329      	orrs	r1, r5
   856ec:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   856f0:	6803      	ldr	r3, [r0, #0]
   856f2:	4606      	mov	r6, r0
   856f4:	404b      	eors	r3, r1
   856f6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   856fa:	ea22 0303 	bic.w	r3, r2, r3
   856fe:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   85702:	f100 0004 	add.w	r0, r0, #4
   85706:	d103      	bne.n	85710 <memchr+0x80>
   85708:	3c04      	subs	r4, #4
   8570a:	2c03      	cmp	r4, #3
   8570c:	d8f0      	bhi.n	856f0 <memchr+0x60>
   8570e:	e7d8      	b.n	856c2 <memchr+0x32>
   85710:	4630      	mov	r0, r6
   85712:	e7d7      	b.n	856c4 <memchr+0x34>
   85714:	4614      	mov	r4, r2
   85716:	e7d2      	b.n	856be <memchr+0x2e>
   85718:	4620      	mov	r0, r4
   8571a:	e7e2      	b.n	856e2 <memchr+0x52>

0008571c <memmove>:
   8571c:	4288      	cmp	r0, r1
   8571e:	b5f0      	push	{r4, r5, r6, r7, lr}
   85720:	d90d      	bls.n	8573e <memmove+0x22>
   85722:	188b      	adds	r3, r1, r2
   85724:	4298      	cmp	r0, r3
   85726:	d20a      	bcs.n	8573e <memmove+0x22>
   85728:	1884      	adds	r4, r0, r2
   8572a:	2a00      	cmp	r2, #0
   8572c:	d051      	beq.n	857d2 <memmove+0xb6>
   8572e:	4622      	mov	r2, r4
   85730:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   85734:	4299      	cmp	r1, r3
   85736:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8573a:	d1f9      	bne.n	85730 <memmove+0x14>
   8573c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8573e:	2a0f      	cmp	r2, #15
   85740:	d948      	bls.n	857d4 <memmove+0xb8>
   85742:	ea41 0300 	orr.w	r3, r1, r0
   85746:	079b      	lsls	r3, r3, #30
   85748:	d146      	bne.n	857d8 <memmove+0xbc>
   8574a:	4615      	mov	r5, r2
   8574c:	f100 0410 	add.w	r4, r0, #16
   85750:	f101 0310 	add.w	r3, r1, #16
   85754:	f853 6c10 	ldr.w	r6, [r3, #-16]
   85758:	3d10      	subs	r5, #16
   8575a:	f844 6c10 	str.w	r6, [r4, #-16]
   8575e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   85762:	2d0f      	cmp	r5, #15
   85764:	f844 6c0c 	str.w	r6, [r4, #-12]
   85768:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8576c:	f104 0410 	add.w	r4, r4, #16
   85770:	f844 6c18 	str.w	r6, [r4, #-24]
   85774:	f853 6c04 	ldr.w	r6, [r3, #-4]
   85778:	f103 0310 	add.w	r3, r3, #16
   8577c:	f844 6c14 	str.w	r6, [r4, #-20]
   85780:	d8e8      	bhi.n	85754 <memmove+0x38>
   85782:	f1a2 0310 	sub.w	r3, r2, #16
   85786:	f023 030f 	bic.w	r3, r3, #15
   8578a:	f002 0e0f 	and.w	lr, r2, #15
   8578e:	3310      	adds	r3, #16
   85790:	f1be 0f03 	cmp.w	lr, #3
   85794:	4419      	add	r1, r3
   85796:	4403      	add	r3, r0
   85798:	d921      	bls.n	857de <memmove+0xc2>
   8579a:	460e      	mov	r6, r1
   8579c:	4674      	mov	r4, lr
   8579e:	1f1d      	subs	r5, r3, #4
   857a0:	f856 7b04 	ldr.w	r7, [r6], #4
   857a4:	3c04      	subs	r4, #4
   857a6:	2c03      	cmp	r4, #3
   857a8:	f845 7f04 	str.w	r7, [r5, #4]!
   857ac:	d8f8      	bhi.n	857a0 <memmove+0x84>
   857ae:	f1ae 0404 	sub.w	r4, lr, #4
   857b2:	f024 0403 	bic.w	r4, r4, #3
   857b6:	3404      	adds	r4, #4
   857b8:	4421      	add	r1, r4
   857ba:	4423      	add	r3, r4
   857bc:	f002 0203 	and.w	r2, r2, #3
   857c0:	b162      	cbz	r2, 857dc <memmove+0xc0>
   857c2:	3b01      	subs	r3, #1
   857c4:	440a      	add	r2, r1
   857c6:	f811 4b01 	ldrb.w	r4, [r1], #1
   857ca:	428a      	cmp	r2, r1
   857cc:	f803 4f01 	strb.w	r4, [r3, #1]!
   857d0:	d1f9      	bne.n	857c6 <memmove+0xaa>
   857d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   857d4:	4603      	mov	r3, r0
   857d6:	e7f3      	b.n	857c0 <memmove+0xa4>
   857d8:	4603      	mov	r3, r0
   857da:	e7f2      	b.n	857c2 <memmove+0xa6>
   857dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   857de:	4672      	mov	r2, lr
   857e0:	e7ee      	b.n	857c0 <memmove+0xa4>
   857e2:	bf00      	nop

000857e4 <__malloc_lock>:
   857e4:	4801      	ldr	r0, [pc, #4]	; (857ec <__malloc_lock+0x8>)
   857e6:	f7ff bc97 	b.w	85118 <__retarget_lock_acquire_recursive>
   857ea:	bf00      	nop
   857ec:	20070e28 	.word	0x20070e28

000857f0 <__malloc_unlock>:
   857f0:	4801      	ldr	r0, [pc, #4]	; (857f8 <__malloc_unlock+0x8>)
   857f2:	f7ff bc93 	b.w	8511c <__retarget_lock_release_recursive>
   857f6:	bf00      	nop
   857f8:	20070e28 	.word	0x20070e28

000857fc <_Balloc>:
   857fc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   857fe:	b570      	push	{r4, r5, r6, lr}
   85800:	4605      	mov	r5, r0
   85802:	460c      	mov	r4, r1
   85804:	b14b      	cbz	r3, 8581a <_Balloc+0x1e>
   85806:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8580a:	b180      	cbz	r0, 8582e <_Balloc+0x32>
   8580c:	6802      	ldr	r2, [r0, #0]
   8580e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   85812:	2300      	movs	r3, #0
   85814:	6103      	str	r3, [r0, #16]
   85816:	60c3      	str	r3, [r0, #12]
   85818:	bd70      	pop	{r4, r5, r6, pc}
   8581a:	2221      	movs	r2, #33	; 0x21
   8581c:	2104      	movs	r1, #4
   8581e:	f000 fd9d 	bl	8635c <_calloc_r>
   85822:	64e8      	str	r0, [r5, #76]	; 0x4c
   85824:	4603      	mov	r3, r0
   85826:	2800      	cmp	r0, #0
   85828:	d1ed      	bne.n	85806 <_Balloc+0xa>
   8582a:	2000      	movs	r0, #0
   8582c:	bd70      	pop	{r4, r5, r6, pc}
   8582e:	2101      	movs	r1, #1
   85830:	fa01 f604 	lsl.w	r6, r1, r4
   85834:	1d72      	adds	r2, r6, #5
   85836:	4628      	mov	r0, r5
   85838:	0092      	lsls	r2, r2, #2
   8583a:	f000 fd8f 	bl	8635c <_calloc_r>
   8583e:	2800      	cmp	r0, #0
   85840:	d0f3      	beq.n	8582a <_Balloc+0x2e>
   85842:	6044      	str	r4, [r0, #4]
   85844:	6086      	str	r6, [r0, #8]
   85846:	e7e4      	b.n	85812 <_Balloc+0x16>

00085848 <_Bfree>:
   85848:	b131      	cbz	r1, 85858 <_Bfree+0x10>
   8584a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8584c:	684a      	ldr	r2, [r1, #4]
   8584e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   85852:	6008      	str	r0, [r1, #0]
   85854:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   85858:	4770      	bx	lr
   8585a:	bf00      	nop

0008585c <__multadd>:
   8585c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8585e:	460c      	mov	r4, r1
   85860:	4605      	mov	r5, r0
   85862:	f04f 0e00 	mov.w	lr, #0
   85866:	690e      	ldr	r6, [r1, #16]
   85868:	b083      	sub	sp, #12
   8586a:	f101 0714 	add.w	r7, r1, #20
   8586e:	6838      	ldr	r0, [r7, #0]
   85870:	f10e 0e01 	add.w	lr, lr, #1
   85874:	b281      	uxth	r1, r0
   85876:	fb02 3301 	mla	r3, r2, r1, r3
   8587a:	0c01      	lsrs	r1, r0, #16
   8587c:	0c18      	lsrs	r0, r3, #16
   8587e:	fb02 0101 	mla	r1, r2, r1, r0
   85882:	b29b      	uxth	r3, r3
   85884:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   85888:	4576      	cmp	r6, lr
   8588a:	f847 3b04 	str.w	r3, [r7], #4
   8588e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   85892:	dcec      	bgt.n	8586e <__multadd+0x12>
   85894:	b13b      	cbz	r3, 858a6 <__multadd+0x4a>
   85896:	68a2      	ldr	r2, [r4, #8]
   85898:	4296      	cmp	r6, r2
   8589a:	da07      	bge.n	858ac <__multadd+0x50>
   8589c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   858a0:	3601      	adds	r6, #1
   858a2:	6153      	str	r3, [r2, #20]
   858a4:	6126      	str	r6, [r4, #16]
   858a6:	4620      	mov	r0, r4
   858a8:	b003      	add	sp, #12
   858aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   858ac:	6861      	ldr	r1, [r4, #4]
   858ae:	4628      	mov	r0, r5
   858b0:	3101      	adds	r1, #1
   858b2:	9301      	str	r3, [sp, #4]
   858b4:	f7ff ffa2 	bl	857fc <_Balloc>
   858b8:	4607      	mov	r7, r0
   858ba:	6922      	ldr	r2, [r4, #16]
   858bc:	f104 010c 	add.w	r1, r4, #12
   858c0:	3202      	adds	r2, #2
   858c2:	0092      	lsls	r2, r2, #2
   858c4:	300c      	adds	r0, #12
   858c6:	f7fc ff47 	bl	82758 <memcpy>
   858ca:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   858cc:	6861      	ldr	r1, [r4, #4]
   858ce:	9b01      	ldr	r3, [sp, #4]
   858d0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   858d4:	6020      	str	r0, [r4, #0]
   858d6:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   858da:	463c      	mov	r4, r7
   858dc:	e7de      	b.n	8589c <__multadd+0x40>
   858de:	bf00      	nop

000858e0 <__hi0bits>:
   858e0:	0c02      	lsrs	r2, r0, #16
   858e2:	0412      	lsls	r2, r2, #16
   858e4:	4603      	mov	r3, r0
   858e6:	b9b2      	cbnz	r2, 85916 <__hi0bits+0x36>
   858e8:	0403      	lsls	r3, r0, #16
   858ea:	2010      	movs	r0, #16
   858ec:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   858f0:	bf04      	itt	eq
   858f2:	021b      	lsleq	r3, r3, #8
   858f4:	3008      	addeq	r0, #8
   858f6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   858fa:	bf04      	itt	eq
   858fc:	011b      	lsleq	r3, r3, #4
   858fe:	3004      	addeq	r0, #4
   85900:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   85904:	bf04      	itt	eq
   85906:	009b      	lsleq	r3, r3, #2
   85908:	3002      	addeq	r0, #2
   8590a:	2b00      	cmp	r3, #0
   8590c:	db02      	blt.n	85914 <__hi0bits+0x34>
   8590e:	005b      	lsls	r3, r3, #1
   85910:	d403      	bmi.n	8591a <__hi0bits+0x3a>
   85912:	2020      	movs	r0, #32
   85914:	4770      	bx	lr
   85916:	2000      	movs	r0, #0
   85918:	e7e8      	b.n	858ec <__hi0bits+0xc>
   8591a:	3001      	adds	r0, #1
   8591c:	4770      	bx	lr
   8591e:	bf00      	nop

00085920 <__lo0bits>:
   85920:	6803      	ldr	r3, [r0, #0]
   85922:	4601      	mov	r1, r0
   85924:	f013 0207 	ands.w	r2, r3, #7
   85928:	d007      	beq.n	8593a <__lo0bits+0x1a>
   8592a:	07da      	lsls	r2, r3, #31
   8592c:	d421      	bmi.n	85972 <__lo0bits+0x52>
   8592e:	0798      	lsls	r0, r3, #30
   85930:	d421      	bmi.n	85976 <__lo0bits+0x56>
   85932:	089b      	lsrs	r3, r3, #2
   85934:	600b      	str	r3, [r1, #0]
   85936:	2002      	movs	r0, #2
   85938:	4770      	bx	lr
   8593a:	b298      	uxth	r0, r3
   8593c:	b198      	cbz	r0, 85966 <__lo0bits+0x46>
   8593e:	4610      	mov	r0, r2
   85940:	f013 0fff 	tst.w	r3, #255	; 0xff
   85944:	bf04      	itt	eq
   85946:	0a1b      	lsreq	r3, r3, #8
   85948:	3008      	addeq	r0, #8
   8594a:	071a      	lsls	r2, r3, #28
   8594c:	bf04      	itt	eq
   8594e:	091b      	lsreq	r3, r3, #4
   85950:	3004      	addeq	r0, #4
   85952:	079a      	lsls	r2, r3, #30
   85954:	bf04      	itt	eq
   85956:	089b      	lsreq	r3, r3, #2
   85958:	3002      	addeq	r0, #2
   8595a:	07da      	lsls	r2, r3, #31
   8595c:	d407      	bmi.n	8596e <__lo0bits+0x4e>
   8595e:	085b      	lsrs	r3, r3, #1
   85960:	d104      	bne.n	8596c <__lo0bits+0x4c>
   85962:	2020      	movs	r0, #32
   85964:	4770      	bx	lr
   85966:	0c1b      	lsrs	r3, r3, #16
   85968:	2010      	movs	r0, #16
   8596a:	e7e9      	b.n	85940 <__lo0bits+0x20>
   8596c:	3001      	adds	r0, #1
   8596e:	600b      	str	r3, [r1, #0]
   85970:	4770      	bx	lr
   85972:	2000      	movs	r0, #0
   85974:	4770      	bx	lr
   85976:	085b      	lsrs	r3, r3, #1
   85978:	600b      	str	r3, [r1, #0]
   8597a:	2001      	movs	r0, #1
   8597c:	4770      	bx	lr
   8597e:	bf00      	nop

00085980 <__i2b>:
   85980:	b510      	push	{r4, lr}
   85982:	460c      	mov	r4, r1
   85984:	2101      	movs	r1, #1
   85986:	f7ff ff39 	bl	857fc <_Balloc>
   8598a:	2201      	movs	r2, #1
   8598c:	6144      	str	r4, [r0, #20]
   8598e:	6102      	str	r2, [r0, #16]
   85990:	bd10      	pop	{r4, pc}
   85992:	bf00      	nop

00085994 <__multiply>:
   85994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85998:	690c      	ldr	r4, [r1, #16]
   8599a:	6915      	ldr	r5, [r2, #16]
   8599c:	b083      	sub	sp, #12
   8599e:	42ac      	cmp	r4, r5
   859a0:	468b      	mov	fp, r1
   859a2:	4616      	mov	r6, r2
   859a4:	da04      	bge.n	859b0 <__multiply+0x1c>
   859a6:	4622      	mov	r2, r4
   859a8:	46b3      	mov	fp, r6
   859aa:	462c      	mov	r4, r5
   859ac:	460e      	mov	r6, r1
   859ae:	4615      	mov	r5, r2
   859b0:	f8db 3008 	ldr.w	r3, [fp, #8]
   859b4:	eb04 0805 	add.w	r8, r4, r5
   859b8:	f8db 1004 	ldr.w	r1, [fp, #4]
   859bc:	4598      	cmp	r8, r3
   859be:	bfc8      	it	gt
   859c0:	3101      	addgt	r1, #1
   859c2:	f7ff ff1b 	bl	857fc <_Balloc>
   859c6:	f100 0914 	add.w	r9, r0, #20
   859ca:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   859ce:	45d1      	cmp	r9, sl
   859d0:	9000      	str	r0, [sp, #0]
   859d2:	d205      	bcs.n	859e0 <__multiply+0x4c>
   859d4:	464b      	mov	r3, r9
   859d6:	2100      	movs	r1, #0
   859d8:	f843 1b04 	str.w	r1, [r3], #4
   859dc:	459a      	cmp	sl, r3
   859de:	d8fb      	bhi.n	859d8 <__multiply+0x44>
   859e0:	f106 0c14 	add.w	ip, r6, #20
   859e4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   859e8:	f10b 0b14 	add.w	fp, fp, #20
   859ec:	459c      	cmp	ip, r3
   859ee:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   859f2:	d24b      	bcs.n	85a8c <__multiply+0xf8>
   859f4:	f8cd a004 	str.w	sl, [sp, #4]
   859f8:	469a      	mov	sl, r3
   859fa:	f8dc 5000 	ldr.w	r5, [ip]
   859fe:	b2af      	uxth	r7, r5
   85a00:	b1e7      	cbz	r7, 85a3c <__multiply+0xa8>
   85a02:	464d      	mov	r5, r9
   85a04:	465e      	mov	r6, fp
   85a06:	2100      	movs	r1, #0
   85a08:	f856 2b04 	ldr.w	r2, [r6], #4
   85a0c:	6828      	ldr	r0, [r5, #0]
   85a0e:	b293      	uxth	r3, r2
   85a10:	b284      	uxth	r4, r0
   85a12:	0c12      	lsrs	r2, r2, #16
   85a14:	fb07 4303 	mla	r3, r7, r3, r4
   85a18:	0c00      	lsrs	r0, r0, #16
   85a1a:	fb07 0202 	mla	r2, r7, r2, r0
   85a1e:	440b      	add	r3, r1
   85a20:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   85a24:	b29b      	uxth	r3, r3
   85a26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   85a2a:	45b6      	cmp	lr, r6
   85a2c:	f845 3b04 	str.w	r3, [r5], #4
   85a30:	ea4f 4111 	mov.w	r1, r1, lsr #16
   85a34:	d8e8      	bhi.n	85a08 <__multiply+0x74>
   85a36:	6029      	str	r1, [r5, #0]
   85a38:	f8dc 5000 	ldr.w	r5, [ip]
   85a3c:	0c2d      	lsrs	r5, r5, #16
   85a3e:	d01d      	beq.n	85a7c <__multiply+0xe8>
   85a40:	f8d9 3000 	ldr.w	r3, [r9]
   85a44:	4648      	mov	r0, r9
   85a46:	461c      	mov	r4, r3
   85a48:	4659      	mov	r1, fp
   85a4a:	2200      	movs	r2, #0
   85a4c:	880e      	ldrh	r6, [r1, #0]
   85a4e:	0c24      	lsrs	r4, r4, #16
   85a50:	fb05 4406 	mla	r4, r5, r6, r4
   85a54:	b29b      	uxth	r3, r3
   85a56:	4422      	add	r2, r4
   85a58:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85a5c:	f840 3b04 	str.w	r3, [r0], #4
   85a60:	f851 3b04 	ldr.w	r3, [r1], #4
   85a64:	6804      	ldr	r4, [r0, #0]
   85a66:	0c1b      	lsrs	r3, r3, #16
   85a68:	b2a6      	uxth	r6, r4
   85a6a:	fb05 6303 	mla	r3, r5, r3, r6
   85a6e:	458e      	cmp	lr, r1
   85a70:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   85a74:	ea4f 4213 	mov.w	r2, r3, lsr #16
   85a78:	d8e8      	bhi.n	85a4c <__multiply+0xb8>
   85a7a:	6003      	str	r3, [r0, #0]
   85a7c:	f10c 0c04 	add.w	ip, ip, #4
   85a80:	45e2      	cmp	sl, ip
   85a82:	f109 0904 	add.w	r9, r9, #4
   85a86:	d8b8      	bhi.n	859fa <__multiply+0x66>
   85a88:	f8dd a004 	ldr.w	sl, [sp, #4]
   85a8c:	f1b8 0f00 	cmp.w	r8, #0
   85a90:	dd0b      	ble.n	85aaa <__multiply+0x116>
   85a92:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   85a96:	f1aa 0a04 	sub.w	sl, sl, #4
   85a9a:	b11b      	cbz	r3, 85aa4 <__multiply+0x110>
   85a9c:	e005      	b.n	85aaa <__multiply+0x116>
   85a9e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   85aa2:	b913      	cbnz	r3, 85aaa <__multiply+0x116>
   85aa4:	f1b8 0801 	subs.w	r8, r8, #1
   85aa8:	d1f9      	bne.n	85a9e <__multiply+0x10a>
   85aaa:	9800      	ldr	r0, [sp, #0]
   85aac:	f8c0 8010 	str.w	r8, [r0, #16]
   85ab0:	b003      	add	sp, #12
   85ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ab6:	bf00      	nop

00085ab8 <__pow5mult>:
   85ab8:	f012 0303 	ands.w	r3, r2, #3
   85abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85ac0:	4614      	mov	r4, r2
   85ac2:	4607      	mov	r7, r0
   85ac4:	d12e      	bne.n	85b24 <__pow5mult+0x6c>
   85ac6:	460d      	mov	r5, r1
   85ac8:	10a4      	asrs	r4, r4, #2
   85aca:	d01c      	beq.n	85b06 <__pow5mult+0x4e>
   85acc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   85ace:	b396      	cbz	r6, 85b36 <__pow5mult+0x7e>
   85ad0:	07e3      	lsls	r3, r4, #31
   85ad2:	f04f 0800 	mov.w	r8, #0
   85ad6:	d406      	bmi.n	85ae6 <__pow5mult+0x2e>
   85ad8:	1064      	asrs	r4, r4, #1
   85ada:	d014      	beq.n	85b06 <__pow5mult+0x4e>
   85adc:	6830      	ldr	r0, [r6, #0]
   85ade:	b1a8      	cbz	r0, 85b0c <__pow5mult+0x54>
   85ae0:	4606      	mov	r6, r0
   85ae2:	07e3      	lsls	r3, r4, #31
   85ae4:	d5f8      	bpl.n	85ad8 <__pow5mult+0x20>
   85ae6:	4632      	mov	r2, r6
   85ae8:	4629      	mov	r1, r5
   85aea:	4638      	mov	r0, r7
   85aec:	f7ff ff52 	bl	85994 <__multiply>
   85af0:	b1b5      	cbz	r5, 85b20 <__pow5mult+0x68>
   85af2:	686a      	ldr	r2, [r5, #4]
   85af4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85af6:	1064      	asrs	r4, r4, #1
   85af8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85afc:	6029      	str	r1, [r5, #0]
   85afe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   85b02:	4605      	mov	r5, r0
   85b04:	d1ea      	bne.n	85adc <__pow5mult+0x24>
   85b06:	4628      	mov	r0, r5
   85b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   85b0c:	4632      	mov	r2, r6
   85b0e:	4631      	mov	r1, r6
   85b10:	4638      	mov	r0, r7
   85b12:	f7ff ff3f 	bl	85994 <__multiply>
   85b16:	6030      	str	r0, [r6, #0]
   85b18:	f8c0 8000 	str.w	r8, [r0]
   85b1c:	4606      	mov	r6, r0
   85b1e:	e7e0      	b.n	85ae2 <__pow5mult+0x2a>
   85b20:	4605      	mov	r5, r0
   85b22:	e7d9      	b.n	85ad8 <__pow5mult+0x20>
   85b24:	4a0b      	ldr	r2, [pc, #44]	; (85b54 <__pow5mult+0x9c>)
   85b26:	3b01      	subs	r3, #1
   85b28:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   85b2c:	2300      	movs	r3, #0
   85b2e:	f7ff fe95 	bl	8585c <__multadd>
   85b32:	4605      	mov	r5, r0
   85b34:	e7c8      	b.n	85ac8 <__pow5mult+0x10>
   85b36:	2101      	movs	r1, #1
   85b38:	4638      	mov	r0, r7
   85b3a:	f7ff fe5f 	bl	857fc <_Balloc>
   85b3e:	f240 2171 	movw	r1, #625	; 0x271
   85b42:	2201      	movs	r2, #1
   85b44:	2300      	movs	r3, #0
   85b46:	6141      	str	r1, [r0, #20]
   85b48:	6102      	str	r2, [r0, #16]
   85b4a:	4606      	mov	r6, r0
   85b4c:	64b8      	str	r0, [r7, #72]	; 0x48
   85b4e:	6003      	str	r3, [r0, #0]
   85b50:	e7be      	b.n	85ad0 <__pow5mult+0x18>
   85b52:	bf00      	nop
   85b54:	00087190 	.word	0x00087190

00085b58 <__lshift>:
   85b58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   85b5c:	690b      	ldr	r3, [r1, #16]
   85b5e:	1154      	asrs	r4, r2, #5
   85b60:	eb04 0803 	add.w	r8, r4, r3
   85b64:	688b      	ldr	r3, [r1, #8]
   85b66:	f108 0501 	add.w	r5, r8, #1
   85b6a:	429d      	cmp	r5, r3
   85b6c:	460e      	mov	r6, r1
   85b6e:	4691      	mov	r9, r2
   85b70:	4607      	mov	r7, r0
   85b72:	6849      	ldr	r1, [r1, #4]
   85b74:	dd04      	ble.n	85b80 <__lshift+0x28>
   85b76:	005b      	lsls	r3, r3, #1
   85b78:	429d      	cmp	r5, r3
   85b7a:	f101 0101 	add.w	r1, r1, #1
   85b7e:	dcfa      	bgt.n	85b76 <__lshift+0x1e>
   85b80:	4638      	mov	r0, r7
   85b82:	f7ff fe3b 	bl	857fc <_Balloc>
   85b86:	2c00      	cmp	r4, #0
   85b88:	f100 0314 	add.w	r3, r0, #20
   85b8c:	dd06      	ble.n	85b9c <__lshift+0x44>
   85b8e:	2100      	movs	r1, #0
   85b90:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   85b94:	f843 1b04 	str.w	r1, [r3], #4
   85b98:	429a      	cmp	r2, r3
   85b9a:	d1fb      	bne.n	85b94 <__lshift+0x3c>
   85b9c:	6934      	ldr	r4, [r6, #16]
   85b9e:	f106 0114 	add.w	r1, r6, #20
   85ba2:	f019 091f 	ands.w	r9, r9, #31
   85ba6:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   85baa:	d01d      	beq.n	85be8 <__lshift+0x90>
   85bac:	2200      	movs	r2, #0
   85bae:	f1c9 0c20 	rsb	ip, r9, #32
   85bb2:	680c      	ldr	r4, [r1, #0]
   85bb4:	fa04 f409 	lsl.w	r4, r4, r9
   85bb8:	4314      	orrs	r4, r2
   85bba:	f843 4b04 	str.w	r4, [r3], #4
   85bbe:	f851 2b04 	ldr.w	r2, [r1], #4
   85bc2:	458e      	cmp	lr, r1
   85bc4:	fa22 f20c 	lsr.w	r2, r2, ip
   85bc8:	d8f3      	bhi.n	85bb2 <__lshift+0x5a>
   85bca:	601a      	str	r2, [r3, #0]
   85bcc:	b10a      	cbz	r2, 85bd2 <__lshift+0x7a>
   85bce:	f108 0502 	add.w	r5, r8, #2
   85bd2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   85bd4:	6872      	ldr	r2, [r6, #4]
   85bd6:	3d01      	subs	r5, #1
   85bd8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   85bdc:	6105      	str	r5, [r0, #16]
   85bde:	6031      	str	r1, [r6, #0]
   85be0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   85be4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   85be8:	3b04      	subs	r3, #4
   85bea:	f851 2b04 	ldr.w	r2, [r1], #4
   85bee:	458e      	cmp	lr, r1
   85bf0:	f843 2f04 	str.w	r2, [r3, #4]!
   85bf4:	d8f9      	bhi.n	85bea <__lshift+0x92>
   85bf6:	e7ec      	b.n	85bd2 <__lshift+0x7a>

00085bf8 <__mcmp>:
   85bf8:	b430      	push	{r4, r5}
   85bfa:	690b      	ldr	r3, [r1, #16]
   85bfc:	4605      	mov	r5, r0
   85bfe:	6900      	ldr	r0, [r0, #16]
   85c00:	1ac0      	subs	r0, r0, r3
   85c02:	d10f      	bne.n	85c24 <__mcmp+0x2c>
   85c04:	009b      	lsls	r3, r3, #2
   85c06:	3514      	adds	r5, #20
   85c08:	3114      	adds	r1, #20
   85c0a:	4419      	add	r1, r3
   85c0c:	442b      	add	r3, r5
   85c0e:	e001      	b.n	85c14 <__mcmp+0x1c>
   85c10:	429d      	cmp	r5, r3
   85c12:	d207      	bcs.n	85c24 <__mcmp+0x2c>
   85c14:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   85c18:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85c1c:	4294      	cmp	r4, r2
   85c1e:	d0f7      	beq.n	85c10 <__mcmp+0x18>
   85c20:	d302      	bcc.n	85c28 <__mcmp+0x30>
   85c22:	2001      	movs	r0, #1
   85c24:	bc30      	pop	{r4, r5}
   85c26:	4770      	bx	lr
   85c28:	f04f 30ff 	mov.w	r0, #4294967295
   85c2c:	e7fa      	b.n	85c24 <__mcmp+0x2c>
   85c2e:	bf00      	nop

00085c30 <__mdiff>:
   85c30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85c34:	690c      	ldr	r4, [r1, #16]
   85c36:	4689      	mov	r9, r1
   85c38:	6911      	ldr	r1, [r2, #16]
   85c3a:	4692      	mov	sl, r2
   85c3c:	1a64      	subs	r4, r4, r1
   85c3e:	2c00      	cmp	r4, #0
   85c40:	d117      	bne.n	85c72 <__mdiff+0x42>
   85c42:	0089      	lsls	r1, r1, #2
   85c44:	f109 0714 	add.w	r7, r9, #20
   85c48:	f102 0614 	add.w	r6, r2, #20
   85c4c:	187b      	adds	r3, r7, r1
   85c4e:	4431      	add	r1, r6
   85c50:	e001      	b.n	85c56 <__mdiff+0x26>
   85c52:	429f      	cmp	r7, r3
   85c54:	d265      	bcs.n	85d22 <__mdiff+0xf2>
   85c56:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   85c5a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   85c5e:	4295      	cmp	r5, r2
   85c60:	d0f7      	beq.n	85c52 <__mdiff+0x22>
   85c62:	d267      	bcs.n	85d34 <__mdiff+0x104>
   85c64:	464b      	mov	r3, r9
   85c66:	46bb      	mov	fp, r7
   85c68:	46d1      	mov	r9, sl
   85c6a:	4637      	mov	r7, r6
   85c6c:	469a      	mov	sl, r3
   85c6e:	2401      	movs	r4, #1
   85c70:	e005      	b.n	85c7e <__mdiff+0x4e>
   85c72:	db61      	blt.n	85d38 <__mdiff+0x108>
   85c74:	2400      	movs	r4, #0
   85c76:	f109 0714 	add.w	r7, r9, #20
   85c7a:	f10a 0b14 	add.w	fp, sl, #20
   85c7e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   85c82:	f7ff fdbb 	bl	857fc <_Balloc>
   85c86:	465d      	mov	r5, fp
   85c88:	f04f 0800 	mov.w	r8, #0
   85c8c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   85c90:	f8da 3010 	ldr.w	r3, [sl, #16]
   85c94:	463e      	mov	r6, r7
   85c96:	60c4      	str	r4, [r0, #12]
   85c98:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   85c9c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   85ca0:	f100 0414 	add.w	r4, r0, #20
   85ca4:	f856 9b04 	ldr.w	r9, [r6], #4
   85ca8:	f855 2b04 	ldr.w	r2, [r5], #4
   85cac:	fa1f f389 	uxth.w	r3, r9
   85cb0:	4443      	add	r3, r8
   85cb2:	fa1f f882 	uxth.w	r8, r2
   85cb6:	0c12      	lsrs	r2, r2, #16
   85cb8:	eba3 0308 	sub.w	r3, r3, r8
   85cbc:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   85cc0:	eb02 4223 	add.w	r2, r2, r3, asr #16
   85cc4:	b29b      	uxth	r3, r3
   85cc6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   85cca:	45ac      	cmp	ip, r5
   85ccc:	f844 3b04 	str.w	r3, [r4], #4
   85cd0:	ea4f 4822 	mov.w	r8, r2, asr #16
   85cd4:	d8e6      	bhi.n	85ca4 <__mdiff+0x74>
   85cd6:	42b7      	cmp	r7, r6
   85cd8:	d917      	bls.n	85d0a <__mdiff+0xda>
   85cda:	46a4      	mov	ip, r4
   85cdc:	4635      	mov	r5, r6
   85cde:	f855 3b04 	ldr.w	r3, [r5], #4
   85ce2:	b299      	uxth	r1, r3
   85ce4:	4441      	add	r1, r8
   85ce6:	140a      	asrs	r2, r1, #16
   85ce8:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   85cec:	b289      	uxth	r1, r1
   85cee:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   85cf2:	42af      	cmp	r7, r5
   85cf4:	f84c 3b04 	str.w	r3, [ip], #4
   85cf8:	ea4f 4822 	mov.w	r8, r2, asr #16
   85cfc:	d8ef      	bhi.n	85cde <__mdiff+0xae>
   85cfe:	43f6      	mvns	r6, r6
   85d00:	4437      	add	r7, r6
   85d02:	f027 0703 	bic.w	r7, r7, #3
   85d06:	3704      	adds	r7, #4
   85d08:	443c      	add	r4, r7
   85d0a:	3c04      	subs	r4, #4
   85d0c:	b92b      	cbnz	r3, 85d1a <__mdiff+0xea>
   85d0e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   85d12:	f10e 3eff 	add.w	lr, lr, #4294967295
   85d16:	2b00      	cmp	r3, #0
   85d18:	d0f9      	beq.n	85d0e <__mdiff+0xde>
   85d1a:	f8c0 e010 	str.w	lr, [r0, #16]
   85d1e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d22:	2100      	movs	r1, #0
   85d24:	f7ff fd6a 	bl	857fc <_Balloc>
   85d28:	2201      	movs	r2, #1
   85d2a:	2300      	movs	r3, #0
   85d2c:	6102      	str	r2, [r0, #16]
   85d2e:	6143      	str	r3, [r0, #20]
   85d30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85d34:	46b3      	mov	fp, r6
   85d36:	e7a2      	b.n	85c7e <__mdiff+0x4e>
   85d38:	464b      	mov	r3, r9
   85d3a:	f109 0b14 	add.w	fp, r9, #20
   85d3e:	f102 0714 	add.w	r7, r2, #20
   85d42:	4691      	mov	r9, r2
   85d44:	2401      	movs	r4, #1
   85d46:	469a      	mov	sl, r3
   85d48:	e799      	b.n	85c7e <__mdiff+0x4e>
   85d4a:	bf00      	nop

00085d4c <__d2b>:
   85d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
   85d4e:	2101      	movs	r1, #1
   85d50:	b083      	sub	sp, #12
   85d52:	461c      	mov	r4, r3
   85d54:	f3c3 550a 	ubfx	r5, r3, #20, #11
   85d58:	4616      	mov	r6, r2
   85d5a:	f7ff fd4f 	bl	857fc <_Balloc>
   85d5e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   85d62:	4607      	mov	r7, r0
   85d64:	b10d      	cbz	r5, 85d6a <__d2b+0x1e>
   85d66:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   85d6a:	9401      	str	r4, [sp, #4]
   85d6c:	b306      	cbz	r6, 85db0 <__d2b+0x64>
   85d6e:	a802      	add	r0, sp, #8
   85d70:	f840 6d08 	str.w	r6, [r0, #-8]!
   85d74:	f7ff fdd4 	bl	85920 <__lo0bits>
   85d78:	2800      	cmp	r0, #0
   85d7a:	d130      	bne.n	85dde <__d2b+0x92>
   85d7c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   85d80:	617a      	str	r2, [r7, #20]
   85d82:	2b00      	cmp	r3, #0
   85d84:	bf0c      	ite	eq
   85d86:	2101      	moveq	r1, #1
   85d88:	2102      	movne	r1, #2
   85d8a:	61bb      	str	r3, [r7, #24]
   85d8c:	6139      	str	r1, [r7, #16]
   85d8e:	b9d5      	cbnz	r5, 85dc6 <__d2b+0x7a>
   85d90:	9a08      	ldr	r2, [sp, #32]
   85d92:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   85d96:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   85d9a:	6010      	str	r0, [r2, #0]
   85d9c:	6918      	ldr	r0, [r3, #16]
   85d9e:	f7ff fd9f 	bl	858e0 <__hi0bits>
   85da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85da4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   85da8:	6018      	str	r0, [r3, #0]
   85daa:	4638      	mov	r0, r7
   85dac:	b003      	add	sp, #12
   85dae:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85db0:	a801      	add	r0, sp, #4
   85db2:	f7ff fdb5 	bl	85920 <__lo0bits>
   85db6:	2201      	movs	r2, #1
   85db8:	9b01      	ldr	r3, [sp, #4]
   85dba:	4611      	mov	r1, r2
   85dbc:	3020      	adds	r0, #32
   85dbe:	613a      	str	r2, [r7, #16]
   85dc0:	617b      	str	r3, [r7, #20]
   85dc2:	2d00      	cmp	r5, #0
   85dc4:	d0e4      	beq.n	85d90 <__d2b+0x44>
   85dc6:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   85dca:	9a08      	ldr	r2, [sp, #32]
   85dcc:	4403      	add	r3, r0
   85dce:	6013      	str	r3, [r2, #0]
   85dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85dd2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   85dd6:	6018      	str	r0, [r3, #0]
   85dd8:	4638      	mov	r0, r7
   85dda:	b003      	add	sp, #12
   85ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   85dde:	9b01      	ldr	r3, [sp, #4]
   85de0:	f1c0 0220 	rsb	r2, r0, #32
   85de4:	9900      	ldr	r1, [sp, #0]
   85de6:	fa03 f202 	lsl.w	r2, r3, r2
   85dea:	430a      	orrs	r2, r1
   85dec:	40c3      	lsrs	r3, r0
   85dee:	9301      	str	r3, [sp, #4]
   85df0:	617a      	str	r2, [r7, #20]
   85df2:	e7c6      	b.n	85d82 <__d2b+0x36>

00085df4 <_realloc_r>:
   85df4:	2900      	cmp	r1, #0
   85df6:	f000 8094 	beq.w	85f22 <_realloc_r+0x12e>
   85dfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85dfe:	460c      	mov	r4, r1
   85e00:	4615      	mov	r5, r2
   85e02:	b083      	sub	sp, #12
   85e04:	4680      	mov	r8, r0
   85e06:	f105 060b 	add.w	r6, r5, #11
   85e0a:	f7ff fceb 	bl	857e4 <__malloc_lock>
   85e0e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   85e12:	2e16      	cmp	r6, #22
   85e14:	f02e 0703 	bic.w	r7, lr, #3
   85e18:	f1a4 0908 	sub.w	r9, r4, #8
   85e1c:	d83c      	bhi.n	85e98 <_realloc_r+0xa4>
   85e1e:	2210      	movs	r2, #16
   85e20:	4616      	mov	r6, r2
   85e22:	42b5      	cmp	r5, r6
   85e24:	d83d      	bhi.n	85ea2 <_realloc_r+0xae>
   85e26:	4297      	cmp	r7, r2
   85e28:	da43      	bge.n	85eb2 <_realloc_r+0xbe>
   85e2a:	4bc6      	ldr	r3, [pc, #792]	; (86144 <_realloc_r+0x350>)
   85e2c:	eb09 0007 	add.w	r0, r9, r7
   85e30:	6899      	ldr	r1, [r3, #8]
   85e32:	4288      	cmp	r0, r1
   85e34:	f000 80c3 	beq.w	85fbe <_realloc_r+0x1ca>
   85e38:	6843      	ldr	r3, [r0, #4]
   85e3a:	f023 0101 	bic.w	r1, r3, #1
   85e3e:	4401      	add	r1, r0
   85e40:	6849      	ldr	r1, [r1, #4]
   85e42:	07c9      	lsls	r1, r1, #31
   85e44:	d54d      	bpl.n	85ee2 <_realloc_r+0xee>
   85e46:	f01e 0f01 	tst.w	lr, #1
   85e4a:	f000 809b 	beq.w	85f84 <_realloc_r+0x190>
   85e4e:	4629      	mov	r1, r5
   85e50:	4640      	mov	r0, r8
   85e52:	f7ff f965 	bl	85120 <_malloc_r>
   85e56:	4605      	mov	r5, r0
   85e58:	2800      	cmp	r0, #0
   85e5a:	d03b      	beq.n	85ed4 <_realloc_r+0xe0>
   85e5c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   85e60:	f1a0 0208 	sub.w	r2, r0, #8
   85e64:	f023 0301 	bic.w	r3, r3, #1
   85e68:	444b      	add	r3, r9
   85e6a:	429a      	cmp	r2, r3
   85e6c:	f000 812b 	beq.w	860c6 <_realloc_r+0x2d2>
   85e70:	1f3a      	subs	r2, r7, #4
   85e72:	2a24      	cmp	r2, #36	; 0x24
   85e74:	f200 8118 	bhi.w	860a8 <_realloc_r+0x2b4>
   85e78:	2a13      	cmp	r2, #19
   85e7a:	f200 80eb 	bhi.w	86054 <_realloc_r+0x260>
   85e7e:	4603      	mov	r3, r0
   85e80:	4622      	mov	r2, r4
   85e82:	6811      	ldr	r1, [r2, #0]
   85e84:	6019      	str	r1, [r3, #0]
   85e86:	6851      	ldr	r1, [r2, #4]
   85e88:	6059      	str	r1, [r3, #4]
   85e8a:	6892      	ldr	r2, [r2, #8]
   85e8c:	609a      	str	r2, [r3, #8]
   85e8e:	4621      	mov	r1, r4
   85e90:	4640      	mov	r0, r8
   85e92:	f7ff f84d 	bl	84f30 <_free_r>
   85e96:	e01d      	b.n	85ed4 <_realloc_r+0xe0>
   85e98:	f026 0607 	bic.w	r6, r6, #7
   85e9c:	2e00      	cmp	r6, #0
   85e9e:	4632      	mov	r2, r6
   85ea0:	dabf      	bge.n	85e22 <_realloc_r+0x2e>
   85ea2:	2500      	movs	r5, #0
   85ea4:	230c      	movs	r3, #12
   85ea6:	4628      	mov	r0, r5
   85ea8:	f8c8 3000 	str.w	r3, [r8]
   85eac:	b003      	add	sp, #12
   85eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85eb2:	4625      	mov	r5, r4
   85eb4:	1bbb      	subs	r3, r7, r6
   85eb6:	2b0f      	cmp	r3, #15
   85eb8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   85ebc:	d81d      	bhi.n	85efa <_realloc_r+0x106>
   85ebe:	f002 0201 	and.w	r2, r2, #1
   85ec2:	433a      	orrs	r2, r7
   85ec4:	eb09 0107 	add.w	r1, r9, r7
   85ec8:	f8c9 2004 	str.w	r2, [r9, #4]
   85ecc:	684b      	ldr	r3, [r1, #4]
   85ece:	f043 0301 	orr.w	r3, r3, #1
   85ed2:	604b      	str	r3, [r1, #4]
   85ed4:	4640      	mov	r0, r8
   85ed6:	f7ff fc8b 	bl	857f0 <__malloc_unlock>
   85eda:	4628      	mov	r0, r5
   85edc:	b003      	add	sp, #12
   85ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85ee2:	f023 0303 	bic.w	r3, r3, #3
   85ee6:	18f9      	adds	r1, r7, r3
   85ee8:	4291      	cmp	r1, r2
   85eea:	db1d      	blt.n	85f28 <_realloc_r+0x134>
   85eec:	68c3      	ldr	r3, [r0, #12]
   85eee:	6882      	ldr	r2, [r0, #8]
   85ef0:	4625      	mov	r5, r4
   85ef2:	60d3      	str	r3, [r2, #12]
   85ef4:	460f      	mov	r7, r1
   85ef6:	609a      	str	r2, [r3, #8]
   85ef8:	e7dc      	b.n	85eb4 <_realloc_r+0xc0>
   85efa:	f002 0201 	and.w	r2, r2, #1
   85efe:	eb09 0106 	add.w	r1, r9, r6
   85f02:	f043 0301 	orr.w	r3, r3, #1
   85f06:	4332      	orrs	r2, r6
   85f08:	f8c9 2004 	str.w	r2, [r9, #4]
   85f0c:	444f      	add	r7, r9
   85f0e:	604b      	str	r3, [r1, #4]
   85f10:	687b      	ldr	r3, [r7, #4]
   85f12:	3108      	adds	r1, #8
   85f14:	f043 0301 	orr.w	r3, r3, #1
   85f18:	607b      	str	r3, [r7, #4]
   85f1a:	4640      	mov	r0, r8
   85f1c:	f7ff f808 	bl	84f30 <_free_r>
   85f20:	e7d8      	b.n	85ed4 <_realloc_r+0xe0>
   85f22:	4611      	mov	r1, r2
   85f24:	f7ff b8fc 	b.w	85120 <_malloc_r>
   85f28:	f01e 0f01 	tst.w	lr, #1
   85f2c:	d18f      	bne.n	85e4e <_realloc_r+0x5a>
   85f2e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85f32:	eba9 0a01 	sub.w	sl, r9, r1
   85f36:	f8da 1004 	ldr.w	r1, [sl, #4]
   85f3a:	f021 0103 	bic.w	r1, r1, #3
   85f3e:	440b      	add	r3, r1
   85f40:	443b      	add	r3, r7
   85f42:	4293      	cmp	r3, r2
   85f44:	db26      	blt.n	85f94 <_realloc_r+0x1a0>
   85f46:	4655      	mov	r5, sl
   85f48:	68c1      	ldr	r1, [r0, #12]
   85f4a:	6880      	ldr	r0, [r0, #8]
   85f4c:	1f3a      	subs	r2, r7, #4
   85f4e:	60c1      	str	r1, [r0, #12]
   85f50:	6088      	str	r0, [r1, #8]
   85f52:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85f56:	f8da 100c 	ldr.w	r1, [sl, #12]
   85f5a:	2a24      	cmp	r2, #36	; 0x24
   85f5c:	60c1      	str	r1, [r0, #12]
   85f5e:	6088      	str	r0, [r1, #8]
   85f60:	d826      	bhi.n	85fb0 <_realloc_r+0x1bc>
   85f62:	2a13      	cmp	r2, #19
   85f64:	f240 8081 	bls.w	8606a <_realloc_r+0x276>
   85f68:	6821      	ldr	r1, [r4, #0]
   85f6a:	2a1b      	cmp	r2, #27
   85f6c:	f8ca 1008 	str.w	r1, [sl, #8]
   85f70:	6861      	ldr	r1, [r4, #4]
   85f72:	f8ca 100c 	str.w	r1, [sl, #12]
   85f76:	f200 80ad 	bhi.w	860d4 <_realloc_r+0x2e0>
   85f7a:	f104 0008 	add.w	r0, r4, #8
   85f7e:	f10a 0210 	add.w	r2, sl, #16
   85f82:	e074      	b.n	8606e <_realloc_r+0x27a>
   85f84:	f854 3c08 	ldr.w	r3, [r4, #-8]
   85f88:	eba9 0a03 	sub.w	sl, r9, r3
   85f8c:	f8da 1004 	ldr.w	r1, [sl, #4]
   85f90:	f021 0103 	bic.w	r1, r1, #3
   85f94:	187b      	adds	r3, r7, r1
   85f96:	4293      	cmp	r3, r2
   85f98:	f6ff af59 	blt.w	85e4e <_realloc_r+0x5a>
   85f9c:	4655      	mov	r5, sl
   85f9e:	f8da 100c 	ldr.w	r1, [sl, #12]
   85fa2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85fa6:	1f3a      	subs	r2, r7, #4
   85fa8:	2a24      	cmp	r2, #36	; 0x24
   85faa:	60c1      	str	r1, [r0, #12]
   85fac:	6088      	str	r0, [r1, #8]
   85fae:	d9d8      	bls.n	85f62 <_realloc_r+0x16e>
   85fb0:	4621      	mov	r1, r4
   85fb2:	4628      	mov	r0, r5
   85fb4:	461f      	mov	r7, r3
   85fb6:	46d1      	mov	r9, sl
   85fb8:	f7ff fbb0 	bl	8571c <memmove>
   85fbc:	e77a      	b.n	85eb4 <_realloc_r+0xc0>
   85fbe:	6841      	ldr	r1, [r0, #4]
   85fc0:	f106 0010 	add.w	r0, r6, #16
   85fc4:	f021 0b03 	bic.w	fp, r1, #3
   85fc8:	44bb      	add	fp, r7
   85fca:	4583      	cmp	fp, r0
   85fcc:	da58      	bge.n	86080 <_realloc_r+0x28c>
   85fce:	f01e 0f01 	tst.w	lr, #1
   85fd2:	f47f af3c 	bne.w	85e4e <_realloc_r+0x5a>
   85fd6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   85fda:	eba9 0a01 	sub.w	sl, r9, r1
   85fde:	f8da 1004 	ldr.w	r1, [sl, #4]
   85fe2:	f021 0103 	bic.w	r1, r1, #3
   85fe6:	448b      	add	fp, r1
   85fe8:	4558      	cmp	r0, fp
   85fea:	dcd3      	bgt.n	85f94 <_realloc_r+0x1a0>
   85fec:	4655      	mov	r5, sl
   85fee:	f8da 100c 	ldr.w	r1, [sl, #12]
   85ff2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   85ff6:	1f3a      	subs	r2, r7, #4
   85ff8:	2a24      	cmp	r2, #36	; 0x24
   85ffa:	60c1      	str	r1, [r0, #12]
   85ffc:	6088      	str	r0, [r1, #8]
   85ffe:	f200 808d 	bhi.w	8611c <_realloc_r+0x328>
   86002:	2a13      	cmp	r2, #19
   86004:	f240 8087 	bls.w	86116 <_realloc_r+0x322>
   86008:	6821      	ldr	r1, [r4, #0]
   8600a:	2a1b      	cmp	r2, #27
   8600c:	f8ca 1008 	str.w	r1, [sl, #8]
   86010:	6861      	ldr	r1, [r4, #4]
   86012:	f8ca 100c 	str.w	r1, [sl, #12]
   86016:	f200 8088 	bhi.w	8612a <_realloc_r+0x336>
   8601a:	f104 0108 	add.w	r1, r4, #8
   8601e:	f10a 0210 	add.w	r2, sl, #16
   86022:	6808      	ldr	r0, [r1, #0]
   86024:	6010      	str	r0, [r2, #0]
   86026:	6848      	ldr	r0, [r1, #4]
   86028:	6050      	str	r0, [r2, #4]
   8602a:	6889      	ldr	r1, [r1, #8]
   8602c:	6091      	str	r1, [r2, #8]
   8602e:	ebab 0206 	sub.w	r2, fp, r6
   86032:	eb0a 0106 	add.w	r1, sl, r6
   86036:	f042 0201 	orr.w	r2, r2, #1
   8603a:	6099      	str	r1, [r3, #8]
   8603c:	604a      	str	r2, [r1, #4]
   8603e:	f8da 3004 	ldr.w	r3, [sl, #4]
   86042:	4640      	mov	r0, r8
   86044:	f003 0301 	and.w	r3, r3, #1
   86048:	431e      	orrs	r6, r3
   8604a:	f8ca 6004 	str.w	r6, [sl, #4]
   8604e:	f7ff fbcf 	bl	857f0 <__malloc_unlock>
   86052:	e742      	b.n	85eda <_realloc_r+0xe6>
   86054:	6823      	ldr	r3, [r4, #0]
   86056:	2a1b      	cmp	r2, #27
   86058:	6003      	str	r3, [r0, #0]
   8605a:	6863      	ldr	r3, [r4, #4]
   8605c:	6043      	str	r3, [r0, #4]
   8605e:	d827      	bhi.n	860b0 <_realloc_r+0x2bc>
   86060:	f100 0308 	add.w	r3, r0, #8
   86064:	f104 0208 	add.w	r2, r4, #8
   86068:	e70b      	b.n	85e82 <_realloc_r+0x8e>
   8606a:	4620      	mov	r0, r4
   8606c:	462a      	mov	r2, r5
   8606e:	6801      	ldr	r1, [r0, #0]
   86070:	461f      	mov	r7, r3
   86072:	6011      	str	r1, [r2, #0]
   86074:	6841      	ldr	r1, [r0, #4]
   86076:	46d1      	mov	r9, sl
   86078:	6051      	str	r1, [r2, #4]
   8607a:	6883      	ldr	r3, [r0, #8]
   8607c:	6093      	str	r3, [r2, #8]
   8607e:	e719      	b.n	85eb4 <_realloc_r+0xc0>
   86080:	ebab 0b06 	sub.w	fp, fp, r6
   86084:	eb09 0106 	add.w	r1, r9, r6
   86088:	f04b 0201 	orr.w	r2, fp, #1
   8608c:	6099      	str	r1, [r3, #8]
   8608e:	604a      	str	r2, [r1, #4]
   86090:	f854 3c04 	ldr.w	r3, [r4, #-4]
   86094:	4640      	mov	r0, r8
   86096:	f003 0301 	and.w	r3, r3, #1
   8609a:	431e      	orrs	r6, r3
   8609c:	f844 6c04 	str.w	r6, [r4, #-4]
   860a0:	f7ff fba6 	bl	857f0 <__malloc_unlock>
   860a4:	4625      	mov	r5, r4
   860a6:	e718      	b.n	85eda <_realloc_r+0xe6>
   860a8:	4621      	mov	r1, r4
   860aa:	f7ff fb37 	bl	8571c <memmove>
   860ae:	e6ee      	b.n	85e8e <_realloc_r+0x9a>
   860b0:	68a3      	ldr	r3, [r4, #8]
   860b2:	2a24      	cmp	r2, #36	; 0x24
   860b4:	6083      	str	r3, [r0, #8]
   860b6:	68e3      	ldr	r3, [r4, #12]
   860b8:	60c3      	str	r3, [r0, #12]
   860ba:	d018      	beq.n	860ee <_realloc_r+0x2fa>
   860bc:	f100 0310 	add.w	r3, r0, #16
   860c0:	f104 0210 	add.w	r2, r4, #16
   860c4:	e6dd      	b.n	85e82 <_realloc_r+0x8e>
   860c6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   860ca:	4625      	mov	r5, r4
   860cc:	f023 0303 	bic.w	r3, r3, #3
   860d0:	441f      	add	r7, r3
   860d2:	e6ef      	b.n	85eb4 <_realloc_r+0xc0>
   860d4:	68a1      	ldr	r1, [r4, #8]
   860d6:	2a24      	cmp	r2, #36	; 0x24
   860d8:	f8ca 1010 	str.w	r1, [sl, #16]
   860dc:	68e1      	ldr	r1, [r4, #12]
   860de:	f8ca 1014 	str.w	r1, [sl, #20]
   860e2:	d00d      	beq.n	86100 <_realloc_r+0x30c>
   860e4:	f104 0010 	add.w	r0, r4, #16
   860e8:	f10a 0218 	add.w	r2, sl, #24
   860ec:	e7bf      	b.n	8606e <_realloc_r+0x27a>
   860ee:	6922      	ldr	r2, [r4, #16]
   860f0:	f100 0318 	add.w	r3, r0, #24
   860f4:	6102      	str	r2, [r0, #16]
   860f6:	6961      	ldr	r1, [r4, #20]
   860f8:	f104 0218 	add.w	r2, r4, #24
   860fc:	6141      	str	r1, [r0, #20]
   860fe:	e6c0      	b.n	85e82 <_realloc_r+0x8e>
   86100:	6922      	ldr	r2, [r4, #16]
   86102:	f104 0018 	add.w	r0, r4, #24
   86106:	f8ca 2018 	str.w	r2, [sl, #24]
   8610a:	6961      	ldr	r1, [r4, #20]
   8610c:	f10a 0220 	add.w	r2, sl, #32
   86110:	f8ca 101c 	str.w	r1, [sl, #28]
   86114:	e7ab      	b.n	8606e <_realloc_r+0x27a>
   86116:	4621      	mov	r1, r4
   86118:	462a      	mov	r2, r5
   8611a:	e782      	b.n	86022 <_realloc_r+0x22e>
   8611c:	4621      	mov	r1, r4
   8611e:	4628      	mov	r0, r5
   86120:	9301      	str	r3, [sp, #4]
   86122:	f7ff fafb 	bl	8571c <memmove>
   86126:	9b01      	ldr	r3, [sp, #4]
   86128:	e781      	b.n	8602e <_realloc_r+0x23a>
   8612a:	68a1      	ldr	r1, [r4, #8]
   8612c:	2a24      	cmp	r2, #36	; 0x24
   8612e:	f8ca 1010 	str.w	r1, [sl, #16]
   86132:	68e1      	ldr	r1, [r4, #12]
   86134:	f8ca 1014 	str.w	r1, [sl, #20]
   86138:	d006      	beq.n	86148 <_realloc_r+0x354>
   8613a:	f104 0110 	add.w	r1, r4, #16
   8613e:	f10a 0218 	add.w	r2, sl, #24
   86142:	e76e      	b.n	86022 <_realloc_r+0x22e>
   86144:	20070770 	.word	0x20070770
   86148:	6922      	ldr	r2, [r4, #16]
   8614a:	f104 0118 	add.w	r1, r4, #24
   8614e:	f8ca 2018 	str.w	r2, [sl, #24]
   86152:	6960      	ldr	r0, [r4, #20]
   86154:	f10a 0220 	add.w	r2, sl, #32
   86158:	f8ca 001c 	str.w	r0, [sl, #28]
   8615c:	e761      	b.n	86022 <_realloc_r+0x22e>
   8615e:	bf00      	nop

00086160 <_sbrk_r>:
   86160:	b538      	push	{r3, r4, r5, lr}
   86162:	2300      	movs	r3, #0
   86164:	4c06      	ldr	r4, [pc, #24]	; (86180 <_sbrk_r+0x20>)
   86166:	4605      	mov	r5, r0
   86168:	4608      	mov	r0, r1
   8616a:	6023      	str	r3, [r4, #0]
   8616c:	f7fc fa10 	bl	82590 <_sbrk>
   86170:	1c43      	adds	r3, r0, #1
   86172:	d000      	beq.n	86176 <_sbrk_r+0x16>
   86174:	bd38      	pop	{r3, r4, r5, pc}
   86176:	6823      	ldr	r3, [r4, #0]
   86178:	2b00      	cmp	r3, #0
   8617a:	d0fb      	beq.n	86174 <_sbrk_r+0x14>
   8617c:	602b      	str	r3, [r5, #0]
   8617e:	bd38      	pop	{r3, r4, r5, pc}
   86180:	20070e3c 	.word	0x20070e3c

00086184 <__ssprint_r>:
   86184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86188:	6893      	ldr	r3, [r2, #8]
   8618a:	b083      	sub	sp, #12
   8618c:	4690      	mov	r8, r2
   8618e:	2b00      	cmp	r3, #0
   86190:	d070      	beq.n	86274 <__ssprint_r+0xf0>
   86192:	4682      	mov	sl, r0
   86194:	460c      	mov	r4, r1
   86196:	6817      	ldr	r7, [r2, #0]
   86198:	688d      	ldr	r5, [r1, #8]
   8619a:	6808      	ldr	r0, [r1, #0]
   8619c:	e042      	b.n	86224 <__ssprint_r+0xa0>
   8619e:	89a3      	ldrh	r3, [r4, #12]
   861a0:	f413 6f90 	tst.w	r3, #1152	; 0x480
   861a4:	d02e      	beq.n	86204 <__ssprint_r+0x80>
   861a6:	6965      	ldr	r5, [r4, #20]
   861a8:	6921      	ldr	r1, [r4, #16]
   861aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   861ae:	eba0 0b01 	sub.w	fp, r0, r1
   861b2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   861b6:	f10b 0001 	add.w	r0, fp, #1
   861ba:	106d      	asrs	r5, r5, #1
   861bc:	4430      	add	r0, r6
   861be:	42a8      	cmp	r0, r5
   861c0:	462a      	mov	r2, r5
   861c2:	bf84      	itt	hi
   861c4:	4605      	movhi	r5, r0
   861c6:	462a      	movhi	r2, r5
   861c8:	055b      	lsls	r3, r3, #21
   861ca:	d538      	bpl.n	8623e <__ssprint_r+0xba>
   861cc:	4611      	mov	r1, r2
   861ce:	4650      	mov	r0, sl
   861d0:	f7fe ffa6 	bl	85120 <_malloc_r>
   861d4:	2800      	cmp	r0, #0
   861d6:	d03c      	beq.n	86252 <__ssprint_r+0xce>
   861d8:	465a      	mov	r2, fp
   861da:	6921      	ldr	r1, [r4, #16]
   861dc:	9001      	str	r0, [sp, #4]
   861de:	f7fc fabb 	bl	82758 <memcpy>
   861e2:	89a2      	ldrh	r2, [r4, #12]
   861e4:	9b01      	ldr	r3, [sp, #4]
   861e6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   861ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   861ee:	81a2      	strh	r2, [r4, #12]
   861f0:	eba5 020b 	sub.w	r2, r5, fp
   861f4:	eb03 000b 	add.w	r0, r3, fp
   861f8:	6165      	str	r5, [r4, #20]
   861fa:	46b3      	mov	fp, r6
   861fc:	4635      	mov	r5, r6
   861fe:	6123      	str	r3, [r4, #16]
   86200:	6020      	str	r0, [r4, #0]
   86202:	60a2      	str	r2, [r4, #8]
   86204:	465a      	mov	r2, fp
   86206:	4649      	mov	r1, r9
   86208:	f7ff fa88 	bl	8571c <memmove>
   8620c:	f8d8 3008 	ldr.w	r3, [r8, #8]
   86210:	68a2      	ldr	r2, [r4, #8]
   86212:	6820      	ldr	r0, [r4, #0]
   86214:	1b55      	subs	r5, r2, r5
   86216:	4458      	add	r0, fp
   86218:	1b9e      	subs	r6, r3, r6
   8621a:	60a5      	str	r5, [r4, #8]
   8621c:	6020      	str	r0, [r4, #0]
   8621e:	f8c8 6008 	str.w	r6, [r8, #8]
   86222:	b33e      	cbz	r6, 86274 <__ssprint_r+0xf0>
   86224:	687e      	ldr	r6, [r7, #4]
   86226:	463b      	mov	r3, r7
   86228:	3708      	adds	r7, #8
   8622a:	2e00      	cmp	r6, #0
   8622c:	d0fa      	beq.n	86224 <__ssprint_r+0xa0>
   8622e:	42ae      	cmp	r6, r5
   86230:	f8d3 9000 	ldr.w	r9, [r3]
   86234:	46ab      	mov	fp, r5
   86236:	d2b2      	bcs.n	8619e <__ssprint_r+0x1a>
   86238:	4635      	mov	r5, r6
   8623a:	46b3      	mov	fp, r6
   8623c:	e7e2      	b.n	86204 <__ssprint_r+0x80>
   8623e:	4650      	mov	r0, sl
   86240:	f7ff fdd8 	bl	85df4 <_realloc_r>
   86244:	4603      	mov	r3, r0
   86246:	2800      	cmp	r0, #0
   86248:	d1d2      	bne.n	861f0 <__ssprint_r+0x6c>
   8624a:	6921      	ldr	r1, [r4, #16]
   8624c:	4650      	mov	r0, sl
   8624e:	f7fe fe6f 	bl	84f30 <_free_r>
   86252:	230c      	movs	r3, #12
   86254:	2200      	movs	r2, #0
   86256:	f04f 30ff 	mov.w	r0, #4294967295
   8625a:	f8ca 3000 	str.w	r3, [sl]
   8625e:	89a3      	ldrh	r3, [r4, #12]
   86260:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86264:	81a3      	strh	r3, [r4, #12]
   86266:	f8c8 2008 	str.w	r2, [r8, #8]
   8626a:	f8c8 2004 	str.w	r2, [r8, #4]
   8626e:	b003      	add	sp, #12
   86270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86274:	2000      	movs	r0, #0
   86276:	f8c8 0004 	str.w	r0, [r8, #4]
   8627a:	b003      	add	sp, #12
   8627c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086280 <__ascii_wctomb>:
   86280:	b119      	cbz	r1, 8628a <__ascii_wctomb+0xa>
   86282:	2aff      	cmp	r2, #255	; 0xff
   86284:	d803      	bhi.n	8628e <__ascii_wctomb+0xe>
   86286:	700a      	strb	r2, [r1, #0]
   86288:	2101      	movs	r1, #1
   8628a:	4608      	mov	r0, r1
   8628c:	4770      	bx	lr
   8628e:	238a      	movs	r3, #138	; 0x8a
   86290:	f04f 31ff 	mov.w	r1, #4294967295
   86294:	6003      	str	r3, [r0, #0]
   86296:	e7f8      	b.n	8628a <__ascii_wctomb+0xa>

00086298 <__register_exitproc>:
   86298:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8629c:	4d2c      	ldr	r5, [pc, #176]	; (86350 <__register_exitproc+0xb8>)
   8629e:	4606      	mov	r6, r0
   862a0:	6828      	ldr	r0, [r5, #0]
   862a2:	4698      	mov	r8, r3
   862a4:	460f      	mov	r7, r1
   862a6:	4691      	mov	r9, r2
   862a8:	f7fe ff36 	bl	85118 <__retarget_lock_acquire_recursive>
   862ac:	4b29      	ldr	r3, [pc, #164]	; (86354 <__register_exitproc+0xbc>)
   862ae:	681c      	ldr	r4, [r3, #0]
   862b0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   862b4:	2b00      	cmp	r3, #0
   862b6:	d03e      	beq.n	86336 <__register_exitproc+0x9e>
   862b8:	685a      	ldr	r2, [r3, #4]
   862ba:	2a1f      	cmp	r2, #31
   862bc:	dc1c      	bgt.n	862f8 <__register_exitproc+0x60>
   862be:	f102 0e01 	add.w	lr, r2, #1
   862c2:	b176      	cbz	r6, 862e2 <__register_exitproc+0x4a>
   862c4:	2101      	movs	r1, #1
   862c6:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   862ca:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   862ce:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   862d2:	4091      	lsls	r1, r2
   862d4:	4308      	orrs	r0, r1
   862d6:	2e02      	cmp	r6, #2
   862d8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   862dc:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   862e0:	d023      	beq.n	8632a <__register_exitproc+0x92>
   862e2:	3202      	adds	r2, #2
   862e4:	f8c3 e004 	str.w	lr, [r3, #4]
   862e8:	6828      	ldr	r0, [r5, #0]
   862ea:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   862ee:	f7fe ff15 	bl	8511c <__retarget_lock_release_recursive>
   862f2:	2000      	movs	r0, #0
   862f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   862f8:	4b17      	ldr	r3, [pc, #92]	; (86358 <__register_exitproc+0xc0>)
   862fa:	b30b      	cbz	r3, 86340 <__register_exitproc+0xa8>
   862fc:	f44f 70c8 	mov.w	r0, #400	; 0x190
   86300:	f3af 8000 	nop.w
   86304:	4603      	mov	r3, r0
   86306:	b1d8      	cbz	r0, 86340 <__register_exitproc+0xa8>
   86308:	2000      	movs	r0, #0
   8630a:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8630e:	f04f 0e01 	mov.w	lr, #1
   86312:	6058      	str	r0, [r3, #4]
   86314:	6019      	str	r1, [r3, #0]
   86316:	4602      	mov	r2, r0
   86318:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8631c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   86320:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   86324:	2e00      	cmp	r6, #0
   86326:	d0dc      	beq.n	862e2 <__register_exitproc+0x4a>
   86328:	e7cc      	b.n	862c4 <__register_exitproc+0x2c>
   8632a:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   8632e:	4301      	orrs	r1, r0
   86330:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   86334:	e7d5      	b.n	862e2 <__register_exitproc+0x4a>
   86336:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8633a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   8633e:	e7bb      	b.n	862b8 <__register_exitproc+0x20>
   86340:	6828      	ldr	r0, [r5, #0]
   86342:	f7fe feeb 	bl	8511c <__retarget_lock_release_recursive>
   86346:	f04f 30ff 	mov.w	r0, #4294967295
   8634a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8634e:	bf00      	nop
   86350:	20070600 	.word	0x20070600
   86354:	00087018 	.word	0x00087018
   86358:	00000000 	.word	0x00000000

0008635c <_calloc_r>:
   8635c:	b510      	push	{r4, lr}
   8635e:	fb02 f101 	mul.w	r1, r2, r1
   86362:	f7fe fedd 	bl	85120 <_malloc_r>
   86366:	4604      	mov	r4, r0
   86368:	b1d8      	cbz	r0, 863a2 <_calloc_r+0x46>
   8636a:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8636e:	f022 0203 	bic.w	r2, r2, #3
   86372:	3a04      	subs	r2, #4
   86374:	2a24      	cmp	r2, #36	; 0x24
   86376:	d818      	bhi.n	863aa <_calloc_r+0x4e>
   86378:	2a13      	cmp	r2, #19
   8637a:	d914      	bls.n	863a6 <_calloc_r+0x4a>
   8637c:	2300      	movs	r3, #0
   8637e:	2a1b      	cmp	r2, #27
   86380:	6003      	str	r3, [r0, #0]
   86382:	6043      	str	r3, [r0, #4]
   86384:	d916      	bls.n	863b4 <_calloc_r+0x58>
   86386:	2a24      	cmp	r2, #36	; 0x24
   86388:	6083      	str	r3, [r0, #8]
   8638a:	60c3      	str	r3, [r0, #12]
   8638c:	bf11      	iteee	ne
   8638e:	f100 0210 	addne.w	r2, r0, #16
   86392:	6103      	streq	r3, [r0, #16]
   86394:	6143      	streq	r3, [r0, #20]
   86396:	f100 0218 	addeq.w	r2, r0, #24
   8639a:	2300      	movs	r3, #0
   8639c:	6013      	str	r3, [r2, #0]
   8639e:	6053      	str	r3, [r2, #4]
   863a0:	6093      	str	r3, [r2, #8]
   863a2:	4620      	mov	r0, r4
   863a4:	bd10      	pop	{r4, pc}
   863a6:	4602      	mov	r2, r0
   863a8:	e7f7      	b.n	8639a <_calloc_r+0x3e>
   863aa:	2100      	movs	r1, #0
   863ac:	f7fc fa4a 	bl	82844 <memset>
   863b0:	4620      	mov	r0, r4
   863b2:	bd10      	pop	{r4, pc}
   863b4:	f100 0208 	add.w	r2, r0, #8
   863b8:	e7ef      	b.n	8639a <_calloc_r+0x3e>
   863ba:	bf00      	nop

000863bc <__aeabi_drsub>:
   863bc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   863c0:	e002      	b.n	863c8 <__adddf3>
   863c2:	bf00      	nop

000863c4 <__aeabi_dsub>:
   863c4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000863c8 <__adddf3>:
   863c8:	b530      	push	{r4, r5, lr}
   863ca:	ea4f 0441 	mov.w	r4, r1, lsl #1
   863ce:	ea4f 0543 	mov.w	r5, r3, lsl #1
   863d2:	ea94 0f05 	teq	r4, r5
   863d6:	bf08      	it	eq
   863d8:	ea90 0f02 	teqeq	r0, r2
   863dc:	bf1f      	itttt	ne
   863de:	ea54 0c00 	orrsne.w	ip, r4, r0
   863e2:	ea55 0c02 	orrsne.w	ip, r5, r2
   863e6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   863ea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   863ee:	f000 80e2 	beq.w	865b6 <__adddf3+0x1ee>
   863f2:	ea4f 5454 	mov.w	r4, r4, lsr #21
   863f6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   863fa:	bfb8      	it	lt
   863fc:	426d      	neglt	r5, r5
   863fe:	dd0c      	ble.n	8641a <__adddf3+0x52>
   86400:	442c      	add	r4, r5
   86402:	ea80 0202 	eor.w	r2, r0, r2
   86406:	ea81 0303 	eor.w	r3, r1, r3
   8640a:	ea82 0000 	eor.w	r0, r2, r0
   8640e:	ea83 0101 	eor.w	r1, r3, r1
   86412:	ea80 0202 	eor.w	r2, r0, r2
   86416:	ea81 0303 	eor.w	r3, r1, r3
   8641a:	2d36      	cmp	r5, #54	; 0x36
   8641c:	bf88      	it	hi
   8641e:	bd30      	pophi	{r4, r5, pc}
   86420:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86424:	ea4f 3101 	mov.w	r1, r1, lsl #12
   86428:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   8642c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   86430:	d002      	beq.n	86438 <__adddf3+0x70>
   86432:	4240      	negs	r0, r0
   86434:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   86438:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   8643c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   86440:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   86444:	d002      	beq.n	8644c <__adddf3+0x84>
   86446:	4252      	negs	r2, r2
   86448:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8644c:	ea94 0f05 	teq	r4, r5
   86450:	f000 80a7 	beq.w	865a2 <__adddf3+0x1da>
   86454:	f1a4 0401 	sub.w	r4, r4, #1
   86458:	f1d5 0e20 	rsbs	lr, r5, #32
   8645c:	db0d      	blt.n	8647a <__adddf3+0xb2>
   8645e:	fa02 fc0e 	lsl.w	ip, r2, lr
   86462:	fa22 f205 	lsr.w	r2, r2, r5
   86466:	1880      	adds	r0, r0, r2
   86468:	f141 0100 	adc.w	r1, r1, #0
   8646c:	fa03 f20e 	lsl.w	r2, r3, lr
   86470:	1880      	adds	r0, r0, r2
   86472:	fa43 f305 	asr.w	r3, r3, r5
   86476:	4159      	adcs	r1, r3
   86478:	e00e      	b.n	86498 <__adddf3+0xd0>
   8647a:	f1a5 0520 	sub.w	r5, r5, #32
   8647e:	f10e 0e20 	add.w	lr, lr, #32
   86482:	2a01      	cmp	r2, #1
   86484:	fa03 fc0e 	lsl.w	ip, r3, lr
   86488:	bf28      	it	cs
   8648a:	f04c 0c02 	orrcs.w	ip, ip, #2
   8648e:	fa43 f305 	asr.w	r3, r3, r5
   86492:	18c0      	adds	r0, r0, r3
   86494:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   86498:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8649c:	d507      	bpl.n	864ae <__adddf3+0xe6>
   8649e:	f04f 0e00 	mov.w	lr, #0
   864a2:	f1dc 0c00 	rsbs	ip, ip, #0
   864a6:	eb7e 0000 	sbcs.w	r0, lr, r0
   864aa:	eb6e 0101 	sbc.w	r1, lr, r1
   864ae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   864b2:	d31b      	bcc.n	864ec <__adddf3+0x124>
   864b4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   864b8:	d30c      	bcc.n	864d4 <__adddf3+0x10c>
   864ba:	0849      	lsrs	r1, r1, #1
   864bc:	ea5f 0030 	movs.w	r0, r0, rrx
   864c0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   864c4:	f104 0401 	add.w	r4, r4, #1
   864c8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   864cc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   864d0:	f080 809a 	bcs.w	86608 <__adddf3+0x240>
   864d4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   864d8:	bf08      	it	eq
   864da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   864de:	f150 0000 	adcs.w	r0, r0, #0
   864e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   864e6:	ea41 0105 	orr.w	r1, r1, r5
   864ea:	bd30      	pop	{r4, r5, pc}
   864ec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   864f0:	4140      	adcs	r0, r0
   864f2:	eb41 0101 	adc.w	r1, r1, r1
   864f6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   864fa:	f1a4 0401 	sub.w	r4, r4, #1
   864fe:	d1e9      	bne.n	864d4 <__adddf3+0x10c>
   86500:	f091 0f00 	teq	r1, #0
   86504:	bf04      	itt	eq
   86506:	4601      	moveq	r1, r0
   86508:	2000      	moveq	r0, #0
   8650a:	fab1 f381 	clz	r3, r1
   8650e:	bf08      	it	eq
   86510:	3320      	addeq	r3, #32
   86512:	f1a3 030b 	sub.w	r3, r3, #11
   86516:	f1b3 0220 	subs.w	r2, r3, #32
   8651a:	da0c      	bge.n	86536 <__adddf3+0x16e>
   8651c:	320c      	adds	r2, #12
   8651e:	dd08      	ble.n	86532 <__adddf3+0x16a>
   86520:	f102 0c14 	add.w	ip, r2, #20
   86524:	f1c2 020c 	rsb	r2, r2, #12
   86528:	fa01 f00c 	lsl.w	r0, r1, ip
   8652c:	fa21 f102 	lsr.w	r1, r1, r2
   86530:	e00c      	b.n	8654c <__adddf3+0x184>
   86532:	f102 0214 	add.w	r2, r2, #20
   86536:	bfd8      	it	le
   86538:	f1c2 0c20 	rsble	ip, r2, #32
   8653c:	fa01 f102 	lsl.w	r1, r1, r2
   86540:	fa20 fc0c 	lsr.w	ip, r0, ip
   86544:	bfdc      	itt	le
   86546:	ea41 010c 	orrle.w	r1, r1, ip
   8654a:	4090      	lslle	r0, r2
   8654c:	1ae4      	subs	r4, r4, r3
   8654e:	bfa2      	ittt	ge
   86550:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   86554:	4329      	orrge	r1, r5
   86556:	bd30      	popge	{r4, r5, pc}
   86558:	ea6f 0404 	mvn.w	r4, r4
   8655c:	3c1f      	subs	r4, #31
   8655e:	da1c      	bge.n	8659a <__adddf3+0x1d2>
   86560:	340c      	adds	r4, #12
   86562:	dc0e      	bgt.n	86582 <__adddf3+0x1ba>
   86564:	f104 0414 	add.w	r4, r4, #20
   86568:	f1c4 0220 	rsb	r2, r4, #32
   8656c:	fa20 f004 	lsr.w	r0, r0, r4
   86570:	fa01 f302 	lsl.w	r3, r1, r2
   86574:	ea40 0003 	orr.w	r0, r0, r3
   86578:	fa21 f304 	lsr.w	r3, r1, r4
   8657c:	ea45 0103 	orr.w	r1, r5, r3
   86580:	bd30      	pop	{r4, r5, pc}
   86582:	f1c4 040c 	rsb	r4, r4, #12
   86586:	f1c4 0220 	rsb	r2, r4, #32
   8658a:	fa20 f002 	lsr.w	r0, r0, r2
   8658e:	fa01 f304 	lsl.w	r3, r1, r4
   86592:	ea40 0003 	orr.w	r0, r0, r3
   86596:	4629      	mov	r1, r5
   86598:	bd30      	pop	{r4, r5, pc}
   8659a:	fa21 f004 	lsr.w	r0, r1, r4
   8659e:	4629      	mov	r1, r5
   865a0:	bd30      	pop	{r4, r5, pc}
   865a2:	f094 0f00 	teq	r4, #0
   865a6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   865aa:	bf06      	itte	eq
   865ac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   865b0:	3401      	addeq	r4, #1
   865b2:	3d01      	subne	r5, #1
   865b4:	e74e      	b.n	86454 <__adddf3+0x8c>
   865b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   865ba:	bf18      	it	ne
   865bc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   865c0:	d029      	beq.n	86616 <__adddf3+0x24e>
   865c2:	ea94 0f05 	teq	r4, r5
   865c6:	bf08      	it	eq
   865c8:	ea90 0f02 	teqeq	r0, r2
   865cc:	d005      	beq.n	865da <__adddf3+0x212>
   865ce:	ea54 0c00 	orrs.w	ip, r4, r0
   865d2:	bf04      	itt	eq
   865d4:	4619      	moveq	r1, r3
   865d6:	4610      	moveq	r0, r2
   865d8:	bd30      	pop	{r4, r5, pc}
   865da:	ea91 0f03 	teq	r1, r3
   865de:	bf1e      	ittt	ne
   865e0:	2100      	movne	r1, #0
   865e2:	2000      	movne	r0, #0
   865e4:	bd30      	popne	{r4, r5, pc}
   865e6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   865ea:	d105      	bne.n	865f8 <__adddf3+0x230>
   865ec:	0040      	lsls	r0, r0, #1
   865ee:	4149      	adcs	r1, r1
   865f0:	bf28      	it	cs
   865f2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   865f6:	bd30      	pop	{r4, r5, pc}
   865f8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   865fc:	bf3c      	itt	cc
   865fe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   86602:	bd30      	popcc	{r4, r5, pc}
   86604:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   86608:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8660c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86610:	f04f 0000 	mov.w	r0, #0
   86614:	bd30      	pop	{r4, r5, pc}
   86616:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8661a:	bf1a      	itte	ne
   8661c:	4619      	movne	r1, r3
   8661e:	4610      	movne	r0, r2
   86620:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   86624:	bf1c      	itt	ne
   86626:	460b      	movne	r3, r1
   86628:	4602      	movne	r2, r0
   8662a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8662e:	bf06      	itte	eq
   86630:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   86634:	ea91 0f03 	teqeq	r1, r3
   86638:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8663c:	bd30      	pop	{r4, r5, pc}
   8663e:	bf00      	nop

00086640 <__aeabi_ui2d>:
   86640:	f090 0f00 	teq	r0, #0
   86644:	bf04      	itt	eq
   86646:	2100      	moveq	r1, #0
   86648:	4770      	bxeq	lr
   8664a:	b530      	push	{r4, r5, lr}
   8664c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86650:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86654:	f04f 0500 	mov.w	r5, #0
   86658:	f04f 0100 	mov.w	r1, #0
   8665c:	e750      	b.n	86500 <__adddf3+0x138>
   8665e:	bf00      	nop

00086660 <__aeabi_i2d>:
   86660:	f090 0f00 	teq	r0, #0
   86664:	bf04      	itt	eq
   86666:	2100      	moveq	r1, #0
   86668:	4770      	bxeq	lr
   8666a:	b530      	push	{r4, r5, lr}
   8666c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   86670:	f104 0432 	add.w	r4, r4, #50	; 0x32
   86674:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   86678:	bf48      	it	mi
   8667a:	4240      	negmi	r0, r0
   8667c:	f04f 0100 	mov.w	r1, #0
   86680:	e73e      	b.n	86500 <__adddf3+0x138>
   86682:	bf00      	nop

00086684 <__aeabi_f2d>:
   86684:	0042      	lsls	r2, r0, #1
   86686:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8668a:	ea4f 0131 	mov.w	r1, r1, rrx
   8668e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   86692:	bf1f      	itttt	ne
   86694:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   86698:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   8669c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   866a0:	4770      	bxne	lr
   866a2:	f092 0f00 	teq	r2, #0
   866a6:	bf14      	ite	ne
   866a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   866ac:	4770      	bxeq	lr
   866ae:	b530      	push	{r4, r5, lr}
   866b0:	f44f 7460 	mov.w	r4, #896	; 0x380
   866b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   866b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   866bc:	e720      	b.n	86500 <__adddf3+0x138>
   866be:	bf00      	nop

000866c0 <__aeabi_ul2d>:
   866c0:	ea50 0201 	orrs.w	r2, r0, r1
   866c4:	bf08      	it	eq
   866c6:	4770      	bxeq	lr
   866c8:	b530      	push	{r4, r5, lr}
   866ca:	f04f 0500 	mov.w	r5, #0
   866ce:	e00a      	b.n	866e6 <__aeabi_l2d+0x16>

000866d0 <__aeabi_l2d>:
   866d0:	ea50 0201 	orrs.w	r2, r0, r1
   866d4:	bf08      	it	eq
   866d6:	4770      	bxeq	lr
   866d8:	b530      	push	{r4, r5, lr}
   866da:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   866de:	d502      	bpl.n	866e6 <__aeabi_l2d+0x16>
   866e0:	4240      	negs	r0, r0
   866e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   866e6:	f44f 6480 	mov.w	r4, #1024	; 0x400
   866ea:	f104 0432 	add.w	r4, r4, #50	; 0x32
   866ee:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   866f2:	f43f aedc 	beq.w	864ae <__adddf3+0xe6>
   866f6:	f04f 0203 	mov.w	r2, #3
   866fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   866fe:	bf18      	it	ne
   86700:	3203      	addne	r2, #3
   86702:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   86706:	bf18      	it	ne
   86708:	3203      	addne	r2, #3
   8670a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8670e:	f1c2 0320 	rsb	r3, r2, #32
   86712:	fa00 fc03 	lsl.w	ip, r0, r3
   86716:	fa20 f002 	lsr.w	r0, r0, r2
   8671a:	fa01 fe03 	lsl.w	lr, r1, r3
   8671e:	ea40 000e 	orr.w	r0, r0, lr
   86722:	fa21 f102 	lsr.w	r1, r1, r2
   86726:	4414      	add	r4, r2
   86728:	e6c1      	b.n	864ae <__adddf3+0xe6>
   8672a:	bf00      	nop

0008672c <__aeabi_dmul>:
   8672c:	b570      	push	{r4, r5, r6, lr}
   8672e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   86736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8673a:	bf1d      	ittte	ne
   8673c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86740:	ea94 0f0c 	teqne	r4, ip
   86744:	ea95 0f0c 	teqne	r5, ip
   86748:	f000 f8de 	bleq	86908 <__aeabi_dmul+0x1dc>
   8674c:	442c      	add	r4, r5
   8674e:	ea81 0603 	eor.w	r6, r1, r3
   86752:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   86756:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   8675a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   8675e:	bf18      	it	ne
   86760:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   86764:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86768:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8676c:	d038      	beq.n	867e0 <__aeabi_dmul+0xb4>
   8676e:	fba0 ce02 	umull	ip, lr, r0, r2
   86772:	f04f 0500 	mov.w	r5, #0
   86776:	fbe1 e502 	umlal	lr, r5, r1, r2
   8677a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8677e:	fbe0 e503 	umlal	lr, r5, r0, r3
   86782:	f04f 0600 	mov.w	r6, #0
   86786:	fbe1 5603 	umlal	r5, r6, r1, r3
   8678a:	f09c 0f00 	teq	ip, #0
   8678e:	bf18      	it	ne
   86790:	f04e 0e01 	orrne.w	lr, lr, #1
   86794:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   86798:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   8679c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   867a0:	d204      	bcs.n	867ac <__aeabi_dmul+0x80>
   867a2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   867a6:	416d      	adcs	r5, r5
   867a8:	eb46 0606 	adc.w	r6, r6, r6
   867ac:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   867b0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   867b4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   867b8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   867bc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   867c0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   867c4:	bf88      	it	hi
   867c6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   867ca:	d81e      	bhi.n	8680a <__aeabi_dmul+0xde>
   867cc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   867d0:	bf08      	it	eq
   867d2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   867d6:	f150 0000 	adcs.w	r0, r0, #0
   867da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   867de:	bd70      	pop	{r4, r5, r6, pc}
   867e0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   867e4:	ea46 0101 	orr.w	r1, r6, r1
   867e8:	ea40 0002 	orr.w	r0, r0, r2
   867ec:	ea81 0103 	eor.w	r1, r1, r3
   867f0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   867f4:	bfc2      	ittt	gt
   867f6:	ebd4 050c 	rsbsgt	r5, r4, ip
   867fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   867fe:	bd70      	popgt	{r4, r5, r6, pc}
   86800:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86804:	f04f 0e00 	mov.w	lr, #0
   86808:	3c01      	subs	r4, #1
   8680a:	f300 80ab 	bgt.w	86964 <__aeabi_dmul+0x238>
   8680e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   86812:	bfde      	ittt	le
   86814:	2000      	movle	r0, #0
   86816:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8681a:	bd70      	pople	{r4, r5, r6, pc}
   8681c:	f1c4 0400 	rsb	r4, r4, #0
   86820:	3c20      	subs	r4, #32
   86822:	da35      	bge.n	86890 <__aeabi_dmul+0x164>
   86824:	340c      	adds	r4, #12
   86826:	dc1b      	bgt.n	86860 <__aeabi_dmul+0x134>
   86828:	f104 0414 	add.w	r4, r4, #20
   8682c:	f1c4 0520 	rsb	r5, r4, #32
   86830:	fa00 f305 	lsl.w	r3, r0, r5
   86834:	fa20 f004 	lsr.w	r0, r0, r4
   86838:	fa01 f205 	lsl.w	r2, r1, r5
   8683c:	ea40 0002 	orr.w	r0, r0, r2
   86840:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   86844:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   86848:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8684c:	fa21 f604 	lsr.w	r6, r1, r4
   86850:	eb42 0106 	adc.w	r1, r2, r6
   86854:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86858:	bf08      	it	eq
   8685a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8685e:	bd70      	pop	{r4, r5, r6, pc}
   86860:	f1c4 040c 	rsb	r4, r4, #12
   86864:	f1c4 0520 	rsb	r5, r4, #32
   86868:	fa00 f304 	lsl.w	r3, r0, r4
   8686c:	fa20 f005 	lsr.w	r0, r0, r5
   86870:	fa01 f204 	lsl.w	r2, r1, r4
   86874:	ea40 0002 	orr.w	r0, r0, r2
   86878:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8687c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   86880:	f141 0100 	adc.w	r1, r1, #0
   86884:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   86888:	bf08      	it	eq
   8688a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8688e:	bd70      	pop	{r4, r5, r6, pc}
   86890:	f1c4 0520 	rsb	r5, r4, #32
   86894:	fa00 f205 	lsl.w	r2, r0, r5
   86898:	ea4e 0e02 	orr.w	lr, lr, r2
   8689c:	fa20 f304 	lsr.w	r3, r0, r4
   868a0:	fa01 f205 	lsl.w	r2, r1, r5
   868a4:	ea43 0302 	orr.w	r3, r3, r2
   868a8:	fa21 f004 	lsr.w	r0, r1, r4
   868ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   868b0:	fa21 f204 	lsr.w	r2, r1, r4
   868b4:	ea20 0002 	bic.w	r0, r0, r2
   868b8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   868bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   868c0:	bf08      	it	eq
   868c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   868c6:	bd70      	pop	{r4, r5, r6, pc}
   868c8:	f094 0f00 	teq	r4, #0
   868cc:	d10f      	bne.n	868ee <__aeabi_dmul+0x1c2>
   868ce:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   868d2:	0040      	lsls	r0, r0, #1
   868d4:	eb41 0101 	adc.w	r1, r1, r1
   868d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   868dc:	bf08      	it	eq
   868de:	3c01      	subeq	r4, #1
   868e0:	d0f7      	beq.n	868d2 <__aeabi_dmul+0x1a6>
   868e2:	ea41 0106 	orr.w	r1, r1, r6
   868e6:	f095 0f00 	teq	r5, #0
   868ea:	bf18      	it	ne
   868ec:	4770      	bxne	lr
   868ee:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   868f2:	0052      	lsls	r2, r2, #1
   868f4:	eb43 0303 	adc.w	r3, r3, r3
   868f8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   868fc:	bf08      	it	eq
   868fe:	3d01      	subeq	r5, #1
   86900:	d0f7      	beq.n	868f2 <__aeabi_dmul+0x1c6>
   86902:	ea43 0306 	orr.w	r3, r3, r6
   86906:	4770      	bx	lr
   86908:	ea94 0f0c 	teq	r4, ip
   8690c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86910:	bf18      	it	ne
   86912:	ea95 0f0c 	teqne	r5, ip
   86916:	d00c      	beq.n	86932 <__aeabi_dmul+0x206>
   86918:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8691c:	bf18      	it	ne
   8691e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86922:	d1d1      	bne.n	868c8 <__aeabi_dmul+0x19c>
   86924:	ea81 0103 	eor.w	r1, r1, r3
   86928:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8692c:	f04f 0000 	mov.w	r0, #0
   86930:	bd70      	pop	{r4, r5, r6, pc}
   86932:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86936:	bf06      	itte	eq
   86938:	4610      	moveq	r0, r2
   8693a:	4619      	moveq	r1, r3
   8693c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86940:	d019      	beq.n	86976 <__aeabi_dmul+0x24a>
   86942:	ea94 0f0c 	teq	r4, ip
   86946:	d102      	bne.n	8694e <__aeabi_dmul+0x222>
   86948:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   8694c:	d113      	bne.n	86976 <__aeabi_dmul+0x24a>
   8694e:	ea95 0f0c 	teq	r5, ip
   86952:	d105      	bne.n	86960 <__aeabi_dmul+0x234>
   86954:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   86958:	bf1c      	itt	ne
   8695a:	4610      	movne	r0, r2
   8695c:	4619      	movne	r1, r3
   8695e:	d10a      	bne.n	86976 <__aeabi_dmul+0x24a>
   86960:	ea81 0103 	eor.w	r1, r1, r3
   86964:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   86968:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8696c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   86970:	f04f 0000 	mov.w	r0, #0
   86974:	bd70      	pop	{r4, r5, r6, pc}
   86976:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8697a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8697e:	bd70      	pop	{r4, r5, r6, pc}

00086980 <__aeabi_ddiv>:
   86980:	b570      	push	{r4, r5, r6, lr}
   86982:	f04f 0cff 	mov.w	ip, #255	; 0xff
   86986:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8698a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8698e:	bf1d      	ittte	ne
   86990:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   86994:	ea94 0f0c 	teqne	r4, ip
   86998:	ea95 0f0c 	teqne	r5, ip
   8699c:	f000 f8a7 	bleq	86aee <__aeabi_ddiv+0x16e>
   869a0:	eba4 0405 	sub.w	r4, r4, r5
   869a4:	ea81 0e03 	eor.w	lr, r1, r3
   869a8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   869ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
   869b0:	f000 8088 	beq.w	86ac4 <__aeabi_ddiv+0x144>
   869b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   869b8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   869bc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   869c0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   869c4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   869c8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   869cc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   869d0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   869d4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   869d8:	429d      	cmp	r5, r3
   869da:	bf08      	it	eq
   869dc:	4296      	cmpeq	r6, r2
   869de:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   869e2:	f504 7440 	add.w	r4, r4, #768	; 0x300
   869e6:	d202      	bcs.n	869ee <__aeabi_ddiv+0x6e>
   869e8:	085b      	lsrs	r3, r3, #1
   869ea:	ea4f 0232 	mov.w	r2, r2, rrx
   869ee:	1ab6      	subs	r6, r6, r2
   869f0:	eb65 0503 	sbc.w	r5, r5, r3
   869f4:	085b      	lsrs	r3, r3, #1
   869f6:	ea4f 0232 	mov.w	r2, r2, rrx
   869fa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   869fe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   86a02:	ebb6 0e02 	subs.w	lr, r6, r2
   86a06:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a0a:	bf22      	ittt	cs
   86a0c:	1ab6      	subcs	r6, r6, r2
   86a0e:	4675      	movcs	r5, lr
   86a10:	ea40 000c 	orrcs.w	r0, r0, ip
   86a14:	085b      	lsrs	r3, r3, #1
   86a16:	ea4f 0232 	mov.w	r2, r2, rrx
   86a1a:	ebb6 0e02 	subs.w	lr, r6, r2
   86a1e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a22:	bf22      	ittt	cs
   86a24:	1ab6      	subcs	r6, r6, r2
   86a26:	4675      	movcs	r5, lr
   86a28:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   86a2c:	085b      	lsrs	r3, r3, #1
   86a2e:	ea4f 0232 	mov.w	r2, r2, rrx
   86a32:	ebb6 0e02 	subs.w	lr, r6, r2
   86a36:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a3a:	bf22      	ittt	cs
   86a3c:	1ab6      	subcs	r6, r6, r2
   86a3e:	4675      	movcs	r5, lr
   86a40:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   86a44:	085b      	lsrs	r3, r3, #1
   86a46:	ea4f 0232 	mov.w	r2, r2, rrx
   86a4a:	ebb6 0e02 	subs.w	lr, r6, r2
   86a4e:	eb75 0e03 	sbcs.w	lr, r5, r3
   86a52:	bf22      	ittt	cs
   86a54:	1ab6      	subcs	r6, r6, r2
   86a56:	4675      	movcs	r5, lr
   86a58:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   86a5c:	ea55 0e06 	orrs.w	lr, r5, r6
   86a60:	d018      	beq.n	86a94 <__aeabi_ddiv+0x114>
   86a62:	ea4f 1505 	mov.w	r5, r5, lsl #4
   86a66:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   86a6a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   86a6e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   86a72:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   86a76:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   86a7a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   86a7e:	d1c0      	bne.n	86a02 <__aeabi_ddiv+0x82>
   86a80:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86a84:	d10b      	bne.n	86a9e <__aeabi_ddiv+0x11e>
   86a86:	ea41 0100 	orr.w	r1, r1, r0
   86a8a:	f04f 0000 	mov.w	r0, #0
   86a8e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   86a92:	e7b6      	b.n	86a02 <__aeabi_ddiv+0x82>
   86a94:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   86a98:	bf04      	itt	eq
   86a9a:	4301      	orreq	r1, r0
   86a9c:	2000      	moveq	r0, #0
   86a9e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   86aa2:	bf88      	it	hi
   86aa4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   86aa8:	f63f aeaf 	bhi.w	8680a <__aeabi_dmul+0xde>
   86aac:	ebb5 0c03 	subs.w	ip, r5, r3
   86ab0:	bf04      	itt	eq
   86ab2:	ebb6 0c02 	subseq.w	ip, r6, r2
   86ab6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   86aba:	f150 0000 	adcs.w	r0, r0, #0
   86abe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   86ac2:	bd70      	pop	{r4, r5, r6, pc}
   86ac4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   86ac8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   86acc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   86ad0:	bfc2      	ittt	gt
   86ad2:	ebd4 050c 	rsbsgt	r5, r4, ip
   86ad6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   86ada:	bd70      	popgt	{r4, r5, r6, pc}
   86adc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   86ae0:	f04f 0e00 	mov.w	lr, #0
   86ae4:	3c01      	subs	r4, #1
   86ae6:	e690      	b.n	8680a <__aeabi_dmul+0xde>
   86ae8:	ea45 0e06 	orr.w	lr, r5, r6
   86aec:	e68d      	b.n	8680a <__aeabi_dmul+0xde>
   86aee:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   86af2:	ea94 0f0c 	teq	r4, ip
   86af6:	bf08      	it	eq
   86af8:	ea95 0f0c 	teqeq	r5, ip
   86afc:	f43f af3b 	beq.w	86976 <__aeabi_dmul+0x24a>
   86b00:	ea94 0f0c 	teq	r4, ip
   86b04:	d10a      	bne.n	86b1c <__aeabi_ddiv+0x19c>
   86b06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   86b0a:	f47f af34 	bne.w	86976 <__aeabi_dmul+0x24a>
   86b0e:	ea95 0f0c 	teq	r5, ip
   86b12:	f47f af25 	bne.w	86960 <__aeabi_dmul+0x234>
   86b16:	4610      	mov	r0, r2
   86b18:	4619      	mov	r1, r3
   86b1a:	e72c      	b.n	86976 <__aeabi_dmul+0x24a>
   86b1c:	ea95 0f0c 	teq	r5, ip
   86b20:	d106      	bne.n	86b30 <__aeabi_ddiv+0x1b0>
   86b22:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   86b26:	f43f aefd 	beq.w	86924 <__aeabi_dmul+0x1f8>
   86b2a:	4610      	mov	r0, r2
   86b2c:	4619      	mov	r1, r3
   86b2e:	e722      	b.n	86976 <__aeabi_dmul+0x24a>
   86b30:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   86b34:	bf18      	it	ne
   86b36:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   86b3a:	f47f aec5 	bne.w	868c8 <__aeabi_dmul+0x19c>
   86b3e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   86b42:	f47f af0d 	bne.w	86960 <__aeabi_dmul+0x234>
   86b46:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   86b4a:	f47f aeeb 	bne.w	86924 <__aeabi_dmul+0x1f8>
   86b4e:	e712      	b.n	86976 <__aeabi_dmul+0x24a>

00086b50 <__gedf2>:
   86b50:	f04f 3cff 	mov.w	ip, #4294967295
   86b54:	e006      	b.n	86b64 <__cmpdf2+0x4>
   86b56:	bf00      	nop

00086b58 <__ledf2>:
   86b58:	f04f 0c01 	mov.w	ip, #1
   86b5c:	e002      	b.n	86b64 <__cmpdf2+0x4>
   86b5e:	bf00      	nop

00086b60 <__cmpdf2>:
   86b60:	f04f 0c01 	mov.w	ip, #1
   86b64:	f84d cd04 	str.w	ip, [sp, #-4]!
   86b68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86b6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86b70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86b74:	bf18      	it	ne
   86b76:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   86b7a:	d01b      	beq.n	86bb4 <__cmpdf2+0x54>
   86b7c:	b001      	add	sp, #4
   86b7e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   86b82:	bf0c      	ite	eq
   86b84:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   86b88:	ea91 0f03 	teqne	r1, r3
   86b8c:	bf02      	ittt	eq
   86b8e:	ea90 0f02 	teqeq	r0, r2
   86b92:	2000      	moveq	r0, #0
   86b94:	4770      	bxeq	lr
   86b96:	f110 0f00 	cmn.w	r0, #0
   86b9a:	ea91 0f03 	teq	r1, r3
   86b9e:	bf58      	it	pl
   86ba0:	4299      	cmppl	r1, r3
   86ba2:	bf08      	it	eq
   86ba4:	4290      	cmpeq	r0, r2
   86ba6:	bf2c      	ite	cs
   86ba8:	17d8      	asrcs	r0, r3, #31
   86baa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   86bae:	f040 0001 	orr.w	r0, r0, #1
   86bb2:	4770      	bx	lr
   86bb4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86bb8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86bbc:	d102      	bne.n	86bc4 <__cmpdf2+0x64>
   86bbe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86bc2:	d107      	bne.n	86bd4 <__cmpdf2+0x74>
   86bc4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86bc8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86bcc:	d1d6      	bne.n	86b7c <__cmpdf2+0x1c>
   86bce:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86bd2:	d0d3      	beq.n	86b7c <__cmpdf2+0x1c>
   86bd4:	f85d 0b04 	ldr.w	r0, [sp], #4
   86bd8:	4770      	bx	lr
   86bda:	bf00      	nop

00086bdc <__aeabi_cdrcmple>:
   86bdc:	4684      	mov	ip, r0
   86bde:	4610      	mov	r0, r2
   86be0:	4662      	mov	r2, ip
   86be2:	468c      	mov	ip, r1
   86be4:	4619      	mov	r1, r3
   86be6:	4663      	mov	r3, ip
   86be8:	e000      	b.n	86bec <__aeabi_cdcmpeq>
   86bea:	bf00      	nop

00086bec <__aeabi_cdcmpeq>:
   86bec:	b501      	push	{r0, lr}
   86bee:	f7ff ffb7 	bl	86b60 <__cmpdf2>
   86bf2:	2800      	cmp	r0, #0
   86bf4:	bf48      	it	mi
   86bf6:	f110 0f00 	cmnmi.w	r0, #0
   86bfa:	bd01      	pop	{r0, pc}

00086bfc <__aeabi_dcmpeq>:
   86bfc:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c00:	f7ff fff4 	bl	86bec <__aeabi_cdcmpeq>
   86c04:	bf0c      	ite	eq
   86c06:	2001      	moveq	r0, #1
   86c08:	2000      	movne	r0, #0
   86c0a:	f85d fb08 	ldr.w	pc, [sp], #8
   86c0e:	bf00      	nop

00086c10 <__aeabi_dcmplt>:
   86c10:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c14:	f7ff ffea 	bl	86bec <__aeabi_cdcmpeq>
   86c18:	bf34      	ite	cc
   86c1a:	2001      	movcc	r0, #1
   86c1c:	2000      	movcs	r0, #0
   86c1e:	f85d fb08 	ldr.w	pc, [sp], #8
   86c22:	bf00      	nop

00086c24 <__aeabi_dcmple>:
   86c24:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c28:	f7ff ffe0 	bl	86bec <__aeabi_cdcmpeq>
   86c2c:	bf94      	ite	ls
   86c2e:	2001      	movls	r0, #1
   86c30:	2000      	movhi	r0, #0
   86c32:	f85d fb08 	ldr.w	pc, [sp], #8
   86c36:	bf00      	nop

00086c38 <__aeabi_dcmpge>:
   86c38:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c3c:	f7ff ffce 	bl	86bdc <__aeabi_cdrcmple>
   86c40:	bf94      	ite	ls
   86c42:	2001      	movls	r0, #1
   86c44:	2000      	movhi	r0, #0
   86c46:	f85d fb08 	ldr.w	pc, [sp], #8
   86c4a:	bf00      	nop

00086c4c <__aeabi_dcmpgt>:
   86c4c:	f84d ed08 	str.w	lr, [sp, #-8]!
   86c50:	f7ff ffc4 	bl	86bdc <__aeabi_cdrcmple>
   86c54:	bf34      	ite	cc
   86c56:	2001      	movcc	r0, #1
   86c58:	2000      	movcs	r0, #0
   86c5a:	f85d fb08 	ldr.w	pc, [sp], #8
   86c5e:	bf00      	nop

00086c60 <__aeabi_dcmpun>:
   86c60:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   86c64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86c68:	d102      	bne.n	86c70 <__aeabi_dcmpun+0x10>
   86c6a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   86c6e:	d10a      	bne.n	86c86 <__aeabi_dcmpun+0x26>
   86c70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   86c74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   86c78:	d102      	bne.n	86c80 <__aeabi_dcmpun+0x20>
   86c7a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   86c7e:	d102      	bne.n	86c86 <__aeabi_dcmpun+0x26>
   86c80:	f04f 0000 	mov.w	r0, #0
   86c84:	4770      	bx	lr
   86c86:	f04f 0001 	mov.w	r0, #1
   86c8a:	4770      	bx	lr

00086c8c <__aeabi_d2iz>:
   86c8c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   86c90:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   86c94:	d215      	bcs.n	86cc2 <__aeabi_d2iz+0x36>
   86c96:	d511      	bpl.n	86cbc <__aeabi_d2iz+0x30>
   86c98:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   86c9c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   86ca0:	d912      	bls.n	86cc8 <__aeabi_d2iz+0x3c>
   86ca2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   86ca6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   86caa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   86cae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   86cb2:	fa23 f002 	lsr.w	r0, r3, r2
   86cb6:	bf18      	it	ne
   86cb8:	4240      	negne	r0, r0
   86cba:	4770      	bx	lr
   86cbc:	f04f 0000 	mov.w	r0, #0
   86cc0:	4770      	bx	lr
   86cc2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   86cc6:	d105      	bne.n	86cd4 <__aeabi_d2iz+0x48>
   86cc8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   86ccc:	bf08      	it	eq
   86cce:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   86cd2:	4770      	bx	lr
   86cd4:	f04f 0000 	mov.w	r0, #0
   86cd8:	4770      	bx	lr
   86cda:	bf00      	nop

00086cdc <__aeabi_uldivmod>:
   86cdc:	b953      	cbnz	r3, 86cf4 <__aeabi_uldivmod+0x18>
   86cde:	b94a      	cbnz	r2, 86cf4 <__aeabi_uldivmod+0x18>
   86ce0:	2900      	cmp	r1, #0
   86ce2:	bf08      	it	eq
   86ce4:	2800      	cmpeq	r0, #0
   86ce6:	bf1c      	itt	ne
   86ce8:	f04f 31ff 	movne.w	r1, #4294967295
   86cec:	f04f 30ff 	movne.w	r0, #4294967295
   86cf0:	f000 b97a 	b.w	86fe8 <__aeabi_idiv0>
   86cf4:	f1ad 0c08 	sub.w	ip, sp, #8
   86cf8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   86cfc:	f000 f806 	bl	86d0c <__udivmoddi4>
   86d00:	f8dd e004 	ldr.w	lr, [sp, #4]
   86d04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86d08:	b004      	add	sp, #16
   86d0a:	4770      	bx	lr

00086d0c <__udivmoddi4>:
   86d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   86d10:	468c      	mov	ip, r1
   86d12:	460e      	mov	r6, r1
   86d14:	4604      	mov	r4, r0
   86d16:	9d08      	ldr	r5, [sp, #32]
   86d18:	2b00      	cmp	r3, #0
   86d1a:	d150      	bne.n	86dbe <__udivmoddi4+0xb2>
   86d1c:	428a      	cmp	r2, r1
   86d1e:	4617      	mov	r7, r2
   86d20:	d96c      	bls.n	86dfc <__udivmoddi4+0xf0>
   86d22:	fab2 fe82 	clz	lr, r2
   86d26:	f1be 0f00 	cmp.w	lr, #0
   86d2a:	d00b      	beq.n	86d44 <__udivmoddi4+0x38>
   86d2c:	f1ce 0c20 	rsb	ip, lr, #32
   86d30:	fa01 f60e 	lsl.w	r6, r1, lr
   86d34:	fa20 fc0c 	lsr.w	ip, r0, ip
   86d38:	fa02 f70e 	lsl.w	r7, r2, lr
   86d3c:	ea4c 0c06 	orr.w	ip, ip, r6
   86d40:	fa00 f40e 	lsl.w	r4, r0, lr
   86d44:	0c3a      	lsrs	r2, r7, #16
   86d46:	fbbc f9f2 	udiv	r9, ip, r2
   86d4a:	b2bb      	uxth	r3, r7
   86d4c:	fb02 cc19 	mls	ip, r2, r9, ip
   86d50:	fb09 fa03 	mul.w	sl, r9, r3
   86d54:	ea4f 4814 	mov.w	r8, r4, lsr #16
   86d58:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   86d5c:	45b2      	cmp	sl, r6
   86d5e:	d90a      	bls.n	86d76 <__udivmoddi4+0x6a>
   86d60:	19f6      	adds	r6, r6, r7
   86d62:	f109 31ff 	add.w	r1, r9, #4294967295
   86d66:	f080 8125 	bcs.w	86fb4 <__udivmoddi4+0x2a8>
   86d6a:	45b2      	cmp	sl, r6
   86d6c:	f240 8122 	bls.w	86fb4 <__udivmoddi4+0x2a8>
   86d70:	f1a9 0902 	sub.w	r9, r9, #2
   86d74:	443e      	add	r6, r7
   86d76:	eba6 060a 	sub.w	r6, r6, sl
   86d7a:	fbb6 f0f2 	udiv	r0, r6, r2
   86d7e:	fb02 6610 	mls	r6, r2, r0, r6
   86d82:	fb00 f303 	mul.w	r3, r0, r3
   86d86:	b2a4      	uxth	r4, r4
   86d88:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   86d8c:	42a3      	cmp	r3, r4
   86d8e:	d909      	bls.n	86da4 <__udivmoddi4+0x98>
   86d90:	19e4      	adds	r4, r4, r7
   86d92:	f100 32ff 	add.w	r2, r0, #4294967295
   86d96:	f080 810b 	bcs.w	86fb0 <__udivmoddi4+0x2a4>
   86d9a:	42a3      	cmp	r3, r4
   86d9c:	f240 8108 	bls.w	86fb0 <__udivmoddi4+0x2a4>
   86da0:	3802      	subs	r0, #2
   86da2:	443c      	add	r4, r7
   86da4:	2100      	movs	r1, #0
   86da6:	1ae4      	subs	r4, r4, r3
   86da8:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86dac:	2d00      	cmp	r5, #0
   86dae:	d062      	beq.n	86e76 <__udivmoddi4+0x16a>
   86db0:	2300      	movs	r3, #0
   86db2:	fa24 f40e 	lsr.w	r4, r4, lr
   86db6:	602c      	str	r4, [r5, #0]
   86db8:	606b      	str	r3, [r5, #4]
   86dba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86dbe:	428b      	cmp	r3, r1
   86dc0:	d907      	bls.n	86dd2 <__udivmoddi4+0xc6>
   86dc2:	2d00      	cmp	r5, #0
   86dc4:	d055      	beq.n	86e72 <__udivmoddi4+0x166>
   86dc6:	2100      	movs	r1, #0
   86dc8:	e885 0041 	stmia.w	r5, {r0, r6}
   86dcc:	4608      	mov	r0, r1
   86dce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86dd2:	fab3 f183 	clz	r1, r3
   86dd6:	2900      	cmp	r1, #0
   86dd8:	f040 808f 	bne.w	86efa <__udivmoddi4+0x1ee>
   86ddc:	42b3      	cmp	r3, r6
   86dde:	d302      	bcc.n	86de6 <__udivmoddi4+0xda>
   86de0:	4282      	cmp	r2, r0
   86de2:	f200 80fc 	bhi.w	86fde <__udivmoddi4+0x2d2>
   86de6:	1a84      	subs	r4, r0, r2
   86de8:	eb66 0603 	sbc.w	r6, r6, r3
   86dec:	2001      	movs	r0, #1
   86dee:	46b4      	mov	ip, r6
   86df0:	2d00      	cmp	r5, #0
   86df2:	d040      	beq.n	86e76 <__udivmoddi4+0x16a>
   86df4:	e885 1010 	stmia.w	r5, {r4, ip}
   86df8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86dfc:	b912      	cbnz	r2, 86e04 <__udivmoddi4+0xf8>
   86dfe:	2701      	movs	r7, #1
   86e00:	fbb7 f7f2 	udiv	r7, r7, r2
   86e04:	fab7 fe87 	clz	lr, r7
   86e08:	f1be 0f00 	cmp.w	lr, #0
   86e0c:	d135      	bne.n	86e7a <__udivmoddi4+0x16e>
   86e0e:	2101      	movs	r1, #1
   86e10:	1bf6      	subs	r6, r6, r7
   86e12:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86e16:	fa1f f887 	uxth.w	r8, r7
   86e1a:	fbb6 f2fc 	udiv	r2, r6, ip
   86e1e:	fb0c 6612 	mls	r6, ip, r2, r6
   86e22:	fb08 f002 	mul.w	r0, r8, r2
   86e26:	0c23      	lsrs	r3, r4, #16
   86e28:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   86e2c:	42b0      	cmp	r0, r6
   86e2e:	d907      	bls.n	86e40 <__udivmoddi4+0x134>
   86e30:	19f6      	adds	r6, r6, r7
   86e32:	f102 33ff 	add.w	r3, r2, #4294967295
   86e36:	d202      	bcs.n	86e3e <__udivmoddi4+0x132>
   86e38:	42b0      	cmp	r0, r6
   86e3a:	f200 80d2 	bhi.w	86fe2 <__udivmoddi4+0x2d6>
   86e3e:	461a      	mov	r2, r3
   86e40:	1a36      	subs	r6, r6, r0
   86e42:	fbb6 f0fc 	udiv	r0, r6, ip
   86e46:	fb0c 6610 	mls	r6, ip, r0, r6
   86e4a:	fb08 f800 	mul.w	r8, r8, r0
   86e4e:	b2a3      	uxth	r3, r4
   86e50:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   86e54:	45a0      	cmp	r8, r4
   86e56:	d907      	bls.n	86e68 <__udivmoddi4+0x15c>
   86e58:	19e4      	adds	r4, r4, r7
   86e5a:	f100 33ff 	add.w	r3, r0, #4294967295
   86e5e:	d202      	bcs.n	86e66 <__udivmoddi4+0x15a>
   86e60:	45a0      	cmp	r8, r4
   86e62:	f200 80b9 	bhi.w	86fd8 <__udivmoddi4+0x2cc>
   86e66:	4618      	mov	r0, r3
   86e68:	eba4 0408 	sub.w	r4, r4, r8
   86e6c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   86e70:	e79c      	b.n	86dac <__udivmoddi4+0xa0>
   86e72:	4629      	mov	r1, r5
   86e74:	4628      	mov	r0, r5
   86e76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86e7a:	fa07 f70e 	lsl.w	r7, r7, lr
   86e7e:	f1ce 0320 	rsb	r3, lr, #32
   86e82:	fa26 f203 	lsr.w	r2, r6, r3
   86e86:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   86e8a:	fbb2 f1fc 	udiv	r1, r2, ip
   86e8e:	fa1f f887 	uxth.w	r8, r7
   86e92:	fb0c 2211 	mls	r2, ip, r1, r2
   86e96:	fa06 f60e 	lsl.w	r6, r6, lr
   86e9a:	fa20 f303 	lsr.w	r3, r0, r3
   86e9e:	fb01 f908 	mul.w	r9, r1, r8
   86ea2:	4333      	orrs	r3, r6
   86ea4:	0c1e      	lsrs	r6, r3, #16
   86ea6:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86eaa:	45b1      	cmp	r9, r6
   86eac:	fa00 f40e 	lsl.w	r4, r0, lr
   86eb0:	d909      	bls.n	86ec6 <__udivmoddi4+0x1ba>
   86eb2:	19f6      	adds	r6, r6, r7
   86eb4:	f101 32ff 	add.w	r2, r1, #4294967295
   86eb8:	f080 808c 	bcs.w	86fd4 <__udivmoddi4+0x2c8>
   86ebc:	45b1      	cmp	r9, r6
   86ebe:	f240 8089 	bls.w	86fd4 <__udivmoddi4+0x2c8>
   86ec2:	3902      	subs	r1, #2
   86ec4:	443e      	add	r6, r7
   86ec6:	eba6 0609 	sub.w	r6, r6, r9
   86eca:	fbb6 f0fc 	udiv	r0, r6, ip
   86ece:	fb0c 6210 	mls	r2, ip, r0, r6
   86ed2:	fb00 f908 	mul.w	r9, r0, r8
   86ed6:	b29e      	uxth	r6, r3
   86ed8:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   86edc:	45b1      	cmp	r9, r6
   86ede:	d907      	bls.n	86ef0 <__udivmoddi4+0x1e4>
   86ee0:	19f6      	adds	r6, r6, r7
   86ee2:	f100 33ff 	add.w	r3, r0, #4294967295
   86ee6:	d271      	bcs.n	86fcc <__udivmoddi4+0x2c0>
   86ee8:	45b1      	cmp	r9, r6
   86eea:	d96f      	bls.n	86fcc <__udivmoddi4+0x2c0>
   86eec:	3802      	subs	r0, #2
   86eee:	443e      	add	r6, r7
   86ef0:	eba6 0609 	sub.w	r6, r6, r9
   86ef4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   86ef8:	e78f      	b.n	86e1a <__udivmoddi4+0x10e>
   86efa:	f1c1 0720 	rsb	r7, r1, #32
   86efe:	fa22 f807 	lsr.w	r8, r2, r7
   86f02:	408b      	lsls	r3, r1
   86f04:	ea48 0303 	orr.w	r3, r8, r3
   86f08:	fa26 f407 	lsr.w	r4, r6, r7
   86f0c:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   86f10:	fbb4 f9fe 	udiv	r9, r4, lr
   86f14:	fa1f fc83 	uxth.w	ip, r3
   86f18:	fb0e 4419 	mls	r4, lr, r9, r4
   86f1c:	408e      	lsls	r6, r1
   86f1e:	fa20 f807 	lsr.w	r8, r0, r7
   86f22:	fb09 fa0c 	mul.w	sl, r9, ip
   86f26:	ea48 0806 	orr.w	r8, r8, r6
   86f2a:	ea4f 4618 	mov.w	r6, r8, lsr #16
   86f2e:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   86f32:	45a2      	cmp	sl, r4
   86f34:	fa02 f201 	lsl.w	r2, r2, r1
   86f38:	fa00 f601 	lsl.w	r6, r0, r1
   86f3c:	d908      	bls.n	86f50 <__udivmoddi4+0x244>
   86f3e:	18e4      	adds	r4, r4, r3
   86f40:	f109 30ff 	add.w	r0, r9, #4294967295
   86f44:	d244      	bcs.n	86fd0 <__udivmoddi4+0x2c4>
   86f46:	45a2      	cmp	sl, r4
   86f48:	d942      	bls.n	86fd0 <__udivmoddi4+0x2c4>
   86f4a:	f1a9 0902 	sub.w	r9, r9, #2
   86f4e:	441c      	add	r4, r3
   86f50:	eba4 040a 	sub.w	r4, r4, sl
   86f54:	fbb4 f0fe 	udiv	r0, r4, lr
   86f58:	fb0e 4410 	mls	r4, lr, r0, r4
   86f5c:	fb00 fc0c 	mul.w	ip, r0, ip
   86f60:	fa1f f888 	uxth.w	r8, r8
   86f64:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   86f68:	45a4      	cmp	ip, r4
   86f6a:	d907      	bls.n	86f7c <__udivmoddi4+0x270>
   86f6c:	18e4      	adds	r4, r4, r3
   86f6e:	f100 3eff 	add.w	lr, r0, #4294967295
   86f72:	d229      	bcs.n	86fc8 <__udivmoddi4+0x2bc>
   86f74:	45a4      	cmp	ip, r4
   86f76:	d927      	bls.n	86fc8 <__udivmoddi4+0x2bc>
   86f78:	3802      	subs	r0, #2
   86f7a:	441c      	add	r4, r3
   86f7c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   86f80:	fba0 8902 	umull	r8, r9, r0, r2
   86f84:	eba4 0c0c 	sub.w	ip, r4, ip
   86f88:	45cc      	cmp	ip, r9
   86f8a:	46c2      	mov	sl, r8
   86f8c:	46ce      	mov	lr, r9
   86f8e:	d315      	bcc.n	86fbc <__udivmoddi4+0x2b0>
   86f90:	d012      	beq.n	86fb8 <__udivmoddi4+0x2ac>
   86f92:	b155      	cbz	r5, 86faa <__udivmoddi4+0x29e>
   86f94:	ebb6 030a 	subs.w	r3, r6, sl
   86f98:	eb6c 060e 	sbc.w	r6, ip, lr
   86f9c:	fa06 f707 	lsl.w	r7, r6, r7
   86fa0:	40cb      	lsrs	r3, r1
   86fa2:	431f      	orrs	r7, r3
   86fa4:	40ce      	lsrs	r6, r1
   86fa6:	602f      	str	r7, [r5, #0]
   86fa8:	606e      	str	r6, [r5, #4]
   86faa:	2100      	movs	r1, #0
   86fac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   86fb0:	4610      	mov	r0, r2
   86fb2:	e6f7      	b.n	86da4 <__udivmoddi4+0x98>
   86fb4:	4689      	mov	r9, r1
   86fb6:	e6de      	b.n	86d76 <__udivmoddi4+0x6a>
   86fb8:	4546      	cmp	r6, r8
   86fba:	d2ea      	bcs.n	86f92 <__udivmoddi4+0x286>
   86fbc:	ebb8 0a02 	subs.w	sl, r8, r2
   86fc0:	eb69 0e03 	sbc.w	lr, r9, r3
   86fc4:	3801      	subs	r0, #1
   86fc6:	e7e4      	b.n	86f92 <__udivmoddi4+0x286>
   86fc8:	4670      	mov	r0, lr
   86fca:	e7d7      	b.n	86f7c <__udivmoddi4+0x270>
   86fcc:	4618      	mov	r0, r3
   86fce:	e78f      	b.n	86ef0 <__udivmoddi4+0x1e4>
   86fd0:	4681      	mov	r9, r0
   86fd2:	e7bd      	b.n	86f50 <__udivmoddi4+0x244>
   86fd4:	4611      	mov	r1, r2
   86fd6:	e776      	b.n	86ec6 <__udivmoddi4+0x1ba>
   86fd8:	3802      	subs	r0, #2
   86fda:	443c      	add	r4, r7
   86fdc:	e744      	b.n	86e68 <__udivmoddi4+0x15c>
   86fde:	4608      	mov	r0, r1
   86fe0:	e706      	b.n	86df0 <__udivmoddi4+0xe4>
   86fe2:	3a02      	subs	r2, #2
   86fe4:	443e      	add	r6, r7
   86fe6:	e72b      	b.n	86e40 <__udivmoddi4+0x134>

00086fe8 <__aeabi_idiv0>:
   86fe8:	4770      	bx	lr
   86fea:	bf00      	nop
   86fec:	6d617865 	.word	0x6d617865
   86ff0:	2c656c70 	.word	0x2c656c70
   86ff4:	61747320 	.word	0x61747320
   86ff8:	64657472 	.word	0x64657472
   86ffc:	00000a21 	.word	0x00000a21
   87000:	656d6974 	.word	0x656d6974
   87004:	6f632072 	.word	0x6f632072
   87008:	20746e75 	.word	0x20746e75
   8700c:	756c6176 	.word	0x756c6176
   87010:	25203a65 	.word	0x25203a65
   87014:	000a2064 	.word	0x000a2064

00087018 <_global_impure_ptr>:
   87018:	200701d8 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   87028:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   87038:	46454443 00000000 33323130 37363534     CDEF....01234567
   87048:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   87058:	0000296c 00000030                       l)..0...

00087060 <blanks.7223>:
   87060:	20202020 20202020 20202020 20202020                     

00087070 <zeroes.7224>:
   87070:	30303030 30303030 30303030 30303030     0000000000000000
   87080:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   87090:	00000043 49534f50 00000058 0000002e     C...POSIX.......

000870a0 <__mprec_bigtens>:
   870a0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   870b0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   870c0:	7f73bf3c 75154fdd                       <.s..O.u

000870c8 <__mprec_tens>:
   870c8:	00000000 3ff00000 00000000 40240000     .......?......$@
   870d8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   870e8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   870f8:	00000000 412e8480 00000000 416312d0     .......A......cA
   87108:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   87118:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   87128:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   87138:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   87148:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   87158:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   87168:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   87178:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   87188:	79d99db4 44ea7843                       ...yCx.D

00087190 <p05.6055>:
   87190:	00000005 00000019 0000007d              ........}...

0008719c <_ctype_>:
   8719c:	20202000 20202020 28282020 20282828     .         ((((( 
   871ac:	20202020 20202020 20202020 20202020                     
   871bc:	10108820 10101010 10101010 10101010      ...............
   871cc:	04040410 04040404 10040404 10101010     ................
   871dc:	41411010 41414141 01010101 01010101     ..AAAAAA........
   871ec:	01010101 01010101 01010101 10101010     ................
   871fc:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8720c:	02020202 02020202 02020202 10101010     ................
   8721c:	00000020 00000000 00000000 00000000      ...............
	...

000872a0 <_init>:
   872a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   872a2:	bf00      	nop
   872a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   872a6:	bc08      	pop	{r3}
   872a8:	469e      	mov	lr, r3
   872aa:	4770      	bx	lr

000872ac <__init_array_start>:
   872ac:	00083ed1 	.word	0x00083ed1

000872b0 <__frame_dummy_init_array_entry>:
   872b0:	00080119                                ....

000872b4 <_fini>:
   872b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   872b6:	bf00      	nop
   872b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   872ba:	bc08      	pop	{r3}
   872bc:	469e      	mov	lr, r3
   872be:	4770      	bx	lr

000872c0 <__fini_array_start>:
   872c0:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	200701d0 	.word	0x200701d0

200700a4 <system_init_flash>:
RAMFUNC
#define CHIP_FREQ_FWS_4                 (90000000UL) /**< \brief Maximum operating frequency when FWS is 4 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d915      	bls.n	200700d6 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700aa:	4b1b      	ldr	r3, [pc, #108]	; (20070118 <system_init_flash+0x74>)
200700ac:	4298      	cmp	r0, r3
200700ae:	d919      	bls.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700b0:	4b1a      	ldr	r3, [pc, #104]	; (2007011c <system_init_flash+0x78>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d91e      	bls.n	200700f4 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700b6:	4b1a      	ldr	r3, [pc, #104]	; (20070120 <system_init_flash+0x7c>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d923      	bls.n	20070104 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700bc:	4b19      	ldr	r3, [pc, #100]	; (20070124 <system_init_flash+0x80>)
200700be:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700c0:	bf94      	ite	ls
200700c2:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700c6:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700ca:	4a17      	ldr	r2, [pc, #92]	; (20070128 <system_init_flash+0x84>)
200700cc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700ce:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d2:	6013      	str	r3, [r2, #0]
200700d4:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700d6:	2300      	movs	r3, #0
200700d8:	4a13      	ldr	r2, [pc, #76]	; (20070128 <system_init_flash+0x84>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700e4:	f44f 7380 	mov.w	r3, #256	; 0x100
200700e8:	4a0f      	ldr	r2, [pc, #60]	; (20070128 <system_init_flash+0x84>)
200700ea:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700ec:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700f4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700f8:	4a0b      	ldr	r2, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fa:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700fc:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070100:	6013      	str	r3, [r2, #0]
20070102:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070104:	f44f 7340 	mov.w	r3, #768	; 0x300
20070108:	4a07      	ldr	r2, [pc, #28]	; (20070128 <system_init_flash+0x84>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0157529f 	.word	0x0157529f
20070118:	0206cc7f 	.word	0x0206cc7f
2007011c:	0328b73f 	.word	0x0328b73f
20070120:	04a62f7f 	.word	0x04a62f7f
20070124:	055d4a7f 	.word	0x055d4a7f
20070128:	400e0a00 	.word	0x400e0a00

2007012c <udi_api_cdc_comm>:
2007012c:	00080161 000801ad 000801e1 000801dd     a...............
2007013c:	00000000                                ....

20070140 <udi_api_cdc_data>:
20070140:	00080519 000801bd 000801d9 000801dd     ................
20070150:	000803e9                                ....

20070154 <udc_string_desc_languageid>:
20070154:	04090304                                ....

20070158 <udc_config>:
20070158:	200701b0 20070164 00000000              ... d.. ....

20070164 <udc_config_fs>:
20070164:	2007016c 200701c4                       l.. ... 

2007016c <udc_desc_fs>:
2007016c:	00430209 c0000102 00040932 02020100     ..C.....2.......
2007017c:	24050001 04011000 05020224 01000624     ...$....$...$...
2007018c:	03012405 83050701 10004003 00010409     .$.......@......
2007019c:	00000a02 81050700 00004002 02020507     .........@......
200701ac:	00000040                                @...

200701b0 <udc_device_desc>:
200701b0:	02000112 40000002 240403eb 00000100     .......@...$....
200701c0:	00000100                                ....

200701c4 <udi_apis>:
200701c4:	2007012c 20070140                       ,.. @.. 

200701cc <g_interrupt_enabled>:
200701cc:	00000001                                ....

200701d0 <SystemCoreClock>:
200701d0:	003d0900                                ..=.

200701d4 <_impure_ptr>:
200701d4:	200701d8                                ... 

200701d8 <impure_data>:
200701d8:	00000000 200704c4 2007052c 20070594     ....... ,.. ... 
	...
20070280:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070290:	0005deec 0000000b 00000000 00000000     ................
	...

20070600 <__atexit_recursive_mutex>:
20070600:	20070e18                                ... 

20070604 <__global_locale>:
20070604:	00000043 00000000 00000000 00000000     C...............
	...
20070624:	00000043 00000000 00000000 00000000     C...............
	...
20070644:	00000043 00000000 00000000 00000000     C...............
	...
20070664:	00000043 00000000 00000000 00000000     C...............
	...
20070684:	00000043 00000000 00000000 00000000     C...............
	...
200706a4:	00000043 00000000 00000000 00000000     C...............
	...
200706c4:	00000043 00000000 00000000 00000000     C...............
	...
200706e4:	00086281 00085665 00000000 0008719c     .b..eV.......q..
200706f4:	0008709c 0008703c 0008703c 0008703c     .p..<p..<p..<p..
20070704:	0008703c 0008703c 0008703c 0008703c     <p..<p..<p..<p..
20070714:	0008703c 0008703c ffffffff ffffffff     <p..<p..........
20070724:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
2007074c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20070770 <__malloc_av_>:
	...
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 
20070998:	20070990 20070990 20070998 20070998     ... ... ... ... 
200709a8:	200709a0 200709a0 200709a8 200709a8     ... ... ... ... 
200709b8:	200709b0 200709b0 200709b8 200709b8     ... ... ... ... 
200709c8:	200709c0 200709c0 200709c8 200709c8     ... ... ... ... 
200709d8:	200709d0 200709d0 200709d8 200709d8     ... ... ... ... 
200709e8:	200709e0 200709e0 200709e8 200709e8     ... ... ... ... 
200709f8:	200709f0 200709f0 200709f8 200709f8     ... ... ... ... 
20070a08:	20070a00 20070a00 20070a08 20070a08     ... ... ... ... 
20070a18:	20070a10 20070a10 20070a18 20070a18     ... ... ... ... 
20070a28:	20070a20 20070a20 20070a28 20070a28      ..  .. (.. (.. 
20070a38:	20070a30 20070a30 20070a38 20070a38     0.. 0.. 8.. 8.. 
20070a48:	20070a40 20070a40 20070a48 20070a48     @.. @.. H.. H.. 
20070a58:	20070a50 20070a50 20070a58 20070a58     P.. P.. X.. X.. 
20070a68:	20070a60 20070a60 20070a68 20070a68     `.. `.. h.. h.. 
20070a78:	20070a70 20070a70 20070a78 20070a78     p.. p.. x.. x.. 
20070a88:	20070a80 20070a80 20070a88 20070a88     ... ... ... ... 
20070a98:	20070a90 20070a90 20070a98 20070a98     ... ... ... ... 
20070aa8:	20070aa0 20070aa0 20070aa8 20070aa8     ... ... ... ... 
20070ab8:	20070ab0 20070ab0 20070ab8 20070ab8     ... ... ... ... 
20070ac8:	20070ac0 20070ac0 20070ac8 20070ac8     ... ... ... ... 
20070ad8:	20070ad0 20070ad0 20070ad8 20070ad8     ... ... ... ... 
20070ae8:	20070ae0 20070ae0 20070ae8 20070ae8     ... ... ... ... 
20070af8:	20070af0 20070af0 20070af8 20070af8     ... ... ... ... 
20070b08:	20070b00 20070b00 20070b08 20070b08     ... ... ... ... 
20070b18:	20070b10 20070b10 20070b18 20070b18     ... ... ... ... 
20070b28:	20070b20 20070b20 20070b28 20070b28      ..  .. (.. (.. 
20070b38:	20070b30 20070b30 20070b38 20070b38     0.. 0.. 8.. 8.. 
20070b48:	20070b40 20070b40 20070b48 20070b48     @.. @.. H.. H.. 
20070b58:	20070b50 20070b50 20070b58 20070b58     P.. P.. X.. X.. 
20070b68:	20070b60 20070b60 20070b68 20070b68     `.. `.. h.. h.. 

20070b78 <__malloc_sbrk_base>:
20070b78:	ffffffff                                ....

20070b7c <__malloc_trim_threshold>:
20070b7c:	00020000                                ....
